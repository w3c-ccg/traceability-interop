{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ed8acfa8-075d-4675-be7b-aa8141c97132",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ba4c6735-38eb-4a1c-9203-90d39a09f54d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "659645bc-0553-4a2b-be22-1fd98be81640",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ce996680-2ce7-4749-acb4-b3738dd34295"
                }
              }
            ]
          },
          {
            "id": "d346eef3-d621-42de-ae9b-0656a5db41c2",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e9668cbe-cc55-494d-8d02-fa6a557bcce8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "14883d3c-9a0f-49c6-bbe4-8cdf173b8325"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "354acc63-90cd-4511-9ba5-416f241509f8",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "68ba755e-b121-45b0-9977-46ecfbca4bcc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "df5a10cc-69dd-4386-baa0-ded5e8fd9259",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a86578d-dbbe-4f3d-8bfc-b8f9b1abf3bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c44d3d3e-16ce-4a6a-9ddb-26801f55e920"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9e90af65-a718-40aa-b69f-62ff941393e8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ee1ac2d8-a832-40ac-9fe5-1c97088412d8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "937cd61d-291c-4828-b1df-7090e2e89d3f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7f645fa7-f3e4-4c17-b6af-a7ac88c0a2c4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9223fc18-9ba0-4563-8fa7-283779d68292",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f7af98db-a809-4195-937f-ba1631c5780c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b190459c-1b4a-4b7e-9dd8-81113dc5b71a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "882eb0d3-a6c2-4a45-9e22-8ac216b2a85a"
            }
          }
        ]
      },
      {
        "id": "4412ae28-0607-44bb-8730-d41bba918aae",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "54022d78-265f-40df-b8c8-1cc8d08ca09e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "563dffc4-a9c5-4cd6-ad60-297775398baa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "059a7b68-bc6b-46c5-8b2d-4b3f09e5e76b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1ffa21-a58f-4c96-8463-21a6a548c8cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6266985c-ce64-4730-8d34-9d5aa01fd2b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4809f9-7701-49f1-80c0-90707e6d176f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffee0855-10ca-4e74-a563-dc8bb68d4669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c557c2a5-5b79-4311-a041-e877ba2be326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690aef18-3a0d-46f3-a686-3257ceeef295",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea38cd8c-4342-4b38-85be-5a7a042e44aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2d8a4100-a4de-49d8-a718-bb4a30115e8d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cba53bcc-41b4-4776-90a4-acb912154c9e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "640f00f5-cb5b-4060-afaf-60bca453f1c7",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6251e630-7785-43a9-be9a-c9a9f1ea648d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3cad2515-845a-44af-99ba-a089c0230d73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3cc556f-24b0-4aba-a8e7-fa26f5e649ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c237e653-dd50-4e77-ad0f-4514efad998c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "be16e694-3437-41ca-982c-13b939ac57be",
            "name": "Positive Testing",
            "item": [
              {
                "id": "12d44be7-f527-4493-9dd0-366bcc980f15",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "374c2c99-b47f-496e-8884-fad25b352156",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c27e1e11-d8fa-487e-98c2-76a74bb8d084"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6a644e23-89f4-4820-9ce8-3c014d2713be",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b483b2d1-0810-4ce3-a51b-1fe0ab4ca606"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "578bd4f5-c050-4e5e-8ab3-f8f2c10048b1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a276bbf5-fe05-4b3a-94c6-bfc726992a4d"
            }
          }
        ]
      },
      {
        "id": "380285be-bbf9-4721-97b9-deb78f299641",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "26b51357-dd83-491c-b5d8-7c7651680fee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "79e0edff-d32a-4f73-af21-c630bdc94eb8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b4447ac0-3ba3-489b-9a2c-cce859cc9d17",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f6c9757-5d8f-4390-bcc2-555a99516ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f4ca823-2d55-4a90-b3c0-12830dc72179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c664826-665e-4225-8c05-0f89a4166bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6309f2e-4fac-47ca-9761-4fe52686a621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcbaa4f2-1e5b-4ad7-9e2b-4802f1c68d0c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba801b35-3ff5-4fc5-96c0-ec7d1f49b570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "474ce6a9-7715-40dc-863c-e52c76c4bf42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14a6e5b-ef6c-40b7-b59f-ce4e30c005bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ba4d67a-efb5-476d-a84b-10a8595c2a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3a41e3-b244-4226-980b-a238e4dd3e10",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a40153-4bfa-4372-a734-3cf251763aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11eae581-2bc4-4789-9130-0c67277e1378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f72ce3-a8fc-47f5-b44c-639e9f04cd96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "736cb371-639c-4821-8297-09450db93bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6fb08d5-df00-4794-97e0-e1579eec3817",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dbe92ed-81f8-49ae-8b2f-a67653df433d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cef2defc-efef-4571-86e7-f4ff5bc4f4b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c2c0102-8e85-4275-8fda-b0cf0df1f9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18c03d35-74ea-4ecb-9dcd-5431869649d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab80d2a5-b29c-4144-bce5-b01084bcb161",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "557e4ecf-fe65-4817-bec2-c077632f4fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8284992-a165-4188-83e2-7019c9fea831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a511ee5-44ea-419a-b8a4-e3f2ed1fb429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5c2bf82-6085-487d-9005-8e5be47e3e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfaa6904-2b99-43d6-97be-80e0f6edac1c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b9e58a2-83e6-438a-ac02-dd92d12a7785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbcbb24b-7731-4e81-9526-587423623624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad99081b-a2d9-4a8f-a63f-e4aaa24437c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6db0d764-d723-4cef-b914-f7b971625cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed016447-df04-4d96-b977-33a19d146c8f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8539e2-330e-4c0f-a234-2658c0533a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9b5ca97-a134-45cb-ac31-6d8f793506bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae148af-b365-4ff1-aeb9-344e45e7b6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9a83a43-7b28-41d1-8d0d-d30403a34b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f50abf-62fe-43a3-b403-c9a93f525e7d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd0a255-2e09-4aa7-b239-828a1cf8081e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "303299f7-77f6-4b9b-9efb-a0dc1d6c2854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902ef62c-3747-44c4-ae33-1fa1a2d2fc30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a712e11c-ffa3-478e-960d-081f109f0b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a9605be-8b48-46e6-b237-50f3fe2f1cc3",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2291eec9-b49b-4ca7-af3f-a78e11792241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74518c4d-6ea7-41ea-86ee-0908222ce4b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec6da6b-b51d-4b18-b393-935512269fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d317c3fa-9380-445d-99ff-f0a317b951b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c200577-8f7b-496f-ad2b-9270f88c4abd",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3483dae2-13ea-424b-9cba-14a5db3c14f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8898d08-8ca7-4808-9574-a8bb8edab6ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e412a8f0-870b-4d91-a25d-b710f8ff29aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "889e8128-9083-4b9e-9acc-4084152ee3cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "771e8d90-2a9f-4b35-a572-57f8c370924c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6204ae14-b3b4-4d98-84d7-f6c96cdd9544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c44478-2106-40f6-a2a5-48eda7a7455d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dbb7c4a-5d22-4ec8-9be5-bd2d9b7f3e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01188ca3-1bf5-4e58-bc8d-f3e019740069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb0b576-1001-4703-bd7c-2b0794c81b68",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "491fa835-3ffa-4a4b-8862-62037b5ac778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb5763cc-ea25-4b53-a48d-b77ce6eaf571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a42d5d-4dc7-4eed-8802-82d44545b2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82d6cbbc-b8dd-40cd-afca-a256bde625c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "099d79a6-5dba-4f1e-9df1-9e3713a7aa9c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad54fd6-1369-4a0e-8217-134622d2b559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39e3dc15-fd14-40f6-a155-086edb498659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30cde474-75e1-4655-8f2b-d9219cf842ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "776df2c0-010e-438e-97e6-d3c6f910c0c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d560cbe-6f5e-4e6b-abfb-a93e318803d9",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3364768-2ef1-4987-9e59-5fbc3bda6ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fc0e171-766e-4fd4-a230-ef08462ea9a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e61ae3f4-6fc7-4d60-9adf-a5659c78e43f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2a8ecea-a7bc-4949-b19d-96f351e51a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb4509f-97af-4ca7-b87b-c4d6a5321e89",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0189273f-2120-4a21-b51d-90aa81761e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d17d9079-cdd3-43a1-aedb-47edc0363af1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61750c20-ea28-41df-ac8f-cb78491979da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1821253-c403-460a-937f-b63415504844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ef684d-4d56-4c98-9d6f-007827b00945",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "764a3244-cef5-42fd-9314-6997da69fde3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e7c1069-1dd6-4bf8-9699-0dd49a72f926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2c0ad3-77d0-4b25-a9fd-8aa1c87eb1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53f0576f-234e-4384-8c9a-a024378be646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f3cf10-d910-4d76-966b-8e875e5a4e36",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8562f9-6d43-49e9-ad5f-5edae00dfc84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9a8f8d8-2668-417b-b575-77d26e8039a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0059e888-3c4e-4e83-8985-01bc2a132bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b96c664e-59b4-4d9d-a278-404f11bb85c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd709934-79c1-4cee-8627-f26474d03dc4",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37814373-e749-477a-9b0c-3a12cd173d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c1c9e4-c082-4f5a-9670-0df04a1d53b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2277dad2-0daa-4ecc-9681-82a34af22b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e2d8185-4c1f-4304-94c0-82d69df37753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d74e991-a17c-4297-8fea-d9298ff6f40e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87fd8136-4e7c-4264-93ce-5cde7118f73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e04e39-6a5f-451d-98d1-adfc9aa53fb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a660056-1e3e-45ae-aebc-43d3284eff33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "91264743-1467-464f-8a7d-de330a6b9caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d512c61e-5aa1-4326-8fa5-133217cc3953",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8271ef5-f4d6-42bf-8531-9c26120aa14a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "051d92ae-7fa4-4599-b361-c48a8755e1fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2afe5f05-af9a-4058-8a14-c324274c7a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "07c0e274-1cf6-4bb2-99dd-2ef3b31cea48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57673658-59cb-42ad-80e7-dd7da645cbd9",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e726a552-d68b-4f5c-a45b-77fc3b563445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02f74288-3a4c-4396-8c59-6031fc780bfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e82e4221-2234-43f9-9acf-5ed7a124b51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "713554ee-4ba6-4e76-9644-aa6e48627920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563007a0-3c1f-4048-b8a9-1db11e9a15ba",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88718c1-74d2-4f1b-b63c-20ee7c75bd4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78cbd253-273c-4505-ba75-5f01db569a20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5035fb-592f-4a7b-97a1-6a0969adcf97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e98a3793-4b28-460c-997b-6be3635bae5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b967703-5135-4468-8540-8a11d1cd48f9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04bc81f5-eba9-4076-b5cd-d05c745100df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e18014da-fe35-4257-a2bb-fc39aaad59b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d20632-b4b1-48e9-88b3-e65cf23c3a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b102446c-7128-47bf-956a-fb9d404c8673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02759298-5d9d-404f-9d93-f0f7ac023123",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef9f1cc-af4f-45c5-b6ef-2d33bd9eb719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "623e0859-c904-43e1-859f-d97f8189992b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75103ae4-813a-4168-992b-c59e624c8404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c979703c-855e-4c87-be89-a4a85086a618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "431979ea-4d66-4af0-a3f4-9d54546b0f6b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e9e200-a02a-4a92-95b1-7c932399168e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c00b279d-3a89-48d8-baac-e595a4c1530a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99bf2d4e-3805-4110-a21d-8b5a676d02d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8632dd07-0fbe-41b2-b95d-7d0295a434f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a844aa38-8272-4084-86ca-6f8d1dd3242f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b90a9995-d053-46e5-8fee-036705c3e5d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce147ead-42d9-42fe-abd7-be3f5b6af832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332134bd-af55-48c5-b0c8-de7eff88c7a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "31b6790c-80b6-4b9c-aa62-4cf0fa08b481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce14efa0-18aa-41c1-b1d0-a167addf470c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d4ef144-759a-4b78-b1b1-cde57be740d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22c419da-1a47-43f8-920d-ed335802a266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3daec6b1-fe71-4b62-a699-e87fef8d76ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb6350f9-c1b6-43a0-8f30-fe775fb41993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9cc03c0-e83a-493a-b6fc-978e25ae331d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51efdb6-736b-412b-a4a4-a7b37d2f7ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5625a93-4803-4aae-94e4-e24830bf5d17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ba8f95-7381-46fa-8e69-917ce836c149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd9635a2-988c-4128-abbf-af401211781b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a84214d-4b22-4aad-9650-de0599782ebb",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00aeb387-7ea3-4fe0-ac8f-54a18fbc0e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "753d5f58-3cc3-4d74-9c83-a04bb4f1a1fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41fbbc6a-9d78-45a5-9e55-d61ac60ccb8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "646b4e64-11c7-49ba-b149-b948707ca44b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "624487f7-ba84-4891-8917-3d7031b28687",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf69ea8d-d461-4518-89e1-a54d2f9f5d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "780cda37-b6c3-4490-af5d-e9fba4ffe39d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53cf5b0c-5d4b-4703-99d1-f2d272b24c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "14f56621-d67c-4c45-a110-e4296b6eb56f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f5d01c8-d58d-4fef-bec9-49bafbd77c38",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d23ef5d-5878-4500-aac6-37064616ba59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b956098-9bf6-45ad-a1ed-d1017b82e3b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c0a295-43fe-4e9d-9baf-8862300405a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ccfc3f4-7fa1-4ff6-9695-93e13a876279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54fffd73-c79d-42ef-9966-8fb3bc16d7c2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d75780-57dc-47a9-b09c-9014817c2aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c15b7ab0-f1e3-479f-9ac8-9403b76258f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81bec532-be01-4d2e-a1c0-2695a97e954a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6e7198b-b9ba-4cc2-9bdc-5f3706909bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d220efd3-08fe-45af-af10-674149ebb547",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bbaf2e7-7e05-4af4-98b8-422c88669e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faf6c452-1594-4f48-988a-0f40377e9143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa4abce-97b4-4d7a-a7c1-aca91cd898f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef78e368-ecea-4011-8ea5-14307a96bf6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5a77c4-b155-48a0-807b-201856e30c2f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f6beea2-7475-455d-bb29-1850792af078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88f417b4-71f3-4718-b8fa-cc13ee573a1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e893de7-2020-44f2-967c-7549a05197d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e156913-eaa0-467b-96b0-24327e861135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b2a4f9-2328-4c51-be94-20b651305a84",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e971ed02-471d-44fd-a9a3-247a4d9e4e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f57bbd1c-d3e7-449f-b1b8-538bf27230c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d92ee1-10f0-45aa-ba1f-e57a46d9de72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e8959977-eaef-4e2a-b34c-d0c71f530441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a0bafb1-de49-4f60-ba65-5e2d41f7b9bc",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1a2cbc-4e21-48e2-8ece-b6fb38021f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6be54168-4398-4fa6-a343-5b5712a961e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6675739e-06fd-4f29-a342-a74fc0c3e846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6e7a9e0e-d5c6-43af-8be2-373332bb3163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33ce753-b90e-4541-a738-7d3e5fda2595",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e119f4e-579e-4a52-b7b2-5d85ac0e1364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17b99766-7d58-4c4f-9745-8d0c17a8f2b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa79b39-8553-424b-b9ae-6ee919901927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fdd5cd8f-0c47-4201-ac27-f90164cf4e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5e9926-68f7-4d64-9c12-097ecf335ea9",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72542623-9683-4efb-ae37-960d396939f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4566f77-ba7e-40e8-9a63-723035551140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5be6d2-dfdd-4f0d-9266-23eaa11c61c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5af5c29f-6057-49cc-a16b-0ffaf0611e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e752891e-e50b-4c7c-b201-1702760c8b8c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4acac95d-ffd0-4380-a8ad-c34406dfa3ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36f6d273-dab3-4664-9983-d77e7ec78d9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd62232-c410-4639-974b-cc80b7da7180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3acd5c1-6698-40a9-ac15-9be4934973c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc367833-ea40-4d0b-b2f3-76019561c598",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22eefb8e-236d-471b-9a59-dd34a5ff6432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8eb2a10-1b44-4236-888b-7703bceb99d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1394865-0939-4bfb-8840-e522399930ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b8c23e4-aa01-45f1-81e7-18520736d5d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a3f8a6-6786-43b7-881c-7262b1ad3f08",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fadf79f-40a8-49ba-bf7e-9964dc45cb67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "981a0747-4177-4eb9-a0da-bdca82bdd3d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab102fd-9cc9-459e-8dae-7d293ec5e60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d109597-b7f3-47de-9ccb-e6c19753a945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbfb5ec0-8e91-45ae-b262-f0cd98c1285a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd34dc7-c125-4f01-8d2f-b13939437cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cded3bc6-922d-43da-a745-636f8487d0c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf8395d-363b-41ad-a3ae-1ca5c2189547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "6f7cbafa-8463-4a3e-8c01-26707259f8de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7abb977d-8b47-4b1d-9164-2ac182f7886a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa8a2561-2f60-431a-9451-53e1974cb337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d15f173-3a7c-478a-b28a-7e94fa48bd67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de49c68d-b6a0-486f-9e8c-f9ec6c4bd3f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e43ae6b9-8da7-419c-8a64-fadd1baeb43d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598647e6-53cd-4e94-9a97-dd2e5085433b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7e23a4-106b-47c2-b723-94c3e3138249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "092572be-a108-453f-98d2-e4c8e4e7c588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a65e94-f2ce-451a-ab6f-8680b01242fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "710e974e-470b-49e5-99d0-b4531960b286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca0f173-83a5-4911-9991-5e5023b29e51",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "703aa66b-65f9-43c7-a04b-ecc0500b702b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22709c03-4eda-43f3-8d07-a708dd6fa092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d321979d-6a83-4396-a010-8e45441d70fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6868b8de-82eb-411f-b286-882fdc808ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "662d1924-b7cc-45a1-b3d5-338f734d04bd",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5661aff8-9875-4e08-987f-5c536c43352d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c64683c-ad70-4cb9-a5cf-0710eca44dac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3abe1ca0-595f-4456-8d5d-45b3fc2d36f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e62d769b-0e34-43d7-9fd6-06c305987375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a698065-8643-45b9-80d0-f28224c2ae7a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b30e6b-ba98-4a69-b1c5-d16a8653decd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b524cd6-ae86-40b8-96d5-6805d543983a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1298e06f-9be2-4f19-a5e8-9fd791eed885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "586fbbae-3372-4a86-a450-736cd038b6b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "691d2481-b02b-4b2c-9990-02933cbd30a8",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d54cc7-9720-48a1-8668-d3e77b17cf04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b11b23cf-bcee-4618-a362-459df1fae554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe2ea18-5740-4976-9795-b7f4963a9494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "69f35347-3114-4264-a77c-0b3ef09dc028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7307148a-dcd3-4d08-b6fc-984d449b3b61",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d1b212-6606-4886-845d-c4a71902ee85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6646a131-0987-4c1e-8a10-24b5da3f6158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "859430dc-876d-4dfe-b7b5-3f8924cbda76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8641785d-e1be-4dc6-b61a-b8cbf079ac6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81fe547-0596-44d4-9920-9913afff8151",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65a237f-4402-4368-9364-8d614d2c5029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73a1b85f-3aa0-4a8f-91ea-4e91384af243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81233cf6-bce2-472e-bcd4-56ebf75d306a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e72b3159-8cf9-4644-b5fe-f07e9fe4caca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3580b370-02cf-4fdc-8518-0b3fc2cf93c9",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd4bc6d-bd68-4f83-9a49-17dc2f363aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc030a15-2e22-4a74-9dcc-c9490a9926bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e97fd4e-66da-40a5-b854-f74709dc701f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "545ed7c5-b2ae-4871-bdbd-ad42dc096187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ae20e7-a34e-4e28-92e1-041f65a4853a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91af5a4c-0015-48f5-a540-8bae79d7f15e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc54c69-1e93-4f42-8ebf-01195eecba43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "361531c6-0d43-4e60-8515-c99a8c69f6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3b5445c-05a9-4829-aa64-7645f6f68789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272ba098-8812-4ad6-919c-ce3739cee46d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea32f1fb-1da6-4b24-9b3d-d654e55c11a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc5216d2-da8d-4a92-9b9c-e6db7f5c3615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c32d4614-6fc8-418c-8819-6343ddf8675f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6fa983e-d696-4fef-bbc7-127f0aa23966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04b50ba-2ab9-437d-9122-63b4a8752290",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba568573-334b-4a4f-9d09-a4c3fd8bc911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e78eb452-0db9-4f72-87ca-632481db515f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee752e0-0501-42c6-89a0-9d1555cb4235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7742148-a3aa-4ec3-b437-64aee8088e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30f1e33-f94b-46a0-9f50-3559da73685a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a7f4f2-75b4-4503-8db7-8bcaca3f708b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "626c615c-b2e4-492b-98e1-624c6e72fe3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef672ea-64db-429c-9baf-9eebce1f12ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffdb4617-6cc7-49a7-a56d-61daad168d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af876739-ebcb-45f9-8410-1d1179e26084",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28eeef9f-9d0d-4c0e-aec4-02f4f6a23f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "422f2dad-937f-4974-b884-84cac7c38e71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5be1ab-7f5a-47ac-ac53-a905935b24f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec29f73-fb62-4c9e-89aa-0f1c8443c52f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77786fa5-6466-441f-b7dc-cc7277b1a064",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c68390f-a160-47d5-a2c4-37aa9b9bee32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6723812-6873-4c20-b4de-517ab0edd16a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b247be8a-1d65-40a3-8b9f-9233b263320a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "542b20bd-310a-489e-a5ea-4843c23bf003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e5209e-9410-414d-bc0a-9ce86ec7072e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d8c25e-61ea-4c7b-a09e-dac5ccfe9a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0517e4e-dc31-4172-98af-42745b13088d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46546593-3e49-4f3f-94f6-1d7b2900571e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8aa0703a-320f-461c-a5ed-ea5d9ef69f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f2a156-04a2-4ad9-ae44-2c2c626c5de3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98570375-ded8-44af-85fa-298042d3cce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5815107-dd0d-4ff0-a574-cc6c62dde9ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf23051e-dc50-48ad-a670-4d5d7bf97d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "55bbc9fe-c7fd-4faf-8e73-18d90c05a9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34770ca5-8a32-4350-9cf5-b2180af245a0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf88086-7b2a-4f69-9219-6d6d25a0fb94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e93dbb9d-db71-485d-ad98-1a61f5e7809e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d61478-3303-47fb-9d61-4f61f07c93ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2cd7792-8132-4755-8d72-352104caf4b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a89339-9382-491b-9d21-e6baec29152b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43f73ad-59dc-4d94-9a58-3a4bba857cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05d58af7-ecae-4098-8beb-1094017ec207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a905221e-5d71-4065-b810-066be59d7385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c41a757f-41b6-4e1a-ac92-4be35df4735a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4184d5d9-5d96-42dc-a486-5a222bc7daa3",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0fd9664-63e5-47a3-a150-f5f67dc37723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1a851f3-23d4-462f-b103-424746cc3fda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1650606-26ba-4600-8d55-63e01234e8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c8a9a15-8c97-416e-b1bb-1af4d1d994b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3c768f-e1b7-4742-bf9e-c1ace11e9086",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b022cd3a-d314-4be1-b0b8-110c511f2877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe03fdb8-456d-4166-b341-b51834e5c00c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cee8421-c0b8-470c-bbe1-73cc0e564206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "45a53acc-ae80-4619-9eb6-f40071d5610b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36bf7141-1b6d-47fc-a838-a0b6ce7d3fc8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4fa2c6-4cd9-4aab-a3a4-9b2f2771668d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c9725d-9a08-4915-9d31-20887fa07bd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100adc29-ee3b-437c-9c87-a074c125cdd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a0459be-7d75-4d43-8687-d08e690a861e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf25a07-7c6e-4cbe-aec2-a0e24ad25ee8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a34db9-8cf5-4728-889f-538676b96ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fe841f4-dfe9-4046-b792-a4ccf9f40090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de5020a-b6bb-4758-9e93-1eceae9a4190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd970b82-79ed-46ed-95da-c89548770a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1dc4b2f-d81d-4f4b-9f5a-5d1113bb53af",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1baf4a28-ff76-409f-a6d3-d25a813a52cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "831bf41c-08e0-49e5-ba58-e895e4813053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60dabef-a2e8-460a-83b8-b734b4dc992f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3769891f-3fe8-4456-90d1-8e3720cca0f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f6c44a9-6f64-4795-95b1-92655b10b554",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3155642f-bf71-401b-8ec2-60f1fb4278ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff3b11c-92cb-4631-b6ed-5ffcd90dab99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f8ed8a8-4d0f-4250-b210-b067c140431c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fc87a5f9-1e8c-4aae-8d66-48f6700fa3a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5094bc-21ae-4794-a8fd-98e9efd05f8d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b304d261-2dc4-4f52-9a67-59bc342d2cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0592fd9-0e18-4158-81aa-3008fbe60df6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccbaea5f-cd69-47fd-9e1b-2fde4d395e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc382933-a360-4a7f-be08-a22f2a224c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c64ca57-00fa-46cd-8e52-5d62d711329f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5150d4-858c-47fc-b5b9-30784747d871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "886c1161-6bf5-497a-b9f4-647fd704488a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b924291b-3c57-4a92-96d5-f78b30250dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "77f021fb-b4bb-4cca-b2a0-350ab14178b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "320381d5-3016-41ad-a5c0-7ecd0dbbd38f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3404ff6c-fc9c-405b-81fa-64d02986f258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9028b671-1596-41f2-9a06-232bdb84173e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2194993c-0dea-40db-a4be-96915af66fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6080eeca-f3f8-4801-a82f-ab74a2913ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "713312a6-def8-490a-b030-d52ae2aee161",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c59e55b-909e-4af2-9a58-b47528ab9839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "948d20e1-d5b5-4ace-855b-fd0a3a66b012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a83f5d7-10b7-4b57-aff7-a56882adf4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a95551e-37d0-4de0-bed8-a6aded7e7d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ebebda-214f-47ef-b796-60a599478c0a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96bdfcfe-c6dd-49c2-8b17-65047f2a190a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb4ea32c-c33e-4d0b-a0ab-326c7ca38228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d653e1-4221-4843-a760-3f86d518ccb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f480fbe-4fec-4e86-b34d-4af9b42ea218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f41da8c-41cc-4565-b851-c4af23099dee",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54790af1-c770-40b8-9aa6-bf0fc271ec5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c41e09f-1ea9-4148-807d-87b372d6dc50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1390e8ad-b881-4667-a07d-e66667ec0e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c0e9650-4d5a-4044-8299-66f55cac4938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b48afaa-53dc-4d40-9966-78be0719cf04",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f3ce16a-4a88-4e5c-9930-b5269b880617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1a2faf8-99bd-436c-bfd8-352e7a15f769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42bf6ecc-91b8-4ec9-ba9d-53bd81d9fc3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "162996ac-2e1c-4cd6-b18f-fbfee2a5ae48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bbd1c49-934b-482b-81df-fa40865e1438",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21e385b-595c-44b8-a96b-5dce35875eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9245460f-e321-45d2-916e-a8443ead3964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd1c897-c868-413d-a32a-96162f62a4b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6e7cc09-cd25-48e6-9ff5-2aabfbbbed0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a24ba9-8e1d-4ffd-80e3-c64d7de77e6c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4df6ee1-12f4-4962-86ef-7bc329a37688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cdb7262-5255-438f-a2e4-cf6d3627e072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d04a75f7-9309-414e-b5d6-ba726a26c5de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "881ed784-ecac-437b-ab69-a2c5a0edb4cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff9f86e-ea67-46b4-b4c8-0907a2f33fff",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "397bd6bf-92e7-48ac-97bc-a8c42ba97fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "996442de-90b5-472a-aa8f-4e601989dd4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab4a0003-6e79-44f1-b951-2008fc53f367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf93835c-0a4e-49bf-a303-f1f4393d3c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e33f737-707a-48a8-8a03-19fc5fed0364",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "087f31b6-1134-4cc5-a2e6-2a75ed93ece1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1abe4727-14c9-4bfb-8449-540dacfe868b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c60aa82b-2eda-445f-b284-56a8fc02163c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff735dfe-2f72-45e0-882f-f022c9d5d511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81733950-e713-46c0-a9dd-5ba6d53d9c53",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ca9b28-a522-4ae0-a39a-6e4896646d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4519182c-a8d2-4ca7-a566-00549b9edfe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef757677-b195-48e5-a2b1-6d7d9e3a06b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b17353f3-9e34-4e38-9310-cfb7722af444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a111f0f4-0e59-4ca6-ab05-180ae101010e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca58d33c-ac35-4108-a787-aa385f9efcaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91e15050-2b36-4391-94c1-423274166455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3a5da5-92fc-4b37-9b1c-950fecb90da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "788c3ca9-92d5-40ae-9299-dfc7c32cf7f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9237e05e-e7a0-4d29-974a-93853965fc3e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6996920a-3e8c-4efa-b09a-3eb46ba94546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2239f100-dcc8-49e8-aca6-ea14fde5cb4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f1e454b-ff36-4de7-ac08-25de2e99fe67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "33cfe247-b0fa-47e8-8e89-0f4a4411b504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1e32d3-98de-4385-b31b-1cce228c5626",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd30eeab-015d-4f4e-9946-cbbcb0458018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ebd5444-d78c-4123-ac62-82cc89d79d63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0a2525-2f3c-46f3-9e11-beccc96f0a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "59409f7b-6774-45fd-8604-5cff383e1252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04df7663-8c2f-4d43-be6f-71d965fdd576",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e79d798-e138-49b7-bf07-3ceb188f79b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec8bef30-84df-4b7b-9b36-61c87c666c49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ad7c1e-2868-4f2c-a616-3c4825640c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fdfea0f-76e8-484b-ad32-fc230700c4b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ae0d87-fa73-4af0-a6dd-d5aa535e6318",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1719924-be0a-4a44-9d07-80b477f6eb7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2969d1ea-ef25-42d6-868b-a0b8ee2453c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bcd2c3c-9787-4849-bf5b-a84690ee6e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a4b717d-594c-4928-921b-0c33dfdbfc7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff63c31-a80f-484a-a1a1-5c91bd2eacb6",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b61886-d46d-4b98-8e5c-26e79571f1fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a939432-f4ed-4b20-bcdb-8546c3e974d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df0ff51-9aba-4338-8992-220a7a842b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9ea383db-55a5-4148-872e-cde69f3c58b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5ea34a-02e8-43a3-85f3-d194e9ad3ece",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb83f71d-a983-41b1-8bad-6930503f6c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2051e297-dab3-4eb5-9360-8e7fb41cc657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ecb7aa-0d29-4b39-8280-01c6e8772c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccf56686-f1f3-4058-badb-39901135f832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c393af2b-5805-4d9e-af57-a5ccc355bd63",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1cdd753-542d-4357-a713-9fe96f722303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e1119b8-61fc-4350-aece-75f231df1c5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8387d7ed-7ec0-4ae5-9121-b49496ada0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "aef07f8f-063f-4040-ba2a-85c68c3b59e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a25dbaae-a646-42db-9375-9086f4921c82",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f18427-a02a-4d49-b66f-f32b3f76bf8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3273b7a0-23a0-4ae4-a0af-1ef0a50dc9d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab798503-ffa3-4366-8c98-95e32d0b932a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "90698e57-2eec-4722-95f3-3f3f4a87f6f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d6b09eb-8fdd-4d85-9a34-2f5c7babd7e7",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d56186d6-939b-4b45-b208-5475e51a8820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a22b633a-4fd7-4727-b55a-2bb650d8f127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391b4bbb-550f-4226-957a-7450488d0370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc042a1b-aa8e-482e-b3cc-2aac82ec0f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f0013c-8825-4f12-965d-0845ef1a8ad2",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05d754ff-8181-4429-91cd-b1fa2dff717d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7388d39d-0427-4b36-954c-f7cd9dbd702c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72d1cde7-896b-466b-ad9d-2d5c73b82f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "75636bac-21d8-4182-b725-c1b7c2634515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c8b110-18c7-4763-9950-80ae1b596b84",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1748d897-3784-46f9-beca-04d0f2b638bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f39261f-1952-449f-859d-81289b4ab03a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd57c5a-53b4-4559-bb25-e7778198bd0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "79b1e597-732e-4896-8b78-ba735eaee3a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d55d5a23-f7cd-44ca-9b0b-0a67cff538d7",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e6fff5-5129-489e-bf5f-ff68e8ff6461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ef0e771f-9012-414f-b73d-a8b61764dfc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf14cee0-1a73-47f0-8e84-bc83dea565bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a0fadce-08b5-4542-b235-d4f7e75c50fa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3343da34-b65a-4304-8e32-339112f4c51a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "93b9f260-78cb-40bd-be34-b55ca72f01fd",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1155d3d6-1039-435b-b790-2073444be790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1dc5671-6d7a-4369-a7af-7287b5ece73a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff557e5-f69e-4472-889f-b2c2fb06c23e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7cfecb90-fe78-4dd7-b616-fe0d7947f05a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf148c36-9f0e-4543-8c98-05f835e958e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35137476-816b-4a20-8b8e-419945248f7e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ae41d54-f20c-43fe-b01e-0f2d625991dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "931f2e39-161e-4d5e-86bf-6d328a8cf7f5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "01268b9d-5b9b-4ccd-9101-021ec7454322",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "475989f0-5f17-4f5f-8fa7-61d83aee5e59"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8868c992-6f4e-4bbd-b2a4-d768f0736486",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bbecae22-dcb1-42c1-9ca3-e89fe23c8788"
                }
              }
            ]
          },
          {
            "id": "01659bf6-b00f-4684-8f96-c9cd50de39a7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7f007fae-37ed-462c-a0ec-cccc0b928eb9",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "1b913516-a57b-43cc-8196-5ff238603eb7",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b886aa-a5b8-46e3-9797-439c5aa170d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3e1406f1-8d61-4940-b51f-ebf17c0f05e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e974cf-b6ff-4818-9fcf-504ad32c1759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "068001b5-9927-4988-96bc-aa0013a63a70"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4a28b343-bd5e-4114-be1f-ad6ff25951a5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4657961-025f-4a1a-96b9-c4cb4039e83f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e4f5e1c5-ce02-4709-935d-eb4be05ef495"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ecf4c30-0438-4f22-a3c9-5c712728c332",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b00936e9-607d-49e7-8870-94dba1c161d4"
                    }
                  }
                ]
              },
              {
                "id": "4d192fd1-0d8a-4cbf-8108-e074fb6b0510",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "545c6384-2e59-49da-89b3-dca0f6d6fe8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "30a3051c-225a-41b3-bcea-b13d2989b69c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1370b262-984f-4645-8308-e35dfedd43a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "22e38b35-b222-4a69-ab4c-655c0ab01f61"
                    }
                  }
                ]
              },
              {
                "id": "a503cd8c-c4bd-4fdc-97f7-1bc9730f808b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6240f96f-e34e-448c-a593-b94874205569",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "138a533a-15e8-426c-8864-ed8933440ade"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "328c2379-00d3-40c4-8cdd-c20ba046bead",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e853057f-2b3c-4c84-aec6-0d825b925914"
                    }
                  }
                ]
              },
              {
                "id": "cc99038a-3fed-4fa2-a3ba-0a25e18cf28a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4881d7ec-d45d-4382-b97b-116cab678f14",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2e18b75f-ce5e-4b15-8a21-a7c7844a6ecc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "651051ed-6dac-42f8-8c68-6fad35354d56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a21394ac-5b8c-4c9d-918f-008efd57a615"
                    }
                  }
                ]
              },
              {
                "id": "b600e278-f1b6-4ff9-b0ac-13aff5abbca1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e37cd724-709c-4a42-9f3e-da73b52ad810",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "41044121-4392-41d4-a9db-2608174e3273"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "037e343d-1a96-4c15-b200-b50ed7326c49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d0988120-cbb1-4a4c-969c-4b8d350cfcaa"
                    }
                  }
                ]
              },
              {
                "id": "2b42db21-bfd5-4c8c-a84c-18fdb9466b27",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "beed9d0e-70a7-4a9c-8fbb-893dfec10302",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ed43928d-641a-4ef9-8390-4e499554f7f6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06ee62d2-fb2f-4195-b0a5-ee89bd34dbb3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7628578e-e8d3-4314-87a7-df84c6807199"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d32634b9-03ed-40d0-8f1b-646c833e635d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3ef2382b-0996-483c-a0cd-97896f9437ad"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f7970a3e-3703-4bba-b0ab-44d8f5b2b101",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c37bc31b-7065-406e-87d6-83f471987980"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fd19d8df-bf8c-4b46-b172-c239c282a823",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "83b8d1b5-77ce-44ad-a224-a134cce46a4f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c4793952-6b20-4569-b4e2-13ad4d2e33ce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "de469543-51b7-474e-8aee-a322c0e51f37"
            }
          }
        ]
      },
      {
        "id": "508d2891-3e08-4ec7-b3d5-33c47bde18ba",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "0246cefd-2e49-479e-acfa-93e7b6f54c8f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8b936f6f-ca1a-4daf-863c-33bcbd4bc8f7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f8f1a34f-f048-41fa-bd10-e06785b1b21c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0b029e-cf02-4a8d-8ace-a57acb269504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "367fe563-31f1-43da-935c-6a1e3c941d21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8440a1-7203-4b8e-88cc-4532410d209c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b13832f2-491b-4c87-9627-12ee0ebee219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bfd6a40-a421-486b-886f-713c54d0e1b2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eaafd64-a5c5-4a88-847e-3611878c5636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74a3f42a-2e7e-4a91-b09f-05c436773972"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "723f8dbe-25a4-4fa8-9bba-89ce95c9725f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "402766f6-46e5-4bbf-b444-0233d990849d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a122502f-08ef-4f5b-b12e-4fefbd30747a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "784ef7c2-3f1b-4f2f-81cf-3dbd5cffb63c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d5878b6-6c53-46c0-bf7a-ebcce60f4efb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd1d3d9-de7a-49ce-b706-897f0648e5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b42739a-4ed5-47c8-910b-fbd4771abf7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32acb89-8867-41a3-b15c-7bd8166f6e25",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f15755-c475-4edf-abf8-e6329a9d0dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b270fa3-1925-46e0-9563-bd35167ff833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83db6180-b7ae-4088-a719-4b5b94fb2148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b7e0dac-af94-4aad-bb41-64c154cbf6f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ddecc5-569e-4ee6-bbb7-4f7b33c0a1e1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c8c4e3c-a16f-40a2-95a2-0558f7c08df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86fb09ec-d90d-40bd-829d-55575d6c93c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88680ca7-dfca-4ab9-a151-1b162f99b415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8965b2b7-9fcd-4d90-a2e6-cb1d128b970f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32447608-5220-4c46-ac5c-f2d7859e1d13",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34add26e-ede5-4dcc-8909-054e6d1b8b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de53f6e0-2364-4344-8d2c-e25ff01cdecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "febea839-2edd-457b-8463-9a92755c5d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd085223-2a7b-4701-84f1-957de742ea3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f10cb85a-5be7-4de4-8b61-7bf15b56353b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2787bf-b2fc-4820-8ed3-f72f4f3c5ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6645bc24-920d-4d46-b1eb-9a8d8eaec5f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e523ca89-5d20-4f66-b14d-0361418ab7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b5eb622-d8d8-4b93-8952-fad7aa511e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b051fbf-1c21-4846-ab6f-499f51560a6d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "902e2b65-33a5-4331-8fd1-65789da7ac29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfd854c6-8446-445d-af9e-a196c2d31b47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c867dc0-56bb-4803-8076-ab3862cafb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2073dde6-6cdb-411d-b799-f21de62767da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df117734-f32a-48b8-947e-f168f8e3e626",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa1171b-907c-487b-baf0-734c8eab8c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53a3b69d-80bb-4355-805a-b25db0f04cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9271a682-6801-4bde-9525-1b8d68278ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "745c27a3-90c9-49af-906f-4ef7e00b98c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d62ad39-2832-4198-b889-27c1f20ac91c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad18473-e865-47c9-98c1-3b928f2f3948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4d5122f-8a6d-4bd0-b614-96c987c9f04e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf07e84-e87f-4b22-80cc-94eaa532a526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80539592-badc-4b4a-9b60-deb8e84affd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30427fe-594c-482c-a3fa-4f737ea99e46",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a083e3af-6f27-4850-b298-e039ae3eb5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b1b8ce0-7b9c-4c8f-9d71-18245b81307e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06ff929-468d-4f31-861d-393ad156113e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2fe4bce3-de3d-46c2-b276-74740004045a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd3660ee-cc59-48df-9438-a7827eddffee",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f78e83-c091-4223-bab2-8752d72f89b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "100f5155-59bd-424c-b021-b6fa52704a54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "343a3685-b703-4224-873d-bc67da25f14b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a97866c2-1d3d-4b42-a129-7e6e7ea8df33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ffcf31-14ed-444c-84ce-b0bc1e761c08",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52c69d1-748d-4df2-981d-7634708d7272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a158730-2de5-4377-97be-2b45bd5211b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78318db6-02ec-4652-91b3-38c43b920c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4bafd91-73b5-453c-b9fd-0482e8dc55cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139977e7-0410-4bb8-ad98-19959c7e666f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c87d10f-9328-4bb6-b130-86b690133e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "767a3fdc-7d30-4ad0-89f0-6fda30fab8eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd6d768-1f0a-41b0-b79b-9fb639cd73c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c081af5-af24-4b92-bf88-ead2c25926f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a49cb17f-1974-478e-aefe-5474e82bc4ab",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3278977-8f07-4a11-b960-1db914a1c981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16c9339b-f19c-4f04-ad66-eeb22463878c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a5bcb03-25f7-4794-a4c0-a16aff1214bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ee0e303-0691-4212-90f9-28e3fb3971c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5f8900-81ec-47ef-b7d0-06bbf49c2dca",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40249f8-98bd-4479-9de8-bde74c488e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "829ea313-e5c5-45fb-8339-d45c8fc950f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09eaa800-24a6-4bfc-baac-c11495ea9c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "57da4159-e316-4fc0-a473-c6b360e15100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dada8e9-653d-40d9-9cb0-3bbf8b01c10e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14bb085-c2c0-48aa-ab2f-9b1d79791c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eafcfee4-0b77-4ecc-9162-c643b0820db0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b23cd4a5-1d93-4d63-ba44-49ec79eee449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "df675eac-844e-4243-9b4b-dde34766bd38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648f5ec5-e793-46dc-8e73-369974fa3cd0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "853d0b8d-d990-40a9-86d1-aa2722a9e443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb55ce7c-de1e-4fb7-a8a8-005b6cb7cc75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c6e29ae-aa77-4705-becf-375e0236a975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "20b15a52-9738-409d-8dca-37f9756e9b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35435028-249a-4337-b57b-dae1af4dd31b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "452d45f7-4807-4bc5-9241-e4226bf37d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcf17e9a-e85a-4cd1-82c7-e4cd38e4a242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d523414-4580-49da-b1fc-854484bb5a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d81328ef-c687-48c3-b0ae-2d8d49b4985a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e75edb79-cd49-4db5-8d08-475135beaf49",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ab9aba-1632-4e70-824e-941e46503624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "919c3445-33d1-4bd1-b3d2-09eb434c425e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d8e4de0-e050-4dc1-80cb-cdedc640cc09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73857379-6bbe-4e28-ad11-ccba08b465ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfecf87b-da95-4b98-85cf-1d542db0ad5b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd3349b-4661-41c0-ac5f-f354eb4ec8d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66144741-ec6a-43fe-82b1-711c828ff367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a29ccd-fbec-4478-8251-e1735addd06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18b88876-4070-4f57-87bb-c6a292177834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b0e2e2-6cb6-4bfa-93f1-73c25e09f7c1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c72520c2-6441-4ade-b5d7-ffb0ffc3aa9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c065c0fb-45a8-4822-9669-7205db2476fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7725568d-9d27-4518-bccd-1a0cc6adc214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d04c7a74-d508-4532-9404-c1402b96ed9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e37a8ad6-a62e-4e04-ab14-5e3abae073be",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "078080d3-d92a-465e-8b0a-5119d32915db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2985076-9c81-46fc-9b73-b586fadbef61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf684de-dead-4915-b934-0c0fa5df4a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee12d29b-ea04-4346-90ae-db213c1d3495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8d58ec-9ead-42b6-a555-5d1743927fdf",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e533e7-7268-4bef-9907-93530a96502b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8144b0c-5dc0-4abe-b2bb-6e73868157cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f0de5f-9027-4562-9096-07464f5f2ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4aa4e42-a9be-4f7c-8732-5b8a27879719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "686e5aec-88e2-40be-8e1f-643fcbf0ae8e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b190f3-6eea-4e1b-abe2-37b71523729d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e28d52d2-8805-4f49-a4d6-9eed60af4f20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6fe61fd-0bc0-4ed2-bd51-96d67117ebe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "729ea33e-5313-4f1e-ace7-b06626e59b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a06aa6-ebfc-4759-856e-af6a7fa79a41",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d47b03-5fdc-4fb6-8d9f-533f9b148563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85e25545-b942-445a-8518-bd041324bc46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d2f12d-c1c3-4c9f-9d0c-d6ac26391020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46bd1f7a-bda6-4bb1-9d2b-0b4d922d7488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deeb7a30-6a78-4c5c-bd4f-101ca40a285f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd9f2c1-abd0-4f78-98ae-2c1f702f7e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60b2a731-1d87-4d1e-877b-066d88c12d5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98fde721-160b-4691-878a-ac56a8af879e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca95561d-e2eb-472c-8a8d-1e73db0cb602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9ab6fd-b7a1-4a73-9743-caf703ecc38e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c71e67-ac34-4352-aea1-9d2c7ae4e9e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16cfa498-df9c-4500-a83d-1239a4f3db80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1632e2aa-6df9-4b99-9fea-c1834c507f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21e010e0-6ad0-4104-9271-87f12bd370c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11dc135d-259c-4ae5-9236-66e4bd457070",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2acff0-9f87-4af2-b1a2-f25b4b5c2781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "154f856a-aa9f-4c51-b859-e803bc185646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2fd6e9a-7a5a-418f-bb76-f3e3863b7527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f55c0e5-c443-4a4c-a287-1f753d157bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47815e0f-95e6-4b6c-b305-1977a76fb9e1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eaffbfb-40bd-4ce2-ba6a-0422336dc0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdd2e7e3-f2f4-477f-8b4b-5eb751292b20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18526eaf-a7ec-4204-a846-3bb2e4bb50d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "482264a2-2123-48df-8572-050edb2d4ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c468cc6-b90d-4850-a0e9-78180ba678d5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47cc0c8d-0330-49d6-9899-69b8bdd3e54b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ca8163b-2028-4a06-ade2-adc1cac61371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d656152f-6fa4-4a7e-8cc6-3aacaa965470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e94e88-3d25-454d-a29a-f6fbad2e647e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc935e22-5ebb-4a5c-9d7c-aa6e27bb422f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab82d660-773d-42c0-90bb-b3649a3528cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e647afb-d4c1-4c5e-8317-8369f5b96d58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcfb761e-8884-46f0-9a51-84a93653a6e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1a3d2ee-6c37-45ff-831a-fec0ad70fff7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ddb46555-9ae6-4839-9e53-ce70cb393179",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "27286337-6215-483a-9c73-f318a9cd7782",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0cbfc7-77c3-493f-981c-0e2786460631",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "df2d8fc7-92b3-4ac0-955d-4ce730dd337e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c72da03-3d78-4864-b464-850f9919bfa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1cee184b-72cd-4e84-9fd9-e34e4bd76cae"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4811c29-5762-456e-bd07-40c4ac5b441a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "370be2e8-eb8c-4302-b816-3e9812410bff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "13d855ad-caff-4b58-a4e3-51d07a01f4ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c2f8c24-8ff2-4060-95dc-a624b5d90b75"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "38651099-aaf5-41e8-b743-3e48e16c704d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "37d235e3-1159-4c37-98e2-abc8fbfe0661"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "53edf26a-5475-40c5-9f2f-1efcf6cfb88a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ebfebcf5-4667-4120-8e7c-145ab222cc5e"
            }
          }
        ]
      },
      {
        "id": "38bb948f-b646-4b2b-8252-b4d24af7e085",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "5a294078-cf07-49e3-9e55-d2e879ca96be",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d928953d-c1b3-45b0-8eb1-246d692cddd7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dfb132f2-a5d1-456f-81dc-8a43020e99ac",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b34dc2ef-fe8d-48c0-8af4-dda31a8f48e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0b1336c-aa1b-4d62-a06b-1013a9563a66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c481d984-4783-4cf4-bbb9-e94ea3ef7959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "24951c2d-243a-4f90-be33-4c0487aed668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c7c926-068d-4428-a027-fc127f3cbd7f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ab3932-d89e-44f3-bd31-46e2ad313a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c10c070-47a1-43dd-8f25-a1f5a4b7aa5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ae1d0e-89d6-466c-b601-d6d5938b51a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3871523-7c16-4d4e-9d54-9b42c18c8505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89ec719-668f-4d51-a3a0-a9efcca1a1a7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf251f5-81f2-444d-8068-1a2f5595b8fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da0c6597-286e-46a1-b538-2b4c07b19438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "811f8416-d4d8-4c8b-b17f-68974d667509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3fca45b-b02c-469a-8dbe-71e8f18883cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b0189eb-407a-4740-aa76-64fb85ecaee1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c551f8d-4b5f-45e4-85d0-5dadc86a4daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4af92b60-7f32-48ba-a911-c716cbe5e127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c041d5c-e851-465f-9e90-fd4279db6fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1997018a-a1de-4d0d-a5da-9cd3fa31838d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f1810f-2eca-444c-bceb-7c9542d68455",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e456e2-c1ce-4806-a397-766fc2780405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8d28725-48ea-4362-9ae0-ad61774cbe24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3809acb5-3c23-49ef-90da-832dcbba2c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "04bd3b83-38a3-4361-885e-b9bb9f7d36eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78eafbc2-ecaf-443d-a8f9-0390e1aed9d5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0357d54-a06c-485a-a896-930d3b0ad3fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b95856bd-6b26-4bb5-83c0-2a3c74abce0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4496eae4-9db6-4be0-b392-6fc7f9d30d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "42468bd1-38c6-43c5-9488-89fb4701e9ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113321ee-7e7b-45bc-adce-87cb0ba97ec4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1bde15-259f-4d98-b16a-b7e584a82ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06aeaa97-756a-49a6-ae3a-241f0838fe25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8ce23c-26bf-497b-8213-e003cde0cf04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9872b7d9-e79e-4327-b2bb-a70bdc9ea7f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f71224e-a343-4f75-a1ea-bb78f9a9a4a6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a8a690e-cbca-4fea-9e77-5c4163b8f752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d1463f1-47b5-427f-8746-756469d188c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b008d36d-99e7-4176-ba39-75114be4ba58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "07c846a9-229d-4492-a52a-019066584d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b27c334-7842-44ac-ab17-fb5bad92d0b6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e155078d-ea73-4e01-9a53-fe83b1c2b362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f4bd19c-1705-4e73-a065-ccc73d00fc94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9afd5eff-4b8b-48c7-97a7-989923a14f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c29f818-07ce-4df5-9574-5e08f1d81a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "679870bc-e130-4e3b-8b3e-ed01628020fd",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e0cf6e-f80c-45a8-8cf1-0fdced6a7a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed0e89c6-e507-48b5-98da-4dc325de2d61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85985c6f-94b0-4523-992f-dfeccabf8acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9d85937-714d-433f-ae00-5d4d41632656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1090b056-1f8a-49d2-9440-ab5bd2955585",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23048cd-8013-4663-9c4b-40952e09703b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "686ac134-838b-4d44-88ea-c84d102f6dbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded97016-cf33-4f92-8ee3-dfb74bc9c06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "45c61311-2ef7-40ef-a17b-d7b5d9e1494a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b7f342-e1ff-43d7-8cb1-d448e7cf582a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6ed013-1c86-4de8-9582-bfa0a0b02c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e47958d5-65bf-428d-9110-0d3a751a96f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91bf53f9-0751-4644-b4d7-e8767b281945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f089754f-ff2e-44b6-b462-9e8d36c8782e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2698e38-7574-4082-9988-96dd52a0fa9e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6faa9bd-22cc-4771-ad51-33c7de367b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a51ae13-1d4c-4f7a-8f91-8fbd9f69a754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "794bcaf1-b9a9-47a8-b26d-5ec90a5c98d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "39e3887f-fe55-47e5-b94f-734787865709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a43d284-dc22-4352-b6a5-b635280f51ea",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0351f4e8-477a-48c0-b8a1-9652ebc96d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4db93b3e-62ca-41d0-aab4-7b7a23a13bee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55e31c5-2eed-41b5-8ffc-66b8070b1a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec880456-1d2f-4bcc-b39f-8224fb7cc649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28749320-e8da-444c-966a-3826cdfad9e3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ae95b4-c1e9-46d2-b805-d772061d7762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45226379-6e5d-45ce-a069-539b10bfa0b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "538b8818-d25e-4a54-9830-eb22b3ba283d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "65cdb3b4-6eca-47b4-a9c7-92f36ff8970e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38ff7c9-b28f-40b8-9638-19e4a983b11f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f2ad11-18ca-4ed3-bb71-3496f03f24d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "212aa655-4c80-4788-9285-2bdbefd57644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec754444-01ec-4170-8b3e-cb3eaa66276d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c33d69d4-ff2a-4e19-8e6c-ddb6f69263d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cecfce52-1239-435e-9262-c98871f882ea",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a88f75f6-39be-487c-88b3-528930b1c8d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "732dd403-1038-478a-8d4d-dc7eef341dda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed1d957-5549-4e64-9b0a-2b03bb49bf1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f7f5e44-6d48-4a44-b969-e767d865600c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60ee90f-2d30-4c65-bd1a-4e58162a09a4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f4d877-1783-4224-bde6-7a0b493d6759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cb0970c-c149-4eed-bc77-d73786e1adbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32485518-5776-464d-8bfc-55c4c2440f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "359151f8-65ea-4a4c-aa14-35e01c6acdf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30633464-a34e-4e1d-b769-366c87aa1714",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f2c2b8-c3be-458e-8176-65c5b8a68681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37ee3e6b-4c21-4217-8e37-fa732d88d6c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0802e5c-a7ab-4798-bae6-5aa7b70c9a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ee76528-5cae-40d9-8fa1-ebc74c3fc563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc8478b-a477-485f-907d-2024980232c9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76516ad0-58f5-4526-afab-c29c05cdd8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d010c50f-ba6a-4e9e-b55d-58019267b013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a88df418-19dc-4383-805d-75da3cd153fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d7e2089-fe65-4c52-a1bd-1893b2df83d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a497b4-62a7-4176-8129-ffe144f33fbf",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3308fe-6661-485f-830f-155f6561872e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8ae281f-78fe-4692-904f-aae32a372121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad11a62-85e5-4faa-8709-772677f1126c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd15389b-8548-49c8-920c-d972d53f49ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c09f37e1-4c63-493a-a1b9-7ae2d59dc1bb",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec01855-9589-4900-9610-56763468aa83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5789444-b2da-4a79-9492-1ad7f315ddf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc7735b-67eb-41fc-b602-13dd202e9c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "703ffb95-9dff-4a05-89ac-da991520e81e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020b4083-634f-4418-bc26-956c434e89c0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab3f3fe-202c-4356-8cbd-10230d998a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ade280a-ab53-4562-a2d5-282cd6fb0d3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a71d3bb-b435-4c26-8e2b-1a2b0e4f2165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9545d92-cb84-4ffd-8982-030e82060c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2cb667c-eec8-42b8-9c5d-07e53926149e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4047c9-af00-405e-bcaf-80dd86bd27cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f2f3d9e-ea75-484c-a011-aa00b7330be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c344695c-6ae0-4c31-bbee-64d5ae5eea54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40c89d95-0b17-4edb-938d-5ed3a9ef2293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ba6c97-da12-4162-9358-eb0fa7c56e10",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1722660-c647-4e17-9c94-81122cb12db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cde748e-8daf-42ba-bdad-3d8166d5fc49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828312b8-a982-4146-8fd7-dc4116b54ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "569082e3-e398-4bba-934f-bc4dc7839437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c3e945-137f-4f22-9703-8dfe2639bc19",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "596a3ebc-c1b8-4b79-9007-066aaee34344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccdad1d9-8afb-423f-9618-d71d5db1b8ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752ebc7f-2cd6-4211-ac81-692cf502419f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "578956a5-be07-42fc-a0d1-194d1c25d1f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ff6311-eb4b-4a52-840a-4d9bec549f49",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0583bc96-4d72-4541-b258-9ef397c9445f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39cf82b5-9298-4808-bcb0-bea058bf7b20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc88510d-30ab-4c18-a35a-20a262d15dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57476309-3a90-4b81-8095-c553a2f23866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0888cedf-5454-4b17-88d6-a9a9dac95784",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e42627c-8f74-4a56-b43c-576b25f033d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aba27040-02f2-4cf7-a726-cb902fc68a03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45094e23-2598-4b8c-9b76-3ae947653bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc15b59d-d809-4de0-b06a-8f3f4431e0aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240d4327-1856-4a1c-8203-92057996f60e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e16b97d-b0aa-4de3-9860-456dab632f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aba5f3e-aa07-4105-ae43-49ead7546af2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab8d2de-33a7-4c9a-a898-68482ae40267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f887365-b99a-4144-9501-29580428bc5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f435d87-bdb1-4fbe-9be0-1640bcff3e13",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b55d9c02-4e26-45bc-81a8-90fadcffacae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "364616fa-356d-4c4e-b3b8-ffee63bed668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdbcb228-404b-4be2-8802-523770bd3753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7431471a-498e-4f77-9021-7417ba068739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2dc28a9-c743-476e-af75-ce4db850e5b8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32222720-b7eb-4a07-89a8-2d10ed37413d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99e92f2b-3d38-4ef6-99e1-c956b062d085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d347cbe3-1e0f-47a6-9db8-8239104771b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8c8f208-9d3e-4ef2-af9d-6272dd17578f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd5a5d3-f3ca-4f0e-84eb-9bc4b52aaba3",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c466e00-b95f-43af-aed8-eaee28cbf374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "981c0f8c-f912-4808-ae00-a7689ad53fe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed80ba25-5944-460c-9335-1f78d30734ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65edf8f3-2fbf-41a0-bdf7-f298f568c414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d398ea1-62f2-45cd-87aa-9790f22d2fb9",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6e029f-2488-464f-8f68-97bcf1074346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f1440b1-2b0f-4045-8be4-37d4e1415866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f351a996-490c-4ad6-ae2b-19af3cec59b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "654d6332-eebd-4403-92c9-4350c5440190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5292c6be-b979-49b7-9271-4379f258debd",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "952a3805-e9f1-4ab4-b9c9-6938ac285980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ac4b247-61d2-4304-b0f2-b7ba604ef07e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9ec783-b3d9-49e6-9c7b-0ec27fc193f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fcf0fe6-7996-436a-af11-40fd0833d10a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a9469a6-afc3-4cc4-b7a9-5f24163a1607",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3b0ff9-2df9-4daf-94bc-05fb25966d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49df23be-8eed-447d-b781-aaf9fd07156b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61672b3f-42f1-4948-929a-0bb9bd284d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e9a673f-0651-428d-82eb-974f59d410e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ced96b-2ef6-4eab-9ade-59655d627097",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f451fc41-b559-4e25-9b46-2471078bdbed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f7a34f3-846e-4e86-ae97-00cf4d39e348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e332dc4-3a0c-4062-81a0-fb061aa32a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45111c8d-75ad-4bd9-a359-7be7e7d13bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609fd1d0-979d-401d-b874-ca3eb1a4b0d2",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fcd9268-007d-4bcf-8d97-25ca768cf141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cca5f98-2f4b-4397-bf89-a0b80893612b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "550bcf19-fbb4-4f8b-9fc3-9b700841073c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02c5ecd7-f296-44d3-bcb3-0d27cc011a74"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "eb8d688f-8b9b-47ac-846a-79b6aae503cc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8a1c298a-c836-4606-a406-3a658d438626",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b371672-2207-49a2-8c81-e21c857a032a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f1faf6fd-7add-4abf-a3ac-c69db61d9d94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ed6386-15b6-41f6-ab4b-d05e08ab8972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "766c2989-0ac4-4825-89ee-d69e479bdee6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a310cbdd-39db-4d5a-ab2f-8b8affe048f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c4428e1-edbf-4252-ae33-655ffc7e5041"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "91cb344f-5091-46e0-9440-4d97d777127e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "375acf2c-cba6-48b4-be60-0ed9d6e0f3de"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "afbc6d6a-772a-4e1e-8e81-4f9681fb972b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "18c9a249-b77d-4fb2-a492-2586e9c686e2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a99e076d-82c4-4153-85b0-1c20a30c0dfe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e0e91341-3f70-457c-bf93-bc8c72362d90"
            }
          }
        ]
      },
      {
        "id": "76adceb6-97a7-4cfc-8e5b-4579f3842e8d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "60129cec-a1af-467f-9609-28b8407a554e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ad284c57-7e36-4ccc-b8da-af74195e877c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2f0a90e5-c3ce-43c4-9bc8-91f06e4a30fd",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7af761-71ed-48e0-a5ae-496b8bc1826e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de0f4d9f-452a-4af0-981e-b0f6837a8389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10fb4fe4-6ef3-4aa2-aaa5-af64bba328cb",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8a4f8e-2783-42ef-9560-e1687e874ea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6b8d64a-b418-4d14-ac0c-0f6511d61e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5c4d4c-ac48-4ae3-9fda-dbb5d55046c2",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9f154e-bfd5-4429-8ba8-c40850c43466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f148e04b-069e-420c-bb55-1c61e8dbdbd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7c72bb-5e4f-444e-a7c9-51605cc097f7",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f733b833-c5fe-4ac4-9816-894125fa22ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "710e181f-2da0-4e4d-99c1-e9ea1b4d2be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a3ba324-6bf1-4796-8628-ce7000814ea4",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b9bc24-18fb-4352-ac7c-554ad9e5fe6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24065ab6-57f7-4b9e-a381-4ff26a44fbfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9bd7f60-417c-4365-bba7-9b6bf4576eda",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d8599b-c0f5-43ea-b674-f983bd49925e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70c7bdf4-53a4-4ed3-b61f-20b5599c1f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df001fa2-b53d-44cf-ba58-d5304cef7ce8",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "915943e1-6f57-4370-b603-6657ccd1b44e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2edd6164-3541-4acd-ac31-d9f37a6970e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d88451f-1422-47cc-a9c6-0cab37637cba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86a78e6c-726d-4534-9ac2-59e22287b38a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcbe5781-c4e7-4540-a9c8-3462528bcaab",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e03b1ca7-0455-4acc-8040-cc7263f139a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97e04682-a63d-4c06-9f7c-2d1c433a1c70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c4b472-2c63-4d0f-a1c8-e95f8dca6080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e52e7fe-20fc-4b58-a7f3-9604003105f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0fb4feb-6d9f-43fa-afb6-3a6a6c2bc106",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f14c16-84b7-4ead-b301-0efe5c6641ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8d3adee-5093-4ecd-a086-5200fd234164"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83272da4-6a5f-497a-9910-cb7d33e85f16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd959f40-20fb-4957-91c8-de10600109da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f920a72-7adf-44c8-9f53-ba7d06b44301",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d217234b-f713-4453-9232-a2609766b4e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eda7f987-a784-43dc-b03b-b382aabc52b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd308f78-8f64-4c86-9ede-1d38e3890fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c30e3afc-ae11-4b05-810d-fbd84bcbe3de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746d7dba-adcd-470e-ba09-c020bc2e7760",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e59ba34-a13d-40ef-b38c-e41480dc11aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60c96069-474a-48a3-8d7c-eb64914015e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d6d59a-cb68-4116-b38c-9a91fc4aa6ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2657035-fd1d-4498-9b55-859265b7bd70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88c2c3c-cb00-4763-9d63-4f7f94580ee2",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ca75e2-9139-4697-b9f2-2bad914edfd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "457f4875-65b7-41b8-b39c-5b13a82fe04f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03787df6-fd0d-4ba7-884d-b7f3daa73950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76ca632a-725a-467f-aed7-6547f9f1729e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce3dec5-9bcd-46e5-98de-d3ca92e13e38",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "931c1527-be97-408f-822a-444675db5701",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddd8ecce-9614-4c1e-8022-06b072bb95f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5938235c-3d0b-4bf9-a829-a20cedcba660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a7c8db-c4d8-4a0d-97eb-c3c5f3262a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1973ee29-772f-4f39-9e85-f5685dd310d2",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd51e16b-ad92-400e-a22b-41b4a2456854",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac8129ac-33b1-4999-a453-16c4e048c366"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7d2bbd-b5d1-4cfe-a7e7-4f81bd801f9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f5cd7dc-d1e6-41eb-b8d2-ab5df8deb947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff384d0-958c-4a98-a51b-e59f43df4537",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8fbb36-7c03-4fe2-b676-e1c3299f12c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13b442d0-faef-4fca-a4a9-ec02ca8abe34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3878d8-3d42-4639-b892-1338f611b61a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5cac4d5-e31f-445f-b17f-9bd10dc90044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787294a6-81e6-4836-86da-167eeaccaec6",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dffad443-bae2-4277-b4f7-562b12bf4ef4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bc56c90-6db8-4ab0-a7bb-59eb6503b563"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b82bcb-5426-41ef-8e15-3177558eb393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68c2c8d6-ae00-4904-8446-e879deeb0192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89fbf25-a0ee-4b53-b5f0-a9e76355d29b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d01f405-c2bd-4fb6-9f99-149aa12b95ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fa4d368-ccc4-4ad2-aa73-4c1aa14f4099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e5de757-d3b6-4ba1-9f18-0391171512ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bc1cd98-fd0a-433f-b363-0f684a5b3e70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787592d1-e562-45e4-b762-4d90e30de403",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0bf868-4fed-4ea2-8054-a1d25b7c060e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4b8c9b2-61fe-4b61-b70a-0dc6da4a0243"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d3c389-23bc-4d5b-961e-fe0798142d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bee65c4-2415-4e4a-bf35-f719b2dd297d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ebb1f1-8435-486d-a02b-5ec3ad123b9a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80926ebf-960d-42c0-a81c-348ed8d773d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17dc97ce-ca21-49ec-ad12-1c749a7f8ab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58854347-98c9-4ee5-baed-19dfba63a0b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad940c9f-7feb-4fea-8591-d1056e434278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "960e6282-ef56-494a-85c7-7ca3e4b3fee5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ca3cd7-19a4-4c4c-a675-e17362c0dfd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8294541-e7ca-43b5-bf52-eaf66d3b27bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b05e4dd8-82ae-4311-ae18-3de46828df17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fc847f6-748a-4b4e-9576-b212901c5466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d97b38-e8dd-460a-b8fd-8dc69c73f758",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6ad2bc-3b72-45f9-8084-872bd56a3c59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ca14ce1-a0c3-46f0-adb2-2cd41c55c8a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4874794-d65d-4ac6-be86-3d99cfdaa400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c580690-4df6-4c54-b092-47ddd720df9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33fa6250-ad22-4637-bc43-172209aaeba0",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f178d86-c9ba-42df-b239-4baea53c5f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "623e9f0c-b559-4320-8575-bf54d4b91425"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf399b08-ac9b-4121-bd6a-c1cf0a95b67c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3abcccb3-79ea-4efb-8619-9f241a24c509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c855dc8-2542-4b4b-aa57-589dbf5aaa7c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3500423f-502e-4999-a8c4-3b4abcf0a4c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6de34ae-d6fc-4de2-af95-5cbedda11c04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff7f1ec-18a5-474f-bd5c-3323f62348ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a866ccea-84ae-4e40-ab45-e4ec9b1779ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4ac7e9-5263-4109-8afc-937b495796d4",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a042f82-397f-42b0-ba98-b00de3c20c0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "debb8000-e05c-4a99-a426-f9d5155cad10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4506ea6-0d2a-45dc-bbc6-6b4aadee533f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74a4f420-6e26-440f-bacd-9e286ee3a9cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd52d051-e0ba-4e14-97ef-f10afa9a525c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b65fcaa-b669-4d25-a8a1-5d23cb0de3ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39f11729-d175-41d6-903d-dca8366a0a0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2c3701-ac5e-4395-abcb-ee8387a974e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c14368ae-a5c4-4179-b9b3-64dc23fdfae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e4bfc60-433d-4394-8f28-c2dd329c67a5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924af2f3-c2ce-4565-985c-428c50c030df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31d9116f-e4e7-4774-9acf-b080f8beb511"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7264dc09-9cf5-45d4-bb81-3da4964f96f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de46c280-020c-4593-a42f-eceb44daa1fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd567894-588f-44bc-9bae-2f48514cae38",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27a6eea-cdf4-4174-99ee-14d888917ad9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6574e85f-04ed-4bf6-be95-8610233ddef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "227dede8-109a-4879-a259-c4656f2cfac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a544c5b1-ea31-4921-9e89-fbd7a1a8c263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae72494b-b422-4ea9-bba1-bce4f4ac9672",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f65acf8-f16e-47e4-836a-eb978c342330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72486622-2584-4c7e-ab09-f40dbee350e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eceac58-ed70-4bd7-80e3-277ee05e2ca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70fe1935-dd67-40c9-a2fd-d36b03885b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f946cd7-6db1-4250-bfb5-25c66e195561",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f4b46a-5177-41bb-96c5-ca83c2e6e155",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52ecc95b-04e2-4de8-8f68-25b6f126f81c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02049ab0-6716-4f00-baae-86b01b9d1907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5edd6183-fc04-4758-904e-0349a8022e7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91f89fa-c87a-48b0-9eb7-be72b70f0a5b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d5f131-4e6c-42aa-97e6-b2f285ec4fb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e37ec761-4cf9-436f-9bd5-fd4acbae9c49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d343f80e-6793-4d27-bc4a-803156929a12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bbe4c17-4725-44ec-8863-461a3cc35d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd8b07f-b5d8-476f-81b3-00762a904bed",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ff4b88-6a5f-4653-a04c-1a05e0ef6268",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "700940c2-9c25-43a4-a07e-6c3d72c2691e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e6c481-d22f-4dc0-b138-2b4b241f91d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a0cd0bd-7cda-46ff-b5b8-39183d1859da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e59e4d56-3e99-409c-a375-8be89ea4ae33",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9913a680-ede2-468b-ad55-f1ab973d5303",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "889b88fa-2c4e-4d54-b8d1-c0a4a632afe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a682b899-6487-41a8-b7a2-4e451a3fb940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb0b896-6585-4734-b3ed-b9bcb86b4394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b18c03b-a3b5-4dc4-9428-860966967d6c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf484b4-f695-41cc-891a-2dbaa5e4696f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9646ac7d-4226-48e3-b80c-0a7df3241dd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f4669a-6b30-424a-b7f1-c46610d7be74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4605d980-7aee-484f-a1a1-8c03c304c7d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d27204a-2fc1-438e-8c6d-61b2a56db30c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2a47aa-467e-4500-8dea-ff3f66533a0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dda9f6a0-4711-4820-bc2c-6bcd7c78d04b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbde618f-e3f9-4f24-b5f9-475819d2b073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "382a644c-c225-46a3-acb7-57ea046996df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c53c34-1590-4d99-a85a-3cce64b8283d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485db0ae-7318-449f-b603-efcbcae90e2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db5b5106-3972-45b8-98af-dc221af4153a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "761dad96-da57-4344-b086-ba2e8fc1a12f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "880b27ed-d995-45f5-b619-55e06b3c3aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc40b6cb-aa24-49d2-bbb7-7a83e0a6d44b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725a509d-5da2-40c1-990a-07c65f76213b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14edc413-73e8-40de-ac91-bf9ab5733cd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f469b3-ab5b-4bfa-b43e-7c68c920868c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06ea2daa-0b20-4ca3-9ae1-e8b547c1b299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7e105b-c9f3-4bbd-9f16-c6958a82a4a4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b11984-0dfd-46f4-8be3-3c712c4ff7cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a231be36-bfb8-45dc-819d-da37c9fe93e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48cb96bd-0191-4a10-b1fd-1a4d74e309b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "160f222e-e1b7-499f-8856-3d3cb61249af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "562c114b-7a2c-484a-8522-a614aa808b72",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114f588c-07af-4d71-9814-cc65a034729e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f015783-4fc5-4d3d-8bad-b3a0439c5a4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7499d8dd-097d-449b-bdff-a64cbcb75bd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "378bd47f-d2f4-4129-bcfa-6fec2740dc5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fccb387d-7bb1-43d8-a268-3fecc2b728ed",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42465442-b692-4930-b104-95548fef5314",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4de0ce1-8f13-45e6-aecc-8d280204540e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c633aa8-42eb-473c-b721-6fb2e0de5470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "706467a1-cff9-4f5d-bc31-5d266e710921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de4a658-a64d-4326-80c5-a8db2330224d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9166132a-0fc6-4798-a705-11e42c361e03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e8dab90-4c06-449b-9e32-79bf8fec7519"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53661b3b-b021-44f6-9bae-8376a8330a3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36598c79-f575-4f96-99ef-13761e2154ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02eb3eeb-3d78-41ac-bdfb-8b8a5d123aad",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c1995e-1df7-4ee0-83a4-3fcbd5869251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5725ee8e-4f3f-4c2b-a7f5-4bca795bc4dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbaf11dc-358e-4c1c-a9a3-af7eb0346d46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36338947-d99e-41a3-833f-52445b99b4b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0548ce3-d88e-4826-a7b7-87bac74d5c98",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1943b54-2650-41d0-a9b0-67e28917c854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e1a8a7f-b823-4ed9-84b5-2aa38537012a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "486068ac-4c8f-4636-b2a8-1545cd14b232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94438865-dd2b-4305-b2bf-93d89d155fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b91a76c-5266-41ba-95f2-7f8a82a03c53",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f668ba4b-c319-4a79-9a15-e64f819b402e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "609e4bc9-99ae-4a33-8a4e-16343b6c5b81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6268e2f-6aa0-4c7b-b637-95d874625aa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6ccd74a-3636-4369-a8cf-1c0d71789c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e075c480-a09f-4fcc-aaaa-db526b4121f6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c6dd28-3594-4123-92b5-0a85da07425d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef31a180-5828-416a-8496-2a2758a56803"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b1380e-8652-4da2-82b1-b13d05fc7852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "137c2904-a407-4468-951f-a39dc8f94ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1e208b-da1a-4c45-b860-5918ca833cb5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872a510c-3c35-4468-a42d-a8c650ac30a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47bbaad1-aa54-4c87-9f70-0bd861026a0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61acade9-0e6d-41ea-9fe4-d752e01b2b2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8af83e5d-e645-4eda-9048-16a9c8eac5ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb3fcf3b-7041-444d-8863-fc266ee41d95",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337790a7-d51a-4624-bb56-bafaee794023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c36dfa40-4a7a-44fd-acbd-81d0a0977f96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e3f94e-3457-40dd-9516-7666828c68b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1b2f01d-dad9-421a-8384-1f91c8196c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb27602-5bfc-400a-98cc-40d68a46713e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864e9cde-aa24-4433-9fdb-48d84e452b55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71efdf75-2ed6-408a-9360-a9fdd8a8191e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f39505f-43cb-4ce3-98d7-98fd475fe281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2891c04a-65d6-43ad-934b-f83397bba531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd72de6-0479-4fea-8ac4-ae53175220c4",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9dcef9-0b9a-4296-8066-c184d15edcdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2461c0f-6fda-4964-a682-f7abc0993950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e43114-5cbd-423d-b5df-0483309567df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b6d82f3-ed92-4a68-96f0-b48d0338b78e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7258f6e-f52c-4f06-8d34-0a65b96089c0",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac5b804-5703-4fa4-929a-5b6a6919e2e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbb648de-240f-40e6-a754-d12d5d182ceb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a7321f-ae33-4aa2-91b8-a0d93ad2059e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70347508-d363-45f8-bcc0-f8bcfba0db49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af96a9b4-6025-4834-b718-96a4f15012ad",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "587250a1-3b5d-495c-8b97-2e38295d91e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8340bb2b-8f37-4076-a573-6dbb5be7459e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89025ba5-6e48-4d15-9850-8490b4a526b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad56246c-f3ab-453e-9dfb-7e7c0a5b85f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e44d43ba-0054-4d21-a699-d522034b0097",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6bd9c7-ee84-4a14-8494-e4cd7f5b88fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0de53c5-1827-4436-a36c-c3ddd95b8109"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ebc5f3-5774-4c8e-82a3-9c442abc373e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbfbcf73-b393-4c79-b684-bca9a7aeb046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3623c90a-1173-4954-ad7f-39952aab3dc6",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fcea6ea-f20d-4495-bf8a-618d1b779a6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8ed6ccd-4750-4c56-8193-f29722cd9cdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6096f87-6c00-4455-b62a-05855bfb09ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff9b14c0-387d-4b74-b687-de2cbb491057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f453b417-8b97-4949-972b-16210fd038db",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90fa4559-d51c-4b0f-9b70-184ef45a0a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36a1b1a4-89e6-4c2b-a875-3408e237db3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a70516f-6634-43e0-a291-39273b1a0660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcbff34c-e377-4a30-8758-5839ab6dcb29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c73c65f6-a27c-4a84-9432-c31c29e201af",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1e69c6-9963-4ead-91b7-a69c8811759e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c59a9aa-1445-419d-976d-d59137fd7828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6e64e9-3e17-485b-b1c6-543eb49fcad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f940c9f-08c3-42fc-809c-04acdc7e367e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b39b93-d7bc-4e60-82c7-dc535e960948",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13452a9b-f732-4c19-a0e1-6dd54363acae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d215e660-7c9d-4955-b6e7-a55fd607ae8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ebde1f-c7bc-4e26-9b27-8f48b909323b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a252d62-7e50-431d-9c71-5f96ba8aa63f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5009eac5-48ab-4bf8-9bf4-efec4cf264dc",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ba7635-b2ec-43ad-aeb3-8e45d2732a48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d98430bd-fd36-4037-b998-822fda7b7396"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e81b2aa-504a-4efb-a3b5-2d973280bf19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4f74de2-3ebc-4f3a-808a-49bd72ea2d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b3879e-505b-42f2-a366-fec47f54cd5e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a6ab29-ef12-4053-96ef-ab925968f8bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef01d360-2170-4bd5-a3c9-772ad175e6a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12bfce78-660f-45c6-b29e-6ec084fb3a00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e8b2f61-d81a-47f9-822c-0783c9953d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57352e8c-f94b-40e5-9b8f-27f738a2c607",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7d48d9-e37e-425f-ba8f-cedb968106f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08ee050e-e533-43f9-aa0e-9d98b1e83ed2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef76ff1-1e73-4cda-bc44-860ff5056436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb577f3f-b94c-452b-946e-0e20fe56ff43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23eff075-b0fb-42c7-8d07-53cc2b44e2ae",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78884f0-9bda-4442-8288-4a44758af84d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4adb7ab3-650c-41aa-9722-0224ae47bd7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "843cfbf0-94b9-41a2-bded-2e83ed7bd14e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32be4dbf-02c5-4cdb-be49-cfcafb51457b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6b0aaa-4fa0-4e61-83ea-ebc29a260d68",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a234a09e-e289-44e2-8885-b39fb98c5a9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c815c521-36dc-41ba-a2f1-ac3d4ea77c9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30a78f3-1943-49d1-b180-bc5ed99265ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "615fc5a6-3256-454c-828e-64c8e6176226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96839627-de64-4e18-85e3-33fb48e3a1d6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b969562-6a31-49e2-9daf-9cde91e00eea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9937bdeb-da01-45c5-ad8d-1a8844cdac36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b8beba-869a-4c94-aba3-a653f6343990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "520ba930-0296-49c9-a47a-9a883b703bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9927bc49-339e-40f2-bf15-9c1d1d9a4e39",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa624bc-0327-499d-97cc-feaef1b27b58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fe4c590-2e7e-43ba-9aa4-6892d699a5af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01165d6d-8c4f-4e65-b0fc-44d32f4685f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fee32a4-e2ad-48ed-bd6c-45a0a537d93c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1652b989-7360-4674-8057-2027c944096a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af7370be-ba1f-409b-891f-5c8aae006470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63507962-c519-47e4-b968-d79942ea3a08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6296fe28-6dc3-448f-a57c-415cad5e42c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c525e943-a7c3-4d52-83d5-a1eb4351ea97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d35341-8b0a-40a7-850a-892d7c0b148f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fedb11db-3f7a-45e8-ae29-79655eeb0339",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "929a75cc-ad8e-48a9-a80e-ae497f3265bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f74005-e7cc-4a86-b1f4-8004e07c3368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a2691a0-2c35-4547-982b-fa277b02e465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e58cf01-d45a-416e-aafe-6768efe50490",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b905dbdc-5d82-4636-b458-bc55d781b50d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b137304c-e12e-47ea-ba44-b469a37fbf52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c412b4-088e-44e5-a9e4-6f5da9668f84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e945cbf-e4b3-407b-b102-a3ee5640432a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ab37fc-6102-4b6b-9daa-8f44b8a638db",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d245d4ab-6715-489d-ab41-e0285354c590",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "924365ce-29c1-47ba-96d5-bd19fbcfbd85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d96a8b8-987d-4d3d-a253-3341a29f5a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09f617db-8645-46f4-ac79-53c37d3d4678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0e6c60-de38-478e-9e24-5e21f83d1553",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d58be8-4bf2-42a3-b5c0-19a5c7e1c8c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ee9123e-efa2-474d-8d33-1799c9e58bb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c1fcc3-045c-4248-86e6-2f7e0be205fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "634b7d02-74e6-443b-9019-d14c53b15c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f67b4f1-b214-41b6-a1cb-431fef57b074",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99161c13-4c4b-4d45-ae71-ed5844f2fe81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ae6d83d-f131-4cd7-b219-4f7e6c2759d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd52bd7-0470-4bc3-a316-2ec16f2cd7af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e4ad30d-7806-437c-9763-38e0e0701844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea3312e4-679d-4ed8-a298-c7c8182937d4",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75feff2-26e8-4b27-9f18-8dd7af3ce0fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59630da0-d95a-439b-b033-8eb13ab2963a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a88143ea-49c8-49e5-a9d0-b55e3a63e3e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d94e0c4e-1f63-42de-b882-50bb8a0e51f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8e93c8-b0fa-4dbb-92b4-30c1176f9477",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a08728a-6a03-4ad2-a073-135ce3ef3c3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c14ae0c3-000f-405e-9457-45ccdfa9e401"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc48807-dfe7-47b8-9705-72d95b66a402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4f774cf-1f30-48a7-b503-4689ea0f931a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e5d094-dd00-44f0-8a4f-94be8554d665",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6086e4-97e7-4973-b695-e9298ef954a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6c1f8d1-0388-425e-85c9-9ffca76e066e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e70d710-4c8e-4810-9d98-4f9c38cea786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2538872-4fb0-4aff-955f-c1e45723f6a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9967eac-9a34-43b6-a3d7-24f3660aba56",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b335bd-f185-40b3-a15e-04d3fd04f95d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c40a095c-420f-4a82-b862-abdb3849c1b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad97b82-6914-426a-bc3d-01d356c1ddd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdde4bb2-2b0a-4901-837b-ed8ea6dad5b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "347c5306-7166-4ed8-8bab-45c630fd58ee",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34f2272-a4a7-4427-8a3e-a5b0c5915d2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bc2c587-811e-4d71-a217-3b18d25c1530"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ebdf45-2a0c-4ee3-abb4-6eabeb289ccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d4e17e6-2574-43de-9c76-4c7b8eb79810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06c8bca-72ec-4242-8bdb-96b7255c853e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38897c8f-7d06-4884-86ee-34ed46a58abe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c645121f-f350-4558-899a-708d0cd96d43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "387382a2-9f70-4cb7-8832-66cc5c8cc663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b3df0c4-4e39-4b51-8f01-3daa4a6dec39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bbfab22-038c-4151-a16a-14dba59fc9d2",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd2821f-a227-4b29-89b9-3177ca6c7149",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e6ae1d0-547e-4839-a94c-a6c6f83a365e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e8f1b8-524f-4e12-b59d-09330c5f8861",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71013739-7360-4e95-a4e1-3981f9b3d249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f03ccf6-dfd2-468d-9d43-d4561605a79a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453b4b54-4db2-4efb-86b4-eaf7988d8210",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c17b957-5dbc-4912-9738-07f75263e5c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae9399a-0628-4b05-9c71-07ead32dec37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "497dd678-4925-4773-bac6-edf112f0f1e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c8bf99-d63d-4610-bfc2-e905503385bc",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70bc183a-45b8-4090-94f6-65e24dd4f8ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d059772-3511-4264-8ed9-0be01cb1cf97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8404dc90-f7cf-4ccf-ae5e-b6b422c5d081",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f32acd7-f734-473b-a622-5c9a53506d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19017841-cac8-48d2-9d38-a18be044bf04",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b3413f-700b-4577-93c9-11c3df5de1b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11991513-f9bd-4f0d-8650-b33425faaa83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e89ad2-1c9c-4f48-9e70-034fb7a24d64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64dace51-5e02-410d-9b08-1bdc822c6d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0fe0f40-4e94-459a-a229-d3dec8f35f88",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7337bd03-e3a5-4bf4-8448-51d0b07a5f03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "878c284b-dbfe-4c92-a91a-9d4e42e9e6cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2edb4be-97a7-473e-826b-ba43c2fc8eee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee61053f-4c90-4f37-a176-de778ef30cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab9b7a6f-0a18-4a78-a89f-b86bf27cc04d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8b04d4-9bea-417d-8357-c54e8fa0c6cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "215c9c34-2def-4a57-9d36-910a01853c4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ce08c0-cbee-4156-bf53-7ae4b28a33b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb614fd-97d8-4e01-a28b-a4801174d82d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95913cba-6556-454d-a62a-6cd4e99515b0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d01f6e-0d7b-4992-850c-c175edbbac9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d1fd089-dab4-417a-8a5e-b18d9bc24f36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dde55bb-23eb-4af1-9641-66ba33b8fac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09c12939-64f4-41c6-b23f-c56174d35b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27cf5d81-319c-4ede-8f21-1544cbb3cb6a",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8869393-5bb7-4f09-b920-0dd4cb804dc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13e9ba56-493f-4ba4-b0a3-3b7665cb0e88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb2d84bf-2484-4ab4-b9b6-05d07241b11f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "296c572e-9e76-49d6-8a95-e9f0c9928969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8579f3-5f07-4c4a-8a8f-ee4d4f98ebb7",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a65a5d66-9a62-416a-8cb3-d963c6ceddfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d9b052c-7ff1-416e-bbe2-eae4910eb61b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d06d798-938f-4de7-a3e7-241d557d4c50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ae323be-3be4-45b4-9945-a49d73223aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8dc6342-ec87-4090-b47c-2cbd9ea19c01",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6876393-d6a8-41ae-aad7-752e9e3287cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acb91d2f-f768-4f7a-9885-a59aba2d0517"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02bfb5d2-7576-44b6-9e8e-bbf5fe6b0c42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b3ec6ca-cc17-41cd-a045-6ac8b3b17199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f63927-01ac-4ddd-84ce-cb247932e154",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce73adf-e25a-4362-9b23-e7f4232d0d8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4a2fbab-0955-4eee-a0eb-262176686412"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea06a999-6b5c-4159-b176-47d0f13029c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0bd66c9-3eaf-41e6-b042-87fd99a413a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e57c3f0-e5e5-4ef1-bf0f-002fa4c7b792",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4cb919-ae32-4c7a-8256-1d917f4c24ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44379726-cd62-49d5-87d2-4143c72c873d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73014d55-1e8d-4c2a-9213-a35879a13f6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4d41c71-bd64-4214-b0e7-0653a941279d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e36b9bd-1bfd-48a3-894b-94132bb0d7f0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4753a43-b71b-474b-817d-159a2f8e494e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcdf10b4-b10e-4d7b-8c8b-404e3833d45f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d4ff71-cff4-4611-8cde-7a69333a3398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b363a52b-28b5-4b51-b428-680d7fa3cdc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442a0162-3fa6-42a4-be88-c04b674a0d46",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e827330e-3962-4f69-85d4-61ca8cacea06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "738f4f50-534b-4291-b2fc-17daaf6a0106"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f533a968-041b-42a4-a645-418d9e38759b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c33070b0-3deb-4470-95a9-031ee7cfa403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fec368f-e091-4094-98ab-efa8e2696464",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13de51b4-8c00-4d27-b411-3ecd14850088",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8f9ea20-a1d8-4501-903e-22a896a3d443"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d9fc6f8-4ddf-43f7-afda-ab0c88279c97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccad8629-5321-4c3e-bd84-67bc0b3712af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8e4fca-4fc7-40b1-9473-b90643c383e2",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03b9996-6436-49ec-99bb-93d6aebc5fdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5551851-e2b6-4d2c-8334-09d73edae5ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b345f4-e0b3-4d8f-a20c-8bb00b6ed19b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3bec6de-48b0-47a4-97ee-759a4c62455c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290ac46e-20cc-476d-b8a2-f09a483e4842",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6936aa7-1bdb-4735-ab0b-2145616f205e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d79be093-e67c-46c3-9e54-9f50d6a1e1dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7da088-2d94-4335-aadb-ebd6dfa1de7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee805fbf-860e-47fb-ad2d-6e1d5685096e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73736f94-5f40-4eb5-b240-e7927f67497a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505a1f6a-63ed-463e-a273-afa5f8229f2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "753b8535-dfde-437a-998c-b4f1be3f3d9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f416f0e2-2f4d-4ef4-8edc-17125bb1fc50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cebab7e6-a489-426d-8509-3a32b6816b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e07a45-d586-45de-baf3-aa5d577de682",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9f8c2c-f9ed-41db-b026-de5a02829151",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37dd28b3-6536-48ac-9631-f6acfda6caa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "792d0c53-cdce-4fab-b635-6c361788ba7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef0a3af8-432c-4cf2-9b64-5f3d5e1e5944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2644263d-896c-4d7a-9a3f-69abfcbfbc78",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a0d9ca-283c-4063-bf99-1e9780984b98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39c048de-ad89-48f0-9239-c5f3c4ae7ea9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d539f9-45a5-40b1-b1d4-29293b45b869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "890d8fdd-2ff8-47ba-a6b0-761bb68e9cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348293d2-af7f-421d-b91b-273b2a66797d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a015b1-d71f-4a3d-a697-619b68fe2e34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d76125e-44f7-49c3-b41e-a8446b6cd52e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab73426-4e1d-4fed-89b6-3df2e2f90c96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebfbd332-6516-4d02-930d-9844195b9267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1117d2db-64d6-4416-872b-58baef37fa03",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "890f0fae-6892-4de5-be39-8f1e4964c9df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aca66e15-0e3e-4134-a1c6-88f804c180a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc53074-ca95-4dc8-a0c2-dc822fb8a1a8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2cf10c1-ee6a-4159-88ce-a835907286f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b32b47-5800-4260-927d-cb87a9c00d96",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2777e123-03e5-4dfb-8c7f-5f5c4cfae02f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acf11580-ff08-4871-9952-2b2d21773dc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7962f64-2007-4777-9756-f84b6afa869a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd546133-ee1d-47dc-9db2-e3c1e14bcf1d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ac0e699-ed04-41de-896f-75fbcdd15f20",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50fc8f18-9d5d-470f-bbdc-ccfe7896ff9d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a1dd61f-1142-4830-9ef0-bd72f46c96e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eaef6980-6dfb-4a66-8b9e-47d89e590d50"
                    }
                  }
                ]
              },
              {
                "id": "4e2cfa98-4264-4841-a380-949fb1ef6f3c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ef716b13-596e-4825-bb5a-66e296f110dc",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fae470a-dc28-41f6-9dd8-f93548a05dd0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0932fe77-8134-4a6d-9ffd-57527f862a0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db41825-712d-46c6-987b-ca191cab01e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9106edef-c730-44bb-a627-86572fff1d36"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7fd4367-9a95-48de-9078-e8a858445f65",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "304accd1-a34c-4f77-bdcb-adcb090c50aa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f5e2eae-131f-4af9-95a1-ba4851044d72",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8f3b0ee-334f-4cda-81ab-70346a01c191"
                    }
                  }
                ]
              },
              {
                "id": "00a16137-21b0-448a-90e1-9d15f71d4f28",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a0082235-f67e-4899-b710-b71c269d244f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68949f14-b5de-4c54-a1c2-13653bd73a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f0061fba-d6eb-49ed-b8b8-eb5f9d90a722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6cd8e4c-46d0-4fb0-8f7c-aacaf3e0cc68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "375a0284-99a3-46c5-924f-556bb42206f0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f355f823-01ce-4de7-a024-0ff21f7272a8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7f5ba8d9-c24d-45f4-b686-69fddd166760",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4036c629-1de1-4953-ba11-25bb00faffe4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bbe24f54-52f7-41e9-995c-16d764f7ebe7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3f3e9ed-5b1b-4b15-a997-d2a651fe5c8b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6bc967a-1d11-485d-ba39-9c9bb147c281"
                    }
                  }
                ]
              },
              {
                "id": "8c5b6e96-711a-4310-9afd-0ff512449152",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "823d9f85-51b1-4b79-b4df-ca23e40b1099",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2df175d2-7f90-461c-acf1-322b6eff0af3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d50ad73-555d-40bd-b325-fa0356fc012b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6316cfa1-111b-4513-b236-2d63b1b19259"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4db33f6d-c445-4b90-b855-31f13546ab6e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f2e3c96e-10c4-4908-845e-08a7334f7091"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c930208a-bfe2-4867-9bde-f7b9fcec08cb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "87b0c0f9-b64c-4476-b6e0-fffb7c444992"
            }
          }
        ]
      },
      {
        "id": "91ee3611-bb4b-49a3-a05c-1068d5b5944f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2b4cc782-1cce-4cde-b968-4b36456dc7a3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "87731dab-4b08-4858-9509-d84b4e8d0086",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c47e0d4e-de6b-4813-abff-8f9d4dd5d81a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c2fd46-6b59-4d86-b08f-43a2fa5aa82f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "af01ab41-697d-480b-b13c-4503861c83fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21de754e-29b5-4ac0-9090-6408130eb9d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e0352f5a-4aff-4162-836d-fb8ba6f24ecf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6afcae43-c5ec-4947-9f67-98eae4a9b290",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6fd762d-28c1-4de8-aacf-582c1580c4ee"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1fb31b2-903e-4dd4-8a49-d3c4d1513fc6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d79899e-01b6-4ea7-8ad7-ab8de2da7d59"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7a07435-9ca3-4a1c-aeee-3fb3b139c974",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9209eeba-7dbe-4cd6-af27-28ddf295c705"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "69f5c7ce-887c-4b41-b174-0d6e68cbe46e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d13cd755-4df5-4536-9c03-621d7a61876d"
            }
          }
        ]
      },
      {
        "id": "6e055dc6-3663-4506-bb90-48ddb4f55845",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ffb12c9f-2d76-4c8a-9321-71f9f8d33ebe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c23c9e26-1c83-40f3-846d-57a0199b1520",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a03347b8-ed81-41d4-aed9-32aa0e0d388c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d6ef950-48cc-46e5-a549-1c9972c63b24",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9bdb9452-ad11-4ec4-9c34-f71897a94c7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a61045a-90ff-4e2b-8dd4-c333f3f2258f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01abbd48-9055-4624-8fd6-e788be12d764"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d8aeaa5-32bb-43b8-b088-9ec2682062ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51df0bef-ab0d-428a-811f-7299106fec8f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b06c3008-6f44-4185-8a8e-e0e6d3bce2c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9aaa855b-7b16-46f2-831e-118eb7a4250e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da4b201f-f67c-4b6a-b024-a7e1730fca86",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e16f18c2-2190-44f3-b6ef-d3f71163e583"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f41e3f64-8f0e-4b04-b9ee-5708f9319622",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9f893c16-cc44-4e11-ab3e-7610f9fa5212"
            }
          }
        ]
      },
      {
        "id": "940a3b95-15cf-4b35-a474-1472a03afc53",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "cef94741-2a48-43e9-b9c5-edd5edda508d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b00a8544-4768-4fea-905f-15633f7f0c76",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6337a5bc-8737-4587-a13e-96a541b4afec",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274254e7-58e2-4ff3-b6a1-412f08cf4ba0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03328acf-57a5-4e9d-b064-5b19f3513d25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c1b2c6-b655-4957-85ce-74fd4e14c570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3cb9a101-7ac2-4cfb-bedf-46b7e7eeaf21"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "890dae46-f86c-4494-bf6f-7fcb6e2a1c34",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "504d6124-2f91-4aa4-a76e-e77aada0dc7e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4090d64-1a48-4573-bc57-bc86f1118814",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69a38c27-23de-4f20-bbf0-364301d7a60d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "391dcf03-baeb-42a9-addf-469dc6c20ffd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "103cf3ff-1209-46d1-b9cc-a2470018e4cb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eaca71ad-fc56-4433-bb38-723861529698",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cf1cc50f-80b4-4b78-aaf7-00ffa5177a94"
            }
          }
        ]
      },
      {
        "id": "8471b794-21e4-446f-b48d-e480af7c6e47",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0ff733da-e48f-4218-a1be-79786d466d0a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f59147d-d58a-49fc-ba0e-c4791d424d2f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "63642ed3-c9f3-4afa-b8d1-c526341e0fc1",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "988ccda3-73c1-4782-9d1b-dd6b46c0b52e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3b5c912d-9766-4b04-af08-c68dbb4c82a5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 9.164912280701753,
      "responseMin": 2,
      "responseMax": 319,
      "responseSd": 32.063164038350884,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1702082102854,
      "completed": 1702082114470
    },
    "executions": [
      {
        "id": "ba4c6735-38eb-4a1c-9203-90d39a09f54d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "881dad10-76b0-426f-8eaf-6f1c65dd01b7",
          "httpRequestId": "7ce00b09-1074-4ca7-90c6-ae94ae1c5eb9"
        },
        "item": {
          "id": "ba4c6735-38eb-4a1c-9203-90d39a09f54d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "2e6751e7-2c93-4dad-bd06-b2e260be5e5a",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "d346eef3-d621-42de-ae9b-0656a5db41c2",
        "cursor": {
          "ref": "1fb61d2e-870b-4a17-9380-68809547c3db",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "be417ba3-eb42-4648-b058-ee87b0d3200e"
        },
        "item": {
          "id": "d346eef3-d621-42de-ae9b-0656a5db41c2",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "27126ef6-23a7-4e94-be30-d755da33994a",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "df5a10cc-69dd-4386-baa0-ded5e8fd9259",
        "cursor": {
          "ref": "cea3f983-35d8-40c5-8ae6-a5a3301572f1",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c3e25b67-fc62-4a0d-828a-5ecd556025e6"
        },
        "item": {
          "id": "df5a10cc-69dd-4386-baa0-ded5e8fd9259",
          "name": "did_json"
        },
        "response": {
          "id": "21625344-0135-42db-ae91-60398e140faa",
          "status": "OK",
          "code": 200,
          "responseTime": 150,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "059a7b68-bc6b-46c5-8b2d-4b3f09e5e76b",
        "cursor": {
          "ref": "ca7f01cc-73cb-40ac-9d64-41ca09994550",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a5fcf7c5-ab24-4e0c-9b06-0466d0e702fd"
        },
        "item": {
          "id": "059a7b68-bc6b-46c5-8b2d-4b3f09e5e76b",
          "name": "did:invalid"
        },
        "response": {
          "id": "4ef74a47-d1ac-4084-ac61-6927c62e6e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "059a7b68-bc6b-46c5-8b2d-4b3f09e5e76b",
        "cursor": {
          "ref": "ca7f01cc-73cb-40ac-9d64-41ca09994550",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a5fcf7c5-ab24-4e0c-9b06-0466d0e702fd"
        },
        "item": {
          "id": "059a7b68-bc6b-46c5-8b2d-4b3f09e5e76b",
          "name": "did:invalid"
        },
        "response": {
          "id": "4ef74a47-d1ac-4084-ac61-6927c62e6e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4809f9-7701-49f1-80c0-90707e6d176f",
        "cursor": {
          "ref": "1d3d73b7-b08e-4f1b-84d9-8fbbf848792c",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f20ba570-cedb-4a3e-b939-a0b3261d4c73"
        },
        "item": {
          "id": "1e4809f9-7701-49f1-80c0-90707e6d176f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9ed10163-c820-4fa1-b9b7-c6cbbfb7acff",
          "status": "Not Found",
          "code": 404,
          "responseTime": 319,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690aef18-3a0d-46f3-a686-3257ceeef295",
        "cursor": {
          "ref": "48f1fc99-0ede-4e8d-9ae7-70ad3d4c569f",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b8a68c7b-4c9a-4ea0-97dc-13534fb8b588"
        },
        "item": {
          "id": "690aef18-3a0d-46f3-a686-3257ceeef295",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4a1ffcf2-6b44-4f7a-8966-98333ede41eb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640f00f5-cb5b-4060-afaf-60bca453f1c7",
        "cursor": {
          "ref": "d5e227eb-54d7-4df2-837d-588fcc9399b4",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "62fd4011-860a-4a56-90c0-5458e5592a58"
        },
        "item": {
          "id": "640f00f5-cb5b-4060-afaf-60bca453f1c7",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7fd46f76-f853-41ba-ade6-1b85671e834a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d44be7-f527-4493-9dd0-366bcc980f15",
        "cursor": {
          "ref": "810f5b22-5aec-4df5-99be-0ab3100a1b36",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f54da003-4bf3-4d0d-9491-7b8a5f96a7e3"
        },
        "item": {
          "id": "12d44be7-f527-4493-9dd0-366bcc980f15",
          "name": "identifiers"
        },
        "response": {
          "id": "e2bf35b5-79a1-43bb-b588-096a00d82da7",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4447ac0-3ba3-489b-9a2c-cce859cc9d17",
        "cursor": {
          "ref": "b5ef8bda-060d-497c-91ef-4120f803a2fb",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1442e4a1-34b7-432f-95f1-bc2dab37c17a"
        },
        "item": {
          "id": "b4447ac0-3ba3-489b-9a2c-cce859cc9d17",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "62e719e5-d0ae-4773-ab2d-e8a6e7d24655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcbaa4f2-1e5b-4ad7-9e2b-4802f1c68d0c",
        "cursor": {
          "ref": "7d60311d-cfb5-47bf-bc21-1d254347d4d8",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e73482fb-f0f7-43a8-8c5a-e0359afc6d57"
        },
        "item": {
          "id": "fcbaa4f2-1e5b-4ad7-9e2b-4802f1c68d0c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f3e90d5d-9407-4d8d-9487-b637d51f80a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3a41e3-b244-4226-980b-a238e4dd3e10",
        "cursor": {
          "ref": "a322c5ed-f749-447c-abbf-1abcb905d817",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "53c5322a-a0bb-4312-8fe6-4a831954b0bc"
        },
        "item": {
          "id": "ae3a41e3-b244-4226-980b-a238e4dd3e10",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "35870a6f-914a-44a3-ba0b-d909b2d5333d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6fb08d5-df00-4794-97e0-e1579eec3817",
        "cursor": {
          "ref": "76869f37-6d51-46ff-a208-d3fc07bd70fe",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9e06c89e-1006-493d-bc11-a8f33e95424c"
        },
        "item": {
          "id": "c6fb08d5-df00-4794-97e0-e1579eec3817",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a7018c9b-2e68-4404-b2e8-3d0099d89190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab80d2a5-b29c-4144-bce5-b01084bcb161",
        "cursor": {
          "ref": "4d7d89cb-fd36-4873-bcbd-797ac2454e17",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "78052d7e-ba6f-4559-a822-77de15b8581f"
        },
        "item": {
          "id": "ab80d2a5-b29c-4144-bce5-b01084bcb161",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d5a7e0c2-9d53-48b3-914d-1e99549895cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfaa6904-2b99-43d6-97be-80e0f6edac1c",
        "cursor": {
          "ref": "ac0bdf72-6231-4617-8ae7-b9d7ae0eaebd",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "1cf56aec-14af-464f-987d-e9bf9ae1156d"
        },
        "item": {
          "id": "cfaa6904-2b99-43d6-97be-80e0f6edac1c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "30278215-0c9f-4b9e-a960-cc8ab6a5d3ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed016447-df04-4d96-b977-33a19d146c8f",
        "cursor": {
          "ref": "c132db7f-37b3-45ea-8e89-b4cefae1f46a",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "269359c6-1243-49eb-9408-16c58be302c0"
        },
        "item": {
          "id": "ed016447-df04-4d96-b977-33a19d146c8f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "eacc904d-311b-4d35-9b9c-eea3f1e63f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f50abf-62fe-43a3-b403-c9a93f525e7d",
        "cursor": {
          "ref": "8cd86685-b8da-4bb0-ba0a-cdf114611c6b",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7170225d-b760-405e-9173-e039b4624d85"
        },
        "item": {
          "id": "b5f50abf-62fe-43a3-b403-c9a93f525e7d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "cd8da4e9-abf8-448a-98ee-f56837b500ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a9605be-8b48-46e6-b237-50f3fe2f1cc3",
        "cursor": {
          "ref": "fe09c209-d8c4-4676-bc9a-578b8e281e20",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "df6506cc-4b31-4012-b26b-2ca635812fe2"
        },
        "item": {
          "id": "1a9605be-8b48-46e6-b237-50f3fe2f1cc3",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "1fae05cb-94b3-4d6c-98b2-c1dcffab489f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c200577-8f7b-496f-ad2b-9270f88c4abd",
        "cursor": {
          "ref": "50a87190-bd32-493c-84ee-522da86a9a40",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8f9ca341-cb70-4d1c-af63-57232a02dcdf"
        },
        "item": {
          "id": "6c200577-8f7b-496f-ad2b-9270f88c4abd",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a37122f3-8518-40d2-806c-6b3fa8a769ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "771e8d90-2a9f-4b35-a572-57f8c370924c",
        "cursor": {
          "ref": "f249844c-8707-4b45-a719-5cd398501920",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "088e51d8-db73-45d9-bdc8-d059e4a60688"
        },
        "item": {
          "id": "771e8d90-2a9f-4b35-a572-57f8c370924c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "781934c9-cf76-46a9-bf73-f78e3b11ea88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb0b576-1001-4703-bd7c-2b0794c81b68",
        "cursor": {
          "ref": "257ee660-8077-49c7-833b-89f3c4ec2189",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "cc22636c-3cf9-45b5-bf1f-737d8b63b8f5"
        },
        "item": {
          "id": "9bb0b576-1001-4703-bd7c-2b0794c81b68",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "36b5f496-f66c-48b8-a446-165c59a8f815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "099d79a6-5dba-4f1e-9df1-9e3713a7aa9c",
        "cursor": {
          "ref": "735839d9-81f3-45f8-8424-902a834177ea",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5664e3b7-eaab-481c-85a0-6fd3ac28db87"
        },
        "item": {
          "id": "099d79a6-5dba-4f1e-9df1-9e3713a7aa9c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3ccd29ae-fea9-4beb-9e33-dfe85d32ac12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d560cbe-6f5e-4e6b-abfb-a93e318803d9",
        "cursor": {
          "ref": "0ceea5c5-ebd1-4ab1-a98c-73d2098161fe",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "47253c31-e52f-4373-ac63-816117930e01"
        },
        "item": {
          "id": "9d560cbe-6f5e-4e6b-abfb-a93e318803d9",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f1d042df-1be8-4f99-8380-8ce81052e7a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb4509f-97af-4ca7-b87b-c4d6a5321e89",
        "cursor": {
          "ref": "a2429143-c1e3-4d7b-a879-81257180dbf7",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e4a2fd9c-d740-40e6-b934-cde0015843f9"
        },
        "item": {
          "id": "2fb4509f-97af-4ca7-b87b-c4d6a5321e89",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "fab0460b-790f-4978-a44b-e05a354a641b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ef684d-4d56-4c98-9d6f-007827b00945",
        "cursor": {
          "ref": "9ad4f420-f69d-458d-b75f-a412e9d8e587",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d2c5d73a-27f9-4eb3-a3b7-2556dcf200bf"
        },
        "item": {
          "id": "d3ef684d-4d56-4c98-9d6f-007827b00945",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c9bfa6c5-3a39-49ae-8529-b9ca3bc86eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f3cf10-d910-4d76-966b-8e875e5a4e36",
        "cursor": {
          "ref": "81b04dc7-f0e1-4a35-937e-6d2e7ebdc639",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "073bbdc4-1322-4aef-995a-3e162650f76c"
        },
        "item": {
          "id": "98f3cf10-d910-4d76-966b-8e875e5a4e36",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "237740dd-e4a8-4f07-86ac-9e972ec63c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd709934-79c1-4cee-8627-f26474d03dc4",
        "cursor": {
          "ref": "42e8e4eb-79f0-4b6c-afc4-91354839d1bf",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9d4fc023-033e-4638-bded-6d957e1529a5"
        },
        "item": {
          "id": "cd709934-79c1-4cee-8627-f26474d03dc4",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5025c03f-5c74-405b-af86-39d120ff6286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d74e991-a17c-4297-8fea-d9298ff6f40e",
        "cursor": {
          "ref": "39806777-daa0-458a-9415-cb56a17399f8",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "239fbc72-5475-4b8f-937d-7de80a19ba06"
        },
        "item": {
          "id": "8d74e991-a17c-4297-8fea-d9298ff6f40e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7536245f-004d-4dda-a592-e943da9c7db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d512c61e-5aa1-4326-8fa5-133217cc3953",
        "cursor": {
          "ref": "8dedb2ad-ba7d-4521-98a8-020f58077058",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "92c424b1-aa58-4880-a744-5408a764e317"
        },
        "item": {
          "id": "d512c61e-5aa1-4326-8fa5-133217cc3953",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b88a2656-957c-4682-874f-309f69887539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57673658-59cb-42ad-80e7-dd7da645cbd9",
        "cursor": {
          "ref": "bec9a3e1-bf5c-4c16-b553-f90937dc0fc7",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "56c720dc-df43-460b-b8c0-ac9c24038ef3"
        },
        "item": {
          "id": "57673658-59cb-42ad-80e7-dd7da645cbd9",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b56fb44b-4de2-4572-847b-e3f566322798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563007a0-3c1f-4048-b8a9-1db11e9a15ba",
        "cursor": {
          "ref": "3ba8b6f6-5fa0-4174-aa57-9337f90528fe",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "0bf8aada-d920-44fd-9278-e0fbf9c1fab4"
        },
        "item": {
          "id": "563007a0-3c1f-4048-b8a9-1db11e9a15ba",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "03c6873e-2584-48b8-8bee-807a628afd47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b967703-5135-4468-8540-8a11d1cd48f9",
        "cursor": {
          "ref": "aba5d064-d3a7-43aa-81c9-60598713c4a1",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "4da7f98e-6113-457f-99f0-99dfff863b54"
        },
        "item": {
          "id": "3b967703-5135-4468-8540-8a11d1cd48f9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a099ee5e-f051-4477-aa24-f674b9fbebfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02759298-5d9d-404f-9d93-f0f7ac023123",
        "cursor": {
          "ref": "acec158d-2d4b-470d-8d6b-6c8da794b4b6",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5b087e6b-574e-4c59-808a-0c82acdc481a"
        },
        "item": {
          "id": "02759298-5d9d-404f-9d93-f0f7ac023123",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "50e9d8e4-cb82-4629-9a62-39920e147d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "431979ea-4d66-4af0-a3f4-9d54546b0f6b",
        "cursor": {
          "ref": "e177f96a-88c8-452a-8b8e-4c6b896a0c3a",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "0c47dcbc-40f5-4abb-974d-404481bc4811"
        },
        "item": {
          "id": "431979ea-4d66-4af0-a3f4-9d54546b0f6b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f5ff9e7b-e351-415a-a9e7-d98b53e722db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a844aa38-8272-4084-86ca-6f8d1dd3242f",
        "cursor": {
          "ref": "fa87b466-b06f-41e3-9edb-4d1f5ae80c89",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ece87d60-c027-44ec-8d40-94270352512e"
        },
        "item": {
          "id": "a844aa38-8272-4084-86ca-6f8d1dd3242f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f2ee8698-db14-475c-9f7e-301369f41b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce14efa0-18aa-41c1-b1d0-a167addf470c",
        "cursor": {
          "ref": "d18c0b21-d68e-46b3-bf44-83ef7e56a843",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "82143817-9141-4f65-8b8d-aa937bac1347"
        },
        "item": {
          "id": "ce14efa0-18aa-41c1-b1d0-a167addf470c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "87ab80eb-06f4-4b9a-a412-af845de04939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9cc03c0-e83a-493a-b6fc-978e25ae331d",
        "cursor": {
          "ref": "9119881d-f2e2-4db2-89ac-a16c8f91cfc8",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "731a3f4c-c2c9-4fb1-8381-25a8135f9b1f"
        },
        "item": {
          "id": "d9cc03c0-e83a-493a-b6fc-978e25ae331d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "614e9dab-c456-4d09-82ff-48bfae3e5d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a84214d-4b22-4aad-9650-de0599782ebb",
        "cursor": {
          "ref": "860b23c8-d053-4191-947a-d28f56a63f59",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "41002282-7124-4c55-9f95-37032f5cd956"
        },
        "item": {
          "id": "9a84214d-4b22-4aad-9650-de0599782ebb",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "42874cc9-2bf0-49be-80d5-aa1685d84947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "624487f7-ba84-4891-8917-3d7031b28687",
        "cursor": {
          "ref": "6a6a501a-4817-417c-8526-25f3c762e62f",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b5b49fc7-aa34-418f-b911-7980bc18a870"
        },
        "item": {
          "id": "624487f7-ba84-4891-8917-3d7031b28687",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "43caec90-8230-44d2-8cb0-5384cc40077e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f5d01c8-d58d-4fef-bec9-49bafbd77c38",
        "cursor": {
          "ref": "0eabc69c-ef48-4e0c-b604-d24cd653788f",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "272bdcf0-c6ff-4931-9def-4b2801d65950"
        },
        "item": {
          "id": "0f5d01c8-d58d-4fef-bec9-49bafbd77c38",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ff3315bb-e042-4c5b-bc64-3de4bc008c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54fffd73-c79d-42ef-9966-8fb3bc16d7c2",
        "cursor": {
          "ref": "cb88f4ec-ed30-4968-b29b-7e650b78e8fc",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "29078e01-692d-41ac-ad84-21892206f7f4"
        },
        "item": {
          "id": "54fffd73-c79d-42ef-9966-8fb3bc16d7c2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d363a82b-7bd8-47bd-9a23-fc240c358584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d220efd3-08fe-45af-af10-674149ebb547",
        "cursor": {
          "ref": "c4289bc9-aaa8-4186-a60e-3f020292c470",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "4a68515d-9470-414f-b838-8916d6a41f20"
        },
        "item": {
          "id": "d220efd3-08fe-45af-af10-674149ebb547",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "19f7eb0b-d502-4fa2-b4a6-ff91902a640e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5a77c4-b155-48a0-807b-201856e30c2f",
        "cursor": {
          "ref": "fa465be9-851c-4b52-ac2f-368b0be9a1b2",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "af61a129-24d3-4036-8944-088dca45bae0"
        },
        "item": {
          "id": "6f5a77c4-b155-48a0-807b-201856e30c2f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a2dc211a-9a2b-44ea-9f04-16cba6d00618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b2a4f9-2328-4c51-be94-20b651305a84",
        "cursor": {
          "ref": "0e72e04e-e560-4843-ba89-98d5bf4bfd17",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9e9fedff-e5fc-4973-8580-3bf7058d912f"
        },
        "item": {
          "id": "78b2a4f9-2328-4c51-be94-20b651305a84",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "aea0cca3-de70-4b76-982d-ac4ca59d449a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0bafb1-de49-4f60-ba65-5e2d41f7b9bc",
        "cursor": {
          "ref": "589e2d36-8f6a-40e4-8e54-e5405691c975",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d56fa031-eaf7-4f2d-b3f8-f9f5a6487e98"
        },
        "item": {
          "id": "4a0bafb1-de49-4f60-ba65-5e2d41f7b9bc",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "767a4796-7b08-4037-8264-dba6d41f375e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 19,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33ce753-b90e-4541-a738-7d3e5fda2595",
        "cursor": {
          "ref": "a37296de-f337-4737-b35a-5b111d18b9b6",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "78d1a048-4c3a-4f3a-9c64-e3a71e8af20f"
        },
        "item": {
          "id": "b33ce753-b90e-4541-a738-7d3e5fda2595",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "19b9cb30-6595-4d30-bc53-93642f775630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5e9926-68f7-4d64-9c12-097ecf335ea9",
        "cursor": {
          "ref": "eef1a950-cf44-4cdc-abdd-d192523aebcf",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "21351942-350b-4dd3-8211-9d1887b61e02"
        },
        "item": {
          "id": "6f5e9926-68f7-4d64-9c12-097ecf335ea9",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5a293e3d-a1ef-4399-9f87-04605f1f763a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e752891e-e50b-4c7c-b201-1702760c8b8c",
        "cursor": {
          "ref": "98feaef2-6a94-403b-aa64-f863c1a31462",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a9264a5b-b2c8-49f5-a070-2cc1660318b0"
        },
        "item": {
          "id": "e752891e-e50b-4c7c-b201-1702760c8b8c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7350d000-e851-4ffa-b2c8-0a038487c90c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc367833-ea40-4d0b-b2f3-76019561c598",
        "cursor": {
          "ref": "bfbe9be5-f630-4da2-bdc6-4a35294dd2c1",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b18698c1-210c-4567-9db9-ca2631bf08c7"
        },
        "item": {
          "id": "cc367833-ea40-4d0b-b2f3-76019561c598",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "fe6c0207-221f-46ee-bdfc-01ac696dec2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a3f8a6-6786-43b7-881c-7262b1ad3f08",
        "cursor": {
          "ref": "1d5a55f0-edee-4a84-8234-138d6d82e938",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9a9d93de-0edb-41d7-ac5b-b5b55b88a0ad"
        },
        "item": {
          "id": "97a3f8a6-6786-43b7-881c-7262b1ad3f08",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3a7a125a-defc-42c5-a07c-ff00a6ade731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbfb5ec0-8e91-45ae-b262-f0cd98c1285a",
        "cursor": {
          "ref": "1168dfe3-9f33-4db2-ae47-48c1708f3bae",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "fcda06e3-72c7-4ced-ab55-609ebc1e6ad8"
        },
        "item": {
          "id": "cbfb5ec0-8e91-45ae-b262-f0cd98c1285a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e8995aa6-9555-4f84-8a41-e71fa4559ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7abb977d-8b47-4b1d-9164-2ac182f7886a",
        "cursor": {
          "ref": "961885f4-0fe5-4042-a709-57041c1f5d82",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6e376eec-5699-4db7-a6fd-b794d31b77b5"
        },
        "item": {
          "id": "7abb977d-8b47-4b1d-9164-2ac182f7886a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "66f10279-5313-4dd0-8207-2fb3c7ea0616",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 18,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598647e6-53cd-4e94-9a97-dd2e5085433b",
        "cursor": {
          "ref": "f61be365-9da5-49a9-ba93-dfe930aee042",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "241cc9b0-dd58-4344-9ea3-0dc7dd366efc"
        },
        "item": {
          "id": "598647e6-53cd-4e94-9a97-dd2e5085433b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "fa0b0634-5db2-450c-ae05-363b9fcb161a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca0f173-83a5-4911-9991-5e5023b29e51",
        "cursor": {
          "ref": "cff73d3d-ce64-40bf-a3af-683b4bc69857",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "08e1a59d-c4c8-4e72-94d8-17af5cbc4a62"
        },
        "item": {
          "id": "1ca0f173-83a5-4911-9991-5e5023b29e51",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8471b069-be9f-488b-a4b3-7c94811e2784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "662d1924-b7cc-45a1-b3d5-338f734d04bd",
        "cursor": {
          "ref": "b2990f4c-2fdb-4089-9d23-54981c3bdc23",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f8a0e8c7-afff-4993-b0ed-d8b2df63eb01"
        },
        "item": {
          "id": "662d1924-b7cc-45a1-b3d5-338f734d04bd",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "97a34c78-3a82-4e54-8fbb-c72f3e8f71fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a698065-8643-45b9-80d0-f28224c2ae7a",
        "cursor": {
          "ref": "861ceda2-2be3-43cb-add9-d62602c2147f",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6dbb406e-ec70-4596-a78b-853a27be80cc"
        },
        "item": {
          "id": "5a698065-8643-45b9-80d0-f28224c2ae7a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1e42555c-242c-4e26-b29e-b739eb705252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "691d2481-b02b-4b2c-9990-02933cbd30a8",
        "cursor": {
          "ref": "353f2389-b8b2-4b52-8410-4e7ac14d3740",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "65d28896-a523-4489-a798-876ecc587548"
        },
        "item": {
          "id": "691d2481-b02b-4b2c-9990-02933cbd30a8",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7eb5aafa-920c-493c-81bb-bf27d30070e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7307148a-dcd3-4d08-b6fc-984d449b3b61",
        "cursor": {
          "ref": "78f714c5-4b49-4c47-bbfa-edc6ebc29c7b",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "4687ce6d-93a7-4e86-99a2-30fb0ac9d159"
        },
        "item": {
          "id": "7307148a-dcd3-4d08-b6fc-984d449b3b61",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e54a12af-d2fc-46f6-a527-45c23533d462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81fe547-0596-44d4-9920-9913afff8151",
        "cursor": {
          "ref": "e410b793-f59a-4a41-9aa9-2d2ab5c497d8",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "547e5fe1-5ecf-4034-b6de-488518385d51"
        },
        "item": {
          "id": "b81fe547-0596-44d4-9920-9913afff8151",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d282f2c7-18b9-4a43-8d26-9d41233314bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3580b370-02cf-4fdc-8518-0b3fc2cf93c9",
        "cursor": {
          "ref": "e25142ae-9921-47ce-8039-bea6e5c4d977",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "9d2d7677-a5e7-4c80-a5ce-6c622f5e484e"
        },
        "item": {
          "id": "3580b370-02cf-4fdc-8518-0b3fc2cf93c9",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "46102e52-1e9c-46a7-a28d-6f6dbac63708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ae20e7-a34e-4e28-92e1-041f65a4853a",
        "cursor": {
          "ref": "245c826f-ad74-4c50-8e46-cc5d889bc749",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2752665d-b49b-4201-bed5-780f43913306"
        },
        "item": {
          "id": "62ae20e7-a34e-4e28-92e1-041f65a4853a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "135935f3-5ee3-4f0a-9e36-510c5d9cd229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272ba098-8812-4ad6-919c-ce3739cee46d",
        "cursor": {
          "ref": "8d70b4be-e1b0-43dd-84d0-b89870e40528",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ed621922-3635-4bdb-b18f-b96591aae6ea"
        },
        "item": {
          "id": "272ba098-8812-4ad6-919c-ce3739cee46d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f0c05be8-cf04-44fd-902c-82bb93180a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04b50ba-2ab9-437d-9122-63b4a8752290",
        "cursor": {
          "ref": "073b2265-cad9-4499-adea-15497c37b61f",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "60679a2f-6e60-4fa4-b540-c35a2a302677"
        },
        "item": {
          "id": "c04b50ba-2ab9-437d-9122-63b4a8752290",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e7db2601-588d-4c49-ab42-7cdff128eb81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30f1e33-f94b-46a0-9f50-3559da73685a",
        "cursor": {
          "ref": "fde455e6-0088-4290-9fd9-470c6eeb8fc4",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "5bdf2177-7dcd-420f-bdc2-7b5d1c7047d1"
        },
        "item": {
          "id": "f30f1e33-f94b-46a0-9f50-3559da73685a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "4751c908-1038-417f-8d1c-9c13b8e14437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af876739-ebcb-45f9-8410-1d1179e26084",
        "cursor": {
          "ref": "3b085090-4b2f-4572-85b3-b6fc15d2c6c3",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "af645ede-41c3-4b9c-9a5d-bcd55c91f3ad"
        },
        "item": {
          "id": "af876739-ebcb-45f9-8410-1d1179e26084",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f3f53b4b-1d07-4ae5-bc2c-7b62f5491a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77786fa5-6466-441f-b7dc-cc7277b1a064",
        "cursor": {
          "ref": "b871af6f-99ad-45da-9b76-f3b36de770fc",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a77e3bbc-0397-4f34-9bb2-971a976d3f7f"
        },
        "item": {
          "id": "77786fa5-6466-441f-b7dc-cc7277b1a064",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "232dfd7c-b4f7-4e3b-917f-2feaaedda5e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e5209e-9410-414d-bc0a-9ce86ec7072e",
        "cursor": {
          "ref": "f150ac6d-7cba-43b1-9af8-6da4b9db282b",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "dd596910-e746-443c-adf7-2203e1bcc4a2"
        },
        "item": {
          "id": "f1e5209e-9410-414d-bc0a-9ce86ec7072e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9aeef210-e424-4acc-8b3a-7cd7181681f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f2a156-04a2-4ad9-ae44-2c2c626c5de3",
        "cursor": {
          "ref": "d779cef7-7345-421c-beef-f542c9034d5d",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "0599a0aa-d36e-4aa8-868e-8457b91947e8"
        },
        "item": {
          "id": "53f2a156-04a2-4ad9-ae44-2c2c626c5de3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e41d2cee-4d9d-4268-989b-581e18213b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34770ca5-8a32-4350-9cf5-b2180af245a0",
        "cursor": {
          "ref": "681a9d89-4912-4756-9913-5c64cce9e85f",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f2664c21-8598-4e28-89b3-08b7b7ff714a"
        },
        "item": {
          "id": "34770ca5-8a32-4350-9cf5-b2180af245a0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0d6cdf7c-6cac-4f70-9c8f-42ad0983c3e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a89339-9382-491b-9d21-e6baec29152b",
        "cursor": {
          "ref": "0415f0a0-2af6-429a-9470-97e03be1d206",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0fb9e5b3-f77e-470f-a286-de3ea52c58aa"
        },
        "item": {
          "id": "e0a89339-9382-491b-9d21-e6baec29152b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3dbfd655-71e9-4a0c-b815-be239d267a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4184d5d9-5d96-42dc-a486-5a222bc7daa3",
        "cursor": {
          "ref": "489c663a-2e7c-47bb-9c35-40b71947c893",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ca35e8ad-bc95-4bf6-91a1-4e22c8680abd"
        },
        "item": {
          "id": "4184d5d9-5d96-42dc-a486-5a222bc7daa3",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a02a2158-42e0-4637-9567-68649cf0ea68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3c768f-e1b7-4742-bf9e-c1ace11e9086",
        "cursor": {
          "ref": "c9baf082-336a-4f8e-8e5e-cc8962ae1251",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "838d8b4a-dc6a-461b-ba47-8ed615ef17ed"
        },
        "item": {
          "id": "af3c768f-e1b7-4742-bf9e-c1ace11e9086",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a236028c-aff9-4995-9de9-a5ca705029ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36bf7141-1b6d-47fc-a838-a0b6ce7d3fc8",
        "cursor": {
          "ref": "e5e394e3-1261-4202-b541-bb5f2a10d25a",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "bb6f6875-6f94-48d2-8bee-77174b17ac52"
        },
        "item": {
          "id": "36bf7141-1b6d-47fc-a838-a0b6ce7d3fc8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b3ad7bbc-b331-4cea-b874-9da3ef6695ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf25a07-7c6e-4cbe-aec2-a0e24ad25ee8",
        "cursor": {
          "ref": "33c4a629-6abd-418a-8fdc-a3c8dffb7f80",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "673d7494-7761-417d-9208-5c0e9b47d46d"
        },
        "item": {
          "id": "bdf25a07-7c6e-4cbe-aec2-a0e24ad25ee8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "14187e64-71fb-4a12-82bf-a6f5bafcb990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1dc4b2f-d81d-4f4b-9f5a-5d1113bb53af",
        "cursor": {
          "ref": "ef9899a5-2b68-4b47-bcd1-23f9d84d3c98",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "cab15286-b673-43c0-b76e-68bc0f422a1d"
        },
        "item": {
          "id": "a1dc4b2f-d81d-4f4b-9f5a-5d1113bb53af",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "48394e9c-cf7c-4919-ae89-5961ad5f47b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f6c44a9-6f64-4795-95b1-92655b10b554",
        "cursor": {
          "ref": "e746c4fa-ccaf-44c8-9de3-c37d6b4b6469",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2e3b1ed8-a978-4c76-8681-5e06b91ba627"
        },
        "item": {
          "id": "2f6c44a9-6f64-4795-95b1-92655b10b554",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f10be5c5-89e4-4549-8bbd-e6958b644c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5094bc-21ae-4794-a8fd-98e9efd05f8d",
        "cursor": {
          "ref": "0dd387a9-90f4-46d9-a24e-e2e8ea9ee5c2",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b937c995-f893-4b1f-ae39-2411664a9f47"
        },
        "item": {
          "id": "5a5094bc-21ae-4794-a8fd-98e9efd05f8d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ed17fa91-915c-4d4e-aaa5-0180ab24a759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c64ca57-00fa-46cd-8e52-5d62d711329f",
        "cursor": {
          "ref": "407d4c0d-1eff-4f18-8a28-b195c32cad6b",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "36b61781-985d-4f2a-aceb-c8aa2cb3488a"
        },
        "item": {
          "id": "5c64ca57-00fa-46cd-8e52-5d62d711329f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "bdac430a-2f9e-4d32-adc0-e8495c383df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320381d5-3016-41ad-a5c0-7ecd0dbbd38f",
        "cursor": {
          "ref": "a95d0ca5-9d7a-4d8e-a5c3-04cb3339e9ab",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "19e787b2-4f63-4e94-8a76-8469fb5d0f04"
        },
        "item": {
          "id": "320381d5-3016-41ad-a5c0-7ecd0dbbd38f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "46e44c22-1832-4282-9a9f-3b3fb7f8d2e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713312a6-def8-490a-b030-d52ae2aee161",
        "cursor": {
          "ref": "2461e8e7-b303-449a-872d-2af19dcbcc43",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0f352493-85f9-4335-967a-a4410854833d"
        },
        "item": {
          "id": "713312a6-def8-490a-b030-d52ae2aee161",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "859d328f-94b9-46c3-a2d0-1b9ead3b381f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ebebda-214f-47ef-b796-60a599478c0a",
        "cursor": {
          "ref": "d8bb5c28-7ff4-4f64-8533-f307b41e0a51",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "9fb54fec-0115-4e9d-a313-b62b6d70d7b2"
        },
        "item": {
          "id": "f8ebebda-214f-47ef-b796-60a599478c0a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e2662ca7-2334-4f0e-98ee-b376975337ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f41da8c-41cc-4565-b851-c4af23099dee",
        "cursor": {
          "ref": "04327e89-bb47-4fc8-a857-82edb4e88ef0",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a16c757a-3f3e-4a8c-b575-37798b98d7d5"
        },
        "item": {
          "id": "2f41da8c-41cc-4565-b851-c4af23099dee",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "77e5139d-39ea-4e98-987d-af2321300b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b48afaa-53dc-4d40-9966-78be0719cf04",
        "cursor": {
          "ref": "e514a68e-16e7-4096-b8be-4f146eb2ac75",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "819282d6-60b5-48d7-a657-c96c39ac5f13"
        },
        "item": {
          "id": "2b48afaa-53dc-4d40-9966-78be0719cf04",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4b606709-824e-42ac-83fa-b705687c38ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bbd1c49-934b-482b-81df-fa40865e1438",
        "cursor": {
          "ref": "71b29d93-e188-40fb-9991-04805c073abf",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "cb1d8222-c590-43e6-8a37-00b35a84b07a"
        },
        "item": {
          "id": "9bbd1c49-934b-482b-81df-fa40865e1438",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7c13e60b-5e15-4f1e-b703-440c8f6bc497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a24ba9-8e1d-4ffd-80e3-c64d7de77e6c",
        "cursor": {
          "ref": "41bf2685-4423-4dd8-9957-a73d25ff8698",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "cb678e1b-ca59-4989-9bce-928819d2b2fe"
        },
        "item": {
          "id": "e7a24ba9-8e1d-4ffd-80e3-c64d7de77e6c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "640dcd5d-9369-43ab-9239-6a50ccabe69f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff9f86e-ea67-46b4-b4c8-0907a2f33fff",
        "cursor": {
          "ref": "1a23d881-c04f-4eea-b320-2f8e2a00a53b",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "604afe5c-4798-48a7-a672-9cbda5055225"
        },
        "item": {
          "id": "8ff9f86e-ea67-46b4-b4c8-0907a2f33fff",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4538e825-0623-4856-a0a1-bd42591d7df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e33f737-707a-48a8-8a03-19fc5fed0364",
        "cursor": {
          "ref": "9567cabf-1248-40cf-9228-1f9f60284db2",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5f7b038c-f004-43e4-8544-22edf3f200e6"
        },
        "item": {
          "id": "4e33f737-707a-48a8-8a03-19fc5fed0364",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4543c021-9027-4f8d-9080-8f4ed3580947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81733950-e713-46c0-a9dd-5ba6d53d9c53",
        "cursor": {
          "ref": "846d7345-abcc-4014-825c-124a2d94cd28",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "49beb236-d98f-429c-85fd-4175a858d267"
        },
        "item": {
          "id": "81733950-e713-46c0-a9dd-5ba6d53d9c53",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f9fb9b90-c9ea-4180-b58d-14af697d6f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a111f0f4-0e59-4ca6-ab05-180ae101010e",
        "cursor": {
          "ref": "0226f47a-bc28-4a15-b0d8-23cdd57fef7e",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1f7ccb3a-b94e-4724-b4f5-7101a9869ddd"
        },
        "item": {
          "id": "a111f0f4-0e59-4ca6-ab05-180ae101010e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b45e0876-b331-47c6-8990-67b019141dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9237e05e-e7a0-4d29-974a-93853965fc3e",
        "cursor": {
          "ref": "881e1fdd-3b70-436f-b99b-ed5ec5619ba4",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6471043f-9fba-4732-94fc-8cbfdf4a9478"
        },
        "item": {
          "id": "9237e05e-e7a0-4d29-974a-93853965fc3e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c0c87df6-0066-40bf-8c43-dfc31b6192aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1e32d3-98de-4385-b31b-1cce228c5626",
        "cursor": {
          "ref": "0889e0ff-0925-4d3d-9308-1e23159c6813",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "9848b197-5cc3-45ba-b66c-b9988be853a6"
        },
        "item": {
          "id": "3d1e32d3-98de-4385-b31b-1cce228c5626",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "5199677b-272a-4f47-9c54-91c4b428f4ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04df7663-8c2f-4d43-be6f-71d965fdd576",
        "cursor": {
          "ref": "365117f1-dcfc-4130-93aa-3cc57c65f15a",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a5aac5c3-b7f8-45b3-842d-6de889f0e7c1"
        },
        "item": {
          "id": "04df7663-8c2f-4d43-be6f-71d965fdd576",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3edae103-af22-41ca-b834-956e2cfc6692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ae0d87-fa73-4af0-a6dd-d5aa535e6318",
        "cursor": {
          "ref": "1b3ae0e1-c657-4cc2-be80-ac4091b3aa17",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5e8bb922-d860-4e28-ac87-d7114012ffa2"
        },
        "item": {
          "id": "46ae0d87-fa73-4af0-a6dd-d5aa535e6318",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b2cf1f20-d0e0-4e02-8933-6df5693e6ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff63c31-a80f-484a-a1a1-5c91bd2eacb6",
        "cursor": {
          "ref": "56850069-43d4-4792-af36-688a189af49f",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0a6e806f-0bd1-4604-b482-49dba5e48fd0"
        },
        "item": {
          "id": "cff63c31-a80f-484a-a1a1-5c91bd2eacb6",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a9d01071-6413-45d7-a82e-f83a2abf2ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5ea34a-02e8-43a3-85f3-d194e9ad3ece",
        "cursor": {
          "ref": "953ec2c0-d5e7-4700-aeae-627319670e53",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "67fc9afe-d481-4895-baa8-bfa4f5d2d461"
        },
        "item": {
          "id": "ae5ea34a-02e8-43a3-85f3-d194e9ad3ece",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "0e75ebc7-c16a-4790-9a88-5ef7ccc7f9e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c393af2b-5805-4d9e-af57-a5ccc355bd63",
        "cursor": {
          "ref": "3f317b56-3627-4c10-8608-f52d856212ef",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "fa795d83-5af8-46bd-a47c-597dedec247a"
        },
        "item": {
          "id": "c393af2b-5805-4d9e-af57-a5ccc355bd63",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "5a683f3e-a7de-4852-bde9-9d6d3fbbdd70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a25dbaae-a646-42db-9375-9086f4921c82",
        "cursor": {
          "ref": "72ca97fe-c61e-4a53-9750-17ebd5e32b9a",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "cf2c21eb-fd32-4912-a8bf-042e421f78ec"
        },
        "item": {
          "id": "a25dbaae-a646-42db-9375-9086f4921c82",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0db078aa-32cf-427e-84ce-e0d832ae8c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d6b09eb-8fdd-4d85-9a34-2f5c7babd7e7",
        "cursor": {
          "ref": "0eb0fde4-2b64-4752-8521-8f95636541ff",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e526d05d-41cc-43c0-be90-bc44daae7d75"
        },
        "item": {
          "id": "6d6b09eb-8fdd-4d85-9a34-2f5c7babd7e7",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "708957b3-eeea-4194-ae7b-dc909dcfabf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f0013c-8825-4f12-965d-0845ef1a8ad2",
        "cursor": {
          "ref": "3fff12d5-da3f-49ac-98e7-3b16365a9f29",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "88a3efd1-b312-4853-8d8b-14f6e4291344"
        },
        "item": {
          "id": "f1f0013c-8825-4f12-965d-0845ef1a8ad2",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1f495159-e7aa-4dd0-a2cf-4672eae9a4a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c8b110-18c7-4763-9950-80ae1b596b84",
        "cursor": {
          "ref": "1cc2e168-77bd-4b64-baaa-32fe4a90888b",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "00e63aa7-52a2-4dae-8025-a19065696b63"
        },
        "item": {
          "id": "72c8b110-18c7-4763-9950-80ae1b596b84",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c297c54a-2c36-498a-a2b1-6067c1438550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55d5a23-f7cd-44ca-9b0b-0a67cff538d7",
        "cursor": {
          "ref": "dfbff5bc-a183-4036-99f7-b3d82deedcfc",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f4608b57-2eb7-4852-b82a-461b9d96ed18"
        },
        "item": {
          "id": "d55d5a23-f7cd-44ca-9b0b-0a67cff538d7",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "16542339-d30e-46c9-bb3c-eb9cdd34e0f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b9f260-78cb-40bd-be34-b55ca72f01fd",
        "cursor": {
          "ref": "e6696f01-29b6-47d6-9200-32751e560cbd",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "61f32733-88c9-426a-bb3f-49241fca08c9"
        },
        "item": {
          "id": "93b9f260-78cb-40bd-be34-b55ca72f01fd",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "898a9c3a-5308-40ab-a292-982b6ec8fa87",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b913516-a57b-43cc-8196-5ff238603eb7",
        "cursor": {
          "ref": "439b15c3-6656-497f-98c2-7dcd3133050e",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "72390031-7f84-4ce6-bb92-cbed192591cb"
        },
        "item": {
          "id": "1b913516-a57b-43cc-8196-5ff238603eb7",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "101b60d4-7354-4e83-84ae-c4ce2e64b0cc",
          "status": "Created",
          "code": 201,
          "responseTime": 39,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a28b343-bd5e-4114-be1f-ad6ff25951a5",
        "cursor": {
          "ref": "f1f29f82-49e7-45dc-97d8-4c0bc8878ebe",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e578a1d8-733a-42ce-94b6-a0e79974fbc7"
        },
        "item": {
          "id": "4a28b343-bd5e-4114-be1f-ad6ff25951a5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "9a2e84e5-8f65-40c4-8de1-ccc81e9a200c",
          "status": "Created",
          "code": 201,
          "responseTime": 280,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d192fd1-0d8a-4cbf-8108-e074fb6b0510",
        "cursor": {
          "ref": "938f9c74-735d-435c-b9bb-1e8729fc4569",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "65672c1b-7f31-43f4-96b5-7bb1b17fded4"
        },
        "item": {
          "id": "4d192fd1-0d8a-4cbf-8108-e074fb6b0510",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "42b964a8-2fcf-4136-93b8-9d3779254455",
          "status": "Created",
          "code": 201,
          "responseTime": 40,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a503cd8c-c4bd-4fdc-97f7-1bc9730f808b",
        "cursor": {
          "ref": "a723e57d-572d-476a-97b7-95daec3d3e38",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "7348d48a-765b-4d45-8ebd-c66ad3d69abf"
        },
        "item": {
          "id": "a503cd8c-c4bd-4fdc-97f7-1bc9730f808b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a83efa8a-ac58-4c4b-a373-70dafe100a76",
          "status": "Created",
          "code": 201,
          "responseTime": 39,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc99038a-3fed-4fa2-a3ba-0a25e18cf28a",
        "cursor": {
          "ref": "5f89c3ea-cffa-435d-aac4-22f1c65f8db9",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "69c461d7-7d9f-4f27-ab9b-9401e82fcb75"
        },
        "item": {
          "id": "cc99038a-3fed-4fa2-a3ba-0a25e18cf28a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "727c7148-a8da-4415-8b36-426bf7d5c454",
          "status": "Created",
          "code": 201,
          "responseTime": 31,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b600e278-f1b6-4ff9-b0ac-13aff5abbca1",
        "cursor": {
          "ref": "8179b3d2-4511-4213-8650-493ff0b799bc",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "8eb40f9e-a934-4e2d-afae-3f1e5b3f93ea"
        },
        "item": {
          "id": "b600e278-f1b6-4ff9-b0ac-13aff5abbca1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "65864a87-4c01-41d5-81cb-2eb79305876a",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b42db21-bfd5-4c8c-a84c-18fdb9466b27",
        "cursor": {
          "ref": "6e2cbb24-a329-416a-a21c-5c50af2ed7d3",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "77156d33-7bff-4641-b48f-3f5657c44a19"
        },
        "item": {
          "id": "2b42db21-bfd5-4c8c-a84c-18fdb9466b27",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "013b67e2-90eb-4a5a-a32e-579a10848f09",
          "status": "Created",
          "code": 201,
          "responseTime": 40,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f1a34f-f048-41fa-bd10-e06785b1b21c",
        "cursor": {
          "ref": "3e27a298-bace-4f9a-afbd-a57666c4f841",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "249f60fa-e48e-4593-aef6-006c331ac955"
        },
        "item": {
          "id": "f8f1a34f-f048-41fa-bd10-e06785b1b21c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "905f7290-521b-462a-b321-f3aadb1532a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bfd6a40-a421-486b-886f-713c54d0e1b2",
        "cursor": {
          "ref": "361b6e6d-f246-4b2b-a7af-4826fc78903c",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "28941c9b-2f52-46a6-b95f-684c62a4901e"
        },
        "item": {
          "id": "6bfd6a40-a421-486b-886f-713c54d0e1b2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cb2f84f2-2838-44e1-9c5d-f3a168d86dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a122502f-08ef-4f5b-b12e-4fefbd30747a",
        "cursor": {
          "ref": "efa7a980-2f0e-4c46-8f3b-9742a0219ded",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1618bac7-ff37-4620-90aa-31ca3eab1666"
        },
        "item": {
          "id": "a122502f-08ef-4f5b-b12e-4fefbd30747a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "661c1b3a-0c73-4426-bbc2-9631404c311d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32acb89-8867-41a3-b15c-7bd8166f6e25",
        "cursor": {
          "ref": "4c1c8419-7613-4878-8ee9-0ec499a3e510",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9d029881-88d0-469c-82ad-c729e5104e97"
        },
        "item": {
          "id": "a32acb89-8867-41a3-b15c-7bd8166f6e25",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b489b992-5510-4ae4-bd48-0d3a67dd242f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ddecc5-569e-4ee6-bbb7-4f7b33c0a1e1",
        "cursor": {
          "ref": "6e1b1b6f-e99a-4488-baf6-0ab883f79ef8",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8abd9f4c-52b1-4347-b84e-9aeefc9e3f86"
        },
        "item": {
          "id": "24ddecc5-569e-4ee6-bbb7-4f7b33c0a1e1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3009e2e6-be9a-4ec4-b935-b14f6a32b21f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32447608-5220-4c46-ac5c-f2d7859e1d13",
        "cursor": {
          "ref": "a023afea-499f-4446-9322-c290cd580f48",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b6854c00-2243-41d6-ad46-628791533804"
        },
        "item": {
          "id": "32447608-5220-4c46-ac5c-f2d7859e1d13",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f1f1b0bd-5017-49f3-8137-4894a2cabb38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f10cb85a-5be7-4de4-8b61-7bf15b56353b",
        "cursor": {
          "ref": "3a3baca3-1019-47db-bd76-e3ec0bb95129",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5cdc518c-9c99-4e66-bf67-1ec4b8b21622"
        },
        "item": {
          "id": "f10cb85a-5be7-4de4-8b61-7bf15b56353b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "342fa080-7d80-4f26-88a2-d87e08656ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b051fbf-1c21-4846-ab6f-499f51560a6d",
        "cursor": {
          "ref": "26202281-0a2c-46fb-8cc5-ccbae50fb248",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "fbfdd91e-16fb-4e58-99d2-e53eec683e7c"
        },
        "item": {
          "id": "2b051fbf-1c21-4846-ab6f-499f51560a6d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "464fa83a-dcf2-4613-ad16-f9d5517bb589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df117734-f32a-48b8-947e-f168f8e3e626",
        "cursor": {
          "ref": "6804441c-f0fc-4eae-b9fb-af4a9f70cd2c",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1c9a6ba3-3172-4b37-b99c-2d5619a9bf70"
        },
        "item": {
          "id": "df117734-f32a-48b8-947e-f168f8e3e626",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1dfe6b31-14c6-4950-9da9-60586241e990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d62ad39-2832-4198-b889-27c1f20ac91c",
        "cursor": {
          "ref": "0a8cdb47-a64c-4141-9fb5-8efae41eebcc",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "82b88e68-9c13-4166-824e-17cd4d5b91ee"
        },
        "item": {
          "id": "2d62ad39-2832-4198-b889-27c1f20ac91c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c3ed1fdb-535f-4b14-bc4e-45b7d1f39751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30427fe-594c-482c-a3fa-4f737ea99e46",
        "cursor": {
          "ref": "761f5c63-44ec-4756-b6a7-c78ba00039e4",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2a92eb2f-bce8-446d-a7df-f7f068e4fc85"
        },
        "item": {
          "id": "a30427fe-594c-482c-a3fa-4f737ea99e46",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7b0cc874-2560-4a5e-9a89-02b5f9cbeb2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3660ee-cc59-48df-9438-a7827eddffee",
        "cursor": {
          "ref": "413d3cee-cd9d-4772-8336-df5ca0ce5fd2",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5641b327-c339-4e93-a05e-514a3baf747f"
        },
        "item": {
          "id": "bd3660ee-cc59-48df-9438-a7827eddffee",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "af0e85fd-5c6f-408f-ad6e-407b60bfd092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ffcf31-14ed-444c-84ce-b0bc1e761c08",
        "cursor": {
          "ref": "21cee632-f8d0-447a-800a-71fc7ded28e5",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "6fccc432-193d-4236-a545-0d232b43f0b1"
        },
        "item": {
          "id": "a2ffcf31-14ed-444c-84ce-b0bc1e761c08",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9cde32a9-5c12-4955-9c84-947d31a5aa33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139977e7-0410-4bb8-ad98-19959c7e666f",
        "cursor": {
          "ref": "39b1da1f-ff11-4d78-8617-3a7ffc35be7e",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "93559b00-e60a-4793-87a9-593fbf2322a7"
        },
        "item": {
          "id": "139977e7-0410-4bb8-ad98-19959c7e666f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cf0162b5-7e77-44ad-b3e7-258460288a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a49cb17f-1974-478e-aefe-5474e82bc4ab",
        "cursor": {
          "ref": "fa0b9e38-dbd0-49bb-9a4a-477d42372b24",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "dde6d0f9-f077-4749-87e1-c12df1db6201"
        },
        "item": {
          "id": "a49cb17f-1974-478e-aefe-5474e82bc4ab",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6a4acd7a-7875-4dc4-8f2a-71ecb2cf6985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5f8900-81ec-47ef-b7d0-06bbf49c2dca",
        "cursor": {
          "ref": "b1c5683d-35b5-4419-ab14-9bf9792a8e1a",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2a276fec-ac4b-4231-8f03-5ba6c3e3bc7d"
        },
        "item": {
          "id": "ec5f8900-81ec-47ef-b7d0-06bbf49c2dca",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ab7f244e-fc71-49e6-a569-76d4228b152e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dada8e9-653d-40d9-9cb0-3bbf8b01c10e",
        "cursor": {
          "ref": "7d164c7c-3007-4512-ae6e-39bb90dc2538",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "22549c7b-dad3-4301-b867-e9cf24e3da85"
        },
        "item": {
          "id": "3dada8e9-653d-40d9-9cb0-3bbf8b01c10e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1cb0db67-75a1-4a12-989c-620373d7fd15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648f5ec5-e793-46dc-8e73-369974fa3cd0",
        "cursor": {
          "ref": "077a7b40-4508-48ff-a3ea-0d44f7828f03",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ed72874a-f6bd-4137-a242-71f3b077a5d5"
        },
        "item": {
          "id": "648f5ec5-e793-46dc-8e73-369974fa3cd0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "23365e40-5d86-4498-a396-272dafff0d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35435028-249a-4337-b57b-dae1af4dd31b",
        "cursor": {
          "ref": "29c4c6c2-6038-404c-9897-4ffc616fd205",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "db775568-245d-4ed3-bbce-874fdc8d5951"
        },
        "item": {
          "id": "35435028-249a-4337-b57b-dae1af4dd31b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "98e8fb07-2bcd-4747-8299-91a5b4e0f90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e75edb79-cd49-4db5-8d08-475135beaf49",
        "cursor": {
          "ref": "e0d6bb2a-c1af-422b-bee1-8eb0bcd62a76",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "68253de9-f809-4486-8d8a-b98d66640859"
        },
        "item": {
          "id": "e75edb79-cd49-4db5-8d08-475135beaf49",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "12fd5cba-3114-4d5d-b834-20414f665bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfecf87b-da95-4b98-85cf-1d542db0ad5b",
        "cursor": {
          "ref": "04d00393-c344-4d70-a5e2-fcf107da8b6f",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2a9cfce1-17f5-4e42-a261-ef60b71289db"
        },
        "item": {
          "id": "cfecf87b-da95-4b98-85cf-1d542db0ad5b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "afde1561-c5d3-47f5-870d-a131fbce67a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b0e2e2-6cb6-4bfa-93f1-73c25e09f7c1",
        "cursor": {
          "ref": "2d4a6a4e-fa40-4246-a815-0f53c9c41a39",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "16c476aa-f3a3-4337-b27f-10a3923611bc"
        },
        "item": {
          "id": "a3b0e2e2-6cb6-4bfa-93f1-73c25e09f7c1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b3b04153-aea5-4e16-af6f-26134ecd6dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e37a8ad6-a62e-4e04-ab14-5e3abae073be",
        "cursor": {
          "ref": "b89d2ee2-49c6-4eb0-9fec-193d580e89c5",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2d4e5528-a0ef-4db8-b84e-b0be373ec13e"
        },
        "item": {
          "id": "e37a8ad6-a62e-4e04-ab14-5e3abae073be",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8e259c6d-ecb1-4073-88d4-894e4cd782e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8d58ec-9ead-42b6-a555-5d1743927fdf",
        "cursor": {
          "ref": "f0ae991a-b230-4ab0-971d-3a18e2dfd8a8",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "18d4cebb-49ca-4d88-8b52-cccba59ee771"
        },
        "item": {
          "id": "5e8d58ec-9ead-42b6-a555-5d1743927fdf",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ec31c2d3-d53d-4002-a3d3-2a5cbcf9532f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "686e5aec-88e2-40be-8e1f-643fcbf0ae8e",
        "cursor": {
          "ref": "5b37e54c-a14c-4f20-b415-20e4535253b6",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1c992844-f04a-447f-bb7a-0a04131bf40f"
        },
        "item": {
          "id": "686e5aec-88e2-40be-8e1f-643fcbf0ae8e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "111613ab-39c9-495f-8115-c66c73d23771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a06aa6-ebfc-4759-856e-af6a7fa79a41",
        "cursor": {
          "ref": "fb51649f-4e71-4506-ad98-aaddd9848a4a",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8a6ff242-3409-43f3-82e9-56485e94c086"
        },
        "item": {
          "id": "b8a06aa6-ebfc-4759-856e-af6a7fa79a41",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8ae536db-8f17-4163-9afb-2d1da0888d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deeb7a30-6a78-4c5c-bd4f-101ca40a285f",
        "cursor": {
          "ref": "2b0cd25e-1aa5-467e-8b7a-702b7f560395",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "76345aa5-9c44-43ee-a7e9-d36e4d5f6b2a"
        },
        "item": {
          "id": "deeb7a30-6a78-4c5c-bd4f-101ca40a285f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "dac0a28b-f15e-4682-b684-617c4fb8d5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9ab6fd-b7a1-4a73-9743-caf703ecc38e",
        "cursor": {
          "ref": "e6eb32bb-a6fe-49cd-bd7a-7efaf1523735",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0f7db22c-7de7-4f75-adcb-9288d588ed31"
        },
        "item": {
          "id": "fc9ab6fd-b7a1-4a73-9743-caf703ecc38e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3293e366-1768-45b0-aba9-e3c4529c78d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11dc135d-259c-4ae5-9236-66e4bd457070",
        "cursor": {
          "ref": "f5decb80-590b-443a-8a17-18c2847146e3",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "660c8491-b14f-46c9-ba84-3309b5c5edd9"
        },
        "item": {
          "id": "11dc135d-259c-4ae5-9236-66e4bd457070",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "73f6d158-2b3a-492c-b203-713c96d4b4a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47815e0f-95e6-4b6c-b305-1977a76fb9e1",
        "cursor": {
          "ref": "8174677a-9487-4921-afe0-822173136525",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "422a0825-ae44-4ba5-94a9-900911e5a289"
        },
        "item": {
          "id": "47815e0f-95e6-4b6c-b305-1977a76fb9e1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d408250f-bc95-4e02-8215-147a121292cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c468cc6-b90d-4850-a0e9-78180ba678d5",
        "cursor": {
          "ref": "07ca3ba2-1143-4373-ba30-b1c082d20bbd",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ec716ad5-b3a6-4b15-b10a-4f6f92a473ea"
        },
        "item": {
          "id": "7c468cc6-b90d-4850-a0e9-78180ba678d5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5d1e151a-8ce6-491c-bc70-dbb0103e6014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc935e22-5ebb-4a5c-9d7c-aa6e27bb422f",
        "cursor": {
          "ref": "49c109e2-c08c-4f60-9ee7-af0b9ca2424c",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "df48831a-e119-427f-a93f-e81ae4f90d9e"
        },
        "item": {
          "id": "bc935e22-5ebb-4a5c-9d7c-aa6e27bb422f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "b2160f5b-eb86-4741-a1ba-16219fa3938e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27286337-6215-483a-9c73-f318a9cd7782",
        "cursor": {
          "ref": "523286c5-c093-446e-b134-17ce0611f56d",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "16904ac1-2f4a-4a66-a0c5-f644b6909b21"
        },
        "item": {
          "id": "27286337-6215-483a-9c73-f318a9cd7782",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "488c55d0-3c55-456c-9b52-9d613e366810",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb132f2-a5d1-456f-81dc-8a43020e99ac",
        "cursor": {
          "ref": "c56f8ed6-b434-4c5b-9d8e-2da26e99b206",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "63a672be-3ea0-49a7-aca6-36fd5568d3e2"
        },
        "item": {
          "id": "dfb132f2-a5d1-456f-81dc-8a43020e99ac",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bd91358d-8e20-4ca4-9f9a-6d7764edc389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c7c926-068d-4428-a027-fc127f3cbd7f",
        "cursor": {
          "ref": "bede578f-e339-4853-a276-a282b6f9e622",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "effdea27-1212-4652-a396-8b340e30a078"
        },
        "item": {
          "id": "71c7c926-068d-4428-a027-fc127f3cbd7f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3cc22c59-88a7-4e06-a378-a1b09428dbf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89ec719-668f-4d51-a3a0-a9efcca1a1a7",
        "cursor": {
          "ref": "48b98620-c574-49a0-9a9a-d1012a1f8d57",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e60a63a4-9a7e-4289-82b0-793c5344bb26"
        },
        "item": {
          "id": "a89ec719-668f-4d51-a3a0-a9efcca1a1a7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "fe280a14-4a7f-4b0f-a042-3b30f0042d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b0189eb-407a-4740-aa76-64fb85ecaee1",
        "cursor": {
          "ref": "f53d8825-521e-4d62-902a-409a36f8007f",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "07e664cb-10b3-47f0-b3cd-677bf10da35f"
        },
        "item": {
          "id": "7b0189eb-407a-4740-aa76-64fb85ecaee1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b080a761-167f-4d3a-9427-9a515f094363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f1810f-2eca-444c-bceb-7c9542d68455",
        "cursor": {
          "ref": "36c73aea-95c8-4084-954e-bc1cc5d23ae9",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "8c37442d-f42d-4b6c-94b2-782f7aa13cbc"
        },
        "item": {
          "id": "d7f1810f-2eca-444c-bceb-7c9542d68455",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e52264b7-db0d-4aeb-b676-3caa1004dba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78eafbc2-ecaf-443d-a8f9-0390e1aed9d5",
        "cursor": {
          "ref": "0e25bedc-bf74-4e5b-ade0-808f1026d56f",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ef452a0d-9926-4483-a789-36f9376065ea"
        },
        "item": {
          "id": "78eafbc2-ecaf-443d-a8f9-0390e1aed9d5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "02afdca7-a4d6-4df4-b269-0a4fe5d79217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113321ee-7e7b-45bc-adce-87cb0ba97ec4",
        "cursor": {
          "ref": "ac9c85d5-6d44-4dde-b5a7-3ad3f6e2c9f1",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ba9032e1-db15-47dd-b3d1-90300ada578a"
        },
        "item": {
          "id": "113321ee-7e7b-45bc-adce-87cb0ba97ec4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5075d4f3-192e-47a5-947b-7bffb2728489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f71224e-a343-4f75-a1ea-bb78f9a9a4a6",
        "cursor": {
          "ref": "6714b33f-d477-4189-aea3-5fc68a6536fe",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "852d0c43-6745-477b-90e3-646041ed4637"
        },
        "item": {
          "id": "2f71224e-a343-4f75-a1ea-bb78f9a9a4a6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "10540553-85e2-45a0-b60f-6d4264a3d3ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b27c334-7842-44ac-ab17-fb5bad92d0b6",
        "cursor": {
          "ref": "02d8f299-abe3-4942-ac6b-89f2d0e43fbb",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ea0eb68f-23d1-4ddd-8888-b54cee3d6a04"
        },
        "item": {
          "id": "5b27c334-7842-44ac-ab17-fb5bad92d0b6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b5f756fe-ff68-476d-820c-5228661b38c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "679870bc-e130-4e3b-8b3e-ed01628020fd",
        "cursor": {
          "ref": "ca6d501f-a811-4717-b312-e478c526f737",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1fb2f3dd-5a34-489a-8318-9ee2f454dd9b"
        },
        "item": {
          "id": "679870bc-e130-4e3b-8b3e-ed01628020fd",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ef32ab9c-9de8-446a-bd61-1f961d4ea944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1090b056-1f8a-49d2-9440-ab5bd2955585",
        "cursor": {
          "ref": "86802134-f84b-4578-8bc1-80c824e98a78",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e2765fa2-1074-4e62-ac3e-c5e4fb0f459f"
        },
        "item": {
          "id": "1090b056-1f8a-49d2-9440-ab5bd2955585",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9aa9d831-5afb-41ac-9126-0ed2871b3e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b7f342-e1ff-43d7-8cb1-d448e7cf582a",
        "cursor": {
          "ref": "98893eb5-c636-4756-b456-f9c8b02b07c3",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "479f2662-9983-4c54-b064-3382a46ea59f"
        },
        "item": {
          "id": "92b7f342-e1ff-43d7-8cb1-d448e7cf582a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d42f399f-c5df-46b0-9d80-21390e415c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2698e38-7574-4082-9988-96dd52a0fa9e",
        "cursor": {
          "ref": "a7c1dfa8-9b38-40e5-9bec-369158986ac9",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a39fb711-4c21-4657-a5e1-fd2b4697d290"
        },
        "item": {
          "id": "d2698e38-7574-4082-9988-96dd52a0fa9e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "412433e7-98ef-432f-87dc-9c0ce63e0284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a43d284-dc22-4352-b6a5-b635280f51ea",
        "cursor": {
          "ref": "09902144-8f8f-4744-9340-8f2148272b60",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "31e80b88-a3ff-4c82-8bb3-5ea1382edae0"
        },
        "item": {
          "id": "1a43d284-dc22-4352-b6a5-b635280f51ea",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b4b343d1-c745-4de2-8348-0fc374e88a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28749320-e8da-444c-966a-3826cdfad9e3",
        "cursor": {
          "ref": "2a6c5938-3bd9-4dbd-bf50-f2602df96bba",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6193b169-cf6b-4306-b030-ddeb9c36a852"
        },
        "item": {
          "id": "28749320-e8da-444c-966a-3826cdfad9e3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "310de395-47c4-4039-bef2-d687dfa7e9c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38ff7c9-b28f-40b8-9638-19e4a983b11f",
        "cursor": {
          "ref": "142f9e1b-62f3-4db6-aee0-acd571c14adf",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "0b7c381d-7b35-442e-b0b1-b2a56644b69c"
        },
        "item": {
          "id": "b38ff7c9-b28f-40b8-9638-19e4a983b11f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "babd8f5c-f551-40f2-aeeb-5b3c162c264a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cecfce52-1239-435e-9262-c98871f882ea",
        "cursor": {
          "ref": "4fa49259-7448-445d-a2d7-4cb0e89b161f",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "4d9b5f23-1a62-4476-b6a1-28c179518662"
        },
        "item": {
          "id": "cecfce52-1239-435e-9262-c98871f882ea",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "085d5255-5262-4cba-94e3-729c80cef709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60ee90f-2d30-4c65-bd1a-4e58162a09a4",
        "cursor": {
          "ref": "921811dc-10fd-41ef-84d0-b027c2a66fbf",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2f676fac-7e48-4332-95ba-9de55a07a046"
        },
        "item": {
          "id": "e60ee90f-2d30-4c65-bd1a-4e58162a09a4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "79a80fd2-66fd-4880-b105-525ff4d92fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30633464-a34e-4e1d-b769-366c87aa1714",
        "cursor": {
          "ref": "05d2a81e-18a5-4adf-8ed5-192b8b10f132",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "25e0b39f-6406-4d4d-af66-e19fa088183f"
        },
        "item": {
          "id": "30633464-a34e-4e1d-b769-366c87aa1714",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "40b888d9-ce0a-45d6-a738-21d6cc300323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc8478b-a477-485f-907d-2024980232c9",
        "cursor": {
          "ref": "1da690a3-0f54-413f-96bb-5bf2048fb0f2",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "411ed1eb-3140-4a1a-8d8d-e5e250424774"
        },
        "item": {
          "id": "8fc8478b-a477-485f-907d-2024980232c9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6823810b-084d-42e2-9ab7-43dcb52054c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a497b4-62a7-4176-8129-ffe144f33fbf",
        "cursor": {
          "ref": "f8397d85-855f-47dd-bade-3f34f4678861",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "feb83338-14e9-4997-9a61-939f4368c1be"
        },
        "item": {
          "id": "91a497b4-62a7-4176-8129-ffe144f33fbf",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "57af950f-2dff-44bc-8923-f1b3b8657083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c09f37e1-4c63-493a-a1b9-7ae2d59dc1bb",
        "cursor": {
          "ref": "6499ed0b-3dfe-4746-b935-40789a54fea5",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d0e1c0d5-0879-4631-a4f1-9e304fb0c438"
        },
        "item": {
          "id": "c09f37e1-4c63-493a-a1b9-7ae2d59dc1bb",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8578bcd2-1bab-4b9b-9ce7-2a5c79162961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020b4083-634f-4418-bc26-956c434e89c0",
        "cursor": {
          "ref": "ab9da977-e096-4acb-ad57-ebb819885cde",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "27b3ae4d-7c6f-48bd-a615-e9195d6a9a7a"
        },
        "item": {
          "id": "020b4083-634f-4418-bc26-956c434e89c0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "367fc7b4-a4c1-4a39-8e5a-d604240e9d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2cb667c-eec8-42b8-9c5d-07e53926149e",
        "cursor": {
          "ref": "a9725939-71ef-4311-840e-3fe4a11c171f",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "89551b91-809c-4e48-9393-bf879ebb2fbf"
        },
        "item": {
          "id": "f2cb667c-eec8-42b8-9c5d-07e53926149e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1ca66724-4074-460b-b8ff-9e276724a90f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ba6c97-da12-4162-9358-eb0fa7c56e10",
        "cursor": {
          "ref": "20c59fed-9bd6-48b6-beaa-9fa125b75d3f",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "651834ad-1ed0-4b81-863a-6d26178c2203"
        },
        "item": {
          "id": "87ba6c97-da12-4162-9358-eb0fa7c56e10",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c2c7d193-651d-407c-a021-4c40a7f22ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c3e945-137f-4f22-9703-8dfe2639bc19",
        "cursor": {
          "ref": "7695c37b-2330-4839-8e78-2d350cfb34ae",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "58ba5d61-58d1-4716-bfa0-c24733861568"
        },
        "item": {
          "id": "60c3e945-137f-4f22-9703-8dfe2639bc19",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "59af99a9-d2ee-420e-8c78-18149785f27c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ff6311-eb4b-4a52-840a-4d9bec549f49",
        "cursor": {
          "ref": "425edf52-7ecf-4ba0-8b97-3110eb2d4e93",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "28b4a17f-a773-4ff4-8a85-a7ffe15144c2"
        },
        "item": {
          "id": "a3ff6311-eb4b-4a52-840a-4d9bec549f49",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c37e169e-865e-418e-a3b3-354a1e284d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0888cedf-5454-4b17-88d6-a9a9dac95784",
        "cursor": {
          "ref": "9af86fc8-dc24-4c6c-a209-f8bcca1c3b33",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a0871c7c-e8ef-4cd2-ad41-a4143b80ab4a"
        },
        "item": {
          "id": "0888cedf-5454-4b17-88d6-a9a9dac95784",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ee0f3dee-c12c-46e8-8c3e-4c3e77894103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240d4327-1856-4a1c-8203-92057996f60e",
        "cursor": {
          "ref": "2d4f7eeb-080a-4904-8043-244ad746346e",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d88752f0-154e-49d9-a4ac-82ddc3c32200"
        },
        "item": {
          "id": "240d4327-1856-4a1c-8203-92057996f60e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8a838c60-9714-4315-8853-f020f143f76d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f435d87-bdb1-4fbe-9be0-1640bcff3e13",
        "cursor": {
          "ref": "d9ea2362-1a2e-4b25-a16d-c4a6045bf825",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d3ae580e-8d1f-4e92-9861-ae6b461c9bb7"
        },
        "item": {
          "id": "2f435d87-bdb1-4fbe-9be0-1640bcff3e13",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "776fd5a9-8a70-41b2-9355-42ba91426c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2dc28a9-c743-476e-af75-ce4db850e5b8",
        "cursor": {
          "ref": "42af5bd2-4452-489d-bd96-23999cd6a0a0",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ed9f7156-927b-4427-bc55-3e3d5011e4c7"
        },
        "item": {
          "id": "e2dc28a9-c743-476e-af75-ce4db850e5b8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1461473f-4e1e-40dd-9806-cd8faf7c0654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd5a5d3-f3ca-4f0e-84eb-9bc4b52aaba3",
        "cursor": {
          "ref": "6e1a967f-82f4-479b-a29c-3d6e9e8a84f1",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "844bf61d-161f-4d88-9715-09faa5e18dfd"
        },
        "item": {
          "id": "1bd5a5d3-f3ca-4f0e-84eb-9bc4b52aaba3",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "3f038afc-d710-487a-9787-2df6a904d9c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d398ea1-62f2-45cd-87aa-9790f22d2fb9",
        "cursor": {
          "ref": "4681ddb2-e2cb-469f-b59f-0a1de586e925",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4ac589e4-416e-47e3-8e4f-29ec4203c563"
        },
        "item": {
          "id": "4d398ea1-62f2-45cd-87aa-9790f22d2fb9",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "83509cd6-ccdb-4c3c-8386-44b217b02304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5292c6be-b979-49b7-9271-4379f258debd",
        "cursor": {
          "ref": "1ee2a343-426e-41c6-88d1-7f456d276412",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "cee07674-e892-4ac0-b66a-ebfb9bff7f10"
        },
        "item": {
          "id": "5292c6be-b979-49b7-9271-4379f258debd",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c658acce-fd22-4f0e-81a0-d79b66c9ce37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a9469a6-afc3-4cc4-b7a9-5f24163a1607",
        "cursor": {
          "ref": "417cb726-df63-45da-b423-b957c48aec12",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b4dc1d9c-0787-4335-9314-3db742cad2c3"
        },
        "item": {
          "id": "9a9469a6-afc3-4cc4-b7a9-5f24163a1607",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "97c384f6-0281-4ddf-8993-41f6c9ea400c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ced96b-2ef6-4eab-9ade-59655d627097",
        "cursor": {
          "ref": "f885e18e-7371-473f-9c4a-127a68508a36",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9420b98b-fc82-4c45-acce-456dcf5f5e41"
        },
        "item": {
          "id": "93ced96b-2ef6-4eab-9ade-59655d627097",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e7d906e0-22a5-4883-bc0f-2b40e1b8957e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609fd1d0-979d-401d-b874-ca3eb1a4b0d2",
        "cursor": {
          "ref": "bbafaadc-86ca-4317-bda1-6188ee9a3ce9",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c6af2ae0-13dc-408f-9d05-d4685fc940fe"
        },
        "item": {
          "id": "609fd1d0-979d-401d-b874-ca3eb1a4b0d2",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8c183d2b-7026-4c9c-bfd1-260c2d065ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1c298a-c836-4606-a406-3a658d438626",
        "cursor": {
          "ref": "ca5c0f77-7510-49c1-980d-80f71ca87854",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "bfc07e3b-5b90-4a74-b9f1-43ad70bf7e61"
        },
        "item": {
          "id": "8a1c298a-c836-4606-a406-3a658d438626",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "333bcba9-3cd8-4de6-9819-c12b7ee40bbb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f0a90e5-c3ce-43c4-9bc8-91f06e4a30fd",
        "cursor": {
          "ref": "76881ffb-f13e-4ba5-8d25-904a4f620e4d",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "bbcc0863-fdf1-430f-9f67-7c7ff985ae30"
        },
        "item": {
          "id": "2f0a90e5-c3ce-43c4-9bc8-91f06e4a30fd",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "03cfd426-a043-457c-9a66-18b6b7753293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10fb4fe4-6ef3-4aa2-aaa5-af64bba328cb",
        "cursor": {
          "ref": "501634f1-7f8f-4a6c-b532-f722a3f5fe83",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d7670b49-b254-4afa-b6b5-2c86a8df3ccb"
        },
        "item": {
          "id": "10fb4fe4-6ef3-4aa2-aaa5-af64bba328cb",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "7b0f8963-978d-42e3-8c42-4381eb2265f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5c4d4c-ac48-4ae3-9fda-dbb5d55046c2",
        "cursor": {
          "ref": "db78a654-f111-47e6-a824-bb3820e37fc3",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "bb7b113a-800b-4a4e-984b-71c0ef368e12"
        },
        "item": {
          "id": "bc5c4d4c-ac48-4ae3-9fda-dbb5d55046c2",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "cca8cdd2-3904-4a91-b04b-f77f5129613f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7c72bb-5e4f-444e-a7c9-51605cc097f7",
        "cursor": {
          "ref": "b82e6dbb-385f-49ef-98ac-eb07f143afc5",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "49290305-56a4-4040-96f9-6bf013e16184"
        },
        "item": {
          "id": "6d7c72bb-5e4f-444e-a7c9-51605cc097f7",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "791c50f0-46cc-44c5-a8e1-50d933e3a696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3ba324-6bf1-4796-8628-ce7000814ea4",
        "cursor": {
          "ref": "ce97bde2-93fe-46b5-97ed-df9745afcb15",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "70d15c64-e53b-4837-b291-435192019d2f"
        },
        "item": {
          "id": "0a3ba324-6bf1-4796-8628-ce7000814ea4",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3b0faac3-f726-4b23-9ad8-477194e3adcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9bd7f60-417c-4365-bba7-9b6bf4576eda",
        "cursor": {
          "ref": "fd4d317a-82f5-4485-8772-8054f2d9b6c0",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "db4ecb57-3ac7-4c4f-839d-efe84152b9a5"
        },
        "item": {
          "id": "c9bd7f60-417c-4365-bba7-9b6bf4576eda",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8d90bf72-343a-4071-8742-6c3db8a17ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df001fa2-b53d-44cf-ba58-d5304cef7ce8",
        "cursor": {
          "ref": "bf029d5c-7be4-4097-a1c9-38e91801fb99",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9451c863-0248-4ecb-991e-11b3c774c04a"
        },
        "item": {
          "id": "df001fa2-b53d-44cf-ba58-d5304cef7ce8",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8a0f63fd-f297-432c-bf4c-0b0e5f03d2cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcbe5781-c4e7-4540-a9c8-3462528bcaab",
        "cursor": {
          "ref": "d323ec03-0c1c-4bd9-90a1-8e20699e8cc5",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b109dd17-4f0d-4b91-8a93-6bddcaa936e4"
        },
        "item": {
          "id": "fcbe5781-c4e7-4540-a9c8-3462528bcaab",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d0baae3d-3edc-4202-b1d8-bc574dd854a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0fb4feb-6d9f-43fa-afb6-3a6a6c2bc106",
        "cursor": {
          "ref": "0ea04bf3-67ae-4c80-9e74-d34e713b155f",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6c158eae-5849-4d6c-b2fb-72e7cea615e8"
        },
        "item": {
          "id": "a0fb4feb-6d9f-43fa-afb6-3a6a6c2bc106",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d77d5dd4-e458-436e-9c5b-ec848d4ef4d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f920a72-7adf-44c8-9f53-ba7d06b44301",
        "cursor": {
          "ref": "03cb5f99-c9ca-46b5-8872-3ac52ac5bf20",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "92fce9eb-1ce8-4617-bc86-3b66f74bcfc3"
        },
        "item": {
          "id": "9f920a72-7adf-44c8-9f53-ba7d06b44301",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "2dc2bc9d-d348-4e42-a461-5f7d587e73e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "746d7dba-adcd-470e-ba09-c020bc2e7760",
        "cursor": {
          "ref": "2075bdf5-9f34-4c71-b798-4a32d71ac9c6",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ed4ca18b-95df-45e9-a615-7bcc318a3dbf"
        },
        "item": {
          "id": "746d7dba-adcd-470e-ba09-c020bc2e7760",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "40a13645-b271-4e6c-91fb-9ed220023848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88c2c3c-cb00-4763-9d63-4f7f94580ee2",
        "cursor": {
          "ref": "48630d32-f228-494b-9c6a-c43be1ddedb8",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "5b5449c5-3592-4b13-8d60-90445ba61ec4"
        },
        "item": {
          "id": "d88c2c3c-cb00-4763-9d63-4f7f94580ee2",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "41249d36-1d88-4314-9ce7-1e0454e25f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce3dec5-9bcd-46e5-98de-d3ca92e13e38",
        "cursor": {
          "ref": "82d8468b-b2a9-442c-a2a9-06c07a02d42f",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "82dd69f8-8c56-4ff4-ae4c-946cb1db3678"
        },
        "item": {
          "id": "9ce3dec5-9bcd-46e5-98de-d3ca92e13e38",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1904e89b-55a8-4ccf-a2b8-3ccfe9ff27e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1973ee29-772f-4f39-9e85-f5685dd310d2",
        "cursor": {
          "ref": "ce9030b9-d882-44b1-aea4-145a9dd4ce20",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b2ae61e4-cc7a-438d-96b4-afbda4daa3ab"
        },
        "item": {
          "id": "1973ee29-772f-4f39-9e85-f5685dd310d2",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "79769533-f929-4ddc-a91b-655007cd3f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff384d0-958c-4a98-a51b-e59f43df4537",
        "cursor": {
          "ref": "a8d0dad8-fd6f-479c-a6c4-47a64d5e0c62",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ec52e396-27a9-488d-8da7-834514532f0f"
        },
        "item": {
          "id": "9ff384d0-958c-4a98-a51b-e59f43df4537",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "eeea3cba-ea94-4870-9392-49ae52c5d66d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787294a6-81e6-4836-86da-167eeaccaec6",
        "cursor": {
          "ref": "87f4f5f4-a78a-43b0-a60a-9f313814f3b1",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a9ffc720-b1fd-4e29-91a0-4f05ca0fe02e"
        },
        "item": {
          "id": "787294a6-81e6-4836-86da-167eeaccaec6",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b6f12faa-a15b-426e-bae1-d7032493c14a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89fbf25-a0ee-4b53-b5f0-a9e76355d29b",
        "cursor": {
          "ref": "09c159de-3454-480c-9d83-0948587eb522",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "535114dc-99f2-486b-8a0a-310b70a63c1d"
        },
        "item": {
          "id": "c89fbf25-a0ee-4b53-b5f0-a9e76355d29b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2a3d8ee7-9b49-4660-97e2-f3ca290dc09d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787592d1-e562-45e4-b762-4d90e30de403",
        "cursor": {
          "ref": "fbefe24d-cc05-473f-8270-bd1abd289796",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0b97d68a-b9cc-4017-abfa-096f1be4798a"
        },
        "item": {
          "id": "787592d1-e562-45e4-b762-4d90e30de403",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "87c28765-d7c9-475e-8f17-5cbc5b02dd4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ebb1f1-8435-486d-a02b-5ec3ad123b9a",
        "cursor": {
          "ref": "93cfa212-14f7-4697-ac0b-c492b1d93b79",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0765c2a6-c558-490f-833c-14eadbef9a12"
        },
        "item": {
          "id": "53ebb1f1-8435-486d-a02b-5ec3ad123b9a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "51c18f5a-17e6-469b-8ad8-6b8c26596c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960e6282-ef56-494a-85c7-7ca3e4b3fee5",
        "cursor": {
          "ref": "304fb980-82bf-49c6-9f18-ea1790b91e96",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "65e82e6f-94e9-447e-a207-fc0779fe7796"
        },
        "item": {
          "id": "960e6282-ef56-494a-85c7-7ca3e4b3fee5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "eabcaeb1-d3ef-43a3-9655-bcee087e3c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d97b38-e8dd-460a-b8fd-8dc69c73f758",
        "cursor": {
          "ref": "61bddef7-dcd5-4a0e-af42-9d4db4e8645f",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c0f07521-50e2-4890-94db-d00ddc3e5df2"
        },
        "item": {
          "id": "79d97b38-e8dd-460a-b8fd-8dc69c73f758",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a13cd5ce-87a6-45c4-8f29-cbd6e13befc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33fa6250-ad22-4637-bc43-172209aaeba0",
        "cursor": {
          "ref": "889839b9-f9fb-4b7c-8d43-d21f83234b2a",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "31952a18-51af-4200-8d9f-9cc031d1f0d3"
        },
        "item": {
          "id": "33fa6250-ad22-4637-bc43-172209aaeba0",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d1d0b46e-a3c9-4234-97bb-2e6720393ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c855dc8-2542-4b4b-aa57-589dbf5aaa7c",
        "cursor": {
          "ref": "30dbeebd-2de0-4765-909e-ebc54e40165e",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6c18e327-f643-4dbc-95e6-5551cfde226c"
        },
        "item": {
          "id": "1c855dc8-2542-4b4b-aa57-589dbf5aaa7c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ace378b9-c384-4f0f-a878-86e8d8b176c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4ac7e9-5263-4109-8afc-937b495796d4",
        "cursor": {
          "ref": "1b2dfd45-759f-47cb-ac02-dcb1c48bdc3f",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a62cc290-b981-49a9-b0a4-344e8f08c8fe"
        },
        "item": {
          "id": "8f4ac7e9-5263-4109-8afc-937b495796d4",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "462b910b-963b-49e0-9b0c-3f8b72b5cf6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd52d051-e0ba-4e14-97ef-f10afa9a525c",
        "cursor": {
          "ref": "b541c388-95c9-4e8c-8986-1e9f07bcf27e",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a3ab637e-7b90-4d95-b12c-e76444d5236e"
        },
        "item": {
          "id": "cd52d051-e0ba-4e14-97ef-f10afa9a525c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "98ea3f74-731f-4364-9cd9-2e6bd0491fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4bfc60-433d-4394-8f28-c2dd329c67a5",
        "cursor": {
          "ref": "48baf76b-c64c-4387-88e5-2d659dd1e64f",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "bcfd4aa2-fa1f-4574-9e38-14709078ab4b"
        },
        "item": {
          "id": "8e4bfc60-433d-4394-8f28-c2dd329c67a5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "12fd95c9-a584-4118-96e3-6a2b3af4e675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd567894-588f-44bc-9bae-2f48514cae38",
        "cursor": {
          "ref": "f0a392de-6d82-4e45-8e1a-96b80f5c10f7",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e835023a-8bc3-4738-a502-3b23bbe6de15"
        },
        "item": {
          "id": "dd567894-588f-44bc-9bae-2f48514cae38",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "50262184-a7ac-4f25-a232-b454b2523815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae72494b-b422-4ea9-bba1-bce4f4ac9672",
        "cursor": {
          "ref": "af816ffe-cd3a-4be2-bf62-0412d1f49f72",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "026d0a57-1b3d-4ca3-a7bc-23623e7a448f"
        },
        "item": {
          "id": "ae72494b-b422-4ea9-bba1-bce4f4ac9672",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a3c7e2b6-ff60-472e-9024-eef441181dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f946cd7-6db1-4250-bfb5-25c66e195561",
        "cursor": {
          "ref": "82353db6-26ec-49fc-b4cc-37235f0ce647",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d65e296f-a7e1-4ad0-8a28-aca90a84a8b0"
        },
        "item": {
          "id": "5f946cd7-6db1-4250-bfb5-25c66e195561",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "674d4594-dc3f-45ae-b6f5-949aca468a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91f89fa-c87a-48b0-9eb7-be72b70f0a5b",
        "cursor": {
          "ref": "5518ed08-7564-4c74-aeb9-fda4eed1bb51",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "473cdcaf-f33a-4427-ae02-e7046f4027ec"
        },
        "item": {
          "id": "a91f89fa-c87a-48b0-9eb7-be72b70f0a5b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9e88a3f0-3e41-464b-8bed-034cbff556e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd8b07f-b5d8-476f-81b3-00762a904bed",
        "cursor": {
          "ref": "f093436f-3fcb-455b-b4d4-8dec4fe7483c",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "567029de-4dbe-497b-8d66-35b4822e5a47"
        },
        "item": {
          "id": "1dd8b07f-b5d8-476f-81b3-00762a904bed",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "036db2c6-1cbc-45cb-8be2-eb70c86eddcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59e4d56-3e99-409c-a375-8be89ea4ae33",
        "cursor": {
          "ref": "db6403d3-f6d4-47e0-9015-3e4f5f8ffe2d",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1793d53d-ac8b-4af5-8511-bcda658977fc"
        },
        "item": {
          "id": "e59e4d56-3e99-409c-a375-8be89ea4ae33",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0642f221-4e63-424c-aab5-2023c2e6e8d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b18c03b-a3b5-4dc4-9428-860966967d6c",
        "cursor": {
          "ref": "fd39258d-73ff-4a3c-a624-dce2b004fe75",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d427b418-a725-41f9-99b2-44d5c00ca9ab"
        },
        "item": {
          "id": "3b18c03b-a3b5-4dc4-9428-860966967d6c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0fc91f13-6660-43b2-ae1e-7b4486ddae89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d27204a-2fc1-438e-8c6d-61b2a56db30c",
        "cursor": {
          "ref": "59fc39bc-0318-4372-8353-54fb20ea68b0",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a4cc69eb-6065-407b-a0bb-d2e0ddd2ad62"
        },
        "item": {
          "id": "0d27204a-2fc1-438e-8c6d-61b2a56db30c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "49547072-3b14-4a1d-a27c-02005693efa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c53c34-1590-4d99-a85a-3cce64b8283d",
        "cursor": {
          "ref": "392ecd53-0125-461d-84ce-de51e3d5cfff",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b78293ff-188f-46ab-82b5-63a6ce9bdb58"
        },
        "item": {
          "id": "b2c53c34-1590-4d99-a85a-3cce64b8283d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3d7ccaf7-525c-4b80-b36e-96d0f7e1c776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc40b6cb-aa24-49d2-bbb7-7a83e0a6d44b",
        "cursor": {
          "ref": "36892cfc-9591-45aa-a199-997ec2878b01",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "7ea8e918-5f3d-4fa5-84cb-00a1a8530ac3"
        },
        "item": {
          "id": "bc40b6cb-aa24-49d2-bbb7-7a83e0a6d44b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "af8ccc99-7bf7-4c9c-a51d-6b12c2d53ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7e105b-c9f3-4bbd-9f16-c6958a82a4a4",
        "cursor": {
          "ref": "2a21b427-87ab-4949-beac-92b58791dd9f",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5d3c018b-bc9f-4406-8243-358c29569796"
        },
        "item": {
          "id": "0f7e105b-c9f3-4bbd-9f16-c6958a82a4a4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "bccd67ac-afaa-4019-8b6a-e46b1838250e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562c114b-7a2c-484a-8522-a614aa808b72",
        "cursor": {
          "ref": "1bf07207-7063-429f-88c8-3f4002aedf91",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e530a553-9781-4855-a15f-dd702853adfa"
        },
        "item": {
          "id": "562c114b-7a2c-484a-8522-a614aa808b72",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e1a1a881-be43-4937-ba0e-21790c798b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fccb387d-7bb1-43d8-a268-3fecc2b728ed",
        "cursor": {
          "ref": "0262faf1-0f14-4c48-9cd8-7a9a142005ba",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "586dbc4e-5793-4d8c-8663-5a58be6de4ea"
        },
        "item": {
          "id": "fccb387d-7bb1-43d8-a268-3fecc2b728ed",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0a249da4-9667-44cf-9e24-43dcb7698e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de4a658-a64d-4326-80c5-a8db2330224d",
        "cursor": {
          "ref": "d02c3b65-516c-41a7-b0f0-db9e33f3477f",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3d9fbf2a-c443-4af2-b968-15f99c61faa2"
        },
        "item": {
          "id": "5de4a658-a64d-4326-80c5-a8db2330224d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "8b870a16-8609-408d-875a-043c82f381a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02eb3eeb-3d78-41ac-bdfb-8b8a5d123aad",
        "cursor": {
          "ref": "074c5f55-0138-4331-ac5b-47033dff100b",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ad4d74d9-603b-4f6e-a2e9-a0e740d06f4f"
        },
        "item": {
          "id": "02eb3eeb-3d78-41ac-bdfb-8b8a5d123aad",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f2762360-e7b5-44cd-94ec-7962d100bb35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0548ce3-d88e-4826-a7b7-87bac74d5c98",
        "cursor": {
          "ref": "5038ff1d-f0f2-48b2-b122-e3dc03f05095",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "994f84ed-fd36-40aa-9522-8aacb1fc23bf"
        },
        "item": {
          "id": "a0548ce3-d88e-4826-a7b7-87bac74d5c98",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "90cf0c9d-244e-48ed-907d-f718267d6c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b91a76c-5266-41ba-95f2-7f8a82a03c53",
        "cursor": {
          "ref": "3aded5c7-b082-43af-9b71-1e4897757382",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9ac952cf-c875-4fb7-bc47-bc8aff00a119"
        },
        "item": {
          "id": "9b91a76c-5266-41ba-95f2-7f8a82a03c53",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "91a8a7b6-994d-45ac-8eb7-ab9c3c3639ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e075c480-a09f-4fcc-aaaa-db526b4121f6",
        "cursor": {
          "ref": "de71bb7f-88f8-4706-a8bc-d89c4165bdff",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6abd3e0e-3b95-4767-9b76-6d59f929661f"
        },
        "item": {
          "id": "e075c480-a09f-4fcc-aaaa-db526b4121f6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c8fa2afb-2bf2-4ae4-84fd-7b0889556722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1e208b-da1a-4c45-b860-5918ca833cb5",
        "cursor": {
          "ref": "7a3c05e6-3fd8-4f72-a13f-fd1bc1d3d24c",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0ae553e5-2f10-4bf5-bc46-334ee0d36c3e"
        },
        "item": {
          "id": "bd1e208b-da1a-4c45-b860-5918ca833cb5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "47f02bb6-121d-4e86-b934-d10a1dfbe464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3fcf3b-7041-444d-8863-fc266ee41d95",
        "cursor": {
          "ref": "dcd541b3-8796-4d07-9e13-cd342074f5f0",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "bdedb59e-6b32-4c49-be25-e95361374bfc"
        },
        "item": {
          "id": "bb3fcf3b-7041-444d-8863-fc266ee41d95",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "265048e5-7ca4-4fff-9e85-9035ca5cc70d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb27602-5bfc-400a-98cc-40d68a46713e",
        "cursor": {
          "ref": "1212ea3c-1aac-46ff-9d6f-50b3d66a250a",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "606f5289-44d0-4384-9f4d-acb37c4b102e"
        },
        "item": {
          "id": "0cb27602-5bfc-400a-98cc-40d68a46713e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6bb6d15f-f1d0-40a9-b8d2-90b889925c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd72de6-0479-4fea-8ac4-ae53175220c4",
        "cursor": {
          "ref": "8d7024d1-17d9-4861-8771-70d8957161c8",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ccf72ef3-9a1f-4e99-86b6-2465b1f8e367"
        },
        "item": {
          "id": "2cd72de6-0479-4fea-8ac4-ae53175220c4",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6cda68fb-660f-43fd-9306-c3c43c0a56cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7258f6e-f52c-4f06-8d34-0a65b96089c0",
        "cursor": {
          "ref": "1d72ea6d-b231-4dbf-bd04-2369fc2615ce",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "dac99916-9b6e-43c5-8185-6af8e5f61b72"
        },
        "item": {
          "id": "b7258f6e-f52c-4f06-8d34-0a65b96089c0",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c2c6c7cb-b00a-4e38-b856-6d2c4b6808c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af96a9b4-6025-4834-b718-96a4f15012ad",
        "cursor": {
          "ref": "87d22906-f558-402a-866f-4ba2c34f1d7d",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "aa206053-dafd-44d4-9390-947a76f94fab"
        },
        "item": {
          "id": "af96a9b4-6025-4834-b718-96a4f15012ad",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "df60fd72-db4e-4f64-a542-f4367f821f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44d43ba-0054-4d21-a699-d522034b0097",
        "cursor": {
          "ref": "d8bdfe05-f9e9-43ee-9c6a-b8550544b67c",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ae63b0a3-0300-4a3e-87b0-77fff63243aa"
        },
        "item": {
          "id": "e44d43ba-0054-4d21-a699-d522034b0097",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ab5b5dee-9f9a-4a03-933b-c75661e847a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3623c90a-1173-4954-ad7f-39952aab3dc6",
        "cursor": {
          "ref": "778d988d-3459-45ee-8378-d0cef1b1627d",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "bed4a615-fd3d-493a-b19a-c865db3a4525"
        },
        "item": {
          "id": "3623c90a-1173-4954-ad7f-39952aab3dc6",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6e005098-395c-4250-ba2c-4dde2e201051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f453b417-8b97-4949-972b-16210fd038db",
        "cursor": {
          "ref": "ea420da2-fbac-4c16-bd46-4c5919dc0572",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "52d88cb0-61a7-4b0c-9fb5-9e2b7b8a7ccc"
        },
        "item": {
          "id": "f453b417-8b97-4949-972b-16210fd038db",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "723b95b7-6da2-44a4-871d-fa1caaf0f529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c73c65f6-a27c-4a84-9432-c31c29e201af",
        "cursor": {
          "ref": "7efd056b-ae8b-4bcd-b82b-131944b35435",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0d2fad6a-efc4-4bf7-ad4c-d13838d4f0ec"
        },
        "item": {
          "id": "c73c65f6-a27c-4a84-9432-c31c29e201af",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6b2545fc-9533-4242-b71b-9a18004bf8e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b39b93-d7bc-4e60-82c7-dc535e960948",
        "cursor": {
          "ref": "54d8ec7b-e5c7-4418-a29b-905ee1635ad2",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "054f7e05-04da-40ce-8b53-f3511e232f7d"
        },
        "item": {
          "id": "98b39b93-d7bc-4e60-82c7-dc535e960948",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "eae0b0ff-b7cf-4a5c-b472-0075aa3e2eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5009eac5-48ab-4bf8-9bf4-efec4cf264dc",
        "cursor": {
          "ref": "7d6b6d9f-f0d7-40aa-b03d-1165c86da40d",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "12890958-dba0-4354-8487-5946f8234d62"
        },
        "item": {
          "id": "5009eac5-48ab-4bf8-9bf4-efec4cf264dc",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b647cf65-a8cd-4f66-9241-e7767b0f8ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b3879e-505b-42f2-a366-fec47f54cd5e",
        "cursor": {
          "ref": "d8943587-80a5-4abe-9bde-6e9bc819f495",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c5f567f7-7505-41e6-a75c-6f759045e094"
        },
        "item": {
          "id": "e2b3879e-505b-42f2-a366-fec47f54cd5e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "2be19cc6-5582-4911-88c8-3412c3bd07d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57352e8c-f94b-40e5-9b8f-27f738a2c607",
        "cursor": {
          "ref": "2721f853-9914-4ab7-a035-bfc89fa24017",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b819a78e-e3d6-48be-b57b-6ab7e1d8ffeb"
        },
        "item": {
          "id": "57352e8c-f94b-40e5-9b8f-27f738a2c607",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "1b05ed71-afff-45af-acaf-07e94dffc067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23eff075-b0fb-42c7-8d07-53cc2b44e2ae",
        "cursor": {
          "ref": "39ac0036-cb57-4886-bc44-ca127e9e4217",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "472e4f10-5718-4a50-8966-9bb78c95dacb"
        },
        "item": {
          "id": "23eff075-b0fb-42c7-8d07-53cc2b44e2ae",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "17a39bfd-4087-473b-a7d2-bc72e8dad085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6b0aaa-4fa0-4e61-83ea-ebc29a260d68",
        "cursor": {
          "ref": "0d2843fc-5466-446f-83d9-cd35f54dc4b3",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "47de212e-670c-4ca3-8d9e-5b8b9a4cb807"
        },
        "item": {
          "id": "6b6b0aaa-4fa0-4e61-83ea-ebc29a260d68",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f5c95d57-5c8c-44a6-9d68-2473bb03dec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96839627-de64-4e18-85e3-33fb48e3a1d6",
        "cursor": {
          "ref": "b6ada4f9-ee69-4be2-9b84-9669015cdc81",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "21ee880d-1412-4a46-b73b-792694648a2f"
        },
        "item": {
          "id": "96839627-de64-4e18-85e3-33fb48e3a1d6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d9162c4f-bd1d-4418-90b0-454a535df98f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9927bc49-339e-40f2-bf15-9c1d1d9a4e39",
        "cursor": {
          "ref": "2ceb1457-8634-44a6-8bf1-6d284e97df7c",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "db6b196f-2ce9-486a-a244-21b82004ac0d"
        },
        "item": {
          "id": "9927bc49-339e-40f2-bf15-9c1d1d9a4e39",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "586d073e-1a78-45ed-8e16-6f3dc29a7437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1652b989-7360-4674-8057-2027c944096a",
        "cursor": {
          "ref": "98139f63-dd4d-45b9-ac70-748e43dc02ff",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "54f38206-fd16-4bfa-ba86-e3f4d03bbcf7"
        },
        "item": {
          "id": "1652b989-7360-4674-8057-2027c944096a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "307c5820-8765-4a29-8f87-446a11e9c3f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d35341-8b0a-40a7-850a-892d7c0b148f",
        "cursor": {
          "ref": "3a4b0291-72a5-43d3-8f31-ba42fba651c5",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "7edec382-e1a4-4272-9586-3325254d9941"
        },
        "item": {
          "id": "b0d35341-8b0a-40a7-850a-892d7c0b148f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c1bb036c-70dd-4a3e-a517-ae39f89c6907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e58cf01-d45a-416e-aafe-6768efe50490",
        "cursor": {
          "ref": "3c6bc1aa-61dc-4e93-930f-b48838bbed37",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "887a6a1c-9697-47c3-b609-7e2c1a177491"
        },
        "item": {
          "id": "1e58cf01-d45a-416e-aafe-6768efe50490",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c72c1ecf-7ee3-4541-8d27-3883afd928b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ab37fc-6102-4b6b-9daa-8f44b8a638db",
        "cursor": {
          "ref": "2dd0af99-877e-42b5-847f-0cd642761c27",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c9a68a47-d6d3-4ed2-a3e8-e8517e1f4f3c"
        },
        "item": {
          "id": "76ab37fc-6102-4b6b-9daa-8f44b8a638db",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3cf5f161-5bc6-4bfe-ada8-985efcc8c2c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0e6c60-de38-478e-9e24-5e21f83d1553",
        "cursor": {
          "ref": "0c6a65fa-ae1b-422d-ae96-07354098f907",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0c102112-7e95-417c-8503-dd4bb28336bd"
        },
        "item": {
          "id": "9e0e6c60-de38-478e-9e24-5e21f83d1553",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8323013e-48b5-4fe7-bf84-0b5211e3f51b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f67b4f1-b214-41b6-a1cb-431fef57b074",
        "cursor": {
          "ref": "962121f4-101c-4f3a-854a-9f33fdf8f166",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "bc31cdb5-9743-4ec9-aa1f-8beaa92ebeff"
        },
        "item": {
          "id": "4f67b4f1-b214-41b6-a1cb-431fef57b074",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "95c2bc7c-7369-463c-9c61-1c2f62a1844d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3312e4-679d-4ed8-a298-c7c8182937d4",
        "cursor": {
          "ref": "46555455-720c-4dbe-b1db-a76907e8d208",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "28aa18b3-27a8-405d-8674-536be34946e0"
        },
        "item": {
          "id": "ea3312e4-679d-4ed8-a298-c7c8182937d4",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d16dc977-98e9-4e8b-b898-8884c57eaad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8e93c8-b0fa-4dbb-92b4-30c1176f9477",
        "cursor": {
          "ref": "e3ff8738-1c5d-49ac-af85-5d63b172b692",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f43074d9-365b-414a-858c-46d4dc29f705"
        },
        "item": {
          "id": "8c8e93c8-b0fa-4dbb-92b4-30c1176f9477",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "64097ef2-3a7f-4805-be79-67098584e854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e5d094-dd00-44f0-8a4f-94be8554d665",
        "cursor": {
          "ref": "fac23f3b-9434-45f3-9009-d9803b397269",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "156f5c89-5844-49c4-8c84-da98aafe3270"
        },
        "item": {
          "id": "40e5d094-dd00-44f0-8a4f-94be8554d665",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "42691d6e-b3de-41a7-8d36-bf7f64cadeb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9967eac-9a34-43b6-a3d7-24f3660aba56",
        "cursor": {
          "ref": "72d7fb70-4e8f-4485-b615-328edc0f5973",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "09098568-090a-43aa-abd5-8ee34602fa8a"
        },
        "item": {
          "id": "c9967eac-9a34-43b6-a3d7-24f3660aba56",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5055d0f7-c1d3-4e7c-a710-1b3ad94736f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "347c5306-7166-4ed8-8bab-45c630fd58ee",
        "cursor": {
          "ref": "98b8d4d4-88d9-43e8-8dd1-149c97c9f0a4",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "df76f392-8cca-49cb-8c01-91e21aadbf88"
        },
        "item": {
          "id": "347c5306-7166-4ed8-8bab-45c630fd58ee",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "2091aba0-f287-4e7d-9b67-38fb3ae7a74a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06c8bca-72ec-4242-8bdb-96b7255c853e",
        "cursor": {
          "ref": "49a5570c-ae17-4211-b03e-a7d37b41c2cf",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "6266afb1-f0e8-4047-99a0-7aa7465f5f24"
        },
        "item": {
          "id": "d06c8bca-72ec-4242-8bdb-96b7255c853e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a4d66f67-a3a8-4f72-b1cc-f74a4f99b66f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bbfab22-038c-4151-a16a-14dba59fc9d2",
        "cursor": {
          "ref": "694e1285-8a1a-4ee6-92c1-635fe7c8a4ef",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "a6cdb38d-e204-42aa-9886-946b4a2f073a"
        },
        "item": {
          "id": "5bbfab22-038c-4151-a16a-14dba59fc9d2",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ab62821d-645b-4a11-a5b4-598d35bd4ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f03ccf6-dfd2-468d-9d43-d4561605a79a",
        "cursor": {
          "ref": "5d2fd47c-f960-4daa-baa4-4833142480f6",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "6a174f1b-c14d-484d-85d3-e7bec38bcb21"
        },
        "item": {
          "id": "0f03ccf6-dfd2-468d-9d43-d4561605a79a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "66c7e0dd-64b2-4a5f-af62-ecd5d0ca7e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c8bf99-d63d-4610-bfc2-e905503385bc",
        "cursor": {
          "ref": "11ab3dd2-62a0-49d5-8793-2f5337aed1b4",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "97c0924d-d941-4af9-b2f2-76b5e3b2a05e"
        },
        "item": {
          "id": "d5c8bf99-d63d-4610-bfc2-e905503385bc",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f542fa6e-6500-4023-b732-f94403b068e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19017841-cac8-48d2-9d38-a18be044bf04",
        "cursor": {
          "ref": "c5ef707b-0f0b-4768-8414-33861d0ae8d4",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "da7d1657-ae76-4439-825d-1ee54ba72aa2"
        },
        "item": {
          "id": "19017841-cac8-48d2-9d38-a18be044bf04",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f495950c-680d-42a2-be78-03f10e323838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0fe0f40-4e94-459a-a229-d3dec8f35f88",
        "cursor": {
          "ref": "a26b43d8-af3a-4e8c-8fa3-6a6fab485947",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "dc3fb5f1-46c5-4820-9489-ee5b15ca8824"
        },
        "item": {
          "id": "c0fe0f40-4e94-459a-a229-d3dec8f35f88",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b01e42fd-3cb0-4975-a9b9-49a401b77128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9b7a6f-0a18-4a78-a89f-b86bf27cc04d",
        "cursor": {
          "ref": "c197ad16-4cae-4326-9251-07596190dfd3",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "c1f45f96-3dc5-4b89-9a66-f2767e83e4ca"
        },
        "item": {
          "id": "ab9b7a6f-0a18-4a78-a89f-b86bf27cc04d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a8a5c2ed-7196-433e-9feb-68d5a74c08fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95913cba-6556-454d-a62a-6cd4e99515b0",
        "cursor": {
          "ref": "49b0190c-08d7-41a1-8fc1-7c37cffd437c",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "f87d83ed-b641-413d-ab18-25fd88f06fb4"
        },
        "item": {
          "id": "95913cba-6556-454d-a62a-6cd4e99515b0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "acfaf439-abe9-4e2d-9a3f-fa121cef4844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27cf5d81-319c-4ede-8f21-1544cbb3cb6a",
        "cursor": {
          "ref": "31ba3ecd-618e-4e47-aab7-23e8e13ad9f4",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "77b20683-9f45-4aa6-86dc-dfd7d9ec3ebd"
        },
        "item": {
          "id": "27cf5d81-319c-4ede-8f21-1544cbb3cb6a",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "018d411b-2686-4f75-9ed3-0e0f24755519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8579f3-5f07-4c4a-8a8f-ee4d4f98ebb7",
        "cursor": {
          "ref": "13907055-dc42-4ba9-87ed-bc600573f94b",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "4e5c03c7-521f-4c4d-8d2c-6e9d23e71f17"
        },
        "item": {
          "id": "ce8579f3-5f07-4c4a-8a8f-ee4d4f98ebb7",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d4caad7e-87ff-4519-b14a-3cc5db81a3ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8dc6342-ec87-4090-b47c-2cbd9ea19c01",
        "cursor": {
          "ref": "28156f60-bd7f-4202-8214-b38f399cb856",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e017ef87-a1df-45bc-add8-a672e24b6ad0"
        },
        "item": {
          "id": "d8dc6342-ec87-4090-b47c-2cbd9ea19c01",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5778652f-252d-4e83-8a02-6eeb530b0f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f63927-01ac-4ddd-84ce-cb247932e154",
        "cursor": {
          "ref": "916afb91-d383-427d-b8c3-da179d1c7103",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "0bd24d7f-57fb-45b4-a1c1-230992642765"
        },
        "item": {
          "id": "27f63927-01ac-4ddd-84ce-cb247932e154",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5070b182-e658-4fb7-be2a-7a2fc61829b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e57c3f0-e5e5-4ef1-bf0f-002fa4c7b792",
        "cursor": {
          "ref": "89617237-868d-43c1-abf3-03106bd54808",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "955caad2-31e4-45d3-9d3c-2765d2791d93"
        },
        "item": {
          "id": "6e57c3f0-e5e5-4ef1-bf0f-002fa4c7b792",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a9055832-eb22-429a-8a5c-f4524f3cd5be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e36b9bd-1bfd-48a3-894b-94132bb0d7f0",
        "cursor": {
          "ref": "922bf369-e7a0-4828-8f99-ee6f01489cd1",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "c9aa2c6c-db4e-4ee9-86b6-5a2d15a6505a"
        },
        "item": {
          "id": "2e36b9bd-1bfd-48a3-894b-94132bb0d7f0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b0f11812-0a19-4d09-af46-15f2be1d218d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442a0162-3fa6-42a4-be88-c04b674a0d46",
        "cursor": {
          "ref": "3405fbba-64cf-4481-9c95-492b05057ee3",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "1aeb0633-eb9b-4f4b-b639-382ad1276b56"
        },
        "item": {
          "id": "442a0162-3fa6-42a4-be88-c04b674a0d46",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f399318e-74cc-453a-b448-8498521614bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fec368f-e091-4094-98ab-efa8e2696464",
        "cursor": {
          "ref": "a622928d-ede3-4adf-9967-4b9b4cd4b570",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "dff35cf5-e3bb-4eae-afd0-04470d8775f2"
        },
        "item": {
          "id": "1fec368f-e091-4094-98ab-efa8e2696464",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d55b305d-2e58-44a6-98ce-a7eb59eadf22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8e4fca-4fc7-40b1-9473-b90643c383e2",
        "cursor": {
          "ref": "e1625bbb-fb0f-4b15-af9e-1d32f7e0741e",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "f7da4f3a-58c5-4820-869a-80b7c83dc752"
        },
        "item": {
          "id": "2c8e4fca-4fc7-40b1-9473-b90643c383e2",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3bffc120-15c6-4a7e-8ad5-a5015e56fe52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290ac46e-20cc-476d-b8a2-f09a483e4842",
        "cursor": {
          "ref": "a0e14d3b-9692-4a84-8b43-966d1a127097",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "87a7923e-723d-405f-8e7d-99e432e9e4c5"
        },
        "item": {
          "id": "290ac46e-20cc-476d-b8a2-f09a483e4842",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d3fa51a5-fd47-4cd9-aeea-8998f234ac1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73736f94-5f40-4eb5-b240-e7927f67497a",
        "cursor": {
          "ref": "17b9718f-d38a-4340-9edc-5bb38bd155ca",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "2f657bc8-0afb-4358-9129-0179d0f9a61e"
        },
        "item": {
          "id": "73736f94-5f40-4eb5-b240-e7927f67497a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5b8f2394-90e3-4d2c-b755-3d6224f1fc0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e07a45-d586-45de-baf3-aa5d577de682",
        "cursor": {
          "ref": "001b555e-a63f-48f9-88fa-286da2f2bab4",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "538f189b-a849-4151-b530-bdc5e539f98d"
        },
        "item": {
          "id": "d8e07a45-d586-45de-baf3-aa5d577de682",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "06178778-38eb-43bd-a554-2a8f2672b59c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2644263d-896c-4d7a-9a3f-69abfcbfbc78",
        "cursor": {
          "ref": "14f37da7-3181-4fea-a83d-872bcfd524ef",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "83ef132c-29bf-4a64-bedc-9c2a3f3e3b63"
        },
        "item": {
          "id": "2644263d-896c-4d7a-9a3f-69abfcbfbc78",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "4b2099ce-e8ba-4d7b-9cab-a8aab9607d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348293d2-af7f-421d-b91b-273b2a66797d",
        "cursor": {
          "ref": "1e67659f-9524-4fda-a69d-6adb2ebb262a",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "c8d09bec-aee6-4958-8248-ea7790db1540"
        },
        "item": {
          "id": "348293d2-af7f-421d-b91b-273b2a66797d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f4372110-aefc-4581-be16-46508692a564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1117d2db-64d6-4416-872b-58baef37fa03",
        "cursor": {
          "ref": "f4b45523-795a-4778-bff6-0b2596e6b11c",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "fbc7a199-02f4-4b5a-aa5c-bdc2a9ed6453"
        },
        "item": {
          "id": "1117d2db-64d6-4416-872b-58baef37fa03",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "1d17efa4-9e7d-4940-a821-2cd601e1238a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b32b47-5800-4260-927d-cb87a9c00d96",
        "cursor": {
          "ref": "1137f2f1-17ab-47da-86e1-99a891b169be",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "d101c5da-c951-4684-848b-f9071fedd4cd"
        },
        "item": {
          "id": "84b32b47-5800-4260-927d-cb87a9c00d96",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "083e2d2a-5759-4db2-86b7-fa6d3533e484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef716b13-596e-4825-bb5a-66e296f110dc",
        "cursor": {
          "ref": "c8b739ad-d6f0-4b48-9667-5a8b01d20445",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "7b6e52cc-9c0e-47e1-bdcd-ecd938e8463e"
        },
        "item": {
          "id": "ef716b13-596e-4825-bb5a-66e296f110dc",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "53ff514a-3073-4b25-a029-e471490a86a0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0082235-f67e-4899-b710-b71c269d244f",
        "cursor": {
          "ref": "1f1a7521-71a1-4843-b7a8-c896856f55f9",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "3c5626f2-c051-4481-8391-cbdcb1e231e8"
        },
        "item": {
          "id": "a0082235-f67e-4899-b710-b71c269d244f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b3383de3-16dc-49f5-92f3-a8ef71e2db77",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5ba8d9-c24d-45f4-b686-69fddd166760",
        "cursor": {
          "ref": "87480f39-ab35-4830-9940-3fff84c3b56d",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "a5380bbe-f2be-4600-8ebc-380b7c223024"
        },
        "item": {
          "id": "7f5ba8d9-c24d-45f4-b686-69fddd166760",
          "name": "credentials_verify"
        },
        "response": {
          "id": "5d08cf15-3bf2-4bda-b615-23b07c48c57d",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5b6e96-711a-4310-9afd-0ff512449152",
        "cursor": {
          "ref": "c729d957-9aeb-4d00-afa1-ebd2d82f4855",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "7256c03f-f72e-484f-a81c-7d245570d904"
        },
        "item": {
          "id": "8c5b6e96-711a-4310-9afd-0ff512449152",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "68457bb2-3f8b-4aa6-bc9f-f62792e65f0b",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47e0d4e-de6b-4813-abff-8f9d4dd5d81a",
        "cursor": {
          "ref": "aa8d7025-ba72-4f63-9fcf-50be626372f5",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "8c302fe6-2c50-46a8-9ca4-aa7c76993f37"
        },
        "item": {
          "id": "c47e0d4e-de6b-4813-abff-8f9d4dd5d81a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "088a1a6f-2352-4682-ba82-66fa3a3b8530",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47e0d4e-de6b-4813-abff-8f9d4dd5d81a",
        "cursor": {
          "ref": "aa8d7025-ba72-4f63-9fcf-50be626372f5",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "8c302fe6-2c50-46a8-9ca4-aa7c76993f37"
        },
        "item": {
          "id": "c47e0d4e-de6b-4813-abff-8f9d4dd5d81a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "088a1a6f-2352-4682-ba82-66fa3a3b8530",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a03347b8-ed81-41d4-aed9-32aa0e0d388c",
        "cursor": {
          "ref": "b804b411-e0e8-4aeb-830d-8a004e163437",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "372b6798-691d-4c19-9b30-c6fa386d9077"
        },
        "item": {
          "id": "a03347b8-ed81-41d4-aed9-32aa0e0d388c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0873d0cb-f889-4443-80d4-4f9a6d64c34a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6337a5bc-8737-4587-a13e-96a541b4afec",
        "cursor": {
          "ref": "7aa0dec9-066f-4a69-8b1e-89b6dcf3dda3",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "21597815-6bda-4521-9b48-e166a1f0385f"
        },
        "item": {
          "id": "6337a5bc-8737-4587-a13e-96a541b4afec",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8407f710-2784-4612-9421-6b46a5b43379",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}