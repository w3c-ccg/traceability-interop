{
  "collection": {
    "info": {
      "_postman_id": "e9c7f21a-ef69-4217-8f40-0424834c0fdc",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ed38ca42-9731-4406-932d-8123f27a627f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "fd1b42e4-f4b8-4d67-b7a3-bd571cc5e07d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0d177582-f231-4198-97e0-9036a0c6d5fd",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "49a04d3d-aa79-45da-91f3-2ea79460f6de"
                }
              }
            ]
          },
          {
            "id": "9e858d47-f4c9-4973-b923-cbde09a5e93a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5f15b789-0c74-47d8-a480-a39ea1e7dea3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2a5e5b78-ac0c-41f3-8987-2dd942c324ed"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a95e3889-7f44-461f-849c-9451b23287ce",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4243e46f-d05a-4d8f-9f4c-cca2efa19fdc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ff6ebebf-37fd-4b23-8464-1c66732b7222",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9d39b56-4fb3-4830-bc55-df157fe2aac0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a3bed964-4fe1-4413-888c-aca068970df5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4a81c91d-7257-4dcc-bb94-64ff56874da0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "60920353-3944-4f62-9eec-cdb4838740ad"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "70081616-ac2f-4d5f-bd48-516d6f95b86b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8563ff0d-1723-4157-ac95-ced36fc4b326"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "502a5d46-23fc-4da1-a4d8-a90c43daec29",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "782eed69-0c71-4241-9b1b-44509414daf0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2dd84e3d-6807-49c5-bb84-1037e6760e16",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fd76ffdb-6b5a-4d0f-a94d-2778be22111b"
            }
          }
        ]
      },
      {
        "id": "e951c3bb-ee3a-4d68-8698-9c0724e8d082",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8841d334-30d2-45b3-9e58-d82bf29b8c47",
            "name": "Negative Testing",
            "item": [
              {
                "id": "719ea5c0-2069-48f5-a903-7fd5420d75af",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6e30a1f1-6985-475e-8d1b-03f678b67ce9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7fcf150-75ce-4394-a1fa-17b1f38b2b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "02e3e9c2-ed12-4df2-8847-b664e3cb8878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ca6d78-b530-41aa-8c56-de4f4c644db3",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7551dfff-68cd-4bf9-bc76-03d772e98bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee619a12-b45b-45e1-b712-b914b59b2467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a4965e-340b-4ba6-bc8e-56d8ce1c1d74",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c506ded-802e-4ea4-97fb-90378ba8d5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec6d0856-1d45-4938-bbf1-4891ab9f4818"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "67dfc1e4-3023-4bdd-96bb-44623a91e68e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e1e9aac3-5442-49ac-9ab4-994e97430f8f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "113b4c10-39a3-4548-a6c9-5e896f5e40ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1541bfed-3517-44cb-a0fd-f06740f12aea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d95dd4-e84e-4066-a12a-a665c4d20647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aa09791-b326-4fd4-a8b2-6913eb71d9c3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5d5f0355-d0e6-41fe-b588-3ac4af5d6453",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c600208a-b5b0-4934-886d-ea0e05541d7e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "56c8ff13-bf1d-40bc-a2dc-182df3d8d93c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "462ae1a3-9d9b-48b5-92a4-32b3dc0b7c81"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0719ca6f-2f64-4d53-981a-543707a49ca6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ebddc225-1ab2-4929-8d88-76a7221a1757"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "30149055-95da-4965-82d9-468c9052e0f5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d06cc485-3ab2-4342-b040-d51893c263d5"
            }
          }
        ]
      },
      {
        "id": "2b3f39cf-a954-4bc3-aee8-2d9886935504",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8ab1dfa7-cd8a-4fdc-9bf5-081ba8f639b2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c3197fca-fc53-4d28-a4db-544aec9ba50e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b0718c9b-6210-4cf2-a00f-86f9079168f9",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b7e730-e95f-4b54-8fea-bfecbad6c65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44147af2-b377-43aa-82dc-c244966b2fbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc2f390d-00bc-4e40-ac6e-4ac191f8c321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cce838c3-98da-4b99-85ca-562884b128cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e1830d-b71a-4a66-9333-f376d22a33a0",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a06c15-5173-41bd-9429-614d9990807d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "293aac3e-011e-4491-9c0f-55e1aec18861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee6b21d-7593-416e-aedc-dc0139f1a1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13eed785-e1f7-4fed-aeae-5551029335df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deaf36a3-8dff-4087-befa-7332b9b8db75",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66bfdde-50ab-4145-ac06-b6f55225320e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dde3f44-54f2-47b3-b51f-c5058633da35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ed2669-86cd-4e57-8aa7-44d06896fc8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2838ea76-f859-4a6c-8b14-24a06cbdcff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98feaf3b-b860-43ee-a72c-dab3422cd208",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7329a0-53f7-4852-a948-c3f97466a337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9ea85ee-bed4-499c-99c4-e059ded43413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3bc19d6-3ec4-48ed-83b8-cad496f92393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3859ca0-53bd-40e8-91e8-cebad6eef12d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906f1fa7-2ee0-4c67-9036-f55a1d9ba441",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd71a09-a6df-42cf-99c2-991d82438e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f429ac57-5e7b-47fa-894f-18fc8be5c7a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1da2db7-e7b1-485a-82c0-214710bf54ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ade9f70-2f27-4717-8495-5c94fecd1bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b71481-86ca-4a5c-b9b5-b3b25a2847d4",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62465d59-6649-4461-af18-e10e7cdb0317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7651e64e-25be-4ab3-ae2c-a57490b4a990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ccc16d7-01e6-419c-b1cc-e467e2f56e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52e81557-f7f0-4b3d-ae95-5eeb95001a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0234b0f8-6bde-4157-a3bc-d686d0c889e4",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ead612-f90e-497d-b491-d510c11f05a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf46b80f-cf7c-4941-b11a-43cce2ce0179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd7014e5-a24c-4840-8d4d-aad657596191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f321f605-4393-42c8-b976-5d1c7972732d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e992e8d-a5c5-444c-8f29-9a051bb8dd56",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6846bc4b-8686-4961-9e8d-83ac107a1d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b169b167-03da-46d9-85e2-5b1c8c6839a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e6bad40-de4e-4f91-bf62-4fe33640082f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19219776-8d88-40c8-8a84-1327379e42d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f3ef5e-69b5-4bef-85aa-5f7a8210cc06",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "142167f9-e6a6-47e9-8d1e-777c886cb44e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5766455-3294-4d26-aa08-a3e46f9833ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52fe9fa-dbd1-4e42-9bcf-4e9ab4a53c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1491dab-f5b5-4cb4-909a-13d1ca6a91c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ca7fad-24e8-4873-bc6b-ce983927437c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89655e26-bfd7-431b-b4fa-436216b2a545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbad420e-335f-4a0b-8715-462dbe077726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d025d9-e640-4b59-8a98-fa8a7890960b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3ceab3b-06b9-4fb9-b257-a4a1ff0c6f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632f08e7-02c4-4842-b428-82ebdae66dc3",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd8515d-f85a-4941-bb83-6213d15965c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "406e5279-c7b5-4010-b8a3-5f2dcc1a7da1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ecf224-6c81-4e20-b17d-dd5da3ac0e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7bd5eea-c2d5-4b6a-b407-8bb790f633c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d84afa-2e23-4995-a0ea-1124cad5ac0f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae8ee56-e5a4-45b0-8f0c-665c2c9dc10f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01573b92-5ebb-4b40-94ec-4b855876b7f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e7dbb3-a169-41d0-93be-39c7232c0f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ae21ba6-1635-4013-855f-814394eaf8a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba3653d0-1601-40fa-9a7a-e255f2d7b945",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97f408b-ec3c-48a7-a7f7-96e483b78cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf31752d-821c-48f9-8a72-e5062ffe1499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b78d9688-c444-4fce-9447-a51513ebbd1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "483bfc38-cd60-42ca-b743-d5c71622134e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a96a747f-3c1b-4e5b-bbee-3c0896edcdd0",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d57d664-50c5-4631-a5ac-0f7eb1c26b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31438af2-d94a-4a86-94a5-514a051baa74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9974505e-689f-4f85-8163-1871c45f85ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f64cd1a-5932-486e-9e6a-11624e600860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84584b66-624a-419f-b572-4e6cc2be8868",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c19c3a-269d-46c7-aca6-47e2a7018926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ef3f7df-f5e8-4cab-a218-85033703028d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d25c35a-c31c-4a7c-87bf-feae1a85af47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b088ba27-717e-4c15-882e-0e24f9a598ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5496b37a-6870-41d7-9897-b1ed3b5e3ed1",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16d0d69-7899-4021-b838-5f687a080f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91a0581f-033d-4a7d-8da7-e861ed81e2b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa10ae7-537e-4191-a514-a45427e92f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7bc3f82-1f04-4178-8ca4-633c62f95f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a8f727-9623-4051-bb63-98911c225848",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc493b87-0982-4e0a-9cfc-3a57badf2a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d875165-63a9-476e-aec0-af0f078ac0a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2dcfa22-7081-42e8-9b14-c05960b26b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b509269a-978f-4737-b19e-beff7d986a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74abc38c-dcc5-4df3-9f85-47c88c23c500",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d8b91a-3931-4489-a68c-44a9523025d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83a903ce-14aa-421f-af7a-7d916a1673f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ec5c9e-ebd2-4cad-932e-ca652b62dc12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "501fbae7-cb5c-4acb-b0f7-3c79a36c5cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6773d1b3-d6f2-4016-a7bf-77d12441493b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "badd041a-e743-4712-90d5-1aa5357bb798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d510254-3ab3-43ba-9e8c-dff0e81a6cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af4edbfa-ed76-4b64-b45f-e68758d25465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "147a1827-923a-4e7a-b0e1-a2173f54d0e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d38d1a-6c6c-40cd-857f-7fdf79a419a5",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e360d3a-3e3a-4d8c-9b33-17a2846613e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74adf815-a679-4b95-a1e4-a28a48d3a195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65767cb-cbfe-4c49-a0c1-f583ce1065d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c33aa4-326f-4e95-820f-1465ca46180f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b17f6d09-55ae-45e0-8387-1efeaa4536c4",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28df1e48-d606-4ba5-b980-64b228b286ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70ee02c0-002c-44ed-b8ac-634a442c14b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3029778-fbaf-492d-844d-7b888cbabc98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "50316f9e-fa9a-411d-94ff-3999c02c686d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "580c570a-f59a-4c0c-aca5-cfed731c9742",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8791845-4361-4886-8c80-6bf3ee8a0f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cfdc208-cc7a-40ca-a98e-1bb1da23ea36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b11618-b8ab-4c90-a11c-af52cb771755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5536de6b-d1bc-4ccb-bb9b-6c4a3739b57d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f81874fb-5000-4803-bbf4-ce294b0d2cda",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac9c9f9-b0d2-4c02-b238-cc51b92b9a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8927188-b554-48f8-b0a6-e5415a389931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab4b71f-56a2-4fdc-95d6-273ba51e7924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a07140e2-e43f-40c8-be8c-fc84abdddd4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3524de89-43a0-4d7a-a043-9c6298a65ba0",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46566a79-a400-48c7-b006-a41038a73d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcf95259-2aa2-4d9d-a8b7-6f5252f7787c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c514fdc8-a67c-4fda-8332-7d337ae05563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "72bff33e-a7e8-4adc-a9a7-d82fc0cea479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd3a748-891c-41b5-9957-2a7a06509210",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d1aee3-7fe1-4fab-8aa1-51f9cb0e0ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cc18d9a-31e0-4a7b-bccd-983487707c16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5284391b-de60-4ee3-8f6d-6d1569ed495b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8968d3bd-990e-4e2a-9a5c-27bd1342e319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4700f4c-db4a-43ae-8459-b569de52a965",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50cd8a87-41f0-4234-af7a-a040b6f7b046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f7c7ef3-1f5d-4a71-b37f-42863f587fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "239436b3-3cea-4346-9349-353164d8bdf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d6a1c1d-31a5-4a15-94e3-574085b994cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080e6dbb-3e78-4b5d-b0b9-04a9cb5256ec",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b82edae0-c79e-4d17-9b63-ed8d2ff5a6fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c5ca7e3-d1b4-4110-ac95-caa018041eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a9fdad-5c10-428b-9e03-363770f90384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "63aa08c3-d519-4c08-a93b-26a6724aaa3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ddfa40-62d9-413b-89b0-ad54359bb26a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abaf56c2-8e49-4430-89ec-b7710037488e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea9e1641-24f0-4a5e-bb00-0269b31fce5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8447881-07c3-46b0-962e-8f1751270455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c365e4f7-3ae4-493a-b623-12ae7130eab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79879355-cbcd-43c5-b2f7-bee55c44af33",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14119787-d989-4a6d-9103-5a7c8044f7a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7d64729-e715-4eff-8468-bc697c16163e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9bf8bb-e795-46e7-a7a1-189e65793225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9cfeb52-3ce6-4dca-b677-c9a267b1f1b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57fd1ccb-3f10-440f-b568-2ee9b525e762",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e90a3b48-c491-40d6-b9a6-1bcba52956d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59ef91e5-cdc0-49ce-90c0-d5819e5f0492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a075a234-cf15-4764-89c6-609424d94386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bc51570-0e4c-40b8-9f03-957433366d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c19451c7-51a8-4e3c-8d36-53c667cf7915",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86aeecfa-5b88-4919-a0f3-276dbfe58014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c224ebb2-3024-4fa8-b861-f86a90443799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93fbb816-b1b9-4a97-9867-b410d0790808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae2560aa-8949-4571-8a72-6924ff20157b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e11108-69dc-4354-a7a6-b3a7797cb892",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6379897-3ab0-45bd-8c78-5f6755d15440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea2b9805-4b95-452b-bafd-29ffc8e198dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2111e315-80d5-4131-b62c-88a2d49c80f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "32dabc67-cc32-44ee-824c-68ab9a69beab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43e502f-1a27-4676-9d40-a54451e2b467",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed14086-64d9-4a22-af1a-456ab5bbb957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de6a2883-affb-4de2-9eab-9e1150b2d966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dee7045-8465-49f3-b362-59baf3261100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d70cf90e-55f8-47f0-af8d-6e9f48ac0170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7142f78e-dfe3-4533-b367-3b1539fff528",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f50f8af-34c2-4fc5-b78a-06e0021e9d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c635098c-f540-4245-801b-6d517ecaf111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d7eb56c-4b23-4561-882b-2501079dd372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "75a5734b-4ace-467c-a009-ac733641806c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0c11eb-e646-45b1-be6d-c48400f834ef",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e1a9c6-c83a-48c1-971c-8645130abaef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2864c7b0-9732-4ec5-913b-e2c35683704e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58411015-f51c-4c2d-a2d0-9addc44cf5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ac405655-555b-4cb4-84a0-5b688abe871e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d04a9b-1227-4359-bd6f-1c6309c28d18",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a512e3b-197b-4d27-b2df-7e2d292dad9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21a15f1a-571a-4a27-9355-fc18d4208fce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7b767e-7ce6-47d4-b703-c65dcc66b421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e1bd8b1c-9b36-4e55-b8c0-546ae105e9a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba43894a-61bd-4cde-ab09-fc448cdc1933",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a07883d-71f2-43fa-9d4a-6e6f45ecf383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6675f2f-fd2d-4292-8ef0-ea4d3d0d873d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d1a8477-dcfd-480a-a651-16ddd155b1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc0e979c-54be-47ae-b5c1-cedad6602bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86f7eed-6a71-4f55-be07-db02bfcd330a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e992a6f-9e39-4eac-ae4c-0204994c35a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f826d0e-b47c-4e5c-b95f-86851997baf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c9c2ef-6204-48b1-9764-c84f5c9aa4ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5337e2f-61ed-4929-8250-123a7498bb67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203e5947-2cf0-4d5e-a30d-cf7adaf3aa46",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1e4c42-1ec3-42de-b56e-a586fe340bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33a71c40-8c9a-49fc-badf-f718ffd17602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c26e98-f316-4aa0-8a64-9b2cd1005a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b578bed0-b786-4f73-a29a-63c18c0977d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5574b0d2-d0f0-4688-809f-8f2165904634",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc097718-858c-4281-be81-f624f5ec8646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f816c1f-a12d-48a0-b017-9830187fa0d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2844ad1c-af2f-4e2e-9ce8-6fa1e6ada06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "82915217-0620-41ef-aeb8-174dc046bcc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9317c6f-0902-4736-a977-c0c62a59820a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e43537-19ce-438e-a743-1857e4174543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15a0ad12-009f-4520-a514-b902812da98a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d6fb66-cbbd-409b-b57d-a0a710a12f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a33a75a-5b05-46f5-bb9b-7e29c9390274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6031fe4d-4185-4461-a753-10fd7cda7361",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6920be-57fc-40de-872e-bbb85ea21f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6634a9f0-fc37-4fe0-bdef-6ea49c9e78a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ace8b27-9dbe-46ae-b40e-cb26be2a82a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f4db8260-10fe-4317-b9ea-047e714a0a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "575379ae-ffcc-44d2-8696-01f9fb1cc2f4",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1471f9a-8c8b-4acf-8d0e-98d0bce86bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4435e0cb-240d-4aa0-9c77-efc277d346df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f64ce7-d96c-4606-afc6-2b6b49bca6e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd784882-f9cf-4c1c-9a5e-43d2dc7402ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f2b371-a546-4b4a-b882-0ac708bd05ac",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "febac86d-d158-40d8-b148-c5985b601191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca2fd451-1a20-4d33-8119-8eda45bf710d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "109f2e7c-bc0f-4048-a4d7-6ed822a5d54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "09c5478f-7e1e-4d0e-bb31-2c86625f308a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "470bcb97-906c-4f13-9559-19c55e238d35",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b49cbd-b346-49c0-be5b-b884dae559f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f433c31-c253-46bc-96ee-8ce57313b3e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af82a37c-0298-4822-bed3-3fe4a6c71d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d99e2a6d-079f-4ad2-a98c-d0160af7009b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a2cb4f5-c34a-49e0-a49c-c2973ce9add7",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23784eb8-d6b3-434b-be51-3d1ad6529312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b70e4086-2187-4148-a5ad-0c512737782f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ba282a-391b-41dd-8c02-cfc5a1f43f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b34e849e-d4e8-4f9b-974b-b8f2d3ae8908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7694af-f2a1-440f-bd48-11ba1e607b98",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb76c3e-1734-4823-bcdd-beb109486e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7f1f530-a454-4fb6-865a-6c0782f20907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca29019-3c64-4983-8048-845f187d119c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a097e46-5a30-4216-8d1c-b3b9a6e0cbe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a9ea3e-345b-4e4c-bc4e-febeb21aa847",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2940c135-3e80-4a38-b7be-9c6797cfb7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2333fa05-927f-422f-bf79-40ccebe9ab49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b980ecf-6e4f-4a40-a275-a2840fa12714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ead95608-7f00-4013-b6d8-e8872ff1582f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8557d671-9e34-474b-b82f-ecacbfa68e35",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac853169-9344-4277-b9bd-f9741125fdce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33ee764f-b340-46a0-b148-afd091001d9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e539cfd3-ed30-4652-9f64-2f6382434220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e6ee679-c365-448f-9ae0-2ceca6ae3f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aeba6af-5b16-458c-90f6-e3c91ff249a7",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a57122-9885-41d0-90c2-db83fd779731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c156b1-b94d-4c76-93e2-ceaeb38fef28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c368858f-3e52-4c7b-a43f-9c2a09ed842a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a797699f-f672-4cb2-a8fe-5f90e557e33e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e685805-73e3-45fe-a5e0-ddef45abbc11",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db663f53-021f-4b0e-9259-8f5b723c9b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3e6a016-9383-4c64-b516-925f47bc93c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1407670a-6c73-4946-b7f4-c2555725fcf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d08a5db-ef03-4d1d-b8ba-892dcc4d10c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa9ae96-8f9f-4a44-9c18-c67ed3d6c449",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4a7afc-249e-4fe8-8e3c-b76766b20f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "759af21f-205f-48af-9e84-1806c7857976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de80767-0008-498c-9c8f-ee59b6a99bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc11c6d-431c-4fb5-94ca-feb646dd23f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad775d5-92f3-412e-ae91-83129eeda9df",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad70caf4-cbe6-41ed-a8be-0f9ed1af206d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebd8f373-308a-4e5d-bd02-32178fc45c06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d3caf0-6a1d-4896-8ff4-5708e19ecc48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9104e45-e94f-47e3-bf0f-ff907e4ecb39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc47fed-4384-4832-98b3-8b076a434746",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e65bcc-ee02-4370-b49e-4086e6eae7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "131b5911-300b-4b96-a41c-d26686125de9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c9f23e-85e6-476d-a24f-c5c70ac3ae37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "83388158-4ac6-4221-941d-ac5e0e093760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0b1c05-1cfd-498c-9f52-1ea4dd6769a0",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91341c0-7f1d-4a47-ac87-6b8b401276af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2661dce-3b4e-42c1-89da-388318ab2044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "320fd9a6-8105-4eec-87d8-8c513c3a49ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc68ea17-962b-4b80-a16e-fa6659d3a171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf8a8ec-7641-40f1-897f-4f043171aa2b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "846adc9f-6eaa-431d-9c8e-c37959dab9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a1e5abf-fd83-4a1e-b29a-39c85216c6bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17e2f14b-fb54-4f30-a2b0-e20ba879bd66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8c050dde-5262-4976-aa56-becc7a874932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06709749-0865-416f-8183-08621fe0162e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d312e4e-d5b7-41b8-a189-499930e14824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de6182a9-1f3e-44e8-8119-8b916f7b712a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a39cb70-221e-4a71-988f-a35ff0fb4a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f2431f6-4ba1-48b4-9c30-9feafdf86551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1ec1d8-eb36-4694-82e0-b35bda378520",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a02afb-31a3-4401-910e-f9fb5c5f0e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "332562ed-2f63-4e11-a85b-a3276175e732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2457b019-6a92-49d4-989d-ff03a6f0195e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e5fd40c-e9c7-40ba-8519-44542fb66d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0679494f-99e6-4a90-8b6b-6cbbd23056d4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df8ca919-c084-4136-85e1-180b7672a2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aa24981-67a6-447f-9aac-a8082b65dc04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d2433f2-31fd-4c35-a811-abbec1bbf036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8273aae7-e79e-413b-a2b2-2c196f7b351d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739240b4-afa8-4092-ba43-213e0e144014",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d53feb-0c6c-4996-8112-22dd0e6d1119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aca52d2-a039-4528-85c0-3137dc6939ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c105831-394d-471e-b357-f706dd8e548f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5835f45-3cf1-4972-95f3-eeacfe64cf47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1541a4-3a7f-4999-94d1-9a18244a168d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b32dc2c-be02-47f7-be55-28d4a5c5dd5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4d59463-b893-4be6-9b1b-fab0b03087aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5198bac-c063-4f99-bcb1-0fcde4b9b0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "09b048b9-ad99-494f-b14a-f76863c8bf81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c7d585a-a727-43db-983a-0026efa8b659",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c516fc-5d7f-498d-bd26-c00e7e798bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e7573ac-eaf9-4246-8dd2-57dc8fc1a0f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0757842-c8d5-4d2b-8899-7914ebc96e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f91493ac-2b1b-4965-a74c-d832733e377d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8efd14ba-60c0-48f2-aaba-2cf4412839f5",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4763f274-4d79-49fa-8517-a6ced6a385a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa88c8e4-b7a0-475f-ad66-706cb72a33e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99048a66-1c6d-49f2-81a4-18817f90393d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bc19f05-89aa-44f0-8bc2-9c7185c7c201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c7f992-f39a-4f20-9c3f-564705a623b8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6f3804-a8d5-4845-a3d2-e52f1b518938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16d60a27-0104-46fa-b42d-6cc159270630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "481eec7d-1ead-4b0f-9475-8cf00ad8e42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "540027f9-c932-41c7-b9ba-cc40b71b2942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413ef60e-12d0-4a20-a7fc-51fec8d91fed",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64becf1-c2a7-4575-b75d-7afd391bf3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d24c37bc-1991-4ac7-848f-b2d718406c9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99528fec-5729-41e1-a00a-76e7da9368b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "714e2a4a-5f6a-44ef-9b18-b8e9a6382357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b149cd-8eef-426a-95e9-a1c4e05f24f2",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b359f4f6-0ebc-468a-bc0f-ff095c7bdade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d5e75b5-3013-4575-99ba-5bb1cd038bd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a97a71e-a516-443b-8e65-d0610796c7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cd31bcf-65d7-4e9c-a568-b0cc64cef2dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48217c54-4722-4219-b2ed-24f103579616",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7385fd2-3109-4b38-adb3-219d34c864a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3835bdc9-f4c0-41a3-b98b-218d113ce734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45d2365-6644-464d-8478-d88c45af93f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "be8f7158-bb9a-426e-a24f-11b48604e0d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f757bafc-a147-4bf6-a30f-2879cb53121f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9018c03d-3de2-4c85-917c-3814f04c3791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfb84e10-3c32-4160-9644-066ca8dc9262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019534f1-6782-4006-bb5d-9151457295f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "31a108e1-44af-4691-bf64-dadcd9c5452e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c20d73-f42c-4456-bd07-45db671f00d6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe257a76-3704-4054-b237-bdfa2b9efd82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48abb77e-694a-49ba-a8c7-340448bfb30a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2ba7b9-7b33-47df-a57c-b0148a08d99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee76131a-bba4-40a2-a390-9ba6053566f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ed112b-3e04-4f99-a585-1d099586e0d4",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "360ee7bb-927e-4edc-84f8-3bb77fe55fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89c34e38-eee6-417d-afcd-c98c6f9042f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97700c56-f46b-4bd5-a6d3-c866073e3b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df7b311a-1e0c-4111-94e9-f05932eaf597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03004660-7bdc-4a6a-912a-769b6b8dd989",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1976a8-ee4b-440c-b3fd-c9605cf2ad11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "715aff72-026e-4a2c-8836-73ac265ff1e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c395dce9-f25d-4423-bd92-b1a18c97c1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "da00ca9f-dd37-4483-8c6d-d54a66318833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e8e078-1b22-40d3-8bdb-8c7c4e61ef8c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7d77fa-c56d-41b2-bbd8-304141b709e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d058d19-6ebc-4d43-a1be-ce759b369bbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e52ef1-aa7a-488e-a129-cb2a3a1b80e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cebf2110-69f2-4ec5-a545-692626c19ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea603ad5-780a-4a68-9f28-a494735f87c5",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f28fef-2dde-4354-9146-90789d1bba21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "873d371c-688e-4ba7-a093-fc2d84ce7c76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64561b2f-a02d-488a-a17c-5fb2e1318ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "21995ae8-39e7-4c37-be13-b4b708cd4097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "601f6f45-75a8-4bfd-82bb-791d03f3a12d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ddb7e4-6772-4ff3-b4cb-3b7e21868aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53cc4da7-b3eb-43ef-97f7-8e06de05a765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "823eada0-5cdf-450d-9d15-efe593374871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "acd8a287-53dc-498f-bb04-c31cb9e95854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8985887c-a913-4644-a7e9-55e4cd5dfdca",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "082eeed4-ac24-47fa-a66f-7d91c1df845a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c40fc83-df11-4f26-800d-e61663a0b086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238adaca-d447-40dc-b534-d8526986dc04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "48c18e1a-04da-4642-9e49-a483df9f6ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d99ff0f3-2fcb-4a9f-a8a5-de1970a26912",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e2928fe-94aa-45ae-ab08-e6770feda863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22706f2b-bd77-4042-a07f-2f955a7d447e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "260ad70f-0ff2-4707-9416-78a538d8e0a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "43b090a4-ba1c-4a40-8969-3a58d0c81861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d91523-a7f9-46d7-bfd2-a762d79ff892",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5504badd-0444-4d64-b532-bfdc4c0db651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed5c214c-1cee-4f94-b644-6c52172caf4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ee046d-3faf-4d2a-b59d-7d307db1082b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "55404a65-da71-4ff0-964a-6524c4681c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a748e8-318e-4508-a99e-642e36173823",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8882e06-61d6-4bba-a82b-09c52b3014b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "236b6e08-c293-4c21-ac5a-aa459348eb3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92fa10c3-7f11-4bac-974f-3fdc1f9d680b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d24bec4a-7697-41ae-9bf8-873aac2fde1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599726a4-00a2-4c1e-9c40-516885db4226",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ce8e07-9eed-4d90-b709-2aa3a7d046fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8841443-c499-40a4-81b9-bd4e116e67a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447a2515-1dc3-4c4c-8c4e-db861ae72419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e898708-f5d4-4361-9f9f-d410ea1bac45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bedbdc59-9bb0-474c-a6c6-5b55efd13aea",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd42ee1-b834-4fdb-820e-d9317785222a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4371ad2d-cc24-44ad-abf2-60ee0d624c5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3788ae16-d70a-466a-85c5-9181d597a6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b21544d5-db13-4f26-a179-eb930a0648ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6707054c-9987-475f-b3d2-d8275117332e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b158a21f-d0ab-4ee5-b847-f998fbb2b430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12eca8cc-01b9-4446-8626-3a6b87a3fb1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c03458-bada-4f88-981c-ef94a27b0b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "733efb93-4ca6-42c4-9cbb-2d5de250413c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881f8437-fa1b-46ec-8ca5-2ed15dfef742",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f6f2935-de3c-4770-abe7-a3613cc4f62d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91994b35-b726-4a4a-8127-7fb76fee41e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1858fd6d-828a-47f0-8117-9cc6acb4ec99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "970a79c1-352d-4f83-8904-bd59cbb663d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5032ff8-cf7f-49dc-9008-8d667ce3338a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d362c918-b86c-4ceb-b55d-5c27b401a49e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24d7c724-db64-45e2-9776-da89688fd2fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aeb78be-b077-4095-bcb3-00ee5c80eb8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f19e8ee-6c65-47cc-bfa7-eca128dbfd48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3a2526-0c41-4db9-b8fe-f5a21b06ddb4",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78dfec7a-847c-4503-a067-af69294f1488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3ba6be0-abce-4fa6-aa69-78fbf81f0c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90af016-fa39-45f8-aa71-9c1012ba4600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4171b49-3642-4875-86ba-95aa47bc4e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d29f2c11-23ce-4077-8d4a-03e3d5a1e052",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a003552-6043-4c5f-880e-01110799f2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "225d30a9-43ec-4f80-839b-cf0341292a2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6f3953-45a7-41ce-bf8a-5c9dee70ba62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eedf477e-be5a-4626-a087-8cc28b8ae5a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "134110c4-1be6-4897-b0c8-8539d86b6a01",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff771b65-5383-4e5d-bfd0-894c18f19789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d20a4668-839f-4bca-8a5d-a3eb5124efda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6cf29d-bf60-41c9-a3ba-3a088a7d7ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "60a235f7-12f8-462a-89f4-4a1722bb6bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965c52ff-0be9-45fc-8abd-ca0b3538f477",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76792ec-cf1f-421a-9e1e-67effa810c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fac1c18-9db0-46bb-9dee-1209e99f6b18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7d547c-08af-42fc-9408-b0f570a43fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9fd158af-5a0d-4b2c-944d-02ee3523ea94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "674cf46a-a9b9-4507-a38b-66b2218135ac",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "409ded3f-f161-458e-a50c-856d5bee21e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a05c678d-2853-4c14-bbd4-06ae583bf604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e870c478-41a5-48f2-bad5-98aa89194fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e82f80b-1836-4cc8-aa9a-03f022e93428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d59f70a-04da-4c2c-870a-16d29cc0b5be",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a9f62e-b1f6-47dc-8967-cf639b1994d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7cc6daf-863c-4c66-a6f8-a7e5a7df863f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f25ec55-2968-4001-a212-a177dae9cb21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "00604150-678a-4c98-8ccc-cde2f00b577e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49e1e96-ea97-4074-b558-9e52eb262146",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf2bb4a-ff53-4cca-9577-7735d1804ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2454417d-3c13-4627-a263-0712c45292f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48edd779-79ae-487b-91f9-f3064e9b96ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc085e3b-9ff1-481e-a65e-25d286e9906b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d8f1ac-f7d6-4242-92af-7924dee929ad",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68bb42e4-59a1-4149-8551-d5be4dbb86e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49922322-1d14-409d-a5a0-6bf651d06718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc664c2-78b3-4580-b006-dbcaa6589bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a53ebc40-01b4-479f-9556-344cb4854c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a16b46fb-00fd-44d4-8465-5fe4a0ee2524",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c112b9-1517-44e1-8528-ee6fbcd9fe6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "120f0574-a378-4435-9512-b55a31ae2861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523708c5-28b4-43d7-8744-f56cc794b078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "94d7cca2-e4fc-488f-9d7b-696e580ac7b3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fc875a9c-399f-4eaa-be35-b4b2ca4959e2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6a24bcb0-a868-4f06-b192-697512bd36c5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c834b2-9344-47cf-a293-f98d12c8815a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2dad8409-19da-418c-a456-0f4547926220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf35fc5-7dd6-494f-880e-d20fbe71d4d7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "842a6a27-c627-445d-a538-cb28bee6c6ac"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e481ea58-9492-4e15-ab0d-c12b25afdaa5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5aeb99a-2e78-4e23-9f9a-96e4260c48d4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b90e9ab9-510e-4592-9b41-9208ac120bd9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2460c78-1257-4131-9e02-301f804f54f8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2a1d9823-2c27-40d0-af23-3ef8b9026ae1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e55007f1-6446-4e30-99d9-4c06c2d8f02c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "aa5275d8-7e17-45e5-8585-8ed10b05a4d6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "80b42b3e-c323-49ed-a61c-50f3a95cae67"
                }
              }
            ]
          },
          {
            "id": "222ffd90-3a7d-435d-9bb9-67892d432a0f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fa0551d3-ed64-40a8-b44a-8454412ec1ec",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5279b70a-f06f-489f-a198-a7e05b96adee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "54039236-27cc-4f20-9ca6-bed80ca6907b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3b40fb4-4dab-4d02-8619-8a387ddcd8a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ed591a7e-1569-41b1-93da-e22f7f4f3f40"
                    }
                  }
                ]
              },
              {
                "id": "3dc038d8-cb88-45a6-9bb5-75a02675ee06",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ed23601-f959-40f8-aab8-25247e453ba8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "68e5a236-5b6d-435b-bf30-5e04327bdf81"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "700c1850-0edb-4e6f-8c65-9643e5a1a391",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "200a0b30-959b-4af8-ae5e-578de5744c09"
                    }
                  }
                ]
              },
              {
                "id": "464d05e8-d873-4a0d-933f-888448ad704d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4357f57-8038-484e-8975-48cef00e3012",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8d1dbff1-5c9e-4594-83e7-a74e27110ce4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e5181d52-4465-44d2-9cb4-7b63d67d1fff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1bc890e2-b700-4774-9287-0f23ad92aeac"
                    }
                  }
                ]
              },
              {
                "id": "b92338da-b82b-4c5f-9727-bbc1a4847451",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "96648605-8a7d-484b-b933-4e88e2131b48",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ef05277f-0db7-44cc-a596-25348029c65e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0700698a-b7cc-4f8a-af0e-78173f6924cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a19cb071-4c0b-4327-a132-4672e68b02bc"
                    }
                  }
                ]
              },
              {
                "id": "595492bd-c7c8-4649-ba51-6bfb37315623",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a111f67-d8ab-40bc-bd38-34d9e8368ede",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d98e511b-ae6c-4251-a3dd-e202cb6d306d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2fddb945-2e08-4b53-9956-de123c2760ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "548c1556-c788-4eee-b63f-97ed796e2c59"
                    }
                  }
                ]
              },
              {
                "id": "fa24dc58-71c5-40de-9aa5-967f98d0564b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5904e76-f9cc-4219-a0b9-327800aaf69c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e44c1c89-8821-47e0-80d6-66c44db6a2e0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "365aa6a5-7022-4554-9079-a7933bcb9073",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bbb8e5ca-9d83-4a72-ba24-966d12ce0e2e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6961c246-afa0-4e0d-b9b7-0d1e07bc2239",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6be1ce88-feb2-4726-81a4-51663c2a407b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7e18cf86-def7-4140-b022-3b964ee28271",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b26d0301-5ead-4fcd-a0a8-b2fd427bbfa9"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3648ed34-3f08-4a4a-9615-1bdf7721f81d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "83a4b7ce-14ea-4f8b-bcb3-ec57aec6de6a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3de86bea-ad9e-4ba4-8cef-4a1775cc3fde",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d9feed47-7e44-49fd-915d-68cce31e772c"
            }
          }
        ]
      },
      {
        "id": "359c1580-ba09-49f2-8435-375a81e695bc",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "eca5e73d-12bd-406f-a74c-fb0f424d2290",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ffdec00d-2e88-4687-999e-fbc2336cfc87",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5fc84c68-0d81-4939-b77e-a03eed669a09",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7eff4c-51b9-400b-bc33-20c07ce7375f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe66ab9-4054-4c81-b207-abee7596adf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92324501-8bde-4061-a703-3c45c4fbd844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ebf47fb-2fab-4298-a9f9-dff6c6c5f3e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41db5a3c-26b0-403a-bde1-5b6c0799cb99",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7edd5b-f5a0-45fa-8e12-cdf6281d8c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a08ba85e-d42e-4430-b8e5-3b505ecc922c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aae88d4-bf13-4ebb-a52d-9b30d63a923e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "681e4276-d434-4752-bfd6-62c335807d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d2bad3-8bae-44ae-9dab-942d05995efd",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f82d31-50ee-4d1b-927a-40437b353f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47522871-16b7-44f2-81c9-11a8536fcdaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7dbccaa-f914-40f2-a040-ce5b43288ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "13eb3051-0615-4b4e-a25b-f8cb5e113010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549b6325-6ce6-413c-900d-d255f64e148b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9afbe38a-6190-4bdb-b5f6-57203cb55f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97d9aeda-8282-41e9-85ea-c54bb41e61ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12912d06-2c71-4c4a-bda1-34749c949d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f11ba8f-7543-4fcc-8d18-0fbd6064d136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "017b142a-2d5e-494e-8345-cc63845f3854",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9281263a-8d3a-46d9-98ee-f517f8b04044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70d2e01f-2f08-45d9-902f-cc7e0a80022f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01c2bbe-1372-467a-99a7-8147059af803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6a323e5-f50e-4a18-abca-adcf9de93b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6872b549-8a3f-48a0-8b60-80394655a229",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99fd8341-09f8-4e4d-8560-ece8b4305568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c7e0417-0324-43b0-8cfd-de5ec3a6030a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be3cfec-7dad-47a0-a4b3-7185093e705e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "06291dd0-e8d8-4bd7-9bd1-604df01e1cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc6f1d3-2ad8-4148-b58f-8adbd87944d6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06ae7cd-a9dc-48f2-87b2-7804d6db41a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd1cba26-cb86-4fac-8ca6-21c147da73cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4267b9-36c1-47b7-ad05-5bce30162575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "40fbb288-6857-409d-ac37-9d7c876a88e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60702a19-a0dc-491f-8b54-47773be7808c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad286532-d179-4bb5-a5a7-01d58e9837a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d98c33b-abae-4976-8c71-dec890361396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf7827f-1071-4366-b95b-0555753800c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf2cd99f-33ca-41cd-9149-7c39433e24cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e18293-5262-49d2-af9b-5d5e838e40e8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "886be8cd-6087-4deb-ba61-125caf53eee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a720656-8086-4e90-a55f-ac3fb238ecc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab3af41-23b3-4bcf-9462-9fa7f6b50176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "96b243c2-94f8-4778-81ce-418c1796a396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "441d22a8-087f-43bf-9756-eb753e92b0ed",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec04623-647a-4d3d-9d2f-62ea6b379a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e04964e5-acd4-476b-8157-b53fcbee4832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb74236d-736f-459b-b966-c1347ba7437a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e331ef0-983d-4030-aa6d-95f128cc81c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0adf86d-f87c-4adf-a145-44639fef74f1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d7299c-1a78-4727-a70c-6a5e80e716be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c853842f-9eb4-4417-b711-f7f208d5388c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49762a24-3b01-481a-8f34-5ff74e0bb818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c11649dd-6c6d-468d-8be3-cef2bd48372b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0da17b0-ef46-455b-b145-f00d7d8b3985",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e26c0b-81c8-4148-8339-d30778bb96ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d840e679-cd9b-4c69-a94c-3454c63ed01b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cebe670-b505-4133-a957-a3106b6672b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b317270d-b54f-4c2c-b5ca-4fdf3acad6fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90348da1-b8f6-498c-a653-08b787c77953",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "681e7fe7-6ec3-43f8-bf2f-338b01b358c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "999ffbe4-e19d-446b-8eb3-adc1b6d2b0bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f43b0230-24f0-4547-82c2-8264d77ccb75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d10ca7af-abc1-48d7-a116-c77da8b96d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b634548-a230-4111-ab34-0abf6ba2c56a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0e3fe0-1352-44c1-afc7-472bbdf672bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb9c7e54-feb5-42c3-917f-a9d6e30eef04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60236b36-f9ec-4ad4-9358-3bc56dd41b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab40585d-800c-4bd1-a8bc-198809ef0603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a39610a1-b6fc-43bd-91c3-25d2281c74de",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d584228-e206-4040-8ae3-bb945ce8469b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f50f728-e2a8-45e3-8235-859e417eebf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0a9de8-5f19-4dce-8979-1fcce949c12e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2c8a849-7145-442a-ac64-1bb246a9f2ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9041d087-d4cf-481a-98b1-7db45781e903",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6eb093-0718-4a7a-a4de-c92da85444ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c06663b0-d0e3-4bcb-9d17-70d52c2e123c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0009049c-173c-4ef7-9d46-6483e738df00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e595d90-88ca-4895-a994-0b7517a42ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be2eba1-a8b6-41a5-9d7e-01b53d99c449",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a25828-9c60-4149-a0ed-95522d317f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e58609b3-453a-4aaf-a8ce-0a99989a0891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b1e6eb-bc27-4cfa-bbe4-fc86b6628c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "851580f4-cfe1-4d68-a125-e3723c2a3060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5444964-c2fb-4fe5-9439-3a8af9f6889a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f68531-8495-41fd-9f4b-7af986fbb7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be17e7c9-f906-41dc-9b7b-000bfc1c6e44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "325b721c-ceb2-478b-a22a-2a4d8057da57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce1a9921-2fd1-496f-8cf1-54a35a0b7f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee3d77f-305c-4732-b3dc-d794dbaf5425",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e90b8fc6-6e3c-4db6-98a6-6c86804f5e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fcf9896-f020-46ee-aeb7-ad7eadb703b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c533973-b076-423f-b055-9ea045bfdb40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d66d784-16fc-4a07-a103-f4d3d16bdb11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccfa0a29-6765-4973-b365-f91c16b2949c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9095e956-69d9-43bf-aa04-922a6d45947e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46a0a7e3-15b6-4cf1-9211-a63dc3c9b588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ec8adc-d641-4933-a54a-4e92252dc17e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8543472b-bfb1-4e9c-8fdb-6b9ee126fdb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b64ecad-75a9-4706-b1bf-0974f9a2e277",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08fa01d9-5f01-43a2-9e46-7247fd7f7cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "294ed58d-f26f-4cb6-95db-47dad573e94a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eaa27e6-0cda-4609-ae4e-24a15e82850a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f1b4152-bf53-447c-9486-cb944126b48c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "701755cc-3207-4afb-b586-df5016445200",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa30850-6c1d-4aa9-a6bc-571c6af1c3ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b58c3684-ee61-4cf7-8bae-acf48598e80b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4bb9c7c-897d-46c8-9c41-d3fb5ad930ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "552d1d07-37ce-4d88-894c-b87f4b641cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba01bf30-a9f5-45de-8b4b-01cbb81d5840",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60eb07cb-bfa3-4bc2-88d0-8920ed6ff5de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae3bd4a3-16e8-46c0-a111-1b3a2ca0d1bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "521e06ab-5577-40c3-ab40-de0da71f8f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "acabf951-4b42-4380-aba6-e6da2fa97442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d3eedf-e9ec-46f8-ba68-c80d091d65fe",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d5f375e-85ea-4162-adaa-398a73f06d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e549ca6a-ee99-4b14-84cb-860e52dd387d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0cf6c8-137e-4be7-9dce-783006bd6059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21d8a4fe-acb5-4a61-aa0c-f4f5a1447b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a794e623-2c2a-4b34-aaac-ccb88d46e341",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6186e63b-568b-4849-bd61-cca8477b6d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a78909ac-516d-4fb3-a5d3-3551e6b3bdb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6555c0af-f100-4c4a-98cf-f1bcca876f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5284a79c-ce1a-4e13-8d45-fd3ea860d872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a11448-e41a-419a-b84b-8261cbb31f86",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0cb7641-c376-4450-90fe-5797930250a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baf3af09-08cc-4e2e-9127-a7b0c95d7d8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0b4d79-dfe6-4e6f-9e28-54511338cc69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65088e1c-744c-4167-8a37-a18f28e0f524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b531f1e7-6193-445e-8b7d-b4df51fbd330",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "311e23d2-209b-40ec-ba0e-c05aaaa5c077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eb74fa8-4ebc-4640-afed-bf24ea0361d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5554d3ea-5651-4df0-8e7d-a596059dd412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "229a0b58-1ac7-48ac-bd04-13ca10628666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "562c7e3b-a18d-48b5-b471-debe4ce335d3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe81c8c1-0d5c-451d-8ca3-d31ab02a85e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c51dde99-d204-4028-974b-d530bd7b8e3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928d8785-a977-40ac-b715-1bb629a54bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "167dfe88-09fc-4705-b3c4-01b6eb1172b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c24918-f77c-4eb5-b844-a86dd4d66709",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52384479-7686-40ea-80e2-9b8923f18f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb5d90eb-dd18-49fc-9c40-4c0cc3854242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a14bc9d-e6c4-4378-8739-4c8a4c6cb5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0f2746b-05e8-47ae-8f94-7dc79f0bed59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e24e66c1-28a4-4a38-8b1e-18128ee23108",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95632567-4164-4fb7-8cc2-12483ef1dab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "532b0452-6842-45d7-90ee-18b61c8811cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ccc75c-9f57-4e9d-9e27-141c97c5acb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8982788f-bcab-44cf-a093-df44c8a56d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b87f23-3ba5-487e-ac5b-53caf8fecd3b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f936c7e5-887e-4627-bdcd-2a56f30f0601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75d729fe-4c8c-4fb1-b8ae-35c44c11542b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be7a407b-59b4-44c4-8a59-dd22525cdc13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8942c446-be7d-4c64-b52f-1b72ab43a2c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc1f318-3c60-44cc-8d7e-02a6b5f4ac9f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "867ea226-d494-436c-8140-97d1686ff61d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "160701ff-7454-43b6-8373-9d2722d5f16a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7aa67b-8d1f-4b36-bcec-1cca2a2c57e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed57a273-5a51-48f2-9c9d-674dbe81a303"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dd38810b-928d-4254-a58f-507a6078577b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0eb60280-6955-4d77-9e68-6a806ce30548",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d92f89a4-73a1-45c8-8ddf-955e924df439",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "108dc4b9-bff4-4a10-a75e-487ac328e57c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "319921b8-e4bb-4a2f-b35c-63e7ff1996cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4dd412a9-b23a-4f7a-be6a-cc006a1648e5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4efb7f29-1609-4438-a45a-0630a8e01b11",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34deaefa-dbca-4049-8c20-bbd415f01a5b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5f236ee-c960-4a77-8f22-35ce4b3566c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f5be66b-227e-4ad0-b05b-29a205cba7bd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "74f004ce-1a8c-4f37-86d5-4c1a8ba794e1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b17e3c4b-7cac-4bc0-b595-b4891b9df14a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "db66d577-76b0-4cdb-b527-b30a4efa18ef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d30b7e1f-30a5-4c3a-b867-0bc036ddcc37"
            }
          }
        ]
      },
      {
        "id": "c0675a29-11d0-4c3b-a8ed-4d63361f6085",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ee8c5774-fbb4-44a2-a34b-aab3a9533644",
            "name": "Negative Testing",
            "item": [
              {
                "id": "35c79057-b3f5-40f4-afea-0537a85fa31c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "202266d2-4610-4e73-ab3c-5bed392be5fa",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f6200c-5cf4-4d84-929b-a3e4e067214d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c46f08e-e691-464b-a679-1e72c4dd0bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8baf2114-3675-4ab5-8c63-27006046233e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab02cef-906b-44f0-be28-505d4cd4077b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5061b26-0c69-4796-bad2-3fdb864ebcab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "219e12ad-9850-4ea9-8b31-ecf42583f4ba",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fdbda10-3a45-48b1-8bff-5f1250823af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aa5cf27-5672-4a43-9228-f72388124c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec43abc4-3967-41ed-8bbc-0b108a2ff791",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9895e492-e1be-4024-945e-71a352e4756b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ad0678b-1a7b-4a92-a9e1-a1f284bdff2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f97733-fc31-4936-8b21-2febb371cd9e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd9ebc0-8efb-49ea-9856-a6f7df9ead4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23a540c2-368c-4153-8249-1b35ea7c87ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c722f82-fcad-45e3-ac4c-b7f53c97495a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3fa9527-405e-4a44-a72e-9abf2e06c2d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cec0bb78-3aba-4cb2-824d-0bff93fd4f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce83b5fe-de1c-41a1-84b3-a551f1186c0c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46bafd1f-4b6f-445c-b3b9-c2ea9585be20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f9c673c-a700-4e73-a050-d70b81181e5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd98830-da55-4051-83b8-8ed0b14eb9c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ab654f0-ee02-4e2d-bfb3-ba3941a28c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12799d99-9be6-42da-9d2e-cf331236d099",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3210713e-ec01-45c7-91e3-1ff22575c83f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d04a6eb9-7923-4d7e-9be7-e7b89d1c8119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "357f112b-3ca0-4127-9e78-966a9549458f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fc665e3-7ffa-4f88-a04d-0ca874abd200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7686b4f-4b3e-4f38-b73a-a0d1dec5a9f5",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e49f958-ce54-4852-a2ef-827a487bf791",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc1c5634-79ae-44f3-a4cc-bdae78ed195f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c15a2e-bfcd-4d72-931d-d65927ad4f41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7431d950-c2a2-4b72-8788-13505c50f907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80dbe1c1-8401-4e03-adb0-612171c84cf8",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7850829-c006-415c-b8bc-8751cbf4fec3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b74b299-60ec-490f-bfef-4f364ce50f53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14cd1c0a-90ea-46fd-904c-30ba71382dcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86578753-89c0-4e75-9f71-73577bd22425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f731ef1-a38e-4ae9-b3d9-85f87537b14c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65a0207-bbad-48e0-a009-e3241845b99c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55a553cf-dea3-473c-b9a5-cf29a0c84539"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15fab9bd-eb88-4ea3-9cff-575af9571ff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "005f0742-eeca-4f5d-8dfd-b7090c32997a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "745801b0-4353-4469-8b92-d35750350128",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a9555c-1fbd-4e40-aa6b-ca45d7ef39cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba3ff9fc-2229-4778-922e-367d0f8200e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c79ed1-546e-4883-be01-51489c29d30d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "949f7813-8244-467b-aeb5-f3903d289993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d66bc5d-52b5-4923-b2d0-e2d0d73fcc36",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da3eeaa-6d9e-49a3-b4f1-1668c8b761c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98d92d2b-5ae9-4cf7-bc70-a3fd31113d47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c4817fe-c8ca-40e4-9ced-be95c115c2cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "600b7a8c-488c-4e54-b4b5-edb2a53638fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57fe999a-6390-47e8-80fa-e5dcb283e983",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e2df665-b616-4b05-bf64-c33777517436",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b59c745-cf67-460e-b5c7-175200d96437"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b2af27-d6ec-48e1-80dd-df12253b1634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61efcb98-a90b-41ae-9e31-a454ef532322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba860685-3abc-47ae-8552-9917b68bca8b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e3a537-eea0-4d41-876a-ea50c38f6f3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3713bb0d-ff9a-47ba-b809-eab91bcd0223"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22922250-85ca-4319-9fea-0d2e715df9f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b027b574-b304-4d2e-a930-5aabcf539ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c492fb-6ad2-4c88-a1cd-50b3d8bcce64",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc34538-76e0-4c80-88c6-e2dd4a1e1d49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2adf9f1f-0ba5-4a14-901f-ae935485237e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce64646-00fc-4ffa-8790-642b4ec8b4a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "040af9d2-9188-40e8-8868-f9aaa1a40931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ee38ab-e88e-4422-9683-fa8146091997",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1946d784-91ff-44c7-8e8e-269bedbe09ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a6f241-b97b-45a5-9e2b-7ad19e34d14b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44d9236-b899-4b3c-b9e9-c8cfed96c04c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0116ab99-b157-4e01-b003-ecf73d5f7b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e966d0a4-b744-47b2-8618-6953e6124d79",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb1fff72-cf49-4f0c-94f1-7e20618ac789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16ee9713-e2c8-4887-b47d-36d5087327b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de9484a-e291-4768-bf8e-e3da56f08802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8908c247-79ac-45fc-b856-604038bd781d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb994dfd-153d-49ee-9171-b701bc08b9dd",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2cc77bb-8523-42cd-a665-6063bdc08b56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "290b7807-de07-4816-9c59-dfef5864ee1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7adf749e-9645-41f0-a468-68c054735f5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61553cc4-3eeb-463f-b9d8-2c1a52819f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56560387-f746-4264-8d7f-a0e1bc7c551f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ceab0e-5e6b-45f3-b7e0-428477ccd205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39f8c6cd-1db1-43f8-b6ab-f4535dbee78e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfad2298-87aa-4b3d-a419-44fd75cbe00e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c00e693-8a43-4955-902e-deec6d6256d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b8fe42-5afc-40b7-881b-48c5ddbf83fc",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9e7c25-97eb-4d87-9ee9-b24f798b1912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eb25c0f-ed70-4593-bd4c-49afe4e5637e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c25620-940c-4fbb-a1bc-ac5fdc759e99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab5da548-8e4f-456b-a0f3-ca2ef4c263ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2cbf9f-755c-4dfd-ab56-dcee6eb276e6",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc734ca-d5af-451a-a42d-9e850fa6a2a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98bf7a63-1b11-4391-b58b-45621d7493fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a7a962-6b7b-4be2-91ec-1c435716d261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f77bdaa8-d375-4c3f-b804-31339fa99c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e58e4cd-8ba4-4d06-bdde-70ec4b520151",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea1c5d9a-8c0e-4454-b8a8-5146b6153f57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "530e0efc-19e9-4e08-8401-559d30eac7f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4f5e50-c2b2-4753-bf3f-dd2bd8330153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c50592c-2109-414c-9ba0-ebf90db1a781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c67113-47cc-401f-a336-16b70f7e035b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b14d4704-7b07-42fb-b1d1-ef17da74dd9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a06715e-0524-459f-bf58-44466cc4e60e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67cbac1c-c72e-40c3-86a2-1b21b80982e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b1a1471-8686-4580-9f62-06d061fd96c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6cb64c5-f8ee-41c5-9022-1d1b1613a37b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cda39da-ea68-4b03-b88f-060608f45719",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a409f96-272f-4f6c-8e00-9457365a77f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3820bf2e-bcf9-4ab8-b872-6993f18fc4d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31e12b61-1ee6-4a6c-932f-90515181e81c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d3d1f6-34a3-4bc6-8bac-e09913207f62",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b80cd7-1c79-4793-95b7-16e198dffb27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48414474-b5a9-4413-9e0d-f1d97f6cb4ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "865b672d-b257-4adb-b83c-fec4c92eb216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2537f46-d143-4b33-91ed-67cd35327185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4aa3bea-3658-4acb-8eb7-7593774a9c57",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb6f364-8770-493f-bb31-b965fec48505",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36346bf6-bb11-41a2-9272-e504efed578f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f45cde88-2641-4379-af3c-930e17001d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0612633f-b262-44bd-9e53-13a697ee12db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a96d6a3-6490-4aa8-ba6a-749a6364b9fe",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2fe75a-32e7-4aef-88c7-9df6aa3768e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2790bd1b-d115-44b5-8bc0-f41b102b49be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b692a2-c3ea-4322-8470-fdf1f9bc9263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14b40b7f-1921-49da-b818-d1b149291671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c07f42-82b1-4b09-a98c-ea99f52b31f4",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57c6ee9-6f27-4331-a883-f6196cdcb0ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e6e55fa-fd4e-4cd3-bb38-384f982821bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1efa7e6-b33b-4307-872e-be8a8b8bc59a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05c5eae8-0b6d-4832-b1f8-273760fae691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe1d829-74de-4e12-bf9e-1b97573af9d1",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b77610b-f42a-4868-89b2-e92fb7e30d26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "593b2564-541f-4bc9-9c35-ce80ede588ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "705dfa06-31b7-4dbb-a888-580036056894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "956c82de-1db6-4cc5-8054-b21e7f67bb0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3644a2e8-cda9-4442-bdb0-6d674d670759",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6080e379-1063-421a-a3ba-286fb0eef0f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fe2b7b2-9ecf-4e66-87b3-ab05b053a9e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cadde7ce-57c4-4907-af5d-1f48fe8817d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "587c7fc7-f163-46fa-9ab6-730efe701f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d7210f-2896-4107-9cae-04b69b962b52",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b742d38b-b274-434a-aa57-bce2732554aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b0f9a47-1a2a-4ff0-89cb-d78d3c9dc5a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72976884-8393-4a5e-b4e1-f82fc7bbf036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b4c79fc-e446-4877-9e2d-1c59faff51ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3900e385-d98e-49ff-9888-cc5edc744d74",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4342d573-15ff-456f-b185-2cdf6df92553",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9fbd45b-b88f-461f-a11f-03b41d1ef5c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d68aeac-64fb-4323-b1b3-aa445a11be85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "623d25ea-a525-4b5d-b548-af79f033b73f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af066a0-98a5-4a2a-91d7-85899b6517e8",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c614c7-4a7d-444d-b02a-1a191fdfc5ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92e2bebf-4695-4c4e-b354-76f5d1c48ff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "540dd17d-82b1-4cb4-85e8-b957e38b99c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e2c4527-9c60-4a0d-ab2a-82f50dbcd3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f54c3f-8742-4d4e-8516-079fb17f2b28",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f86ea7-581b-45a7-a66c-427200d80bec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "073cbdcd-d02c-48f9-8448-92b045e56ac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8fcaf1-3a78-4f6f-8445-e995ba0baae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbed98d5-5af8-440a-ab3f-58d1a64915be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7318df-8f7e-47f0-bee2-dac938ae86a9",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b89d5acb-2341-46e8-b90a-3e46b376dad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8708fcd-90e3-4dfc-b324-8d288e51f5ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94df1c4d-cf09-4994-96b1-3c6251f98c37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2831494e-20bf-4969-b901-b2b3b7f47a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eaed865-d1fa-4c3d-a675-5a918f2c3897",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46735103-0c63-4b03-9a85-4b8211e7c565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cc77c65-6739-4328-a250-da8b2bf2cf89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "502f9b2c-8904-4b8a-87c3-f2b18e98aeb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "859725c6-976a-4b80-9e22-2ea7a24dda0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef37715d-1443-43c1-817e-fe9cb2328a09",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25858982-a884-461a-a34a-0bf4728fa800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70ec5b85-600b-4b1b-bee3-a36827d30f2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb7f4e9-251e-4095-9fcb-83cd4f85fccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eeb2ed2-f6ed-45fe-9ef3-9c21c74ed74e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f25d86f-b98e-4838-b423-49e52b2c0be2",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7435e3d-dc02-48e5-b7ef-2b9dbdbbb83d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fc39792-41ef-450c-a681-cd3c05a918f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e43012-31ed-4d25-a201-18bc879aa458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb2be1fa-2ed1-4df9-b7f4-4436195b17ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cacb092b-5898-49a1-9e43-2622415e2661",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5db4391-1252-46e5-b06c-a2b30657484d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c9447a6-276b-4564-b6b5-f0ab34bbe152"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "345f550e-f88c-4e1a-b5ac-89b273bd4523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87ea2d3d-15c8-43ba-8d1b-5ce3fd4740b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03406820-ff87-4dd6-aa3e-b61574f81618",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e307f8-c551-4679-aa4f-0bfe218f4980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "406c0d86-5425-4f6b-a30d-e67e80abfc58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c7cc1b-3b57-4c04-82b5-fd992540eac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "420fe9e7-db31-49dd-8ed5-bccb606fe1f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c94430b-716d-419d-95bf-abb46af79a8d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c75994b-2659-4b72-8498-bddf1d25a369",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edbefce4-2bdd-4fae-aa1f-5534c7408487"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f6335f-9786-4797-837c-a414860d4c2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "169deee5-3ada-453f-8395-bf2c01cbf43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b839acb9-b40f-4cf7-9132-f28e0c50ae74",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4cb886-d43e-4639-912c-0c973b4bffd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f58daef8-e569-4279-8547-4d77ad91b123"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4825bed0-ffea-4a0e-a3d5-c88d6dcf60dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21ed8e03-06a4-4e41-aa42-1bdb5d519e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b05f4f-6438-4560-b859-1da236a6f550",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a34ff6-8e71-4f10-95ec-7268feff2a7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bf0c986-37c6-4ebb-ac13-988fbbd39fd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19db606-c4e9-404a-92ab-3e14845dbbc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b35466-0a74-4391-affd-eac6632024be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88fa00a-d49c-4350-9b12-237a96cb070c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302ffebb-8539-4218-a3c6-649c9b622c18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e79170d-71d6-41a4-8f83-272df60b9dc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ddd3a24-62f6-4119-bcce-1b9664535ab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de853a95-b89c-4c9d-b5c2-f5205f644fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24415273-d784-440f-a325-878d8f0ce51c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78de1a51-6dcd-46f4-ad72-b88af85edd08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53700907-0e1b-4e09-8412-19b193bf7589"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf02723-a9c7-41d9-a711-7ddad61764ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b5b1a88-a4c8-4b0e-ab96-bb3eab628554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f659543-14d8-494e-98f1-b1ac0a6582b2",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "888084db-75b5-44dc-b5a5-49b63914d602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7afa8c16-01e0-4bd2-b665-21e3e05062a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98028b1-ff8e-47f0-ae41-3dc9df7e9beb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaac14c0-3b8d-4a78-8afb-a209ef7d0201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9e2206-a5fc-4bdf-a39e-467c3be53442",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce31d68-fbc1-4c78-80f2-7800c6568bec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b386ff8-9815-484c-abd2-dd50ab0dd3b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa37f33-f1bb-48eb-bc79-ad8ec8a63ffa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5cf9685-61b6-446f-a1d4-40086b254d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f414e71c-1737-4671-811a-88531c54438e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4671cf3b-780b-4853-bb39-170cf0713462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f44e253c-f280-4b4c-97e9-69f9338ae657"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4d9f5e-7828-451a-9d66-117688eaee07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2038498f-4b3d-4e5a-9dfb-25d62c36bc33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0021dcbb-c44d-4cb9-877a-5166469934fb",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92372207-f739-4a02-9e2c-00d32bdad536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c1f6019-cc1a-4c93-8dcd-543ec84a4a57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a69a64d-368a-4820-8a03-58950ff86347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5193b36-e799-4a49-aa6d-5b46012efb07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c012328-3727-429a-8aeb-2a296b16e32a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f08a9f6d-da49-4159-899b-a98c24b61cbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1c3a371-fc51-4a8c-8272-04af559219c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c735b567-daa9-40d1-8665-9b95c0a66392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "426848ab-4d1b-44f8-be97-50519b2c9ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca02b64f-fd84-48ef-92fc-659c3b0ecb6f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "587bf7c9-fb65-471d-842c-e2e56233ed44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "711cdfef-d433-4606-a3ee-fa1d80c91e3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f825e8b-ddf7-41ea-b1fc-532bf7cf27fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6821a19-3c57-40b5-9783-862005aa03b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f1ccda-a5b2-4b1d-95c5-0081ac956425",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "260818a3-e9db-41aa-bab4-56bd45b0e833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b0721a-658b-45d8-aee7-077b4707f4d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb48753e-9c3f-4146-a282-79453966d096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7e18699-c09a-4e8d-bd1e-a792fd13f6bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df91b1e2-da52-4d7a-acf9-1df15e3d3914",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c298ba0-61be-4889-8a34-7f2a8ab6dee1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "315684f5-d4fc-454d-871d-5ff7003fa1f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c74355-638f-4695-ab1d-1f29d41ee8a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "221222ce-7f4c-4c65-9560-8a167fe09867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150b42f1-876a-4cf8-bc7d-ed80a659600a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75684e5f-1cd5-4b19-8a04-640b99bc1316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c93b25d-4114-454a-8690-814d54b88013"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9617db45-5d9a-45d7-a390-f7cc966a0302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcd8a5f4-0c2d-4237-8eee-812536b4115b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ede5e54-f050-4ec4-9bb7-93b0215051db",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a631e3-6840-4a28-a15b-19ef817ac414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58eff97f-cec0-4c72-b3ed-49d4d80878f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b59b181-5ba8-47f4-b5de-2085e2da8e2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8abcf86c-7d0c-467f-bea1-15f13700a318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706d516e-873f-4b64-9cf2-6c279a978d72",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56e2f687-1c60-4466-a686-f6d592e0994d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ece89873-792f-4f64-8542-910a93436006"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1807c768-978f-41e1-8dc7-d3368449a366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26653e47-086c-40fc-b0e8-29f119db71f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca938ad-4e83-425a-a895-6803cd5f43ce",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6690b9-7814-4755-af8e-40995d80b952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11f85782-190b-42df-ae45-a1017b2d90e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "628920d2-d295-4782-8662-3f1722507e2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "665ac231-60b2-40a6-a837-d532282e66a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10662c52-e835-40a0-b978-61a409371488",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46960aeb-d8e5-4251-ab61-96e4ae15b3da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c8a63a8-7a0f-4ba3-83eb-e75e6cc6038b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f080e3e1-ec92-4fb4-a994-243ee5fdf294",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a494845-9653-4548-9b15-023917480f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3999bec-4bf7-47a5-a27a-193fbfd36e58",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf30a3b-d720-4681-8010-c4b2d6dd8aa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9d85e18-fcbc-4bed-a748-4dadc033220f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2745f1f0-c855-4462-838a-2c2397a30b13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b21f2606-a41c-4d7a-89b2-958601975403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626c593d-3f77-47be-99bc-04c06e2532e4",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4df097-2c78-4bae-baab-e4628c065261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a60fdc5-5203-4bf0-aaca-6d47dd941f88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd0ad98-9de7-423e-8783-d751cacb8aaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "656884bc-acc7-4c8b-b847-fb9bfcac2c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d813fa3e-38ee-4bef-abf7-201f51eff9d9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ab43a6-1222-46b9-bfd1-7c85d64a0f5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f225d064-0183-4d57-a648-0100381b25ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34162f91-aaaf-4ae2-b8dd-6d0ee9d40460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41ea14f9-3358-4e25-af96-c7f8ff409987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de529b04-f091-4059-a5ea-bb2ebd052131",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861fab03-185e-49e3-8558-b84a1551c297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb7bce31-3339-4576-8386-4aa1a945f58b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d898fe6-b377-4da9-b092-b06099cc038e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c85aaef6-edff-4012-a6e4-63c9b47491cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff058cf-87ce-40a0-a0d3-ad3d4a68f30b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56551eb6-a39b-47ef-afd3-1a3833917b55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fa0a13a-3f20-4862-b870-2293bab8e293"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b319a30c-84d1-43ca-a334-2f51ce2a695c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9494067f-cda9-425a-907e-3aaed876474f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c90ee5-89bb-4fae-b2d3-e43ca304ca94",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7823d0-a964-4f90-bf1b-2b14d0af6d4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4560abba-51d1-41c9-b325-1d7a64c1ab8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b73b686-030b-4340-a15d-466be55d8a63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a5f85f1-e23a-401d-b0ac-71184b3f47fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b7df9b-206f-4fe2-be47-7ca5fd94982a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36aae89f-cf5d-40bb-9157-675056a7cb4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "112efb21-e223-439c-ac85-112f6de7562d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48f6076-aa47-4924-9025-dd13e0af355b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a3eee0f-5949-4bce-a47c-4501e16cb08f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "397f803a-7693-470d-9ad2-c3abc36d776f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7795e5a-67f5-4e12-8da1-123becd5a05d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7679c1f-3f22-4808-9c60-da957f6b6c26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61748881-c27d-426f-b3cc-6688d6100b10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c340475-5e7a-4db4-809c-9adbc17592b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea439a68-3695-455d-9f26-2d802c537de1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d81e6440-4d7f-4f12-baf9-133ff107ff62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eaf9b653-3a6d-433d-86cd-ceb525f81c2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac38d74-7cfd-4db2-827c-ece32aa3d43c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2f81c8a-3492-4f72-acb4-2641e0a8145a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b7f61c-a5de-4d28-8294-7c9caf2d0d96",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6786cdd-e59e-4efe-8597-e33148256eb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7314ea42-627d-4529-b707-d80b7b22b287"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7d549c-9831-4e5c-b8bf-ef669fca9c99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f36b74c8-7238-4091-b382-4c0472525029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab0bf77-69b9-447d-97f3-b81954d980b2",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9804f9cf-5fe8-4942-8120-edcbb35680f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32f3ed43-5caf-454b-b5d8-d4a89766b9a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b8f197-b504-49c8-8743-76cfef4be629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a82850aa-c93d-41a4-ad7a-1717bb421687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5a7150-ef32-4ca3-a863-654ea4069001",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f05e9a0-b593-41f1-a790-adf9f862d79d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cde28688-a133-4ee1-9e98-a9d1b97fb8a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e518b6-3f3e-4b63-aed1-38aabeaf1703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45ddddc5-0588-4e4e-bcc1-6912b33bf35c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a30fbb1-b3e6-4246-8205-6a11c2fd0de8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484d7946-13f4-4ca1-a500-2be42df6f463",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08cb20e2-4980-4ede-b873-08290ab41f75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c08413f-62a5-4cca-b641-419e2c7d08d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecaa648c-fc06-4d79-bc21-9248547f0c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5309c11d-98b6-4d3d-a3ef-9273fdda420f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f4a786-4ee4-477e-8d2b-4a3bcfcc56b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8551bae6-fc54-4239-bf27-71d7c7da7629"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48248c8f-357b-401c-b0d1-072bc737ddc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0044402-c02d-4e56-bf52-5f6e405fe7b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "815e1765-7a53-41bf-a9f3-fd9010ed8f25",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e03ea30-b367-4de3-93ed-db971b94ead2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67e3c613-6160-4501-ba56-14ae021bb2ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a3c165c-fcee-4bb4-8029-72d52f92ebc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99decde3-2b3f-4a78-909d-4a13b5cccbd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f39244-5dc8-4c9d-8299-48916b8bb559",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a32216c1-43c0-4ed9-8377-9fd01f5ed2d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0049f99b-108a-49b3-aae2-08a32019d604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b94fee5-2a6b-4f2a-8fa6-1d866428073f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a986a3a-e2e9-4bb4-8779-ce42eede5522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80288262-0877-48ba-b35d-486e0ad7d889",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12172575-c831-40ae-9b74-146de872af4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b4de59e-6fed-4339-8a6a-61fa9b921d01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc9aeae2-f1a3-453d-a4e2-15c692f9d59b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d491e92-b0f8-4d2c-9b2b-a94ea8843e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31943a2a-18c5-4212-ac61-0fe81875cc23",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91efe7ca-6a65-44a2-bd00-6d2582f87935",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "523efd23-61fb-4d6a-b361-fbc22da024a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58b28e8-cab4-46ea-a323-173470a63cbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dacce7b-3b16-4cec-bd3e-0964394e73d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15cbcaac-270c-4688-ac37-ed3144ee7848",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3188ccb9-48ff-486f-84b1-60130806e1a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76031dcf-903d-4ceb-aec9-cb5309ac249c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a52191e-26f0-4556-8b3b-d9345dc2e407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd4f7844-87af-4c2f-937c-9a34e62cf6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e15deb09-5515-45cc-a0c5-7910f181efb1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202346ca-21b6-4137-846e-bbc9196202a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "757c125c-09c4-476a-a547-13081c5503bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "814d5958-832f-425a-af43-876f90444e4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42bd737f-c793-484d-aeb1-08761304fb3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ab419f-f819-4080-b821-ca06ee995b20",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12cde841-acf8-4a18-b199-1197055c0049",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbf2290b-7645-444d-a9c6-813159ce3f05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed7cf05-fae2-40d2-a8f2-4ea01a50d0e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b435f920-9596-4783-b32f-bf64c73216ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6aa79bf-8328-4ba0-85df-482277df5960",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb802f8-d356-4aba-b058-798f80d9ef17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6606843-0e17-465f-abc6-943e1b3dc0c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd6bbe0-e2bd-4f9c-a442-50138c745a7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f4d0b9f-34ec-4f19-a6b4-9884e7b2c0d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4d1dc06-74b9-467b-8ddc-059fa348230d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd0045f-b865-4a51-b224-af7ce813da7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28672d0e-8f2c-43df-ba66-6c5392d6f7c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "665b9143-5812-462c-9170-1c6eb68f798e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72091b80-048a-4b5c-83d7-3825d11725fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4460589-df51-4b7a-a5cc-e59b5ce5ad97",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8076147d-106f-4952-9bf7-7b90fd6b80ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73957157-23bb-4c8b-b646-7febcf33f085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02076e4-a8ae-4e53-83ea-53f7eb6426bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c004f4c-be08-4f83-93dd-41dc0ce32fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6824c0e9-a608-4bc7-9d0b-e6ea52cc7daf",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7746a325-0df0-486b-85d8-f2e52f2d427a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e723101-ca05-41f3-af1b-7774e1cbf2c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9bccea-51cf-4e7a-b9c2-563b2cc062ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03b3c8de-3f2d-42fd-adc6-5cd85ab31bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba638047-054a-49b0-ab01-bb55c42182f8",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb20f38-9c94-45a0-8e3f-46c4af56a258",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1dec240f-0850-478f-b582-daff0f028592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8001d0-91d1-4235-9459-d05472bce57f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c075e07-39ae-4751-a501-9ae784a2c952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b47fb2e8-78c4-448a-b220-dd08df612ce0",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29fc9770-104c-4afe-9c2b-fba795131526",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f7fe6b7-e5e2-4bbc-80e5-220cd7c6c400"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31112a55-ee67-456b-bd21-410650c15fa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d89a0efa-b03a-4f45-b347-e9ae375b3bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a26505d-4e2f-4ed1-aa46-3de13723cb30",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9568588d-be31-4c21-9930-cd6499351e0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "248a9906-1eba-4428-98d3-da3b103ce380"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "696a73cf-59b3-4fb0-93fa-e6538c1f6120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8585058a-2e50-4e97-845c-69e2cff6fc8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "451d420d-bd5a-4437-a340-573b64406f80",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bccf317c-4421-4e17-a7d3-dc21219951a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6b4ebe6-d616-4bf2-8dbc-0a982d972b7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6fa9d4-eccc-4c16-8492-a706f0525ad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a80bd837-73ef-44a0-8742-e9c82bbb866d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2225a6d-501a-4ae2-9e93-9b900b43a013",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b7110a-bc9b-4cba-8b91-aea8a05d209f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53b398f7-48b2-4f0b-a716-f7a908547e9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0312d4c-9e91-439b-b030-4a51919617f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70506636-4f6d-494b-ad45-107d15bf6ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c2b74a8-c16e-4d34-bb22-20af9c260199",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8388cfd-a29f-4e47-8032-dec0ad70c2b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c8b8faf-0b16-4a5f-bd18-7e761cbf3331"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b63fd7-2d86-44c7-a28a-f8794e83603a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9df88707-355a-4d92-a49d-f7b962d64444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727dd839-ad1a-4241-9d04-24f9e525f3a4",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba9bae2-6fa0-4973-9d6a-b27804a3a737",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c08338e7-5fc9-4e9c-8c3d-f8a67c1b48e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac01d65-3060-47ac-96cc-8fd80254c680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e1ee098-75b9-43f6-984c-7a7e9bdca8d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0058ae3-c2b7-440d-831f-88643a2823e9",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e700d38-9ae1-4a37-a4c3-0dd53aca78d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b5b5f83-5299-42dd-a183-ef12f173fbaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d13b4f-66b5-4f15-8340-53b054df369e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2c04559-5da4-4935-a923-f4687016fdf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e8c4a9-1f4c-4543-9da0-99fa46aacd51",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c1f1d9-fa8a-4e67-87a6-916511edd62e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b28c8327-5d9c-4e8f-80cb-dd172b488298"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1adff394-464d-4087-bda1-2858fec25905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7250b848-c96e-4736-a3e5-0c2e471cd00b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74991124-f087-4c29-bc81-caacc9a74c55",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4fffd2-1420-4639-9dbc-b81d2a6ac0ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2af50ec-8c0f-4495-a96c-e3912cb812f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4c1fcd-00dc-4ed0-ac30-6e4b433cbac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfaaffb7-ff77-405b-bce3-f7aadbb2758f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22cff1ce-a11d-4c90-bea0-bacd38f44b9d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39467809-028c-4d70-ac09-e23be7b2e2ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b63c738b-5f5d-4ebe-a05c-b53ac5588c00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a500e9a9-28fd-45d8-b9f9-08661a90bd9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "686315ce-d771-4f7f-9e08-c904888d3aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05591966-31d0-4614-9e5e-aa559c4b57c1",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5765dcc0-6a55-46a6-83da-58f13a3092fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddde600f-0b1c-432d-9e64-574c30ed7b06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "110ae0e5-1d64-4218-a0c0-2b512c0d1ef8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d43c615d-f755-4768-b052-cf13ebe7e114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf67afa-8284-4350-ba43-8548a5c76733",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ccfdd1b-dcd2-4e06-839d-14586565a39f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f74837e-0499-4ac1-86b0-ff3364289bd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "807ecfc3-b0b2-4de1-aafe-39b02dc14768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24f6a754-8ab0-4dae-a0c8-7819d19b6714"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "efe3c0e5-4749-4715-997e-38528cbd3138",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51f869ea-d89b-4a0e-ac76-336df3399b3f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4adfcd04-3ccf-4314-bc09-4c299577016e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c2e7272b-0bf2-425b-b7a4-8dcb4af7524f"
                    }
                  }
                ]
              },
              {
                "id": "ca0a7288-ef59-45c8-99a3-82e9448eb48b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "27191bcb-cd43-4cdc-a056-2b7977cdc02d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03a03cd-277d-43ba-ba43-4e2c464f0724",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f8e49c23-f43c-4629-b4cb-646b9e615864"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7fa9cc-d215-4355-b7fe-f0e8884866ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a5ae7d16-34a9-4de9-83b6-75abe3826c90"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7cf6736e-45db-4310-a2ae-a9894d39b7d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88230fd5-b031-4820-b35d-0462a1a03b6f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9593e20e-0d08-4ed0-94c2-0d4e643deb46",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2894ac25-37f8-436a-ae89-10a7cfae30d8"
                    }
                  }
                ]
              },
              {
                "id": "65a38a82-3527-4267-8862-d833d5ce0bae",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "145d7d82-2078-4646-92b6-0085ca08288a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9510971-166b-472f-b0e2-d21247daade3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "36f70d3b-f6f7-45c3-aa6e-bc8be76198aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e072e4a7-b6b7-4a8c-b6b6-a800f59b6a7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9e77b6d-27dc-423b-ab80-b3c3c93003d9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b27ab81d-cdce-463a-9288-c769c1d103d8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8f781d4b-7422-4b90-b393-d32b3f2ac498",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c739900-a3b0-44af-afef-a00b23294f34",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c1f73300-307a-43c4-8be2-fc60d8fa452d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a88646cd-dfbc-4f1f-bc8a-72a4fe0401dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7be8a20c-d6bd-4bdd-9071-da0a1a1d1909"
                    }
                  }
                ]
              },
              {
                "id": "477d2b33-eebd-4082-908e-dea6b89b65c4",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4cea937-c268-4ff9-81c8-6427400b59a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8cf75b1b-13a7-41aa-827a-6a327d81b636"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e862b9c-0983-4c03-914c-15b7fb85cb51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db363d76-904e-4948-bf99-bc63b9e3b9af"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e60fab79-f5ff-42c4-ae4c-dfa9568d1ba6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e77a6c17-c71e-49a6-9a9a-82205659212d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "af3e975c-832e-4d6a-82c4-9b19a20a5108",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7bf65ab6-d75d-48d2-8810-f8ce32a6199d"
            }
          }
        ]
      },
      {
        "id": "820983e5-612d-4fe2-bde4-1031a2883294",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "31440ae9-65df-451a-88f7-cb076e202065",
            "name": "Negative Testing",
            "item": [
              {
                "id": "140cb329-ceea-47e9-a8ad-2512c59723cc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "86a9a845-a6d9-4d67-8589-1a06e0988fae",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbbd213b-9e2d-4577-b8a2-8f576b410e3d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "10316421-80b3-4c4c-91d1-9d01011d8832"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d5420f-2e5b-4aaa-a186-3cbae40a4bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6924eb76-1cd8-4f98-8a50-65b18f57bb3b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff1e0043-a462-4fff-bf16-ef50d572e18a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0bf31be-6e92-4b80-8294-5a02b1c08d35"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "79333a97-667b-4337-bfd6-9cf604456a61",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0568c31d-f4da-4f4a-880d-36c3f4c98f19"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6572cbea-8263-4b37-9afc-3a61dc31773f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "932a29f3-1fbe-44ae-897b-413a0fc900e2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8200fee8-6156-4c67-9e65-659b1699c777",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "012485f4-90ee-4797-b018-a2f9bdae48fa"
            }
          }
        ]
      },
      {
        "id": "ae3644e6-f6aa-476c-b181-abb14035e5c4",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ca881845-1141-4ffe-996d-ad4912cc2c07",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d5103495-327e-4437-ac14-a4c01552e6a0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "74b13cb8-161d-4383-b386-54173fa46c53",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8b4ad1-d7bf-4113-b427-53a60ba84758",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c524584a-70fb-4122-90e7-08b731767852"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40629a8-9623-49a1-a410-d6ccec036ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb272c1f-4e1d-4498-beac-157e7d7e1fd9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d21463d-dac6-4d1e-902e-2ae61ca42d56",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee3b9591-098d-4608-9021-2850fbdc3cc6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d72563f0-1b5d-4a67-85f8-b3aff2e24129",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e1ec5ebd-821d-4e27-bddd-44fa3606f58b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "28527e9a-5fc9-453c-9f91-b87e9311fee5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0080da71-212e-4246-9ac9-c2f5b08cc101"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce8a2f70-30f1-4e0b-bd94-791443e9da2a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3521da4c-bff1-4fa2-9b34-d5280fa46446"
            }
          }
        ]
      },
      {
        "id": "7ed2e91b-3b35-452a-9e21-adaecfad9f6e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "30f6c310-3430-4280-af85-05c9af103f60",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a5cd85e5-dbb9-49ce-af79-2de36a3379b7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5d13f5da-80df-4f8f-9618-055b877beaf2",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35cc5227-9df5-4794-9a1b-dd3a105aa851",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b266bc73-b5a6-4596-81c2-c9528270414d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b69fa0-14a7-452b-b368-2879181e37fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35c20204-415f-44a5-91bf-fded864a9c20"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "30d63823-9c4b-4e6b-8b67-e2a26cbb84b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f994ed6-d5b8-469a-8b1a-9b11ace7c8a6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "05bf9155-d342-4d61-8269-88e84bcb4d9c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fbf1282f-7ec8-428d-baac-9a68fec22e8f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c25d70be-7b35-47e5-a307-04cf8e2bf7c3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2238be9b-8525-46f2-8d12-f2be64ee21c9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "603f60a1-05d1-46a1-b54a-0495514c3791",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ce191850-8131-4985-a624-37fcac40b069"
            }
          }
        ]
      },
      {
        "id": "267d441d-ae09-4cd2-84f6-b51a058bc639",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "be6a2438-e97e-4129-a682-9d0c6fb91502",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cabd2d0b-e16e-4087-8a03-d530f79a18c3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "04a852c5-6749-4e5d-9b17-e0238954017e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fcd8708a-a669-47dc-8022-c30d8eaf0537",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "02399b15-f26e-4aa1-baa2-e8e7dbdf9334",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1853,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 246,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 495,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 931,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 922,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 39.56097560975611,
      "responseMin": 18,
      "responseMax": 247,
      "responseSd": 23.840815702427793,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1686962367958,
      "completed": 1686962387817
    },
    "executions": [
      {
        "id": "fd1b42e4-f4b8-4d67-b7a3-bd571cc5e07d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 244,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "65545101-142f-4b1e-8b32-919f27c409d4",
          "httpRequestId": "3331038f-62de-4f73-85cb-2e933b3c4b39"
        },
        "item": {
          "id": "fd1b42e4-f4b8-4d67-b7a3-bd571cc5e07d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9d522995-a1b9-4b54-8ab5-43e13756023d",
          "status": "OK",
          "code": 200,
          "responseTime": 116,
          "responseSize": 0
        }
      },
      {
        "id": "9e858d47-f4c9-4973-b923-cbde09a5e93a",
        "cursor": {
          "ref": "a683ee2f-dc5d-4bee-8276-1cfe005feadd",
          "length": 244,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b5e89679-a62c-4cc9-ae54-614efa364b75"
        },
        "item": {
          "id": "9e858d47-f4c9-4973-b923-cbde09a5e93a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0dda5bc4-7429-4100-a0af-6b757d3e7b6e",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 0
        }
      },
      {
        "id": "ff6ebebf-37fd-4b23-8464-1c66732b7222",
        "cursor": {
          "ref": "b484e218-6a2c-4866-9e66-4989b7fea366",
          "length": 244,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "cdfe7d1c-af3d-44f8-a991-f2a000dc07cf"
        },
        "item": {
          "id": "ff6ebebf-37fd-4b23-8464-1c66732b7222",
          "name": "did_json"
        },
        "response": {
          "id": "cc95d225-f390-4910-b3d6-915def9735ce",
          "status": "OK",
          "code": 200,
          "responseTime": 156,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e30a1f1-6985-475e-8d1b-03f678b67ce9",
        "cursor": {
          "ref": "9f4ce784-5794-4bbc-8c3f-1273dcc7e522",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "73c7374b-de33-4f6b-98bb-b4ee57ed576f"
        },
        "item": {
          "id": "6e30a1f1-6985-475e-8d1b-03f678b67ce9",
          "name": "did:invalid"
        },
        "response": {
          "id": "04b97390-a556-46f3-9b6e-6d835c93d696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e30a1f1-6985-475e-8d1b-03f678b67ce9",
        "cursor": {
          "ref": "9f4ce784-5794-4bbc-8c3f-1273dcc7e522",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "73c7374b-de33-4f6b-98bb-b4ee57ed576f"
        },
        "item": {
          "id": "6e30a1f1-6985-475e-8d1b-03f678b67ce9",
          "name": "did:invalid"
        },
        "response": {
          "id": "04b97390-a556-46f3-9b6e-6d835c93d696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ca6d78-b530-41aa-8c56-de4f4c644db3",
        "cursor": {
          "ref": "a377e6e4-891f-44e7-8938-f9dcc19cacb7",
          "length": 244,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f853fa46-74a5-4c0f-9be4-f487576c11af"
        },
        "item": {
          "id": "f1ca6d78-b530-41aa-8c56-de4f4c644db3",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "90e50287-165b-47d9-a9ce-9578f8d22894",
          "status": "Not Found",
          "code": 404,
          "responseTime": 78,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a4965e-340b-4ba6-bc8e-56d8ce1c1d74",
        "cursor": {
          "ref": "d1b9ffbe-bdfb-45d1-b433-95d55c4bdb78",
          "length": 244,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "309f885b-d0a0-4cbb-b53b-d75423b7e50d"
        },
        "item": {
          "id": "15a4965e-340b-4ba6-bc8e-56d8ce1c1d74",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "05ce715b-401d-409b-87da-7da6ecd1f8bd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 37,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e9aac3-5442-49ac-9ab4-994e97430f8f",
        "cursor": {
          "ref": "b61c95b1-cf50-4b74-a690-44ec268458e4",
          "length": 244,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9d20561d-a7cb-475b-a5c6-b6fe01699003"
        },
        "item": {
          "id": "e1e9aac3-5442-49ac-9ab4-994e97430f8f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9f17ee05-1f72-4ec9-ac4d-62e259a8dcad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c600208a-b5b0-4934-886d-ea0e05541d7e",
        "cursor": {
          "ref": "e705e323-bf68-4d37-9097-68c35f7bba0b",
          "length": 244,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "730788d8-a10f-4e40-9544-184b582e8ff9"
        },
        "item": {
          "id": "c600208a-b5b0-4934-886d-ea0e05541d7e",
          "name": "identifiers"
        },
        "response": {
          "id": "034dbaba-ed40-43fe-b637-89148b46e996",
          "status": "OK",
          "code": 200,
          "responseTime": 208,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0718c9b-6210-4cf2-a00f-86f9079168f9",
        "cursor": {
          "ref": "7ca708a6-6f4a-4002-a927-66496358d692",
          "length": 244,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1ec7e228-aa0f-41e1-8b97-a7325c056f5c"
        },
        "item": {
          "id": "b0718c9b-6210-4cf2-a00f-86f9079168f9",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7a520503-1e3a-40d3-a317-b3c6559e5b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e1830d-b71a-4a66-9333-f376d22a33a0",
        "cursor": {
          "ref": "6683a69c-010f-4c9c-997a-c26c728f5f38",
          "length": 244,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b8d9347a-1703-4eda-82b9-bfc9fcc8eff3"
        },
        "item": {
          "id": "37e1830d-b71a-4a66-9333-f376d22a33a0",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2a22bf43-021d-45c1-8d06-4e08b04dee50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deaf36a3-8dff-4087-befa-7332b9b8db75",
        "cursor": {
          "ref": "4fca30dc-b5ce-427f-847d-dda7dfed6de9",
          "length": 244,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "77433eb8-31ad-4b6c-b1e7-8a184a7e7e42"
        },
        "item": {
          "id": "deaf36a3-8dff-4087-befa-7332b9b8db75",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "06cdd9c2-8135-4660-a800-8d8cbf17f45a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98feaf3b-b860-43ee-a72c-dab3422cd208",
        "cursor": {
          "ref": "20e2ac01-4dd3-4a6b-a224-94a5b10c3488",
          "length": 244,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "cba19cfd-ec3a-4fb1-9d67-77e32c826195"
        },
        "item": {
          "id": "98feaf3b-b860-43ee-a72c-dab3422cd208",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "34a6e881-181b-44a6-a300-02209f30dc7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906f1fa7-2ee0-4c67-9036-f55a1d9ba441",
        "cursor": {
          "ref": "fd7e44c5-cf31-47a8-ad36-57357b83e31e",
          "length": 244,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c9926d4c-ddfb-422d-8420-76279468149b"
        },
        "item": {
          "id": "906f1fa7-2ee0-4c67-9036-f55a1d9ba441",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "77e8d651-fb1c-4799-94cf-d274100e1e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b71481-86ca-4a5c-b9b5-b3b25a2847d4",
        "cursor": {
          "ref": "f2eaab1a-50c3-4ccc-bdac-4e8b3cc719b4",
          "length": 244,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "84e6adc4-ea55-4cbd-8a7d-d3a645f99e2e"
        },
        "item": {
          "id": "78b71481-86ca-4a5c-b9b5-b3b25a2847d4",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f5fd582f-0dc0-4bcd-9b6f-96d13af5207c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0234b0f8-6bde-4157-a3bc-d686d0c889e4",
        "cursor": {
          "ref": "c5cabf14-741a-4db2-b17c-cc45ddabbf81",
          "length": 244,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "160d6dc4-a342-4e82-b23a-1169c7735325"
        },
        "item": {
          "id": "0234b0f8-6bde-4157-a3bc-d686d0c889e4",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "72f22336-ad6f-43a6-a484-278361bf2ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e992e8d-a5c5-444c-8f29-9a051bb8dd56",
        "cursor": {
          "ref": "c93e7245-7da9-4ae8-8e86-80f9ee7290af",
          "length": 244,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "67b72ed9-d158-4c76-a9e4-2233297afa53"
        },
        "item": {
          "id": "2e992e8d-a5c5-444c-8f29-9a051bb8dd56",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "fb67e1ed-7766-43be-81cf-d4e97090e913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f3ef5e-69b5-4bef-85aa-5f7a8210cc06",
        "cursor": {
          "ref": "8c0ee61b-2e6d-4bfb-80f8-0a3b7f7c0ad5",
          "length": 244,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b166dc86-0419-4ab9-9f75-200e671fad72"
        },
        "item": {
          "id": "17f3ef5e-69b5-4bef-85aa-5f7a8210cc06",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "8f0cf5b1-ffe2-41a2-889e-54b10ded2842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ca7fad-24e8-4873-bc6b-ce983927437c",
        "cursor": {
          "ref": "0a7643a3-806d-470c-b636-4b4324f5944c",
          "length": 244,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b7bd846c-16ff-4801-8c4c-402c3fe08b90"
        },
        "item": {
          "id": "43ca7fad-24e8-4873-bc6b-ce983927437c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4dbbec82-9d3a-42ae-a390-46b09ebce778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632f08e7-02c4-4842-b428-82ebdae66dc3",
        "cursor": {
          "ref": "e7a022e7-d797-443f-accf-faed5d013ff2",
          "length": 244,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f0fda534-c1ab-412c-9d4f-c63c03ea5cac"
        },
        "item": {
          "id": "632f08e7-02c4-4842-b428-82ebdae66dc3",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6cd795c8-a31e-4ccf-b238-8acba206ed78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d84afa-2e23-4995-a0ea-1124cad5ac0f",
        "cursor": {
          "ref": "8d1ed903-fb7e-434f-9023-e153a982a9e1",
          "length": 244,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "70aaed45-cde8-4ee1-b6af-d66c569a4d67"
        },
        "item": {
          "id": "05d84afa-2e23-4995-a0ea-1124cad5ac0f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "eca460e9-382b-49e4-bd92-0a45126227c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba3653d0-1601-40fa-9a7a-e255f2d7b945",
        "cursor": {
          "ref": "f33499fe-6f43-4f72-91cb-4b6e1b945732",
          "length": 244,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "59c0a2ff-ed75-4cf4-b677-9e21e97c04dd"
        },
        "item": {
          "id": "ba3653d0-1601-40fa-9a7a-e255f2d7b945",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6ccdaaae-58ad-4430-871a-1d5dd8060218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96a747f-3c1b-4e5b-bbee-3c0896edcdd0",
        "cursor": {
          "ref": "c201c7ad-3045-4fbb-8fe0-480d9b0704ad",
          "length": 244,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "889dae72-1839-4518-9c92-b0d99e5667d1"
        },
        "item": {
          "id": "a96a747f-3c1b-4e5b-bbee-3c0896edcdd0",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "32776ec2-3669-4068-9863-9f06d9559543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84584b66-624a-419f-b572-4e6cc2be8868",
        "cursor": {
          "ref": "7d8e5117-7b6e-4b93-8066-67129fc940f7",
          "length": 244,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "58438ff7-8a15-4c82-a052-7d10f2bf49b0"
        },
        "item": {
          "id": "84584b66-624a-419f-b572-4e6cc2be8868",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "affb5f89-d6c2-4587-9c23-3bc2094f09ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5496b37a-6870-41d7-9897-b1ed3b5e3ed1",
        "cursor": {
          "ref": "736d4bd1-e87f-4957-ad35-aee5d2661cd3",
          "length": 244,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d4e6dfc4-0a1b-4978-b032-7874fd4c3bdc"
        },
        "item": {
          "id": "5496b37a-6870-41d7-9897-b1ed3b5e3ed1",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "bfe6b817-8dd1-42b3-bc45-61f173f291eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a8f727-9623-4051-bb63-98911c225848",
        "cursor": {
          "ref": "c2c07f83-1b41-48b1-83c9-666a08e00429",
          "length": 244,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1f3e7bef-617a-4bf5-88b3-ea2bb5da4d2e"
        },
        "item": {
          "id": "26a8f727-9623-4051-bb63-98911c225848",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8b545754-56ba-4be5-a376-1cae2b98d02c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74abc38c-dcc5-4df3-9f85-47c88c23c500",
        "cursor": {
          "ref": "866e0024-24af-40a8-a8cc-70698ea56176",
          "length": 244,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "75c98df3-fb05-40be-89e2-4ead3f4af571"
        },
        "item": {
          "id": "74abc38c-dcc5-4df3-9f85-47c88c23c500",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "712778dd-21a6-4d29-92de-3b864fc0c8ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6773d1b3-d6f2-4016-a7bf-77d12441493b",
        "cursor": {
          "ref": "a6f19973-a0f1-4eab-9935-489023622dc6",
          "length": 244,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "da0bf1f3-a97c-4be5-ab82-3243cbed1180"
        },
        "item": {
          "id": "6773d1b3-d6f2-4016-a7bf-77d12441493b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9b3d83dc-ea15-4cfc-a156-5a872d664dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d38d1a-6c6c-40cd-857f-7fdf79a419a5",
        "cursor": {
          "ref": "6188e833-80a0-4cc4-8ae7-a292e256c48d",
          "length": 244,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "02cae8ae-014e-4ab1-9b86-8d52e39bca1d"
        },
        "item": {
          "id": "88d38d1a-6c6c-40cd-857f-7fdf79a419a5",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "2cf75786-9f8b-463b-92ae-6aaa8f80c2a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17f6d09-55ae-45e0-8387-1efeaa4536c4",
        "cursor": {
          "ref": "f0bead5e-f81a-404d-b9a6-2b93190be7f0",
          "length": 244,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "8b1bb839-c275-40d6-87af-f7f515321138"
        },
        "item": {
          "id": "b17f6d09-55ae-45e0-8387-1efeaa4536c4",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "76fa396e-3345-48f5-8d22-ec8f38ccf87e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "580c570a-f59a-4c0c-aca5-cfed731c9742",
        "cursor": {
          "ref": "fa5f5ecb-7849-4031-ba97-5b161381195d",
          "length": 244,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "07ecacee-5111-4abc-856d-3595609c8cbd"
        },
        "item": {
          "id": "580c570a-f59a-4c0c-aca5-cfed731c9742",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "00e1909d-6946-428a-9d85-4a80153c8c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81874fb-5000-4803-bbf4-ce294b0d2cda",
        "cursor": {
          "ref": "ccfb3639-796a-4709-96f9-d68e19ed1f14",
          "length": 244,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "02ef4fc4-6fa7-4fba-a577-fd27ce8fa838"
        },
        "item": {
          "id": "f81874fb-5000-4803-bbf4-ce294b0d2cda",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7443719f-a7b8-4ff3-9555-8e9fb4104654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3524de89-43a0-4d7a-a043-9c6298a65ba0",
        "cursor": {
          "ref": "fb089ece-036f-440d-a14a-f31bb195c752",
          "length": 244,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f9b03ad0-3d1a-4fde-93d5-2a633aafe22e"
        },
        "item": {
          "id": "3524de89-43a0-4d7a-a043-9c6298a65ba0",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "bc403fdf-e7a9-4c44-bebf-d7d660c17f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd3a748-891c-41b5-9957-2a7a06509210",
        "cursor": {
          "ref": "0549432c-9539-4f95-b4ab-2209a0798279",
          "length": 244,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "444e62d7-a0ea-41d8-95d9-15273b798c80"
        },
        "item": {
          "id": "efd3a748-891c-41b5-9957-2a7a06509210",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "129242a8-3d67-41c3-b81f-36ee12debea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4700f4c-db4a-43ae-8459-b569de52a965",
        "cursor": {
          "ref": "da5a84b1-5c57-4592-b4c4-d35962362415",
          "length": 244,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b5250585-1773-4933-ab46-918241fc1e12"
        },
        "item": {
          "id": "b4700f4c-db4a-43ae-8459-b569de52a965",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5b49d6c4-7663-431f-bb67-55b16a501783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080e6dbb-3e78-4b5d-b0b9-04a9cb5256ec",
        "cursor": {
          "ref": "4158bc85-0741-4d31-bedb-caa945276e67",
          "length": 244,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "003805b7-8f8b-4cee-b3eb-3abbdd8fb8b3"
        },
        "item": {
          "id": "080e6dbb-3e78-4b5d-b0b9-04a9cb5256ec",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "71a37ee1-ce4f-4af3-9dc2-a48a88d36e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ddfa40-62d9-413b-89b0-ad54359bb26a",
        "cursor": {
          "ref": "b068a266-709e-4232-bb8d-b506c60d3c59",
          "length": 244,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5f750e62-c961-4049-857d-c16fd492c347"
        },
        "item": {
          "id": "10ddfa40-62d9-413b-89b0-ad54359bb26a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f6dc9ca7-74ab-4848-8134-cf2452a59fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79879355-cbcd-43c5-b2f7-bee55c44af33",
        "cursor": {
          "ref": "393dd1f5-ea68-46cb-9b75-733d4134c58d",
          "length": 244,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8c59c2ce-de41-4e61-be4e-627bf25686e0"
        },
        "item": {
          "id": "79879355-cbcd-43c5-b2f7-bee55c44af33",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f69f6b76-6b30-4666-97d9-289e84166043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57fd1ccb-3f10-440f-b568-2ee9b525e762",
        "cursor": {
          "ref": "d742927e-2428-423f-acf8-fd7318a97c29",
          "length": 244,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e55266e8-f81e-4240-b4f3-2f7542b59a2b"
        },
        "item": {
          "id": "57fd1ccb-3f10-440f-b568-2ee9b525e762",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1aadb9ab-e2c1-4dd1-8398-029a1ba82540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19451c7-51a8-4e3c-8d36-53c667cf7915",
        "cursor": {
          "ref": "fc4f6aca-ae70-4770-96e3-cc454e93ad51",
          "length": 244,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1545d84c-52f9-4d8c-b9ca-e1c78fccf173"
        },
        "item": {
          "id": "c19451c7-51a8-4e3c-8d36-53c667cf7915",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f27ce786-9a41-4dc3-a9ae-0130849dbf90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e11108-69dc-4354-a7a6-b3a7797cb892",
        "cursor": {
          "ref": "577ddb4d-8558-423b-a1f9-6702af5e9bf4",
          "length": 244,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "723fa0d4-dfdf-4cff-b6bd-38eec717d79c"
        },
        "item": {
          "id": "10e11108-69dc-4354-a7a6-b3a7797cb892",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "24e8540e-b8c6-46c9-a8c5-5c4629275cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43e502f-1a27-4676-9d40-a54451e2b467",
        "cursor": {
          "ref": "ac2bf11d-1f76-4a7e-a157-c2b4c6d56fa7",
          "length": 244,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5c406380-b20b-46cc-9c13-058dc1ecca79"
        },
        "item": {
          "id": "b43e502f-1a27-4676-9d40-a54451e2b467",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "172b6072-8f02-47cc-b1ad-0391ed4ccce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7142f78e-dfe3-4533-b367-3b1539fff528",
        "cursor": {
          "ref": "664369bc-0a1f-4645-95a3-7311e9be223f",
          "length": 244,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3f2a20f9-21a4-47d9-a1d9-eabe3db4c50d"
        },
        "item": {
          "id": "7142f78e-dfe3-4533-b367-3b1539fff528",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "9d9fe106-e705-420b-a70d-9f4addbd3093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0c11eb-e646-45b1-be6d-c48400f834ef",
        "cursor": {
          "ref": "67cf21eb-49dc-4a80-9a21-4f6840c66cd8",
          "length": 244,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ff243442-b570-467e-8529-08a585abfb7c"
        },
        "item": {
          "id": "3f0c11eb-e646-45b1-be6d-c48400f834ef",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "03ffde3c-9f59-4fa2-baaf-a0983f808a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d04a9b-1227-4359-bd6f-1c6309c28d18",
        "cursor": {
          "ref": "e25e4911-cc36-45fc-82c8-2ec9b025baaa",
          "length": 244,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a8f2a574-2de6-428e-94fe-044a20e2080b"
        },
        "item": {
          "id": "36d04a9b-1227-4359-bd6f-1c6309c28d18",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f706af44-3acd-4fdc-a283-bd9315bd564a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 47,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba43894a-61bd-4cde-ab09-fc448cdc1933",
        "cursor": {
          "ref": "77a0d349-aee1-4db7-9c78-15b5fd37ff6c",
          "length": 244,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5b2d4212-aa76-4619-bd57-b3a6398a4243"
        },
        "item": {
          "id": "ba43894a-61bd-4cde-ab09-fc448cdc1933",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "66ca7c5d-c878-4cbe-8977-6022f79a9a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86f7eed-6a71-4f55-be07-db02bfcd330a",
        "cursor": {
          "ref": "4641cb31-14a9-464a-97d3-675139a99c78",
          "length": 244,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c54c5286-65bb-4492-a582-56ead1ce60b7"
        },
        "item": {
          "id": "b86f7eed-6a71-4f55-be07-db02bfcd330a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9ce68798-0aab-47b3-82a5-1b5352d1ad62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203e5947-2cf0-4d5e-a30d-cf7adaf3aa46",
        "cursor": {
          "ref": "dac46e29-30ce-44d0-8afb-ff2d58e400a2",
          "length": 244,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "99e82055-311c-4a78-8be3-d66c782eddab"
        },
        "item": {
          "id": "203e5947-2cf0-4d5e-a30d-cf7adaf3aa46",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ee4d6dda-f343-493a-823c-78a17bcea41a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5574b0d2-d0f0-4688-809f-8f2165904634",
        "cursor": {
          "ref": "efda795e-f5ff-4ced-a88e-1a0b7e864712",
          "length": 244,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "56b365cc-6274-4b73-9707-639d60497da2"
        },
        "item": {
          "id": "5574b0d2-d0f0-4688-809f-8f2165904634",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e308deb9-2332-45af-88cf-faa78c15fd04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9317c6f-0902-4736-a977-c0c62a59820a",
        "cursor": {
          "ref": "486a7fd0-ecc0-4f7c-b7ef-b3589222205e",
          "length": 244,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ff875efc-6f26-4f17-b498-550d6b1cbf18"
        },
        "item": {
          "id": "c9317c6f-0902-4736-a977-c0c62a59820a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b67bb6dd-1574-460b-9a19-a0e8b3a90ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6031fe4d-4185-4461-a753-10fd7cda7361",
        "cursor": {
          "ref": "a72ccac5-0e93-4933-9b74-3c225c92ec38",
          "length": 244,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "0fdb2175-c313-4ab9-bf59-e8435388ecca"
        },
        "item": {
          "id": "6031fe4d-4185-4461-a753-10fd7cda7361",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0fb17d04-5cab-46db-9945-fbbd4909c8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "575379ae-ffcc-44d2-8696-01f9fb1cc2f4",
        "cursor": {
          "ref": "ea958e03-dfe2-41f8-a1ea-9c2ff68f1aeb",
          "length": 244,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7e272042-78e1-4ebd-a247-824da5ed850d"
        },
        "item": {
          "id": "575379ae-ffcc-44d2-8696-01f9fb1cc2f4",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "4b67e0ff-7151-44b0-958b-22ba05e4d8b7",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 45,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f2b371-a546-4b4a-b882-0ac708bd05ac",
        "cursor": {
          "ref": "e6b7b295-75de-4364-b246-e94681bca4fc",
          "length": 244,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "bc19f6e4-8bf7-49ac-87e6-f85f8b5d0afb"
        },
        "item": {
          "id": "d4f2b371-a546-4b4a-b882-0ac708bd05ac",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "45ee0f06-daa6-48b5-b5fe-006fb8e70c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "470bcb97-906c-4f13-9559-19c55e238d35",
        "cursor": {
          "ref": "99ace6b8-73e2-4d84-a6e9-c365722da70f",
          "length": 244,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0f0c0836-903d-4cd1-b65c-bf4340bc2bae"
        },
        "item": {
          "id": "470bcb97-906c-4f13-9559-19c55e238d35",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "51649382-0052-479e-a9fc-cbc1bfce0dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2cb4f5-c34a-49e0-a49c-c2973ce9add7",
        "cursor": {
          "ref": "ca55a404-4fe5-4f34-b433-9c15ad7cbc72",
          "length": 244,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "fad4a18c-a7af-4d77-b76d-00bd01d876c9"
        },
        "item": {
          "id": "2a2cb4f5-c34a-49e0-a49c-c2973ce9add7",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "67f1d982-3ff1-4563-8f4b-18699638d081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7694af-f2a1-440f-bd48-11ba1e607b98",
        "cursor": {
          "ref": "a637e7c7-d0a1-4258-a76b-83e475fdf114",
          "length": 244,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "fe51c5a1-f7dd-4e2e-b3cc-e4a278b2e27f"
        },
        "item": {
          "id": "2d7694af-f2a1-440f-bd48-11ba1e607b98",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f0fb2279-f59a-4359-a192-333151abbf9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a9ea3e-345b-4e4c-bc4e-febeb21aa847",
        "cursor": {
          "ref": "481f9af2-a478-4a31-85fe-d5c093ec8bb1",
          "length": 244,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c1a5bb6e-6de9-4b6f-b2f0-6eb2a297d91d"
        },
        "item": {
          "id": "19a9ea3e-345b-4e4c-bc4e-febeb21aa847",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "cdc88ab1-2c63-4e16-b4ec-d6fd9ff3b5f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8557d671-9e34-474b-b82f-ecacbfa68e35",
        "cursor": {
          "ref": "a7061522-85fe-4a04-8b53-a76846b918db",
          "length": 244,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "abd35fa9-8c91-4af1-b8e4-61d6062fbe49"
        },
        "item": {
          "id": "8557d671-9e34-474b-b82f-ecacbfa68e35",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f8677ff6-04ce-49bf-806e-116f165c52ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aeba6af-5b16-458c-90f6-e3c91ff249a7",
        "cursor": {
          "ref": "77ae2d53-cd63-4a82-a6a4-8957d41f1bca",
          "length": 244,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0588e4d1-63d9-4aff-beb9-be8abebcee62"
        },
        "item": {
          "id": "7aeba6af-5b16-458c-90f6-e3c91ff249a7",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9403b8ba-d516-4117-9a45-6ffd0f02e47a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e685805-73e3-45fe-a5e0-ddef45abbc11",
        "cursor": {
          "ref": "03991296-8a0e-462b-a4ed-ece0c9925e40",
          "length": 244,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e9c20966-0085-4be8-a6f2-ee1bd78231e4"
        },
        "item": {
          "id": "6e685805-73e3-45fe-a5e0-ddef45abbc11",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "bba96d74-042e-49e8-837b-d79bba99d7f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa9ae96-8f9f-4a44-9c18-c67ed3d6c449",
        "cursor": {
          "ref": "30bd7175-d9c0-4efa-a32d-565fdec1f6cf",
          "length": 244,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "8343de17-14f3-407d-bb6e-eebd8b7247ff"
        },
        "item": {
          "id": "3aa9ae96-8f9f-4a44-9c18-c67ed3d6c449",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b265e57d-cb34-4c76-b828-ff876abb1d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad775d5-92f3-412e-ae91-83129eeda9df",
        "cursor": {
          "ref": "9372a33e-5263-4f92-ad55-7c4228e04892",
          "length": 244,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "33d9445f-15f3-4d84-b69a-aa07a5101d39"
        },
        "item": {
          "id": "1ad775d5-92f3-412e-ae91-83129eeda9df",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1db2d861-8d76-4ad0-ae56-a04787f61fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc47fed-4384-4832-98b3-8b076a434746",
        "cursor": {
          "ref": "54356039-37bf-473b-9788-43962e2bc592",
          "length": 244,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e78177f0-6f73-4bf2-9bcd-b4308e1f37a9"
        },
        "item": {
          "id": "6cc47fed-4384-4832-98b3-8b076a434746",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "50b5dedf-7935-4b77-9990-fbd2b567b1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0b1c05-1cfd-498c-9f52-1ea4dd6769a0",
        "cursor": {
          "ref": "5fb5934d-edff-440f-b0f1-3ac55500dea0",
          "length": 244,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0b41601b-1c09-4988-9b0c-954860c5225b"
        },
        "item": {
          "id": "bc0b1c05-1cfd-498c-9f52-1ea4dd6769a0",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1a60a91d-5801-46a6-b8c0-ad4c9541d089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf8a8ec-7641-40f1-897f-4f043171aa2b",
        "cursor": {
          "ref": "122cce31-5d0d-4338-8ebc-1bed4d01d5f2",
          "length": 244,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4a8a52b5-914c-4728-b034-015f4199dd0a"
        },
        "item": {
          "id": "0cf8a8ec-7641-40f1-897f-4f043171aa2b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "39cc00a2-f908-4ca2-8b5e-f6e4ad23addb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06709749-0865-416f-8183-08621fe0162e",
        "cursor": {
          "ref": "7bd91d45-32b5-4c08-8cb5-245fb14cc38d",
          "length": 244,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7f6b897a-bed5-4210-a223-73f1f8b46f17"
        },
        "item": {
          "id": "06709749-0865-416f-8183-08621fe0162e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f164d732-5d38-4379-8709-f8c43e9b56e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1ec1d8-eb36-4694-82e0-b35bda378520",
        "cursor": {
          "ref": "640ea904-7f1c-4912-8245-0c9b998492ac",
          "length": 244,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "21b9961f-a16b-4fb0-9be2-bdee5b52a340"
        },
        "item": {
          "id": "8a1ec1d8-eb36-4694-82e0-b35bda378520",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "cb452b75-eeb8-4a93-a704-de80eb561eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0679494f-99e6-4a90-8b6b-6cbbd23056d4",
        "cursor": {
          "ref": "14cbad62-7a34-42dd-9547-d673e203be40",
          "length": 244,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c1960c39-295d-4004-abab-b36150746f38"
        },
        "item": {
          "id": "0679494f-99e6-4a90-8b6b-6cbbd23056d4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "818352bc-01fc-4411-b8e4-8f1f9cd1b67a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739240b4-afa8-4092-ba43-213e0e144014",
        "cursor": {
          "ref": "7058254d-6cbe-4c2f-a8d0-8921a1fe360a",
          "length": 244,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c3d895ce-cb42-4dcb-a843-e84d61cce329"
        },
        "item": {
          "id": "739240b4-afa8-4092-ba43-213e0e144014",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "034d0592-e348-4c05-8bf2-0e70379d4200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1541a4-3a7f-4999-94d1-9a18244a168d",
        "cursor": {
          "ref": "edefce68-3554-400c-83c4-b69ae5a29645",
          "length": 244,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e0a70bfa-d7e4-495e-a5a2-9199176c30ee"
        },
        "item": {
          "id": "9a1541a4-3a7f-4999-94d1-9a18244a168d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "57ff8cc2-dfa7-43bc-aad2-08899daea1d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7d585a-a727-43db-983a-0026efa8b659",
        "cursor": {
          "ref": "2b57d054-628a-4e00-a606-ce6768a59124",
          "length": 244,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "88b041a9-a520-450a-85b1-a82732179f3d"
        },
        "item": {
          "id": "6c7d585a-a727-43db-983a-0026efa8b659",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a7910787-d051-4883-9e17-8d0fb20af8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8efd14ba-60c0-48f2-aaba-2cf4412839f5",
        "cursor": {
          "ref": "23cab148-798d-4702-a41c-34f8fb7f9eb2",
          "length": 244,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f9b78a79-ca3a-4792-b458-fc5acbb0aca8"
        },
        "item": {
          "id": "8efd14ba-60c0-48f2-aaba-2cf4412839f5",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5354e2b4-f347-4b0b-bc28-d62afc357906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c7f992-f39a-4f20-9c3f-564705a623b8",
        "cursor": {
          "ref": "20765e1d-f982-4993-b686-8ecbd1c8cb08",
          "length": 244,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d0329034-3834-4ba5-b996-735a38227742"
        },
        "item": {
          "id": "d9c7f992-f39a-4f20-9c3f-564705a623b8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "35b5427a-cefa-47bb-8f0e-6e706ff8db74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413ef60e-12d0-4a20-a7fc-51fec8d91fed",
        "cursor": {
          "ref": "ca9d7911-dd66-48c4-93af-f4a4e7b326c7",
          "length": 244,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c7b47531-ba5a-425a-83c2-3ae2ab376cf9"
        },
        "item": {
          "id": "413ef60e-12d0-4a20-a7fc-51fec8d91fed",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "cf269054-e559-41d1-bfa0-55c311659932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b149cd-8eef-426a-95e9-a1c4e05f24f2",
        "cursor": {
          "ref": "37faacd0-8bab-4d8b-a7b8-185349de0706",
          "length": 244,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "144cffac-ea96-4056-84c7-2e0cf82aa6ba"
        },
        "item": {
          "id": "15b149cd-8eef-426a-95e9-a1c4e05f24f2",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3d34fa5c-52e0-4af5-ad84-f03804607277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48217c54-4722-4219-b2ed-24f103579616",
        "cursor": {
          "ref": "35b3719b-021f-40ac-a8c5-57df6dc77ca6",
          "length": 244,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "9b314cf5-6246-45f1-acbc-3bccf0ac2941"
        },
        "item": {
          "id": "48217c54-4722-4219-b2ed-24f103579616",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0f958ef0-7941-4e9d-b1ae-c50c3fb2e8ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f757bafc-a147-4bf6-a30f-2879cb53121f",
        "cursor": {
          "ref": "b45ab627-07e5-43cd-9059-04f9017d13cc",
          "length": 244,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "47a30855-0f81-4894-a6b8-f6ff348fad1f"
        },
        "item": {
          "id": "f757bafc-a147-4bf6-a30f-2879cb53121f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9c984aea-ca9c-47ea-a23d-0d328caac8a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c20d73-f42c-4456-bd07-45db671f00d6",
        "cursor": {
          "ref": "3076e0d6-feb4-4a16-82a9-a3897db4a152",
          "length": 244,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "abba908e-3a80-450e-9f1e-1753ea906a54"
        },
        "item": {
          "id": "e8c20d73-f42c-4456-bd07-45db671f00d6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ac090778-41d3-4a8a-a411-2100dbe9f5af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ed112b-3e04-4f99-a585-1d099586e0d4",
        "cursor": {
          "ref": "8831b156-b24d-4c98-af71-0601818fcdd9",
          "length": 244,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ed1f9d80-5589-4769-ba05-024ac9d3e50c"
        },
        "item": {
          "id": "09ed112b-3e04-4f99-a585-1d099586e0d4",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "669a2d41-d081-4766-93ed-6f002b38aaf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03004660-7bdc-4a6a-912a-769b6b8dd989",
        "cursor": {
          "ref": "0e9c66ff-0231-4ddd-9c8d-11b3214243da",
          "length": 244,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "8b9273b6-3f2a-4fa8-ae6a-053d357d3fe7"
        },
        "item": {
          "id": "03004660-7bdc-4a6a-912a-769b6b8dd989",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f0f41c66-66b6-49fa-862c-72f33e837e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e8e078-1b22-40d3-8bdb-8c7c4e61ef8c",
        "cursor": {
          "ref": "b035a62e-0783-44fb-8727-bcf1c1349967",
          "length": 244,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "99f8c886-1de0-4616-bcb8-558ea7362ae4"
        },
        "item": {
          "id": "79e8e078-1b22-40d3-8bdb-8c7c4e61ef8c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f6b33e6d-ad51-4149-9bde-bbfa551f6e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea603ad5-780a-4a68-9f28-a494735f87c5",
        "cursor": {
          "ref": "9c660641-8dcf-492c-9b93-55b73c1108a6",
          "length": 244,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c8f29781-54f0-41ea-9832-2f0ecde10012"
        },
        "item": {
          "id": "ea603ad5-780a-4a68-9f28-a494735f87c5",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4a930855-d301-4e45-ab98-926debbc3dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "601f6f45-75a8-4bfd-82bb-791d03f3a12d",
        "cursor": {
          "ref": "80c1d3fb-756b-49b4-8b6b-7f70440f2c7a",
          "length": 244,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "05f93e64-eb05-4f99-aa26-54da4d03dc6b"
        },
        "item": {
          "id": "601f6f45-75a8-4bfd-82bb-791d03f3a12d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "17565365-50d9-42ca-b578-e8736a592429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8985887c-a913-4644-a7e9-55e4cd5dfdca",
        "cursor": {
          "ref": "750af6bd-79b2-4bfe-ba15-21f4ef623ac3",
          "length": 244,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "750f904c-96fa-478f-93e2-cd0239e2bfdb"
        },
        "item": {
          "id": "8985887c-a913-4644-a7e9-55e4cd5dfdca",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6977a9ea-76ef-4c39-96fa-b68a41533ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d99ff0f3-2fcb-4a9f-a8a5-de1970a26912",
        "cursor": {
          "ref": "cb222670-5e46-471c-b887-d39b5211be9e",
          "length": 244,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ec000cde-8ecf-454d-abc4-1ecc8b697d61"
        },
        "item": {
          "id": "d99ff0f3-2fcb-4a9f-a8a5-de1970a26912",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b2eda7f9-f4a2-4bbd-a3c8-ff4fb545ce60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d91523-a7f9-46d7-bfd2-a762d79ff892",
        "cursor": {
          "ref": "c7946d64-5185-41c2-aee9-88b260b1d4ca",
          "length": 244,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "29ed0492-152d-4bf8-a395-460f583db29d"
        },
        "item": {
          "id": "32d91523-a7f9-46d7-bfd2-a762d79ff892",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "eabe4a44-c817-4b38-94a4-53cd4c2d5b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a748e8-318e-4508-a99e-642e36173823",
        "cursor": {
          "ref": "8c03982b-3c02-4a94-9c8c-648dbd86f1bc",
          "length": 244,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "705188e6-1229-40ab-bcee-fdea908f3395"
        },
        "item": {
          "id": "21a748e8-318e-4508-a99e-642e36173823",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2c8761a1-ef23-45ff-9fd6-e4ba00033561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599726a4-00a2-4c1e-9c40-516885db4226",
        "cursor": {
          "ref": "b11acfd8-f44a-4e7e-bd4a-0ca5ddab2e32",
          "length": 244,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3d463e32-952b-4266-8d70-97030b91f71d"
        },
        "item": {
          "id": "599726a4-00a2-4c1e-9c40-516885db4226",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "df44a8b3-b30a-46bf-882a-9af0602be99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bedbdc59-9bb0-474c-a6c6-5b55efd13aea",
        "cursor": {
          "ref": "49b2a4ab-3679-455d-92d4-dc097bec4a9f",
          "length": 244,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "562e6f96-8215-4e41-aaf4-cc31e91e9526"
        },
        "item": {
          "id": "bedbdc59-9bb0-474c-a6c6-5b55efd13aea",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "746aedf6-b57d-4c26-87e7-7300433beb03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6707054c-9987-475f-b3d2-d8275117332e",
        "cursor": {
          "ref": "0bb89abe-1731-4e55-b55e-603a6796cabb",
          "length": 244,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e3c0ca53-7c17-4826-a220-c297b9fc43b7"
        },
        "item": {
          "id": "6707054c-9987-475f-b3d2-d8275117332e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "60a0aae2-70a4-4491-ade4-80cf1ad154f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881f8437-fa1b-46ec-8ca5-2ed15dfef742",
        "cursor": {
          "ref": "fcdd8fc2-5bcc-49f9-a4b7-0d86f4727205",
          "length": 244,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8477e276-f7ba-4066-8a53-7924be89346e"
        },
        "item": {
          "id": "881f8437-fa1b-46ec-8ca5-2ed15dfef742",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "5fddfa32-f090-42f9-bfd4-d207a2769563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5032ff8-cf7f-49dc-9008-8d667ce3338a",
        "cursor": {
          "ref": "8f514f18-2320-4b32-bce8-5a3d08861fa9",
          "length": 244,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "181ff466-68c0-4233-bf06-bbb1b84dc171"
        },
        "item": {
          "id": "f5032ff8-cf7f-49dc-9008-8d667ce3338a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4912812a-8298-43b6-9422-bd114e2c161f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3a2526-0c41-4db9-b8fe-f5a21b06ddb4",
        "cursor": {
          "ref": "5ebe79dc-0113-41e5-b54a-a818983dca65",
          "length": 244,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f788b44d-e946-44b6-baef-4476e2f4eb67"
        },
        "item": {
          "id": "7f3a2526-0c41-4db9-b8fe-f5a21b06ddb4",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "6536321d-a7a9-45f8-8bf7-bc6126551507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29f2c11-23ce-4077-8d4a-03e3d5a1e052",
        "cursor": {
          "ref": "34a9c637-d172-4319-985b-475085e1bea7",
          "length": 244,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "9858a50f-b456-4cc2-9c23-59f0561c4476"
        },
        "item": {
          "id": "d29f2c11-23ce-4077-8d4a-03e3d5a1e052",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7f99cbed-be98-4dbb-bb04-3048f8de5c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "134110c4-1be6-4897-b0c8-8539d86b6a01",
        "cursor": {
          "ref": "36c17693-4099-4bfb-8380-dcee72e95496",
          "length": 244,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2b83c02f-b90a-4541-8ac9-67cde8ba4641"
        },
        "item": {
          "id": "134110c4-1be6-4897-b0c8-8539d86b6a01",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "dcf629d9-edda-4834-922f-b78e528d7ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965c52ff-0be9-45fc-8abd-ca0b3538f477",
        "cursor": {
          "ref": "adacca45-a118-4ad7-83ad-370159c21cee",
          "length": 244,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ee69b683-7715-4f94-b9cf-2a174fbc0fba"
        },
        "item": {
          "id": "965c52ff-0be9-45fc-8abd-ca0b3538f477",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e0c47be3-03da-4c02-bab8-cd8818be2c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "674cf46a-a9b9-4507-a38b-66b2218135ac",
        "cursor": {
          "ref": "2df6e713-d38c-4904-8e95-2bcc184ca47e",
          "length": 244,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2af3161d-f5fd-41ab-aeb7-3c201a5eb1fb"
        },
        "item": {
          "id": "674cf46a-a9b9-4507-a38b-66b2218135ac",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5faf762c-546e-4549-84f5-7133e1c953de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d59f70a-04da-4c2c-870a-16d29cc0b5be",
        "cursor": {
          "ref": "c138c607-d44d-4ec8-8b36-0d5c1bb34f18",
          "length": 244,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5ea0f6a2-b235-4e28-b707-435ef705f0ba"
        },
        "item": {
          "id": "1d59f70a-04da-4c2c-870a-16d29cc0b5be",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "73f99b38-e991-4031-b5ba-d6c42ffe10ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49e1e96-ea97-4074-b558-9e52eb262146",
        "cursor": {
          "ref": "e46915bd-ef75-4ac3-bebf-7f608082c51a",
          "length": 244,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "82079313-0e75-4d3b-8428-21898b2c5062"
        },
        "item": {
          "id": "c49e1e96-ea97-4074-b558-9e52eb262146",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "8c638e3c-22fd-422c-9b0f-3533754ad536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d8f1ac-f7d6-4242-92af-7924dee929ad",
        "cursor": {
          "ref": "a3c6c6e6-b6e5-484d-a619-7acb1d30482c",
          "length": 244,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8cf16809-3a4b-4e86-9cc4-510e5c16d362"
        },
        "item": {
          "id": "59d8f1ac-f7d6-4242-92af-7924dee929ad",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7ad1ffe1-08df-4a5a-a953-7f9155bce9ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a16b46fb-00fd-44d4-8465-5fe4a0ee2524",
        "cursor": {
          "ref": "d527c830-6d74-4c23-9f4d-2d046231fca6",
          "length": 244,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "fbad83aa-5b41-4bac-9454-1888b9903568"
        },
        "item": {
          "id": "a16b46fb-00fd-44d4-8465-5fe4a0ee2524",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "23cbba1b-57e3-4feb-a78a-f7cc87aa51ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a24bcb0-a868-4f06-b192-697512bd36c5",
        "cursor": {
          "ref": "74b32b73-836e-4c2d-93ff-c7cfeaa68cab",
          "length": 244,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "661fdf77-4c60-4c7d-adbf-7658097c73e1"
        },
        "item": {
          "id": "6a24bcb0-a868-4f06-b192-697512bd36c5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c07440dc-e07f-4698-8181-93c9191d42f7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0551d3-ed64-40a8-b44a-8454412ec1ec",
        "cursor": {
          "ref": "f5487bd6-a931-4ffe-87b3-ab452cb804cf",
          "length": 244,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6f93fd09-7c47-428a-b114-66e195500cf1"
        },
        "item": {
          "id": "fa0551d3-ed64-40a8-b44a-8454412ec1ec",
          "name": "credentials_issue"
        },
        "response": {
          "id": "4f4cf8ae-6045-4380-9715-d9b6e6b98203",
          "status": "Created",
          "code": 201,
          "responseTime": 55,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc038d8-cb88-45a6-9bb5-75a02675ee06",
        "cursor": {
          "ref": "3205f567-a1e4-443b-af10-af0d0184c04d",
          "length": 244,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ea507753-ef17-4e6d-96bf-d761a9470b4d"
        },
        "item": {
          "id": "3dc038d8-cb88-45a6-9bb5-75a02675ee06",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c021a672-fa55-4c0f-bbfc-32069b8d80e5",
          "status": "Created",
          "code": 201,
          "responseTime": 214,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "464d05e8-d873-4a0d-933f-888448ad704d",
        "cursor": {
          "ref": "10fd5063-8081-4ed8-9d73-747a4813ff20",
          "length": 244,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c858eee3-8258-43d7-ae76-5fd118a0d1b5"
        },
        "item": {
          "id": "464d05e8-d873-4a0d-933f-888448ad704d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f30153d5-7fa5-4cfc-b325-61f3dedeabc7",
          "status": "Created",
          "code": 201,
          "responseTime": 54,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b92338da-b82b-4c5f-9727-bbc1a4847451",
        "cursor": {
          "ref": "52affe52-9632-459e-b970-0a3c34a91938",
          "length": 244,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8e99e086-8d2a-414b-8fbd-5f0327fbee3a"
        },
        "item": {
          "id": "b92338da-b82b-4c5f-9727-bbc1a4847451",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ae15af1b-d077-49fc-bd26-71fde83cf8ce",
          "status": "Created",
          "code": 201,
          "responseTime": 55,
          "responseSize": 926
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "595492bd-c7c8-4649-ba51-6bfb37315623",
        "cursor": {
          "ref": "7e3af138-a927-4389-936f-321f8557f93e",
          "length": 244,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d952e7d3-cd66-49fe-abb3-d1bb47f3602d"
        },
        "item": {
          "id": "595492bd-c7c8-4649-ba51-6bfb37315623",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "2c734a5a-ddcc-4273-b181-8ed0c6332ae5",
          "status": "Created",
          "code": 201,
          "responseTime": 53,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa24dc58-71c5-40de-9aa5-967f98d0564b",
        "cursor": {
          "ref": "655e19b2-85bc-4a6e-aaf8-74baec07db2d",
          "length": 244,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "20585ce1-c83e-4fa4-8b8e-9a77536c8c37"
        },
        "item": {
          "id": "fa24dc58-71c5-40de-9aa5-967f98d0564b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "dd4453ce-66b0-4903-bf9e-a232b4aea2fb",
          "status": "Created",
          "code": 201,
          "responseTime": 53,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc84c68-0d81-4939-b77e-a03eed669a09",
        "cursor": {
          "ref": "20d72340-c6ce-430e-b389-44dbe4c9d6b2",
          "length": 244,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9d38a5f2-b06c-4ee8-9f66-cd11055feb9c"
        },
        "item": {
          "id": "5fc84c68-0d81-4939-b77e-a03eed669a09",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c0291dcf-6d05-4e6d-bf98-d9d859eaabb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41db5a3c-26b0-403a-bde1-5b6c0799cb99",
        "cursor": {
          "ref": "e9b2faca-9d78-4624-b40a-7b097d07b20a",
          "length": 244,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2c370fbd-7c97-40f9-bcd4-53d338219bd1"
        },
        "item": {
          "id": "41db5a3c-26b0-403a-bde1-5b6c0799cb99",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5d7f8dd3-1cd6-4a95-9fe8-acb9df04a802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d2bad3-8bae-44ae-9dab-942d05995efd",
        "cursor": {
          "ref": "5b8a8554-17a7-45c5-b9a8-633bc4c4e726",
          "length": 244,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5eaed844-e1c1-41ba-a152-5ae4967b6cbd"
        },
        "item": {
          "id": "b2d2bad3-8bae-44ae-9dab-942d05995efd",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7297e95c-5cac-4d0d-a38b-fd86d637c87b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549b6325-6ce6-413c-900d-d255f64e148b",
        "cursor": {
          "ref": "cd678a02-226b-4845-a983-034fbe91d67a",
          "length": 244,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a59d9527-457e-4bf9-b45c-401c37ba87b6"
        },
        "item": {
          "id": "549b6325-6ce6-413c-900d-d255f64e148b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d6791914-81ba-45d0-bd62-13c4c01c742d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017b142a-2d5e-494e-8345-cc63845f3854",
        "cursor": {
          "ref": "22843dbb-cb64-4d22-855d-1718fead0279",
          "length": 244,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b95d53c6-b57f-44a0-ad79-01ada4f4a6ab"
        },
        "item": {
          "id": "017b142a-2d5e-494e-8345-cc63845f3854",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6442cf08-8e05-47fe-aae0-8ddba5819a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6872b549-8a3f-48a0-8b60-80394655a229",
        "cursor": {
          "ref": "03a5cead-cb76-443c-a0dd-439e4ceffe00",
          "length": 244,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5d16a08f-fd3f-4fd9-8458-76c4e0f588fb"
        },
        "item": {
          "id": "6872b549-8a3f-48a0-8b60-80394655a229",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "58a40825-2632-4ba3-a047-51c63b16fa50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc6f1d3-2ad8-4148-b58f-8adbd87944d6",
        "cursor": {
          "ref": "a5f0e74d-b7c3-412c-b521-e9b87aee8b6b",
          "length": 244,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f60ad219-154a-4e07-ad9a-5f2279bacdc0"
        },
        "item": {
          "id": "abc6f1d3-2ad8-4148-b58f-8adbd87944d6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "cb5b0ae5-5edf-4d89-9b77-ea0e088a1605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60702a19-a0dc-491f-8b54-47773be7808c",
        "cursor": {
          "ref": "c9a3a636-0f7b-4745-bf4e-ab27e0b33fda",
          "length": 244,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "794d3db3-26da-43e6-bf4c-a794ebaf4a0d"
        },
        "item": {
          "id": "60702a19-a0dc-491f-8b54-47773be7808c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f4f25dda-a857-463a-bef8-bcf24d792d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e18293-5262-49d2-af9b-5d5e838e40e8",
        "cursor": {
          "ref": "8299a228-90b4-41f3-8818-e752d7e7c6fd",
          "length": 244,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "80596f4b-4b91-4c01-8261-570d2ed84857"
        },
        "item": {
          "id": "87e18293-5262-49d2-af9b-5d5e838e40e8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "611a195e-6ae2-4c2d-98fa-053c670df1b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "441d22a8-087f-43bf-9756-eb753e92b0ed",
        "cursor": {
          "ref": "7f3151ae-74af-472d-949e-574095c4136d",
          "length": 244,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1ce3d49e-c016-40fe-b205-0cab1f4e3ca9"
        },
        "item": {
          "id": "441d22a8-087f-43bf-9756-eb753e92b0ed",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "36c746c2-73ff-4ebd-aa45-1e3f63f127d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0adf86d-f87c-4adf-a145-44639fef74f1",
        "cursor": {
          "ref": "5149e7c0-1da4-4a7d-8698-9bc8c4e246dc",
          "length": 244,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "cd0511ad-2d1d-4fdf-a102-f2821a85b116"
        },
        "item": {
          "id": "e0adf86d-f87c-4adf-a145-44639fef74f1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "14f86633-1f21-4427-a6d1-8ba50df8393d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0da17b0-ef46-455b-b145-f00d7d8b3985",
        "cursor": {
          "ref": "9843030c-29e1-459e-914e-886b40de1f51",
          "length": 244,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e87f2d14-9153-43f9-b2b5-a7edcf1c8368"
        },
        "item": {
          "id": "b0da17b0-ef46-455b-b145-f00d7d8b3985",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f8cb3b01-b793-498d-b4f2-f5722c84a7ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90348da1-b8f6-498c-a653-08b787c77953",
        "cursor": {
          "ref": "9638ae02-330b-452a-8fcc-5585a3d5fc5d",
          "length": 244,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "9e9bf8a3-0e50-49e7-aa71-439dd59cd821"
        },
        "item": {
          "id": "90348da1-b8f6-498c-a653-08b787c77953",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c9d5b165-3f0c-4788-80cc-d3bfbeff63a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b634548-a230-4111-ab34-0abf6ba2c56a",
        "cursor": {
          "ref": "dd83d29f-7ddc-497c-9d02-88c3f579ce8e",
          "length": 244,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d996596d-1835-42c7-8d83-fbd25c568dd4"
        },
        "item": {
          "id": "3b634548-a230-4111-ab34-0abf6ba2c56a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "81947b80-7d7d-4e3e-b326-ca458cd52c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a39610a1-b6fc-43bd-91c3-25d2281c74de",
        "cursor": {
          "ref": "f97ed458-b4ca-4254-8223-f77db3ec75a9",
          "length": 244,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "200f42cf-d032-41b4-b666-15235e98eb7c"
        },
        "item": {
          "id": "a39610a1-b6fc-43bd-91c3-25d2281c74de",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "02e2d17c-7dec-4993-b88f-fa5772ca418a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9041d087-d4cf-481a-98b1-7db45781e903",
        "cursor": {
          "ref": "b62cef99-3681-4fff-a70d-456825b5a821",
          "length": 244,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ca42d797-1285-4365-8201-48caa4d28b68"
        },
        "item": {
          "id": "9041d087-d4cf-481a-98b1-7db45781e903",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1c5e0603-bb38-488c-ba28-128c8374bd1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be2eba1-a8b6-41a5-9d7e-01b53d99c449",
        "cursor": {
          "ref": "26565bdb-37ec-4476-a70b-29b774f2643e",
          "length": 244,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "98819771-da42-423a-bb4a-5994e3c93055"
        },
        "item": {
          "id": "3be2eba1-a8b6-41a5-9d7e-01b53d99c449",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7022a5ab-d0f5-453a-8482-6e4ff2c92999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5444964-c2fb-4fe5-9439-3a8af9f6889a",
        "cursor": {
          "ref": "3b281e5a-211b-4605-beda-dc7073be05a9",
          "length": 244,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "5e38aa5d-a4c6-4578-aa4c-f1976f3705f2"
        },
        "item": {
          "id": "d5444964-c2fb-4fe5-9439-3a8af9f6889a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c7ddda3c-c0b4-4fc9-86d8-a72697b69655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee3d77f-305c-4732-b3dc-d794dbaf5425",
        "cursor": {
          "ref": "36d575a5-3982-44bc-9ef3-20db36e04dbd",
          "length": 244,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "56504131-bfc9-4518-a395-f515bfdb93f5"
        },
        "item": {
          "id": "dee3d77f-305c-4732-b3dc-d794dbaf5425",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e71b66ef-e78f-4119-b362-5a6f37ad9c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccfa0a29-6765-4973-b365-f91c16b2949c",
        "cursor": {
          "ref": "d038b62b-f8ee-4c33-8738-4e1061efc3fc",
          "length": 244,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "22d98cc3-c164-4186-b272-d7da35d47e04"
        },
        "item": {
          "id": "ccfa0a29-6765-4973-b365-f91c16b2949c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "abffb46c-51b8-4535-b4d3-b14c312c65ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b64ecad-75a9-4706-b1bf-0974f9a2e277",
        "cursor": {
          "ref": "f751999c-9043-4b98-8f32-5643b3d4a6ea",
          "length": 244,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2106432a-1186-4bc5-adbd-3171f2f98ce8"
        },
        "item": {
          "id": "3b64ecad-75a9-4706-b1bf-0974f9a2e277",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "355ea442-0403-4f11-a8a4-b432f4ebae52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "701755cc-3207-4afb-b586-df5016445200",
        "cursor": {
          "ref": "4799c0cb-91ce-4b1f-b77b-94c086db7257",
          "length": 244,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0055159d-b2b1-4581-9bf4-5bae14f42f55"
        },
        "item": {
          "id": "701755cc-3207-4afb-b586-df5016445200",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "de7a392d-da3e-4c09-9a1a-1cee80a72583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba01bf30-a9f5-45de-8b4b-01cbb81d5840",
        "cursor": {
          "ref": "d2023f7e-0d00-464f-876f-c0b357f4de0f",
          "length": 244,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e6e7b390-4dc1-47d9-aacb-2a305803b471"
        },
        "item": {
          "id": "ba01bf30-a9f5-45de-8b4b-01cbb81d5840",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b07d2da6-37a7-4129-9b7b-1e11db9fd4c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d3eedf-e9ec-46f8-ba68-c80d091d65fe",
        "cursor": {
          "ref": "401051f4-0b3f-440f-97b0-1cf35c4ba309",
          "length": 244,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "28ad8e1b-fa66-4681-ba95-a5c466c21b72"
        },
        "item": {
          "id": "c5d3eedf-e9ec-46f8-ba68-c80d091d65fe",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "427e3d43-4f5f-4ba6-bef3-4c2db570286e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a794e623-2c2a-4b34-aaac-ccb88d46e341",
        "cursor": {
          "ref": "0a6f8dd4-b58c-4df1-b013-47afcf739b73",
          "length": 244,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "2a4c70ae-0517-480e-9635-4188733ce7b1"
        },
        "item": {
          "id": "a794e623-2c2a-4b34-aaac-ccb88d46e341",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a34192d0-e946-4d00-b6b4-7f9609d3c528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a11448-e41a-419a-b84b-8261cbb31f86",
        "cursor": {
          "ref": "41ee5fef-88a9-4209-8834-c02e8eaec341",
          "length": 244,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "142e50d1-a666-45ea-92c5-e56953fd16ab"
        },
        "item": {
          "id": "83a11448-e41a-419a-b84b-8261cbb31f86",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4359e9a3-59e2-4426-b04e-1664a75f3de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b531f1e7-6193-445e-8b7d-b4df51fbd330",
        "cursor": {
          "ref": "c168b589-8d60-4a9d-9478-62d7b4b70fdd",
          "length": 244,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "615b3bac-cf93-4a6e-97e4-dc4637340e53"
        },
        "item": {
          "id": "b531f1e7-6193-445e-8b7d-b4df51fbd330",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "db4e058b-6c1d-48e1-b09d-990200febe0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562c7e3b-a18d-48b5-b471-debe4ce335d3",
        "cursor": {
          "ref": "f739722a-da71-4ab7-9569-8e2bfa86be62",
          "length": 244,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "0520cb68-31b2-48f3-ab30-8233eff8c2e2"
        },
        "item": {
          "id": "562c7e3b-a18d-48b5-b471-debe4ce335d3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cc1c53ef-ec1d-4387-87d0-0892f81f4f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c24918-f77c-4eb5-b844-a86dd4d66709",
        "cursor": {
          "ref": "ae473513-286f-4c4c-ab64-843c33eba6e7",
          "length": 244,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3e1d64f9-4130-4137-a582-04a38e28a514"
        },
        "item": {
          "id": "25c24918-f77c-4eb5-b844-a86dd4d66709",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e81dac98-13c4-43e5-b6d7-85abc2bcd9e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24e66c1-28a4-4a38-8b1e-18128ee23108",
        "cursor": {
          "ref": "a918b115-5736-4873-b232-34e0177294d6",
          "length": 244,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a1a406fd-7db0-4eea-a2e1-f80a7b8990a6"
        },
        "item": {
          "id": "e24e66c1-28a4-4a38-8b1e-18128ee23108",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1f229706-b5eb-44e6-8806-0223822593d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b87f23-3ba5-487e-ac5b-53caf8fecd3b",
        "cursor": {
          "ref": "2a85b740-64fd-456a-9406-89162a2239a7",
          "length": 244,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0f20dc25-8aa8-4fdd-a03d-7e09c90ded13"
        },
        "item": {
          "id": "83b87f23-3ba5-487e-ac5b-53caf8fecd3b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e2e35f36-b224-4994-b407-f8e98e70b777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc1f318-3c60-44cc-8d7e-02a6b5f4ac9f",
        "cursor": {
          "ref": "2a5f351d-bf48-4338-8984-6c5e6134f65b",
          "length": 244,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "87890178-dede-4fe4-b1c7-91de390b800c"
        },
        "item": {
          "id": "1dc1f318-3c60-44cc-8d7e-02a6b5f4ac9f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "5614ebc7-f7e4-44ff-bf8b-1835ab8c1e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb60280-6955-4d77-9e68-6a806ce30548",
        "cursor": {
          "ref": "9eef38bb-fdbd-491f-a42f-d871f6fa86ff",
          "length": 244,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c9c6dd8e-eb39-432d-991d-2c77db4a55dd"
        },
        "item": {
          "id": "0eb60280-6955-4d77-9e68-6a806ce30548",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "138490e3-335e-45b0-b6c5-6d6e944e7f46",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202266d2-4610-4e73-ab3c-5bed392be5fa",
        "cursor": {
          "ref": "3eca3d9d-b0a4-4619-96c2-7544bf9e2cd4",
          "length": 244,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3b6326ad-e359-44c9-a7d8-ccf125ea3ac3"
        },
        "item": {
          "id": "202266d2-4610-4e73-ab3c-5bed392be5fa",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3ceb7ed7-b3de-4968-a967-e45ea25700c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8baf2114-3675-4ab5-8c63-27006046233e",
        "cursor": {
          "ref": "dafdfefa-5dea-4886-bdc9-7c27e7cdb9b9",
          "length": 244,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "79011a96-8a9d-4161-9258-b70e4e9badf0"
        },
        "item": {
          "id": "8baf2114-3675-4ab5-8c63-27006046233e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f05d5346-71b7-4f5b-8f63-7791c5e061d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219e12ad-9850-4ea9-8b31-ecf42583f4ba",
        "cursor": {
          "ref": "b1ae6f1b-d629-4620-b1e4-ea88094e3182",
          "length": 244,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "2c874612-1831-4ce2-80e1-1546a01b97fc"
        },
        "item": {
          "id": "219e12ad-9850-4ea9-8b31-ecf42583f4ba",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1e13b7a6-4633-4739-83e7-e754bf7eb49a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec43abc4-3967-41ed-8bbc-0b108a2ff791",
        "cursor": {
          "ref": "4d5cd7f2-8b5d-441c-9a80-24652b7aad90",
          "length": 244,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9b5ac1b8-9078-4edb-a000-582b81505280"
        },
        "item": {
          "id": "ec43abc4-3967-41ed-8bbc-0b108a2ff791",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c72d4a40-a555-4b75-87eb-c8544a692a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f97733-fc31-4936-8b21-2febb371cd9e",
        "cursor": {
          "ref": "f8aa1c19-1bd0-45af-b4f2-bcf9330648e9",
          "length": 244,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f981e397-d80b-43c2-b894-c107f86208f4"
        },
        "item": {
          "id": "e0f97733-fc31-4936-8b21-2febb371cd9e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b0632cf8-ec62-4d51-9a73-2020048c1ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c722f82-fcad-45e3-ac4c-b7f53c97495a",
        "cursor": {
          "ref": "5956da4f-f2f1-41fc-9799-7a794cca88ea",
          "length": 244,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3bc9f970-74e0-4863-ae32-f5d2963c0dc3"
        },
        "item": {
          "id": "2c722f82-fcad-45e3-ac4c-b7f53c97495a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8c343b5b-3cec-4814-b136-4b0a73fa20ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce83b5fe-de1c-41a1-84b3-a551f1186c0c",
        "cursor": {
          "ref": "73dcc3db-afd7-48b2-9f7d-a626dbef0cc5",
          "length": 244,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "aef96390-6252-4aa8-a120-40f8e82b2a00"
        },
        "item": {
          "id": "ce83b5fe-de1c-41a1-84b3-a551f1186c0c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9d731a2b-089e-4d64-8010-574413ad207a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12799d99-9be6-42da-9d2e-cf331236d099",
        "cursor": {
          "ref": "4d6e9645-12f7-4d58-93ff-27eaf65fcdf6",
          "length": 244,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "cd1fb151-ef44-4f61-aa27-57e1841ca66e"
        },
        "item": {
          "id": "12799d99-9be6-42da-9d2e-cf331236d099",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a9254475-1dd8-438e-823c-ffbe45fbeb5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7686b4f-4b3e-4f38-b73a-a0d1dec5a9f5",
        "cursor": {
          "ref": "2dc5283d-2a6f-4c4d-b027-7cfa7e0d6001",
          "length": 244,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0bd10aba-8089-42ea-829d-5f8ac56cd248"
        },
        "item": {
          "id": "f7686b4f-4b3e-4f38-b73a-a0d1dec5a9f5",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d8b083c7-65ea-4c5f-b432-dbb0dcd3cca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80dbe1c1-8401-4e03-adb0-612171c84cf8",
        "cursor": {
          "ref": "de9d2f0d-7c72-4b8a-bf99-b503c7981e31",
          "length": 244,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1156ce46-24d4-44ef-85b9-bc32121eb73d"
        },
        "item": {
          "id": "80dbe1c1-8401-4e03-adb0-612171c84cf8",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f9651658-274f-4669-86a2-b96c4b0d76a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f731ef1-a38e-4ae9-b3d9-85f87537b14c",
        "cursor": {
          "ref": "8ab667e1-6c7e-4b10-b825-16597b3fab4d",
          "length": 244,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "fa4a7faf-5a1e-4a72-b965-3816ac97ab9e"
        },
        "item": {
          "id": "2f731ef1-a38e-4ae9-b3d9-85f87537b14c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "dfc4df81-4e4a-4224-a001-21d8de2d3c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "745801b0-4353-4469-8b92-d35750350128",
        "cursor": {
          "ref": "d6378f7a-0ecc-445a-a827-10f335c705ab",
          "length": 244,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4f41549c-e112-44bb-a58f-a77623aecdab"
        },
        "item": {
          "id": "745801b0-4353-4469-8b92-d35750350128",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "65f5384d-3a6e-4b5f-9872-48a8acaf67d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d66bc5d-52b5-4923-b2d0-e2d0d73fcc36",
        "cursor": {
          "ref": "cdc2ecb1-ba98-4a0a-96c1-d2b1ae070337",
          "length": 244,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "436ae757-cb6a-48d1-b0a6-3e5d34135bef"
        },
        "item": {
          "id": "3d66bc5d-52b5-4923-b2d0-e2d0d73fcc36",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "662ae26e-900c-4c83-87b7-82f7d336e2d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57fe999a-6390-47e8-80fa-e5dcb283e983",
        "cursor": {
          "ref": "e22a97a8-c7b6-42e9-b0b4-8a3632e09de3",
          "length": 244,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "fb1ad3d0-ca79-436e-9d63-45213ed7c495"
        },
        "item": {
          "id": "57fe999a-6390-47e8-80fa-e5dcb283e983",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3235ba3b-58bf-4698-9e58-51642949362d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba860685-3abc-47ae-8552-9917b68bca8b",
        "cursor": {
          "ref": "2e52e8ac-3a88-401c-a4a2-2e1b78dccea8",
          "length": 244,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "bb37ab27-9388-4885-9527-01cacb1c00b5"
        },
        "item": {
          "id": "ba860685-3abc-47ae-8552-9917b68bca8b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a19bbe03-17c8-4a98-b970-5728ed603705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c492fb-6ad2-4c88-a1cd-50b3d8bcce64",
        "cursor": {
          "ref": "46cee527-c691-4161-8df5-bc46b4247d0b",
          "length": 244,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "93f73a9d-677b-4084-8c85-a02e6cf8b4f2"
        },
        "item": {
          "id": "93c492fb-6ad2-4c88-a1cd-50b3d8bcce64",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "acf14732-af22-4f9e-b7a3-42499051b0c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ee38ab-e88e-4422-9683-fa8146091997",
        "cursor": {
          "ref": "5af93b30-3324-4009-ae35-41e029f7bcb2",
          "length": 244,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "97034752-4f4e-4982-ad6c-f0d50267f961"
        },
        "item": {
          "id": "d4ee38ab-e88e-4422-9683-fa8146091997",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "faa4f2e9-36db-4680-9b4d-5a0d937fbf07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e966d0a4-b744-47b2-8618-6953e6124d79",
        "cursor": {
          "ref": "d1e137e6-a0eb-401c-9c68-cfd6f1415128",
          "length": 244,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "903a6c60-0b4f-4ad8-8e20-0393fb0ebe8d"
        },
        "item": {
          "id": "e966d0a4-b744-47b2-8618-6953e6124d79",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "fdd8a765-8b35-4f01-a9a3-e4631b0c1ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb994dfd-153d-49ee-9171-b701bc08b9dd",
        "cursor": {
          "ref": "46a9b35f-17de-4aa0-b471-1e7893d295a5",
          "length": 244,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "4f7c3a47-6a05-4e2d-b36c-50ad886e4093"
        },
        "item": {
          "id": "cb994dfd-153d-49ee-9171-b701bc08b9dd",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c72f69b1-0494-4ef6-ab60-ddad2f54cf51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56560387-f746-4264-8d7f-a0e1bc7c551f",
        "cursor": {
          "ref": "fab0b2b9-f42d-4c57-b8e6-98a77f53214a",
          "length": 244,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f7270ed4-3813-45b2-8d42-6ca7654c0abd"
        },
        "item": {
          "id": "56560387-f746-4264-8d7f-a0e1bc7c551f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c7fad121-da73-4d94-837a-53aad23e6aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b8fe42-5afc-40b7-881b-48c5ddbf83fc",
        "cursor": {
          "ref": "24cb121e-e0c7-4491-beba-d65971068450",
          "length": 244,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "cda4200b-e39d-4a4e-ba03-c4bda8233d0f"
        },
        "item": {
          "id": "06b8fe42-5afc-40b7-881b-48c5ddbf83fc",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f1b5ed3c-4191-437b-a114-847e18560369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2cbf9f-755c-4dfd-ab56-dcee6eb276e6",
        "cursor": {
          "ref": "7482f133-4217-4715-934e-fa46d30ef268",
          "length": 244,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "4f65c871-752b-4b61-a439-b5a3f4cd90ea"
        },
        "item": {
          "id": "1f2cbf9f-755c-4dfd-ab56-dcee6eb276e6",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "725d75fa-1748-4781-a091-dd5603054a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e58e4cd-8ba4-4d06-bdde-70ec4b520151",
        "cursor": {
          "ref": "43db3bbd-48f8-4070-b5ce-1b94b9c1e83c",
          "length": 244,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "632d8a7a-f3b3-4972-914a-5d05098587fa"
        },
        "item": {
          "id": "1e58e4cd-8ba4-4d06-bdde-70ec4b520151",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "2e62ad01-df8e-4931-bf5e-ec98ff05b93f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c67113-47cc-401f-a336-16b70f7e035b",
        "cursor": {
          "ref": "6641f573-f331-49f5-a988-ea9657086922",
          "length": 244,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "22870452-3a57-4cde-b3bf-b8e3e61b2a3a"
        },
        "item": {
          "id": "47c67113-47cc-401f-a336-16b70f7e035b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "eeab012c-c249-42a6-bd1f-86f86204c01d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6cb64c5-f8ee-41c5-9022-1d1b1613a37b",
        "cursor": {
          "ref": "5531091a-a4ee-44ff-a819-df4269e640b7",
          "length": 244,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ca7bd036-484d-4b0e-afdb-83268c290933"
        },
        "item": {
          "id": "f6cb64c5-f8ee-41c5-9022-1d1b1613a37b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d2776ed3-5534-43de-bbf6-7ea23ed1043f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d3d1f6-34a3-4bc6-8bac-e09913207f62",
        "cursor": {
          "ref": "e545fb13-c71d-4186-8435-989f026c10f8",
          "length": 244,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f9608b49-a3bf-46f8-923e-7470c0d7e867"
        },
        "item": {
          "id": "c4d3d1f6-34a3-4bc6-8bac-e09913207f62",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f2a69801-6ccd-42e8-b876-a5a2f17b81c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4aa3bea-3658-4acb-8eb7-7593774a9c57",
        "cursor": {
          "ref": "5bf38091-bfee-465d-9b7d-aedafc4624ca",
          "length": 244,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "03886ef2-4a6c-40f4-994a-f249556ca7e2"
        },
        "item": {
          "id": "e4aa3bea-3658-4acb-8eb7-7593774a9c57",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "7ecc2a1b-b0db-46f8-8267-8b04e40e7947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a96d6a3-6490-4aa8-ba6a-749a6364b9fe",
        "cursor": {
          "ref": "30bf2963-4e12-4e06-8847-1e13f841bb66",
          "length": 244,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "7aec6691-98d4-4dc3-87f8-313bd1706feb"
        },
        "item": {
          "id": "3a96d6a3-6490-4aa8-ba6a-749a6364b9fe",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "983b121b-6c30-4699-9e50-fa3457d7104b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c07f42-82b1-4b09-a98c-ea99f52b31f4",
        "cursor": {
          "ref": "37ccd8e7-0d7a-4715-abb2-d4efefc000be",
          "length": 244,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6db08a1f-1d4f-4196-a189-eb646284865f"
        },
        "item": {
          "id": "b7c07f42-82b1-4b09-a98c-ea99f52b31f4",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "bc43bd85-9a9c-4242-9fb1-8ae035220aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe1d829-74de-4e12-bf9e-1b97573af9d1",
        "cursor": {
          "ref": "644dc795-a497-462c-9d00-1b5ff39dcca3",
          "length": 244,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "fbf55f4a-cba1-4d3c-a4be-aaf7a948d2ff"
        },
        "item": {
          "id": "cbe1d829-74de-4e12-bf9e-1b97573af9d1",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c3b72805-ff9f-409a-a2b6-9e579f343e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3644a2e8-cda9-4442-bdb0-6d674d670759",
        "cursor": {
          "ref": "24d26b63-c123-46eb-873c-d71be52b7aa9",
          "length": 244,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "dd7579db-0c28-4009-b165-2de7971af66b"
        },
        "item": {
          "id": "3644a2e8-cda9-4442-bdb0-6d674d670759",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "089234e0-c889-425a-ae6e-0884c239e02e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d7210f-2896-4107-9cae-04b69b962b52",
        "cursor": {
          "ref": "c3b17ce5-0d50-49c2-818b-64ba065f1767",
          "length": 244,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "72bc2452-dabe-4921-ae32-d71b31b29c10"
        },
        "item": {
          "id": "63d7210f-2896-4107-9cae-04b69b962b52",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "77f0dc84-f7f9-43a8-a427-01664d51dc11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3900e385-d98e-49ff-9888-cc5edc744d74",
        "cursor": {
          "ref": "83a6bf1b-1c07-48f7-8234-36c4c38b1f95",
          "length": 244,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0017fbc8-d8d7-4f2a-916c-c4d6686d4e0f"
        },
        "item": {
          "id": "3900e385-d98e-49ff-9888-cc5edc744d74",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "633f7d2b-4816-42c0-9c40-f72cb6dd738a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af066a0-98a5-4a2a-91d7-85899b6517e8",
        "cursor": {
          "ref": "2b1b9433-b5d3-4c5b-bbba-b49a827d1ac3",
          "length": 244,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a1936473-82d2-4523-8eb1-97eeb7278bf4"
        },
        "item": {
          "id": "8af066a0-98a5-4a2a-91d7-85899b6517e8",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "17bd9d57-dd90-4b87-a807-0b51a20f7c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f54c3f-8742-4d4e-8516-079fb17f2b28",
        "cursor": {
          "ref": "ef43064a-bddf-4faf-b81e-c810535b7afc",
          "length": 244,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "864900ee-ed7c-4508-acdc-3fe4cbcbea60"
        },
        "item": {
          "id": "f8f54c3f-8742-4d4e-8516-079fb17f2b28",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c98284af-9200-4d75-a78c-8fc4f72137f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7318df-8f7e-47f0-bee2-dac938ae86a9",
        "cursor": {
          "ref": "61bf562f-37d9-48c1-ac46-ef544bda3c60",
          "length": 244,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1a3ba53a-a2d2-4bf8-bbf6-9451752111df"
        },
        "item": {
          "id": "9c7318df-8f7e-47f0-bee2-dac938ae86a9",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "720f553d-0054-41a7-8f6f-18a902080aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eaed865-d1fa-4c3d-a675-5a918f2c3897",
        "cursor": {
          "ref": "28fd17e2-e413-4e53-82a5-8c4f4c130f6f",
          "length": 244,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b633fec6-524d-4a9c-a425-5db510db154f"
        },
        "item": {
          "id": "3eaed865-d1fa-4c3d-a675-5a918f2c3897",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "fce03102-7e7b-4503-a325-adcbde921707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef37715d-1443-43c1-817e-fe9cb2328a09",
        "cursor": {
          "ref": "f8aab046-532d-4119-8e9d-f3cd5409e1b0",
          "length": 244,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b6211eee-0922-4fa9-a8fa-4c0b8aaeeaa0"
        },
        "item": {
          "id": "ef37715d-1443-43c1-817e-fe9cb2328a09",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f52a35c8-425d-4938-8dbc-09b02ba4b34e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f25d86f-b98e-4838-b423-49e52b2c0be2",
        "cursor": {
          "ref": "6c38c69e-d063-4b2b-9ce2-2c638d975502",
          "length": 244,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "24b7692f-880b-45d5-9642-7dbc87f6262a"
        },
        "item": {
          "id": "2f25d86f-b98e-4838-b423-49e52b2c0be2",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "64533a87-e43a-4385-b3e7-149208e4528d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cacb092b-5898-49a1-9e43-2622415e2661",
        "cursor": {
          "ref": "d57cad2d-f5e7-443d-bf4c-ac6a754054f6",
          "length": 244,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9195ffbd-c9fa-4bec-9fbb-33aa6ecdc440"
        },
        "item": {
          "id": "cacb092b-5898-49a1-9e43-2622415e2661",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3a503674-fa59-4c54-b65a-3d3dd6685295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03406820-ff87-4dd6-aa3e-b61574f81618",
        "cursor": {
          "ref": "1317fa28-fad2-4534-b5b1-13217b3043de",
          "length": 244,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f4b4f712-b35c-4930-a4e1-f9b0200eff7c"
        },
        "item": {
          "id": "03406820-ff87-4dd6-aa3e-b61574f81618",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ec446352-1197-4e74-832b-6f8aa94772e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c94430b-716d-419d-95bf-abb46af79a8d",
        "cursor": {
          "ref": "da28fe8a-5139-4c20-a3e3-cb4424763299",
          "length": 244,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c008f7a9-4c69-4a9a-91a6-fbaa8181d18d"
        },
        "item": {
          "id": "0c94430b-716d-419d-95bf-abb46af79a8d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2b1a9d2b-c2ee-43f5-8724-f439deb859e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b839acb9-b40f-4cf7-9132-f28e0c50ae74",
        "cursor": {
          "ref": "951cea0b-2769-4bbe-a991-78ab2e7a3874",
          "length": 244,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b91c9981-d8ce-408a-b4cd-b88967b0ced5"
        },
        "item": {
          "id": "b839acb9-b40f-4cf7-9132-f28e0c50ae74",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3679bf71-3c5b-4045-a935-5d7b7d3d1f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b05f4f-6438-4560-b859-1da236a6f550",
        "cursor": {
          "ref": "d037c8e6-aed5-4a31-9502-3ff803a2717e",
          "length": 244,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "400ea9ba-007c-41ff-997a-589be66d204e"
        },
        "item": {
          "id": "e2b05f4f-6438-4560-b859-1da236a6f550",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d16e85b8-7871-4aa4-95c6-ceef80167b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88fa00a-d49c-4350-9b12-237a96cb070c",
        "cursor": {
          "ref": "97597c7e-1bbf-4ffa-87ce-45b474bda0a9",
          "length": 244,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "317e50ac-a01b-4397-94f8-5ddeec2567b7"
        },
        "item": {
          "id": "d88fa00a-d49c-4350-9b12-237a96cb070c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "2be1e39d-4b8b-4c81-9d50-b940793c4322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24415273-d784-440f-a325-878d8f0ce51c",
        "cursor": {
          "ref": "f890c432-996a-48e4-836d-12a676599880",
          "length": 244,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "633e1ff5-0211-4df2-add8-61d169408255"
        },
        "item": {
          "id": "24415273-d784-440f-a325-878d8f0ce51c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "aeb0e6b7-d9ed-43ec-b309-a6c232b9f158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f659543-14d8-494e-98f1-b1ac0a6582b2",
        "cursor": {
          "ref": "92f53abf-ad2a-436f-abc7-2401448d9b93",
          "length": 244,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "117de9e1-69c5-466d-b754-3da9bd76df1f"
        },
        "item": {
          "id": "9f659543-14d8-494e-98f1-b1ac0a6582b2",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "977e9b07-3640-4649-a048-570cef1e7ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9e2206-a5fc-4bdf-a39e-467c3be53442",
        "cursor": {
          "ref": "77b46174-2027-4ca4-8b6e-b51babb6262c",
          "length": 244,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "71681499-999c-47cd-90b7-044296f76829"
        },
        "item": {
          "id": "2b9e2206-a5fc-4bdf-a39e-467c3be53442",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2ee7e542-77c2-4f57-b969-1aceaa1c3474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f414e71c-1737-4671-811a-88531c54438e",
        "cursor": {
          "ref": "089750e1-9a4f-40b5-8a16-7a7b7fc19854",
          "length": 244,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c5805706-cf31-414f-8cc7-e895e80936e1"
        },
        "item": {
          "id": "f414e71c-1737-4671-811a-88531c54438e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f12636d7-6425-4410-8b5b-ef572cd08f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0021dcbb-c44d-4cb9-877a-5166469934fb",
        "cursor": {
          "ref": "1dafba97-8039-4044-882f-311b292ed5da",
          "length": 244,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "71047f0a-8ed7-42bf-8e0c-86cb22bcedeb"
        },
        "item": {
          "id": "0021dcbb-c44d-4cb9-877a-5166469934fb",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "605eb1dd-e6a7-4853-93b0-6fe74304c104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c012328-3727-429a-8aeb-2a296b16e32a",
        "cursor": {
          "ref": "2d2d53f1-33ec-4485-94e4-ed622f8c0700",
          "length": 244,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4b6602ad-6a4b-4686-a844-4124ae8ac2e8"
        },
        "item": {
          "id": "6c012328-3727-429a-8aeb-2a296b16e32a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "7f8560c9-a1f0-43a5-b672-f150e4596813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca02b64f-fd84-48ef-92fc-659c3b0ecb6f",
        "cursor": {
          "ref": "d371754d-34ae-47c3-90e0-db04918cf16e",
          "length": 244,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "78338caf-a996-4b04-ba85-a65195365f17"
        },
        "item": {
          "id": "ca02b64f-fd84-48ef-92fc-659c3b0ecb6f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5a443eb8-0e1b-44a9-aeda-f0237effe4f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f1ccda-a5b2-4b1d-95c5-0081ac956425",
        "cursor": {
          "ref": "b887340c-3310-4c6e-8682-3b2580f76405",
          "length": 244,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a72d986f-e200-4285-9f6d-5c59fac20952"
        },
        "item": {
          "id": "48f1ccda-a5b2-4b1d-95c5-0081ac956425",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "62cace01-f325-4ff6-9f9e-c4c3de7e5f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df91b1e2-da52-4d7a-acf9-1df15e3d3914",
        "cursor": {
          "ref": "88b4655c-e555-4a74-b286-225e96794b20",
          "length": 244,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "38ddc602-d167-47b6-8141-3ede96837088"
        },
        "item": {
          "id": "df91b1e2-da52-4d7a-acf9-1df15e3d3914",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ed159eb9-6765-4e3a-b484-cd1972a848e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150b42f1-876a-4cf8-bc7d-ed80a659600a",
        "cursor": {
          "ref": "eca2fb5f-a761-4143-9365-4198cd485535",
          "length": 244,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "89173721-7aa6-4b6d-a609-671f456ef656"
        },
        "item": {
          "id": "150b42f1-876a-4cf8-bc7d-ed80a659600a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c3dbfae0-e470-473e-8104-0b6d7d5c1ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ede5e54-f050-4ec4-9bb7-93b0215051db",
        "cursor": {
          "ref": "fb7e925d-24ed-4cb6-99e5-6e8e646d22ff",
          "length": 244,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a6ad28a4-b0ad-45ec-b2a0-ee5b1ae6abe4"
        },
        "item": {
          "id": "0ede5e54-f050-4ec4-9bb7-93b0215051db",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4b946c13-dea2-4088-9e07-5e109e285c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706d516e-873f-4b64-9cf2-6c279a978d72",
        "cursor": {
          "ref": "b60ce83a-ac21-4469-898a-39fc5d38bb97",
          "length": 244,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "44a13fd1-7857-43cf-aa34-1adcad2e790b"
        },
        "item": {
          "id": "706d516e-873f-4b64-9cf2-6c279a978d72",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "7257316b-6735-47a6-a975-31937880fd39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca938ad-4e83-425a-a895-6803cd5f43ce",
        "cursor": {
          "ref": "5749e7e2-6802-4945-b83a-eb3d5eba0a49",
          "length": 244,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c90c1094-cd71-45c3-8e90-5585cfee7eb1"
        },
        "item": {
          "id": "9ca938ad-4e83-425a-a895-6803cd5f43ce",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "cb2b5107-a8b0-4dfa-bc14-25b5e98dc90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10662c52-e835-40a0-b978-61a409371488",
        "cursor": {
          "ref": "7898260d-d64b-4f37-8f2f-ce2173d839f3",
          "length": 244,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "614b0dec-47fd-4188-bac8-9b0c892e04ef"
        },
        "item": {
          "id": "10662c52-e835-40a0-b978-61a409371488",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "41ea7e6a-b010-4f7c-af2a-d2755068f048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3999bec-4bf7-47a5-a27a-193fbfd36e58",
        "cursor": {
          "ref": "1cb5487b-30d5-4033-9ef6-115947231a4b",
          "length": 244,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4c6a9ba3-bf98-4d09-8884-134b1d8b4f16"
        },
        "item": {
          "id": "e3999bec-4bf7-47a5-a27a-193fbfd36e58",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "074aa2f1-2488-4def-a087-a000e93b1787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626c593d-3f77-47be-99bc-04c06e2532e4",
        "cursor": {
          "ref": "58180900-2804-46be-8130-5158dce010f3",
          "length": 244,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4d0a2437-9b8b-4bae-b333-940bd61c8403"
        },
        "item": {
          "id": "626c593d-3f77-47be-99bc-04c06e2532e4",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3de6769c-b673-49bc-b798-d69997b69c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d813fa3e-38ee-4bef-abf7-201f51eff9d9",
        "cursor": {
          "ref": "afec8815-08ab-4682-9b17-718d5de0d9cb",
          "length": 244,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a2594714-a1ae-418b-bf56-506c0b6dd6f5"
        },
        "item": {
          "id": "d813fa3e-38ee-4bef-abf7-201f51eff9d9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "5c700036-7f16-4895-aba1-465bce8e0863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de529b04-f091-4059-a5ea-bb2ebd052131",
        "cursor": {
          "ref": "d1613697-0e49-4501-bbc2-dce285047c1e",
          "length": 244,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4badec35-ba07-4a6e-a96c-232d0207a2c9"
        },
        "item": {
          "id": "de529b04-f091-4059-a5ea-bb2ebd052131",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c170fea5-a152-49a8-9aeb-132821415ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff058cf-87ce-40a0-a0d3-ad3d4a68f30b",
        "cursor": {
          "ref": "2ab5fcc7-929e-4df1-b918-39fe3a6afa0b",
          "length": 244,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6723cfdf-a1c0-4dd5-b6b7-74648d3a1d4e"
        },
        "item": {
          "id": "aff058cf-87ce-40a0-a0d3-ad3d4a68f30b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "cf843da1-60ea-43bc-a03f-b2c1bea4a5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c90ee5-89bb-4fae-b2d3-e43ca304ca94",
        "cursor": {
          "ref": "a718cff7-8515-43d2-a742-8857d10d822e",
          "length": 244,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "5d617d3f-eec7-4c50-83e2-7467eb4f4ccc"
        },
        "item": {
          "id": "60c90ee5-89bb-4fae-b2d3-e43ca304ca94",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8172e86e-c502-4c33-870d-58712f9c58dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b7df9b-206f-4fe2-be47-7ca5fd94982a",
        "cursor": {
          "ref": "61e67fa4-8733-491d-b68d-e3d3b38c4a7a",
          "length": 244,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0ec83d16-2dbb-4012-812c-0a64cf847450"
        },
        "item": {
          "id": "43b7df9b-206f-4fe2-be47-7ca5fd94982a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a1f232ab-2699-4161-a631-3d5b6540a245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397f803a-7693-470d-9ad2-c3abc36d776f",
        "cursor": {
          "ref": "3e0c9aa7-00d8-46e3-bba1-01354885a9be",
          "length": 244,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e1cc9e66-004d-4ce7-b1dc-516eba3efe29"
        },
        "item": {
          "id": "397f803a-7693-470d-9ad2-c3abc36d776f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1023d4bc-cab5-4619-906f-01040c616965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea439a68-3695-455d-9f26-2d802c537de1",
        "cursor": {
          "ref": "91005f4a-da8a-49bc-9bc2-abf9a832fdce",
          "length": 244,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "83318b38-2486-46be-9f7c-bc5fbdf06503"
        },
        "item": {
          "id": "ea439a68-3695-455d-9f26-2d802c537de1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b1a7c125-d5e7-4ad0-8753-dff78aa9e3dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b7f61c-a5de-4d28-8294-7c9caf2d0d96",
        "cursor": {
          "ref": "31594740-ab0e-40a3-9a44-65c67da62407",
          "length": 244,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "22fad394-72d0-416c-b9c8-54daf88d6b96"
        },
        "item": {
          "id": "09b7f61c-a5de-4d28-8294-7c9caf2d0d96",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4023750e-27ac-4573-ba8b-5cfb08259437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab0bf77-69b9-447d-97f3-b81954d980b2",
        "cursor": {
          "ref": "d5fc9fbe-9833-4709-a5cf-933a61cd1fcf",
          "length": 244,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "61d3a8ec-be1f-4aa8-9215-23ccfd52589d"
        },
        "item": {
          "id": "aab0bf77-69b9-447d-97f3-b81954d980b2",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "56c2d288-1784-435a-89f1-5687daa250cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5a7150-ef32-4ca3-a863-654ea4069001",
        "cursor": {
          "ref": "947e7833-f40b-4ebc-aa37-09f1a86d789e",
          "length": 244,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "151832f5-4f6c-41e4-af3c-876c8b898c3d"
        },
        "item": {
          "id": "4a5a7150-ef32-4ca3-a863-654ea4069001",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "80ce410e-6694-4416-aad9-3995de46f84f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a30fbb1-b3e6-4246-8205-6a11c2fd0de8",
        "cursor": {
          "ref": "4ffbe996-8c0c-4969-9663-afccfbf185fe",
          "length": 244,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b29b1de9-4603-46a6-bfb2-4a2faabb583b"
        },
        "item": {
          "id": "7a30fbb1-b3e6-4246-8205-6a11c2fd0de8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "75c0c6cd-a530-4d82-a3c9-5b8d8e37915d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5309c11d-98b6-4d3d-a3ef-9273fdda420f",
        "cursor": {
          "ref": "8f390e9f-f2aa-435d-9dd0-3742bf076480",
          "length": 244,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c44c2b99-2692-44c0-b0e8-eb34425d14c0"
        },
        "item": {
          "id": "5309c11d-98b6-4d3d-a3ef-9273fdda420f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7bec596d-322a-44ff-b5b7-d1eba13d67ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815e1765-7a53-41bf-a9f3-fd9010ed8f25",
        "cursor": {
          "ref": "9fd333fc-827e-4e99-ac73-d5742fb307aa",
          "length": 244,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d8ec5981-3aa2-4c8e-87b5-7de89d95ab03"
        },
        "item": {
          "id": "815e1765-7a53-41bf-a9f3-fd9010ed8f25",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0ad6339a-a271-4b3a-835d-d0c3ad21f725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f39244-5dc8-4c9d-8299-48916b8bb559",
        "cursor": {
          "ref": "d9c0701d-b18a-4013-b839-451d400e8980",
          "length": 244,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5da68c43-9863-4210-83b7-c6e8503a4344"
        },
        "item": {
          "id": "11f39244-5dc8-4c9d-8299-48916b8bb559",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "80590146-e877-4bbd-a1a3-8a79098e9532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80288262-0877-48ba-b35d-486e0ad7d889",
        "cursor": {
          "ref": "c687e1dd-92fd-4622-8cdb-a43486083886",
          "length": 244,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "bf0424cc-c437-459e-b907-457ea756f4c9"
        },
        "item": {
          "id": "80288262-0877-48ba-b35d-486e0ad7d889",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d60b04ed-bf33-418c-9509-486b0ac0693f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31943a2a-18c5-4212-ac61-0fe81875cc23",
        "cursor": {
          "ref": "b3fd421d-edc7-4714-b95a-76d29ee3c4e9",
          "length": 244,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "fd56856f-98cd-4c5a-84b7-06b55ecc0c5a"
        },
        "item": {
          "id": "31943a2a-18c5-4212-ac61-0fe81875cc23",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f1257188-27a8-41c1-9996-da90c785eda7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15cbcaac-270c-4688-ac37-ed3144ee7848",
        "cursor": {
          "ref": "81a8b3ac-c185-46ce-9421-d06237ff4338",
          "length": 244,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "52f5bf66-db70-40cc-81dd-16a280ff50fc"
        },
        "item": {
          "id": "15cbcaac-270c-4688-ac37-ed3144ee7848",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0b86903a-130c-45e5-aa08-3a3770734392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e15deb09-5515-45cc-a0c5-7910f181efb1",
        "cursor": {
          "ref": "040e65cf-de93-4f11-985d-c2d8f0174232",
          "length": 244,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "bdf9013b-1045-4789-b9d9-73f1f36a58a5"
        },
        "item": {
          "id": "e15deb09-5515-45cc-a0c5-7910f181efb1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7e88d548-7772-4ea7-8adb-4fe7b646c289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ab419f-f819-4080-b821-ca06ee995b20",
        "cursor": {
          "ref": "6795a0a3-444f-4e0e-8d5c-6f801612df0e",
          "length": 244,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "63a68142-8adf-4fa0-9bec-e0306783ca70"
        },
        "item": {
          "id": "f9ab419f-f819-4080-b821-ca06ee995b20",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "75f1c7c0-8b27-432d-b255-3b207515cf58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6aa79bf-8328-4ba0-85df-482277df5960",
        "cursor": {
          "ref": "aa157983-5ba7-43d6-8b47-d4575efa6670",
          "length": 244,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "874c0b75-4e05-4bf3-9600-4f912e17aa09"
        },
        "item": {
          "id": "f6aa79bf-8328-4ba0-85df-482277df5960",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c34b5860-f339-46ae-b424-caf3521ace91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4d1dc06-74b9-467b-8ddc-059fa348230d",
        "cursor": {
          "ref": "72b96cc7-827c-4138-8b0e-ae1342b10477",
          "length": 244,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c820bf7c-c1d0-4052-b957-e67972b64112"
        },
        "item": {
          "id": "b4d1dc06-74b9-467b-8ddc-059fa348230d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0aecb7dc-a8a2-4307-b75c-74b42c18ebcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4460589-df51-4b7a-a5cc-e59b5ce5ad97",
        "cursor": {
          "ref": "3d8bb83d-b390-4411-acab-3e249bac2e70",
          "length": 244,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "5c538b48-d3b1-4c73-99c3-bd99675098a7"
        },
        "item": {
          "id": "c4460589-df51-4b7a-a5cc-e59b5ce5ad97",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e1a6421f-4c3a-487e-82ca-fd55d3ff971c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6824c0e9-a608-4bc7-9d0b-e6ea52cc7daf",
        "cursor": {
          "ref": "a39dcca4-aae7-42e5-ba2a-030efc292c24",
          "length": 244,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "81db0df3-6073-47ac-8c76-7e00e125bca5"
        },
        "item": {
          "id": "6824c0e9-a608-4bc7-9d0b-e6ea52cc7daf",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "66ed3cee-50c8-4363-a25d-bcc68cd29005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba638047-054a-49b0-ab01-bb55c42182f8",
        "cursor": {
          "ref": "ad928b0b-5be1-4b02-a88e-3183c1c00ebe",
          "length": 244,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "73cb6067-fb95-4475-9060-d6809e2f93d5"
        },
        "item": {
          "id": "ba638047-054a-49b0-ab01-bb55c42182f8",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "58730a5a-70aa-444b-abda-4f21cd4ce3b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b47fb2e8-78c4-448a-b220-dd08df612ce0",
        "cursor": {
          "ref": "75795927-642e-41b2-8afa-bfd9c90b056f",
          "length": 244,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "68293d6d-f362-4709-a4f9-493af41b4565"
        },
        "item": {
          "id": "b47fb2e8-78c4-448a-b220-dd08df612ce0",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "8a07ac3c-78b5-4227-9da4-cedfb270eab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a26505d-4e2f-4ed1-aa46-3de13723cb30",
        "cursor": {
          "ref": "4b785586-9416-4b3e-90bb-52552229f9a6",
          "length": 244,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e5c1cf11-8ccf-4b49-925d-7f4bcb31b51a"
        },
        "item": {
          "id": "6a26505d-4e2f-4ed1-aa46-3de13723cb30",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "59f5b2e2-842a-41e5-ac29-e1c2ec3a07e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451d420d-bd5a-4437-a340-573b64406f80",
        "cursor": {
          "ref": "9d70302b-f597-405d-8f05-fb031856c37b",
          "length": 244,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "7b2063f7-b79e-4928-8a59-b91a135b6f4f"
        },
        "item": {
          "id": "451d420d-bd5a-4437-a340-573b64406f80",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "370d8d1b-2541-4ad5-abad-212f832b44d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2225a6d-501a-4ae2-9e93-9b900b43a013",
        "cursor": {
          "ref": "fcd7cd45-3e67-4943-a50d-692278d20172",
          "length": 244,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9ac303a5-4689-4724-a1b5-d010ed0be905"
        },
        "item": {
          "id": "a2225a6d-501a-4ae2-9e93-9b900b43a013",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "968e3100-bf69-4f8b-ac8c-e34ec3359fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c2b74a8-c16e-4d34-bb22-20af9c260199",
        "cursor": {
          "ref": "0eb15e9e-0790-4740-be3f-6f7a19e190b4",
          "length": 244,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ee7bc31b-ff2f-4000-9e07-5d6a68844b14"
        },
        "item": {
          "id": "6c2b74a8-c16e-4d34-bb22-20af9c260199",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "10a23b3b-7975-4052-85e1-0630b6c8b8b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727dd839-ad1a-4241-9d04-24f9e525f3a4",
        "cursor": {
          "ref": "26d74d83-d420-432b-a516-1be2d16871e9",
          "length": 244,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4f19e426-1c50-4066-b102-77edad0d46c6"
        },
        "item": {
          "id": "727dd839-ad1a-4241-9d04-24f9e525f3a4",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "32ccce75-c142-424d-8713-d003403dafcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0058ae3-c2b7-440d-831f-88643a2823e9",
        "cursor": {
          "ref": "8d8a501f-1b8a-42d3-81ef-682f0284783f",
          "length": 244,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8be04259-eee6-4ef6-9cb5-08af788497b6"
        },
        "item": {
          "id": "f0058ae3-c2b7-440d-831f-88643a2823e9",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "adcf7259-7681-443a-9801-6312426ab81d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e8c4a9-1f4c-4543-9da0-99fa46aacd51",
        "cursor": {
          "ref": "06693e6b-a34d-43fb-a29e-53d1b76c3390",
          "length": 244,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b952eaee-ecee-4fac-8be8-be9e122f99fa"
        },
        "item": {
          "id": "13e8c4a9-1f4c-4543-9da0-99fa46aacd51",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6667db35-d132-4a7f-b528-d6a279a1c800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74991124-f087-4c29-bc81-caacc9a74c55",
        "cursor": {
          "ref": "2b834f77-b73c-430c-8ef1-f21a3894071a",
          "length": 244,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "473b4379-0a24-4c77-a767-4357aff069d8"
        },
        "item": {
          "id": "74991124-f087-4c29-bc81-caacc9a74c55",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "eaad39e6-c1b1-463f-9374-47ccea86def5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22cff1ce-a11d-4c90-bea0-bacd38f44b9d",
        "cursor": {
          "ref": "969be0c1-3545-49ca-b99d-a1c3bed9f10d",
          "length": 244,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a395cb75-b025-4aa7-9ad6-6156e9848aa3"
        },
        "item": {
          "id": "22cff1ce-a11d-4c90-bea0-bacd38f44b9d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ee918a60-0538-4e95-aaaa-9700dcdfc872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05591966-31d0-4614-9e5e-aa559c4b57c1",
        "cursor": {
          "ref": "243772cc-a339-4f9e-a93d-3918249873d5",
          "length": 244,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4c129b37-83ab-4f10-8235-39d1b504de7a"
        },
        "item": {
          "id": "05591966-31d0-4614-9e5e-aa559c4b57c1",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4cdc97c5-b1b3-443b-bf3c-5ba012430349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf67afa-8284-4350-ba43-8548a5c76733",
        "cursor": {
          "ref": "b3a71702-2ba8-48c8-82ed-d2a2d28f4153",
          "length": 244,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ad760f12-a7b4-4b64-b5b5-a9c0c2f06f4c"
        },
        "item": {
          "id": "bbf67afa-8284-4350-ba43-8548a5c76733",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4a572182-2a46-45c9-b3c8-7b6ab45ae5ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27191bcb-cd43-4cdc-a056-2b7977cdc02d",
        "cursor": {
          "ref": "78abf92c-8410-4217-9971-a759d30403e4",
          "length": 244,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "916b9c5f-49e9-4a62-80f9-fae0f26bc2e6"
        },
        "item": {
          "id": "27191bcb-cd43-4cdc-a056-2b7977cdc02d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "262395e9-23ea-4405-a882-1b510c1acef3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145d7d82-2078-4646-92b6-0085ca08288a",
        "cursor": {
          "ref": "07ebc937-5f61-487e-af50-74fd30dfabcc",
          "length": 244,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1a1448c5-6f6a-4828-8879-ba15b71ac8d1"
        },
        "item": {
          "id": "145d7d82-2078-4646-92b6-0085ca08288a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "fb4d68d7-557f-4109-8217-a92b428c85b7",
          "status": "OK",
          "code": 200,
          "responseTime": 30,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f781d4b-7422-4b90-b393-d32b3f2ac498",
        "cursor": {
          "ref": "b5863618-be86-47b3-83ca-13aecac89cec",
          "length": 244,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "13cb1bcf-f87b-4a53-a416-1288181282f2"
        },
        "item": {
          "id": "8f781d4b-7422-4b90-b393-d32b3f2ac498",
          "name": "credentials_verify"
        },
        "response": {
          "id": "846fc625-968f-448e-94f6-3c117072d6cc",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "477d2b33-eebd-4082-908e-dea6b89b65c4",
        "cursor": {
          "ref": "7a55f1c9-ce06-45f1-a4e4-512935278efc",
          "length": 244,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4a296cfc-7592-4100-a940-01dc8aa16d59"
        },
        "item": {
          "id": "477d2b33-eebd-4082-908e-dea6b89b65c4",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a2012ce9-4a99-4170-921d-ada93f56f23f",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a9a845-a6d9-4d67-8589-1a06e0988fae",
        "cursor": {
          "ref": "a04fbb1a-1eaf-4271-9758-bc858ab8de8c",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "5b4f7dd2-c551-4b04-976d-71bfda2352eb"
        },
        "item": {
          "id": "86a9a845-a6d9-4d67-8589-1a06e0988fae",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f8e7ae14-88e4-4f4b-a367-2ed328ef5296",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a9a845-a6d9-4d67-8589-1a06e0988fae",
        "cursor": {
          "ref": "a04fbb1a-1eaf-4271-9758-bc858ab8de8c",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "5b4f7dd2-c551-4b04-976d-71bfda2352eb"
        },
        "item": {
          "id": "86a9a845-a6d9-4d67-8589-1a06e0988fae",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f8e7ae14-88e4-4f4b-a367-2ed328ef5296",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b13cb8-161d-4383-b386-54173fa46c53",
        "cursor": {
          "ref": "e1d748ef-e704-413f-944c-048191163e72",
          "length": 244,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "41308e84-b8ab-4e50-97dd-ac2292cc1b10"
        },
        "item": {
          "id": "74b13cb8-161d-4383-b386-54173fa46c53",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "17ac4b5d-ef29-4306-96ef-ee8e8ac72934",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d13f5da-80df-4f8f-9618-055b877beaf2",
        "cursor": {
          "ref": "960f9db5-b1c5-40f6-a826-379e89b28309",
          "length": 244,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "7bb3e14a-c4e0-4775-abd6-0b8aa73023c6"
        },
        "item": {
          "id": "5d13f5da-80df-4f8f-9618-055b877beaf2",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "706cedfb-4f13-4266-a7b9-479ffc2320ad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}