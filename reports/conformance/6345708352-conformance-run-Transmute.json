{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a3189f82-c43e-46aa-98ac-a5e6787fd2a6",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b31ba2b0-ea30-4f14-b210-a0902fb9221a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "90ec6cbb-8246-4f56-8833-e2243d0f0158",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "27bbfeac-a432-4a3d-9565-2d3ba4bc70d8"
                }
              }
            ]
          },
          {
            "id": "db1e3652-ac80-4a09-af88-5a149ca4f87f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1712f3a8-1a6d-431e-b4ce-94d5f9548818",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b6ba591f-18f7-4a7d-ab2f-1f21727ff11d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "16bcef30-7849-49d4-9ccd-e882abb9cce4",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2203f5e1-990f-429b-bb88-130e9807756e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1c02a479-bd8e-4267-84a1-3a507335e28b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2bd8d5a-b191-4604-ad6a-50333ec1c3e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3b55bca7-a210-4f6d-985e-aeb1d195f914"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "15a659eb-ce91-4d0c-bf75-23dadc6b2e6a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "05d8ec88-a3ff-4b06-b289-17bc2f67b7a5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a76e0c9d-4977-48ae-a2b1-137082ef5a54",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c0572841-c548-4a8a-ae65-86976bd885c4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "75804616-1e96-42a0-8dbf-06e15c492621",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e09c83eb-1b03-45b5-a8a9-3c935e6abb7a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "46323379-d02d-4c28-ac3c-956d14befd32",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a9ce2386-698a-4577-b8d5-ecae2b257f0b"
            }
          }
        ]
      },
      {
        "id": "122be517-0e05-465c-9a23-e9d76bd21812",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4c0c81cf-53b3-4e13-aba8-245902c06cc3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "583dd137-da10-4048-980f-2e700a0f2b59",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "74a783e6-1ce7-4abf-94d0-0d50d1eef698",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa87c34-1299-493d-a61d-780896b2404b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d817108a-4e23-432e-be0b-232caa0559af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf587a2-f94c-4596-b7f7-8de17e1ae0c7",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b48d7e1-979e-4869-b23b-649a0d88fff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "97ddd469-d6a5-4ef6-b354-e5fd66108fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef4096a-826f-4a96-a552-6509958f6228",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7a8956-b725-4f98-879b-f192fa61d544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e4f2ca9c-40d5-49a0-8b3b-e6d7a350e34b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "628e5bd4-3731-4cec-9db0-c480c53adcad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6c9d020b-ef2e-4286-8468-e9744c621e59",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a7550f-3d4a-42b2-b4c8-d7b808a5a79a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eceed0e4-84c9-4b05-b455-479af046d3cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a7e6dc-c2ef-47bc-8ac2-9c11bbd5d3b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "807110ae-272a-4037-b0c3-4241a5ccd8a4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "07ae0484-5651-4dc1-9cd1-33f4bf273bc1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "50a4ef4d-a85c-45fd-bf92-a93c68ef3557",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "50eb6fcb-94b5-4044-a59b-a3450abba704",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "103c72e1-9ed0-415c-b1cc-79220aa70667"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e25aa701-334a-4a6d-b34b-8abbd4732652",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "5076978d-9506-409a-a955-eab8869d261a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "002b1a49-d7ce-430f-aa3c-a837b9cbb599",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d2eed6e1-bed3-4358-a810-aec9bf476fd1"
            }
          }
        ]
      },
      {
        "id": "c9cd00e9-724b-4db0-92eb-2c726bad94c9",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ce5435ae-8a0b-4ba3-b31f-ce66888c16f3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "97da2c1c-9170-40dc-be41-5f8cfee795b4",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d1f75b1b-5361-48f4-bfc0-21b5e9276582",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1239bf4-4cee-4257-add1-385a99c3bc3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcb95512-0313-48bf-9a64-8f4ce93bb4fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67eb9d6-cb37-4e7e-971f-85b154c5667b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e38ead82-87f8-4052-9b0b-71271e283b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "343419ef-e555-4cd8-af27-f06360278053",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74218823-b0ba-4838-a875-9888b01acc3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dea65444-d850-4160-8c2a-75faf8b2b629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44bc84c4-511d-4dc1-91c9-dd2bdb61c393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8a8c7dd-e31f-4ea8-9eb7-de807de67ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be743ef-d24c-49f6-ae80-e37908147c5f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0abecc13-26ee-40d2-8808-a36abc2d023d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "693dcf1d-2f6e-419f-99eb-a6cf3ecef08f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a77569-6197-4b63-ac0b-97ca695699b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b703d7f9-a0b4-481d-b6fc-b7290c92eb81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea80e16-3807-4c2d-a6ec-adfe99ec599b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2078b9ae-5442-4aa5-a5e3-13759758c488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a57b6f4-2884-4533-b8c2-dcd88405eb43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d43f93e-f07f-4f69-991a-42a93b2ddee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46bef9a8-9cc0-48b2-8bd1-d3607e588e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988366be-4495-433e-963d-38b2e0e8e394",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebde084b-698b-4079-9fff-b08b7dd0e8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f06688a-c158-4976-ac11-14fc0d0cffa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02246c7e-7001-48b4-8e21-e52a2c938965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62fa13fd-f7dd-450a-9b0a-e23e84cfac84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f855c49-357b-41f2-9d1b-3d532c87a200",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2be47f-3ee8-4cf5-ac26-d56b8c360d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67d387ae-698a-436d-986a-b9c38f2763a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be30ace2-ceae-44be-996a-030e84012a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9859c12-af6d-4172-bd3e-5ee6c761c2a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7cadda-bcbb-42a7-ac08-c687e520a9d4",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "895388f5-6352-4019-afe6-10426457061d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b6edaaf-034b-4aa0-b741-2707ede04150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539945aa-9883-449e-bf44-e75229fddff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5c54724-3247-4fc1-80b1-b1cea4fc287c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9476e85-cd59-44ca-98c4-9d2afffc0c48",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a392dbfc-374a-401b-afc6-741c42104f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ea3b785-2651-4cdd-81f9-764a90fe8ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa751f8-7733-404c-b4e0-1ec041ea91e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee74bf88-3715-4256-91c3-e8154e426878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af86925-609c-4990-90ed-36cb38dead9a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a969db-697d-46f6-a09d-d1fda3dac1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7d4351d-0641-4ddd-aa73-2fae4203065d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "becac95e-8c4e-41ac-bc65-f7935912ba83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b10ecdce-6dac-4dba-9818-c00484a25bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "499e6360-043a-4c67-b033-fa3c440b10e4",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d731abaf-3ebb-4431-b533-a554a76d7b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5535831-39a4-4999-83ba-d8295031197c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104ca48d-f992-4e11-97d5-ed2ccd4e5f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f65104a-ca93-4916-994d-57f7eb859d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72fbe1c1-728a-4db6-8363-54d9ed9eefe2",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58459e3b-c83b-47ef-a290-8acffe102d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3137700d-f17a-4e3e-bf34-19acfbb68157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4660990-fbd8-458e-af18-9cdd17be1eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0eae0ac8-2228-4961-8610-4c2bb51d4b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2505d5d8-e9bd-404a-86c8-7c26e290a894",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8147df3-d05e-441a-a717-6bdfdb80f6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc8673e7-06de-4023-a61a-3c1b0e4704f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11bff1c5-9921-4f72-af88-3271ea52ed37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb150cbe-0e65-4071-b5a0-309eb7987049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "937ff78d-6a64-477e-97fd-68016d111617",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da1d1c58-ea52-4a82-9a4b-5cc2ad8220a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5af47afa-e536-4f5f-ad70-ee6b9931a28e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78606b0d-f7b9-4e86-9726-8d361eff85ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37efb71f-bb9a-4e85-8a82-fd22c897da49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c207a7-3efb-4ba0-8f37-9555891beb25",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76bea57b-306c-4bb7-9171-a28f852fa004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d34f3a7-c993-4a72-966c-63bd4eecbdb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6724bdba-e17b-49f0-b05f-5df680357a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34aa14c1-4573-4f10-ac26-72b4eb28db25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc07183-90b0-4391-80bb-ba0c4d922e22",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c12d21-ab6b-4533-87bb-22320d1b9349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "411483fc-5cf5-4813-9b6b-4f299f67cad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b8931e-8664-464b-8761-bbf57f5b9e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf8c5790-8915-4b6b-93bf-678639881ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8de693f-c3ea-4253-b0ca-402aa2ce7416",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a6c1db-70aa-4efe-ae31-208f2bff3051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "936cf0c9-a72f-42b9-8755-702d40ceed29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319bbb67-35be-440e-9ad5-30727bce83b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8de4534d-2480-4349-ad76-1315dc2d8c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9095926e-19b2-4a98-8e02-045efe94172d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a141b57-b3b2-44ad-a0f6-d0b8613da660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59f59c75-6a78-4583-950c-d8b8cf75828f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346cede3-8de6-4b8d-86c5-61cda3c5e5c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81c40e95-5770-4424-b7ef-0d18f60c2e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096581f1-e27e-4f0c-aaae-c79979db1bc7",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "982c2980-82da-45f4-ac3d-f3f26b4c6998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "333ed54c-e5c2-4366-9c81-3afa5a8b8753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef3a6c5-8c25-44e1-aebb-2fecb848fc1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "42fae74f-d0f2-4954-a5f9-25f3f344fa28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82cbaf2f-a7ce-4635-adc3-6bc340a17fce",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd3d176-0df4-49e0-b520-158ac33a03b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdef6d80-a573-45ca-987d-2843fa61a16b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb0212b-1d57-4786-901d-160c5e77eb01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e641cf43-3a56-46a2-bd45-4de7a44f8eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "216f8dae-7992-41a5-8beb-9e7e714ec87b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59300643-aa34-41f9-8bfc-7158c2d198c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06e03fab-fe22-46ea-8199-7e7cee34c465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf5fb5d-5108-4e45-a302-035837bc8110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9445929-82be-408a-87ef-9c3d1435c4e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080c4175-423c-4dfa-8422-3ff9040406b8",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b6e8f1-f884-454a-8cbd-5ac612f059e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68a0e776-3f08-45c9-94f9-ef8c7b384ddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ff9433-0dcc-467d-8d47-f801d5addefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec41d90f-193f-4095-8f49-96fe2cb27153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602513bf-a892-4759-b947-116f6ab535c6",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b7d6a7-d284-42d7-b92d-ae4b946096a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bace8a4f-9240-4ef1-bc45-07f98acd22b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbac9939-4d61-4a1d-a885-3665b08392b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e1f0b07-dd38-4637-a087-2faacb64ca7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b3871d6-f6a8-4f07-80d0-369fe66fea4a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce5d448-9ba7-4f38-af9e-28b624b086b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9a7f98e-1550-418a-8f2c-150127d5f40c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8698ef3-f786-426f-a7eb-d8ce1969cb48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e254fd2e-1f24-4c37-be55-5b077fc956d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5af364e-0db2-4db5-a7c8-d1f309da9333",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1d1e86-7414-491e-afef-922a2011c26d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c75d28d-d405-47d7-8d6c-cfd9a427bad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e735eb-5c0d-4b0c-80c1-e6149804e408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac58bb08-5576-4de8-a813-de8a48762fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101c9e2a-d97b-4e77-b93c-5f29a7fa540b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6333d9b-1534-4b67-ae6e-a77edcfcdcb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cfbbc51-3b57-40db-a6c2-a9177e48edc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e627c93b-b1f6-44ed-8886-08186dab5b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "02797f63-9d2b-4bb6-acc5-6117dcaaf518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c34810e1-8b09-48f4-9ff1-9d9061782ff9",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49b6275-57c0-4a9a-a018-eb249b855c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0e5fc45-0aa0-4f41-8b2d-2ca868504b5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248515ee-bc42-41b5-afa2-906d7c36703f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "94583b07-be1a-4935-a757-6abae7d178d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac9bc914-113e-4be7-b50f-8f491f63fa90",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4661da00-f0b0-444d-9aad-b36d0efbb798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1a0a797-c1c6-4799-bc62-fa6d81b870bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de994d56-da7a-43f4-bbbe-d756f74576af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "de815495-8ecd-46fb-a49a-2026b34e09db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65796302-0585-4cfb-9079-a0777c03dade",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85fdf6c9-b2ad-4c15-89e8-8e54f0a213ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "474d13ae-0d01-4a8d-80b0-d6143d57ae8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c8c23e-12c1-4a4a-a2ba-6d7aca5bdab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "af45f120-1cec-4581-a224-18c01d57268a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342cb2cf-b8a2-4d07-bdf0-b0c336e1f2d5",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6cffec-7290-499c-a38a-065e62a2be13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4562691d-dcb0-45de-94f8-dfd661ed2bd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "287b109a-e710-4793-9207-60d81f36cf58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b217f08-8858-4a65-8310-eeb5a64d2729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde217bb-02c4-4d0c-b6d4-5f8c9cd0d419",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5182d31d-d15e-4ac2-aeff-7dd33e65b282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab7d4d51-02cb-462c-892b-4589c240d481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2c3889-a1fa-44cd-ac0b-e1b87ff4a7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0368d454-f004-4b82-b6e7-fc63f65afd79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425826be-ae3d-4e51-a5b4-eb837b4d73fa",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a108d5-21b5-4450-b761-d745213f7ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcadba3e-6b7f-4f76-a79d-aac0ac7f9606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6390bbb8-3e29-4372-bc78-80705842a45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c08e7e91-ec7a-4af0-8931-2c8c2e1ef5dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00773c50-926c-416f-9b88-83a52938f28b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d93c6bb-6796-4ec1-81ca-2adfa80678ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ea74625-5add-48e3-9b84-afb3a3b22a1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2a6f47e-0f9f-4178-b6b8-0df94188f6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "09e29ed9-da48-4812-b5de-a80473651624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a968745f-2f9c-4552-b2a6-8b2d7c445e83",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ce8aa2-b846-42e0-9762-14c396a24d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b7242b0-c93b-4a21-9fe8-30199d948341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5abc216-fbf4-4599-b251-002f28a7ee48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c45cb71-3830-4741-9973-8cc2027d6cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659cfacb-674c-4761-9629-dd64635ebaa9",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12cd6660-240a-4eb3-821d-9e7047d3ae6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf35db34-5ede-4794-85e8-777048f31537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f10adf-3aa0-4057-8cb7-de0c8d3189d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25346e64-972f-46b2-90a3-2a739823a819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b60ea76-aa8b-46ba-a1a6-d8648aa16edd",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "627127af-2dac-40f0-9d19-d5da430bcae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abf18530-9058-4ae9-880c-2399168ddb23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcdb5392-f145-4d25-9772-40831446fdae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6cce191f-56e4-49de-a955-b74798e17e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7df6fe3-282a-4bc2-8b5f-df474dd2f827",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e552f579-0023-4b50-b1af-fe02d94cfc05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e5c65fd1-5751-4861-8770-bb0bc89f01ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fcd1570-e14c-438c-b938-bb9253a9315c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "34187d68-0ce6-4c0f-9c84-dd49d010f871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158dd2a9-8e49-47fd-9e5e-5efa5e9b643a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "374cb008-07da-48fc-ad5a-c6764d1250d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f0c3b53-952e-47d3-9cd9-42d06f0daba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80c7236-be74-49f5-9a6b-f72d17e1a643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "26a9dd8f-834d-4e56-8bc2-5f0417fc970c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce87ffb-f448-4e58-9c02-191172242160",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7527037d-10fe-4a99-b287-36d6bcf9a6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e6444a0-1388-47fa-92d0-430a424d2420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d12b40e-bf47-46fa-a0eb-4ecf66e62787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "60576b80-4dbf-40f8-a600-16d101440db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99026e18-b532-45b0-a772-e4c216877b96",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55cda0a-8838-4276-a943-cf058d073c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecc73c8b-92f0-4802-967c-2305621d13ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b43415-03e7-4f87-9ae4-8b293c6a3a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "18e42a5b-b74d-4981-bc33-d43707531303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2984af8b-df48-4b69-a0cb-e439b974dcee",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ff42ab-6e6d-4b72-bfc4-36e40a36114f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f0ca3f9-9bfa-472c-b2ba-1d79e6e52921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144ce042-5c3f-4286-b9c1-fe3b4722675b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "664ad852-3e71-4b1d-98a2-fde338301198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665bd8ea-8c21-41de-bd18-c79f7f5572c9",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ddee7d-bfea-43d2-9ae4-363c4aed60ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26ad8679-b2a0-4125-af80-f0d838efb67b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5a4bc2-04f6-44f2-ac79-c822e9614db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "efa1ecdf-0ce3-4b9d-8f1a-9765b48bed58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2713c7e-5bd1-4d0d-99bf-5ae7b3a17df6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a63db58-130f-4f53-812b-98b9a420aab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b62ffeb2-2b66-47dd-8e4a-6d41da267879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ee6aeb-1e18-4a1a-9142-08ce3a5a99c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5b8da383-8cee-4359-9ae5-78f7749fd855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9111ed97-ed64-4763-a528-384b5faf9317",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7e0bb7-366d-4dde-8747-286e3e289533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a98c5e7b-d547-41c3-b8ae-08ecd65347d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f50a7bc-8fd4-4e37-a608-690e977d1701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae950584-4364-4ca9-b427-65a1896dcc79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee5fd9ec-6360-4752-9dc9-07cd3a0e2a2a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2581cf2a-b433-46ca-8429-dcd9c2052eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faa0e283-3739-4aaf-8a8f-ca91762836ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b978da-de0b-4c6b-a42c-cdfa03916f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b7fca8e-41e1-4472-a989-8b0e82571eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e13774-dea5-4263-a74f-3e4698663aa0",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3409fa82-1c42-4754-8717-9f0d9dbffede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce468861-0e85-406e-b9db-eea329460ec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c303acf-6e15-4322-82a4-ff81883048f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d872b82-cdd2-4827-98fc-a58477722fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ef6100-74f2-4ed5-8c1b-1b8eb534ec80",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "310b725c-dc2c-4fcb-b3f8-7b38994238f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4de7733e-98e8-46cd-8a3f-ee6f97e7c8a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1aefc08-08ab-461a-97b0-9ac3ced27a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a43219ba-da27-42a5-b67f-ec505d70de53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee6d595-ef8c-4cf4-9287-a1c6a1f3a5ff",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ada7cb-3496-409f-a63e-3712399a8f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3f90c1f-41a9-4200-9707-5dbd71b33e9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b16f6a-1d33-4097-83f9-c6643224d2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "616e42c9-0509-4dce-8bce-6bb8ae721235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c542c0-ea23-4b33-b863-a22ff48961e0",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5435abf9-a230-498f-bb08-57f23548e934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cd63768-a248-4ef9-a2c2-50e2621ebbfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe6f1ff-823f-40f9-9746-11966abaed5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "341bad3e-a5d3-4a9b-8579-63f5f2d3a332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08ebcec-baf8-4a28-96b1-c3aa36b1de44",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28087868-fac6-4504-bd5a-dca6dd16f87f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bae47519-8372-4f31-a989-3c7aa7c75ffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f18fcb-00bf-4b4f-bd50-23ff7ba625c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1bcf4b6-d581-4839-be05-aaefbb13708a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01a2b6d-984a-4a28-8e50-a80530e54471",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41322b8-2ef4-440f-89e3-1d47cb70c194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36032b00-c73b-48a0-bb03-ad398095f18d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da2a7e3-b8f7-4eca-8faa-f6c52ca1ccea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9382c8c0-2606-43e2-b207-7f834f6e0b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46aa2ce-0298-4768-9654-727f663978fa",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a677e706-3311-4653-a198-e2183357f1d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a511f4f-a304-4aad-894b-299fcad71186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f80eb5f-03cf-4278-b0aa-5e0eda4da214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fc9be20-bef4-415a-8cc5-8681a787c4f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c0fc37-1747-44b9-b104-10a1efe341c9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa3ae31-ebfe-4d96-bc4d-4b1e022af997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b378417-0b0e-430d-9525-db2a55908bd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7275e45e-3d3f-4875-b7bc-951e25ac55b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "655d1a90-87ba-475d-bb65-9dce289d3276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2a7c30-67ed-4136-a02f-5e3445dbb23e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac177cbc-7988-4fe1-92cf-0fd4d2b4e2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f401145-cf4b-4172-a987-91c3788979eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "693cf01c-ea74-4017-85d6-9ec15f6e2465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1628c641-cd80-48c9-9895-4f7c1d8fa5b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002351cc-06f4-438c-99a3-041c661a1bb1",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd84f7e7-3417-4264-9c6c-2a4ce51910db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b45b396-7580-4209-b28e-3d1656ce17d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "637506c5-00a9-47bd-a544-c0d022b0009f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8de946e-772f-40cb-bffd-37231453656a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c115c4cc-71a6-472a-9842-a70dbecfeb31",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af5fd40b-a341-4202-80b6-631d2ef4a962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b49374e5-4821-400e-8ae7-2388ac4cbbd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb3bd52-d4f5-4a01-8832-5243088a1b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "df8b737d-b6d5-4063-8f63-e0c7ed92f997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383b4ea5-a69e-4fac-a398-50f9606ad8c9",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82133899-6cf6-41c0-8f37-ae0423786e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a8f2ece-9036-4f9b-99ba-49d0c031e399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a27002-2fc3-4542-b7b7-0903491edd4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c9faeea8-2716-4322-a6b6-289cd8a3ac91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3def4a93-ad0e-4b1a-9c06-2e334e7a9dc8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de8cdc1e-2303-4dd3-a381-0b764cf0ed72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37806c2d-c2ba-42b0-942c-405567e489d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393e89dd-7da4-4807-84dc-f1681c9fcd8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f95f2259-1164-44f6-bd87-a9b3580ee6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2229a69c-1950-410c-8200-6dceaceff877",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e792be63-ad3d-40c6-921b-0ac003d93daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e61a185-0036-48d2-8e1d-dcbeda28ffe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a949fb92-0e7e-4bdf-bc67-80d947b146b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "04c36db3-ac6b-44fe-ba90-d905f07e2731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1065829-dfbe-426b-a597-e5f37a123f58",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63efa7d2-4619-48f4-a97b-89fc7cd5791a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c24ec4-56c8-47ef-b0b7-d7ef989cf407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b87e3a-95ed-4399-8bf7-259d02d8e693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "31adf0d0-d41c-48a8-8690-ac2f800b7535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69add625-7f40-4bf9-9ae9-99fd7b732516",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91a6fc9-b2e6-45d9-8708-95cd5efc4fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b54fe0f4-0a76-4f0f-9ac9-1e425d023f48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2cde754-9381-4563-a682-d6b550643882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a41c8f9-2cb8-4715-a076-22b2d2fd0ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a9f0a8-d335-480a-8796-71c5529334d2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4b45af-f9ed-4e1a-8f85-2a6d1e58e1de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97eb89b0-27ed-4bb4-80a8-c9d8aa666253"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ba0ebb-9f20-4078-809a-f76ea787e369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "17c34047-15b6-4b7d-94dd-41439d0ef297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd413850-111a-4271-9d09-7076b5d3f639",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82df6905-4357-4d70-a7ce-e2d3eaa55776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ee5db1a-895e-434b-b8c5-d6308763b973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14bb4a2d-1c9f-4a4b-ae18-a05fdb299e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0711a90e-d8be-49a3-a707-648117050c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d1cecb-c74b-48ce-b8ba-2cc14bfdc32d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "307092e1-a845-4ab0-b965-37c898466493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39bb9c8e-40cd-41e4-994e-93e8973d7e6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83dcc907-9206-4278-a8a0-37cfdd8f0f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3bd0906-cc23-4886-8e03-901496f5f81e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80bdce80-5aeb-4266-a11d-cafd666db35e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ae1d65-ae7c-4483-bb79-fc7335bace05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d0e958f-5299-4d95-93ff-b930c52e05b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ec4985-4d57-4200-a12a-0febf90e5937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3026d66d-5558-449b-b07d-c1ae4748e122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e736ffc1-43ff-4a32-b510-6bfc3157986f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db5e732-631d-4d92-9de4-322e0b820f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "284780d3-c4ce-4edd-8cb0-db0b1e7fcbe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668df364-16ec-4ae3-9f5d-8b968fcdc3bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e35db621-65af-48b2-9e66-fbe8defe9653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d54376-1b08-4a1e-8615-488ed601d21e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76582fc3-56c1-425e-b53a-5c4ca2deb1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "821d256a-907c-47f1-9acc-e2bd61556b8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd4e701-9e89-4429-aea2-d19c354d0a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5354a56e-63c3-4c98-8d5f-6b1154fc2972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d639d0d4-61c4-4c8e-a47b-84d321a8feef",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f85f35-f873-493a-a59d-aa48f4c755c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "624d8992-f971-48ef-80c2-6487eaa27840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc9a6f7-8d9f-41da-9f90-2e2c5b27344b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "de96f003-7604-4c72-ac42-4800cbfd8b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2661ed0-361a-44db-9332-967796f75a86",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1b5bb8-dd2e-4ff0-a49e-b96292672d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ce66440-96d0-43af-8ae9-1d01dc3dfd99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcec402d-314d-46af-9900-351ca6f0a59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf02f47b-5e33-4937-bfc3-b86044e00d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5592f15c-38b9-42a7-9bc1-773d056b012b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e610c9d5-dc44-495b-8258-a407b34c7a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f12d31b-5550-4491-af57-7df4d918fb90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07aafed6-e37f-4dc8-88dc-a9b6ca23e8f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfcd5b77-dbbb-4c69-b8a8-9fe499f8e365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c56550-725f-4ca2-a03c-7f6bcb905d8f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48fb8025-2c02-4413-8f01-765fc65b5a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ae79e06-8c9a-4d43-bb24-24cc40759c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c64d76c2-3b44-40a9-a17f-d3f0ede93fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e359ee41-7b8f-452f-a867-4240bc268169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5d6a9db-faac-4ece-9fcf-ef46d9120c79",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86eda5e5-911f-49ac-ad24-4cf58c13eaa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ac64059-3538-4d70-a8e2-e9a628e2b6ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2809a8d-31ad-4c38-b04a-7dae777a5f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "67cb3dec-625e-4236-82ab-635b4fca9603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758a56a7-a116-4d4c-ac57-7f9aaff4d67b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8096697-eea9-4252-806e-263d4aa26c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcd66738-39d5-4dbf-9d46-12de9ae51412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec593c3c-b18c-4980-b885-17b28c9eb3f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0974e13e-2699-4250-b563-2ec5376e9748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a50e4bf6-a537-466f-b81b-c44ab7aa6477",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b20f79-8fb6-4b46-935a-7d86a8592c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6204e789-0fa6-4d95-91b9-0acf8a69758b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad9f260-dd70-4988-b0fe-2bbba07481dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a99ce818-e656-4e7d-8232-e67c85adefa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "398db81a-fed2-4f61-a542-acdbd9eddb14",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bceae373-1ad4-4ccc-b182-a90cf9451532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c258cb9-0ef5-40e9-9efd-1a456a686423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95201209-8c8a-498d-8200-c72e0a9792f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c39f6047-d965-47cc-889d-9a7987fdb73a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8125eb4c-97d0-4103-9355-a47b38760fe5",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c8ccd8-07f4-4842-b05d-9b81f249aabb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f26aa616-3c02-4e72-8845-b09342d29e56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f854e3c1-eeaa-4370-87ac-675601ec4f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f00b5eab-c643-4a20-85dd-5b515fcede6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a96d3cd-42ff-4c11-b16d-f54cf237ef1c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d441e2d5-c4ab-47eb-8188-d605871ee733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dc10c2f-83d0-45ea-8e7f-21a4340ee1ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5993faf5-7e23-4390-a215-ee52228cc095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b354a12b-b7e9-46c2-8fdf-848628c9422a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d689f216-28b5-4957-a890-894e13dad4c2",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b0e95d-7bf4-4fee-bf40-d2b07a758779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6532b6a6-7076-4dba-8bbf-b93aaf169c73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "384c1319-196f-47fb-aaeb-e67aaee9bf75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "605c01ec-881a-42af-8ef0-f4688f2f13b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b05da86-38e1-4cef-a0e8-58596a049d56",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9047561b-3e62-479f-bc25-e125904c57ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "138677f6-9afe-437c-9d2a-a0396566b1a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c531be6b-1438-4eaa-bb88-3ab7d9d52dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "403f85b5-04d1-4954-9712-f12f0191a8e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67b1d6a-bf35-47bb-a036-cde5de76684b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a85936e-4cda-4ff5-88df-630ca29f6705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4645920b-c81b-4d94-a9fa-692b050e279e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e705c089-8120-4de8-9d0f-f510b2a56b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca6a4c6d-df9f-4c52-bb13-f49da8ddf7b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19cd2cd1-a34c-4c3e-ac93-455085272179",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ab1763-93b3-42da-9b85-ce7f3c14c0de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded628dd-e5d8-4e49-9d11-38e444ac6b51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a41f100-6858-4e38-a78c-38b453d311dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "81e75361-4ad4-428e-9ada-576a1f67a655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13de17d9-ecba-4410-afe6-d819c0444fcb",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f6653ed-08f1-45e1-ad84-0ff51677f469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2173c01f-e59d-4121-b14a-f278b1e2a2ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "519a38b5-0d41-4301-a059-3ff6ae06d5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f734660-0368-40af-96c2-c2b5af0bd4f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb3fd52-0bf8-4c72-8a37-3cde319210fd",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "907fcc80-b3fb-491f-ac25-33f0e74bd554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "250d7c46-6ea3-4034-a59b-49a7573ed512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a72169b-99c8-4857-84b2-b02c09da4aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30cd5a74-28bb-44d3-a474-784b801ce9ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910fc03a-9f2b-46de-bbd3-fe85ca15a007",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d3fa00-f5b1-4f75-a842-2a16d4b2f679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b77354e1-d167-4128-94d9-223eb124e15d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3dca8f-7f50-4713-aed2-7eccb884aa0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "381ff2a0-3d26-4383-8228-f48c407097eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8402e1b7-0b06-48d3-a6a9-4e7ae4aac673",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25b9f49-3adf-41b6-98a6-ceca3ff08d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daa72f59-e93f-4415-805c-6a177534c945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be83bf0d-3e44-42ad-a95c-084267cf589b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "314a91ce-1807-4ced-b20d-d6d074d9c86d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a4eb59f-6313-43e8-8e66-f77c3730d873",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "937e9139-9a7f-4d0e-be7d-b97f500f0370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c46743f-1529-4d78-a60b-e9f80338c4e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6183254c-7df6-4509-b10d-cdd59709b5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4121acce-860e-4676-a417-5bf1441a68be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28fedc91-eee5-4c31-b14f-360a1809d203",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca713f8-22d0-4810-b9e1-a126a65ea982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22b0035a-54d9-4357-90de-f00fa020ef0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed2885b-36d8-4172-bf3a-27e052956fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c07b22a-91ab-4f84-923d-db21696ab718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4038763b-855a-4a3a-be3c-41406e960f22",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9777e813-9cc0-4988-832d-64fe9ca82c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cc8e2b3-fcf9-48bd-ba97-6a4ca63d2041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8e202c-85ed-4a58-8070-336587506e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "213180c7-c191-4f7b-94ba-365e69489fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f258e3-07d8-48b0-9de8-da23e759b1ee",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2ea69f-90c1-4fbe-921f-eecf0faad917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "868d9331-b8ae-41da-a18c-fb3f030e515d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9bf036-0905-4daa-9e99-f894672a1c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b527ced-f786-40bb-8f5e-46dd7a769e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306fb91b-d07a-4b1b-80f3-4bb7409cffbe",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0168cff6-8432-49fe-a184-7967bfbf701d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a17761c2-34b4-41a4-bdb7-a9238ec20818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae9fd62-5bca-4d61-942b-3938146d51af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bde2add2-f9c9-451e-b569-377e62955fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c9467d-1e1e-4c6b-b312-c84d79c8209e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adfc73b0-d17d-46ec-a9a0-6b5ef8491f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92022a2f-c97e-41bc-80cd-3c961ae5be39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b9e614-f155-478a-a76f-edfbd03382f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "17862249-e638-4d78-9326-f0a1912d199e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c58c927c-d2ce-4d22-a240-84578432af18",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "317f7633-4cb5-4e70-91c9-491d51469831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7aec84b-ee9a-4ec4-9373-e6580e8593f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc0e2ff-6a8e-4702-b4b1-bcb8e10a934e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3179f0fd-ef75-4d29-9f7d-d1f193278d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5cbf08d-4939-41c6-a47b-45cf359318c0",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "182708fb-a6b5-482f-9ab8-9d70969cfee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "21b1a3c8-0fd9-4059-90dc-68625eddf1f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab126b9-15b2-4b8f-9367-d919ee78b68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9828f00a-d930-4259-b45b-b17d5447e669"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0fda51d7-de9c-41ff-b5a3-5b88994dad49",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b58209cb-94d4-4acd-af56-75bffab84314",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90782507-e2cb-4328-abf7-00f35b5ed0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "640cf0d7-ca8e-4a57-af8e-32b8386d4a92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6fcd80c-1d23-4d7a-b905-9535615f352e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b709c404-5070-4a14-b5a6-2cd4391963cf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d0bc621-559e-4c06-a9d0-e05920da870a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85e254b8-e8df-4f7e-a5dc-2df507b469dd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "14765226-b79b-4d9e-98b2-d434dd7174c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "771410da-5ca0-41de-91dc-0d067462e104"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a9daae39-d28f-4e99-a3d8-44f08719d9ce",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3cd3d257-8897-4c31-8a28-d1431b3bda0f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "32bc26ca-4ba6-4ce1-9340-e5da00a55a55",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "08c111ab-d002-4bb8-b45e-4d032d099dcc"
                }
              }
            ]
          },
          {
            "id": "3e62ff3f-c169-47a0-9f0a-34db0060df7f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b378a9dd-2f57-4869-bd15-b40483e63544",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "091b53d3-a2f2-4b8c-b460-8d5b5ec0773f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5cec375d-d6ed-48d7-b96d-271917499e54"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9b66b8d-b6b7-4a75-960d-418e9fae0a31",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fea2f37c-7207-404a-88ea-2806de1498d4"
                    }
                  }
                ]
              },
              {
                "id": "e2747c81-5060-47e1-95c3-a38903e516f0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f416f430-b103-4ae2-b258-93f6181c27c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8daaf8ea-e90d-4bbb-875f-a5f6eb7c9dbf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5788d40b-960e-4dc6-b8ae-16f2d9b8e881",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "02b6ddd7-4818-475b-9c8b-7b70948dd7c4"
                    }
                  }
                ]
              },
              {
                "id": "8f074f62-cb19-4773-951e-8d9a9099c3af",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e9266d0-4274-4e5f-ae7a-0b0a3298ee7e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3e9f5c5c-d8df-4c8b-95ed-b9ccc182256f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25f97415-8e5d-4776-80c8-7ec347808c27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0c0c9548-7194-4205-874a-2d6c21fd8991"
                    }
                  }
                ]
              },
              {
                "id": "3d0048d8-1f3b-43d7-ac2e-9861cc4b1c41",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a510364d-e9e3-478d-adb9-9950b490bc40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ad054ca8-c792-408b-b603-0ed26de0bf1d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3308a81-869d-49cc-9355-4fcfec4bfc54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "cf86a38a-6603-4fcc-b7d8-dd5b0f22f37a"
                    }
                  }
                ]
              },
              {
                "id": "40f3e34d-f8f3-4b15-8295-9881b6604ebc",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f19cab2-6387-4023-842c-f40859cfbae2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9f444c44-d163-4cbc-bb92-226003a0326d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f2b9ae6e-c853-4b90-b5b2-d85b17ff59f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3684f19b-1c8c-4552-8093-0bb8ce8fa230"
                    }
                  }
                ]
              },
              {
                "id": "ae201965-4145-4f29-bfc5-be1371b52a30",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b296719a-0127-4c7d-91e8-e573aec5378e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a10cc3da-2b96-4efd-bb25-43810ba1e481"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16ecd765-ca80-48f7-ae48-308b17dff057",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "580fa0d7-5a17-4b7a-b8f0-ca0b890821e7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ac04910c-a85b-49e3-8ebc-44b30ea6b04d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "481c4ea5-daa2-444f-a6f0-76dab48646b1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f3dab1c2-6400-46a5-b943-f33a871f5820",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f47d817c-33a8-4443-bbbd-162664ddde84"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44cd7dfa-f641-462c-beb6-9a62b562d840",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "97bdd866-28d9-4b0b-8cdb-5f51c4af454f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e06fc48b-c5b3-4bed-b023-a2a0c23c1686",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "346f09a5-e564-4611-bf1f-3fd40a8be0a7"
            }
          }
        ]
      },
      {
        "id": "1ab3b274-598e-42e1-aff1-7357fcc07096",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "de16fce3-d645-402b-a1e1-51633bd44206",
            "name": "Negative Testing",
            "item": [
              {
                "id": "918dc296-acc3-4512-a479-f9d110015770",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c11236a2-2756-415b-b2e1-e9322159fce1",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ec2521-42bd-4995-8322-aa8d9ae323b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e565042b-2437-4311-be51-7b33131ffbb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee14415-bfa7-4475-bb5b-37383d62fc48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "30dbff01-aaa2-4057-95be-c424cad75027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11457db5-197b-44c3-bce8-6189453e1290",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38eca7f-4923-4771-9109-b40fb7cae30d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd8fc435-4d7c-4d32-b319-ec84c750d832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a49978-a769-48ab-b2e2-5340e8110e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7b7c19a-dd65-4f69-b762-a9d959a6ef47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0efbf381-ace3-4b1d-a1f1-fb5de74037c0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b636266-c661-429f-bb7b-ca5863343212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edf989bc-f6c0-4f79-87a2-911e5069e666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e605c3a6-a14d-4d1f-a516-ce2f2f8139cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "670d0603-e06d-4d3a-8e1e-91b59352c4e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023916b4-3356-4003-8ed4-32f45967789c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd982ea-eb63-4a41-b176-1cba866e11bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "642472d0-66bf-4115-9753-e14ed9524a45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cac9a7c-a34d-4d2e-b070-3a6c6cee904e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2acc890-0fe2-476a-a112-71e67273d82b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dae51f0-d833-460c-b6f7-9ab00974c7ce",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bde453-09b0-4e62-bea8-c60cd8d68e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdb32177-1aab-46ef-850d-ed2f8e098202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848b1952-2b94-4110-9ab4-ecf7e8ccd454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a96f673-942c-4c7f-9734-fe1f597f3f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d94602-ee47-4994-a765-897d33409603",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b44d60-6144-4373-9f28-1a9ff4d3aa27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dd657ab-64e4-43de-b6fe-8ac43efc2309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c95eb26-a929-4f0d-8987-513c4b95cdee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "46cb60ce-92dd-48d1-9b91-34d041954a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe2ada7-0052-49e1-a92f-84963d433bd2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "170acd59-95e0-4c74-be62-313f46159cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02d4bcb0-e295-43cf-be3f-bfcce2f04cac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69397ef3-efd2-4862-ac69-71a9eba1778a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a82645a2-e19d-4e2b-b9ad-78ab1bfaa545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792fba9d-80ca-4604-bdd6-76b76fdb6418",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3311f85-0e2a-46ba-a1d7-0baa1dcf19f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "170e7bdb-8238-4418-83f9-cd74caee6c8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f0a28a4-3c31-406a-a176-dc446add1259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cc8804e-e204-484c-afe4-690962104662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "078b0c44-5307-464c-8bea-e6a612968ab3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2852ab69-99cd-400f-aece-0519e3a562f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2367fe8-8022-4ba5-baf8-8d545ab1e0c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f039a5c1-13f4-4c97-8b7a-7fce24aadb36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "664a54b6-6a37-438b-8905-ef3967022d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e90b5f55-0eff-408f-9a92-12d62de684f3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11c4bee-3ca0-46c7-9737-a14bb1b4476c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e36321-8042-46c5-9f59-229cc5c787a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b77a6ff-1667-4cb7-af58-163650d0ada8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "20d2b5e6-eeca-4390-a32e-003175f1352e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b85821-f142-4413-88dd-147f22008735",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe07ac8e-7d38-433e-8e26-d1abb598a012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c55be9d2-ee3a-42bc-9c4e-b5f41eff7c5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "027b60c1-8dd8-4c9b-bda6-a95a618f70ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d34374fc-a8e4-43f6-b81b-c35ca8058323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07033b3b-d773-4388-8d74-84ec9fcb5b0f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92dd7784-407c-47a4-8ef1-9382c9c2c73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83c3f938-212c-4e6b-a5f9-91f0f46f2785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "906555d9-29f6-45ef-a478-02156a2d9148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "06a54cbc-729b-41dc-8cc0-b42330fe83fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec66ff7-f8c8-4e96-a59f-75662476fb50",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80670a5-94d0-489c-8d7e-9cbfabd2e6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa5c415b-3600-48a9-8a0c-a13ebbd5e3cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ef228f-411c-46c0-b440-689ec61caf88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3f48aec-11cb-49cb-b21c-477bbebe9424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65bea90-0a9e-4995-a39f-876779c39541",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd61bdda-1824-4bc8-b79e-d6d3441aa1ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18ec364f-f82a-407d-af0d-54dc3c7fab3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ef5bea-fd9e-47d2-80be-950f8b495ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2531b27-de26-4c7e-a009-b18efc49a89c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51580f2-2d04-4633-80e4-83499ea1e57a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4aa00e-905b-4017-93c4-aa28dc311826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f556d79-88cf-4660-afd2-d7dcc6ead751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8863bfc6-93e0-4a58-9411-094e24502cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1525663-b5a7-4932-8c7c-b385ef5f9c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f41e19-8154-4e80-8aef-60817d83206e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ebe9c1-0709-4075-a707-410fc7c04438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62fc072e-8356-4462-8df5-386ea5d60021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735d24c0-2b3a-446d-9e04-91e584e33374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "76725cae-909f-42ec-90ce-2cf720a4415e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44307912-1060-4f3d-b0db-9713b95dd18f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bbd153d-2b10-4506-8400-838f6e56823b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78d4904f-9d82-40a4-aefc-19c3d126d1ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db03f11b-ea69-4329-830d-d0e324ff8a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "89a041f3-9311-47a5-b42e-2c454d4f0871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bcc1a7e-de09-4b25-b886-272392a57e43",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88dcf308-00d8-4014-8f3f-47626bd47360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7f06616-bdee-45f1-b2c5-d1549e573416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3c1599-a077-4fb3-901e-e13d5ea70f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c75c9f75-0a74-43c7-9ca7-ced0cc4d84ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b1fb92-9677-400e-9b79-9e4b0a113ac8",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79fe1c90-5aa9-4e7d-9c4d-5c1119c4f641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d6bf13f-1824-49ab-9dbe-5806fe2d125d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28251ec1-6cef-4cce-8866-5634c49057bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ee1b0c7-5024-4fca-b58a-c2084fc11049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebd10f6-f666-47fb-8731-5f800a8f03f1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15cc9c29-8ba9-49ac-a917-8f04fbf9211a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50e4735f-8bef-4038-ac67-8cd1e287cd93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "550b3341-bd71-46ab-8570-653953104366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a6ff86b-243f-450d-b0aa-5cb245a874af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae82dbd-a64b-4c46-8f73-95c1ec114440",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce3c65c-3e7f-4dd9-98bb-e0fea90d7338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2abab96-cd24-42a5-9a54-197ce41ed89d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9ffd39-01d6-4c62-85b2-a01dae629d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce338243-e3e5-43cb-8cd3-b8844de01491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364fcc36-5882-42d5-af46-64ac70936550",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "544a2ac9-f4f5-46e8-9c2b-baf6863bb921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "506c53d7-e924-47b7-93a1-a02d0c061f27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfde01bf-f696-4926-9242-e4e8a84ed137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc9a5a5-b4a0-4871-851f-6922ae412870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d619388f-2513-49ec-834c-289f3eeaa52b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2d8b67-8a15-44ee-aa77-7772ff59b393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4777b52b-2092-41af-a40b-72415c8aabce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b2f6d6-4229-4176-bd6b-b7c9c810b399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1295506f-0a43-4d98-83a7-ce6ec2abb7c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a61875-9e28-4a52-9bda-359c3b97252a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5686221-1e17-41e3-ac4c-b0f63c55b431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "598484f4-3978-4354-90c6-d136e3b10dde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e5d09e-8350-420b-8edb-4f780c080b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44e66213-87b8-4334-9aab-dad657d3f39d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b77894-4e68-4c69-8f51-1528a8cc863e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59cb474b-3dfe-4cdb-a127-07e829e45a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff919583-f892-47de-acc9-63d53f277493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f2eb04-073b-4f61-a3d4-ac402cf3c59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1276ea5f-6fa5-4669-a988-f7bc1e2aa720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a9d876-ead8-49c3-869f-1c01689758d5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80fbc68b-2998-44cc-83b4-32a97aafc7aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3754922-9a70-432c-9e2d-ae19bc25a95d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c030d5-c8a4-4c08-8a3f-33c44f18ef3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5e652b6-f21a-41c6-a2c8-6b91bd863946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6fc6e3c-b90b-4a92-bcfd-3424713e2c62",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d060c4fe-4c7f-4ba9-80b7-e06e6d03bb29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59ecf36b-07f4-4dab-a2d7-a7ac3d2a91cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e776efc-08b1-4965-b43c-f3f47852ae40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf807ccf-846f-4ff9-8e41-0437b35245a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611b0b78-6425-452f-8750-b80f1bb809c0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ee3cd7-a48c-4e49-bbed-c2c646709610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf8061a9-0849-407b-81d2-47877c7d5d3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d72d334-6300-4bbb-9516-087e7e33886e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4251908-121e-4fee-9a92-1c79291e1d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd375fc-b94e-4fb6-bd61-aa2d97242c0c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f441c3bf-52e5-4ea9-a23e-ce65afceda9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b395ef85-2ca2-4284-8b78-878b274757ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea502f8a-4992-477a-ba63-3e5d19bd2e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b588259-62c0-4496-9484-7af4a02d6362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2cec134-6dc9-4050-b343-34026bfdee28",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c86037fe-2973-444f-9a5f-2ad0fc0afac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87c3a7d1-a4d1-4fd2-8cfc-ce5a312c462e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b01409-acfc-473b-b255-7b17cb34e301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6fe030f-b757-4a10-91c6-8449b317b387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b06bcb7-d9f5-4538-9cdc-4f0d9c19d943",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa4197a8-cab5-4c20-bb54-bfa831331e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05bb8a3f-5001-4a5a-ac50-f30c8aef6340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62cd75d-b746-4547-8cdb-76d73db61ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57da6ef7-8fe9-4463-a37f-b50f2b44ad59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c39c080-b848-4aae-868c-484e31415d3c",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70ce740-e2a0-4c22-8cd2-4423cf71e4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea11c35a-de3b-42a6-8d58-da5a5b856308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42bf9fb3-f54c-49c5-9ac1-8d755a23927f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29a3e4e4-a9ca-494d-949b-b67b3c495d59"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8a4b7428-a159-4962-964c-252ba31a6566",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6dde6df8-fe90-47e1-beb7-de8c0a0b519a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ecefb9-a29d-41f8-96cb-02d1950f6fa5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f1670003-ca90-4346-8144-91fcb5cacba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51940c71-d026-473c-843b-4bb81035aaca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9c90ccb-fdfb-45a2-ba6d-a83f4952d4c4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7de8cfce-aa27-4af4-94c4-a3493948bda6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "557e5e8a-cc29-4771-a823-f16615a0b546"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "74bba432-f7c7-41b1-a4c6-9c1a5d8f25a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bfc2fd01-7aa0-4b9b-b5f6-b191ead47bfe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81541a7a-e069-4e60-8e52-d8ad954a78a3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "366c4928-a352-4e54-8491-2be540c56c66"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9efa78cc-4784-436c-b9ba-37631116ffb6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3ba0f984-8432-4e11-9c5f-e6d8b1f36411"
            }
          }
        ]
      },
      {
        "id": "c23d1c9f-986f-48fc-a224-7fea17294c3e",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "cae512b4-7cc9-4960-a982-4e74e65a35de",
            "name": "Negative Testing",
            "item": [
              {
                "id": "545cd623-1187-4a76-ad69-f2ea7e4a2807",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "961c0fce-8806-4b37-8c67-d74a4211f253",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b114e2-1b5c-416e-a5ac-f35e10bfeaba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de8f42f2-9f55-4c02-825f-ccd6af8a9bc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f57314-9912-4683-9785-151cca9c4324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c6568d7-c824-4a11-9cd4-1d758aad96ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e40deca-92a3-4b57-a1af-cedbefcd1d9d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca09c870-884b-4ce4-8dfe-63538d203161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70fcccf5-0b12-4f13-93ae-0fa0ed267610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912ff085-54f6-4efe-836f-01e6d7e37ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "17a571cf-db70-4b66-971a-955561b5c1ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ead98bc-abcc-4bef-8f41-9b0264967a48",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0121d8-aec3-4fce-9301-a3d6ecb433b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64884922-46ec-4fad-b3aa-1692945b34c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831ae078-5670-44be-bd1a-8da4449f48a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa4226a9-dd4e-4016-8011-e3a0abf7cffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aff889f-8939-4c01-8afe-c69bb03b9e5e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b37806-2991-4400-9c3a-832a45839199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77d6f0f4-5ae4-49e2-8533-e9bafd89cad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee85fd62-92ac-458b-a3b0-df7b7d5caa55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d98ecc77-24a9-4154-835d-5ed405826d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c73fe542-bf19-4ff2-982e-3f6ccd559a63",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d5532b-05be-4252-a955-89d662e2fead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9670cc84-561a-4bb4-b479-ff3bb82fdefd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e807f6a7-9290-4517-a12a-38ac43ebc6e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9607fbc9-dd80-43e1-a8cb-9e0bec2200d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf85ce8-28a6-48b0-a7ed-82c99bccf52b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1adce5a8-e164-4ecb-a2bf-e4477bf6e72c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1fe28c3-3607-4ae4-8578-70d416aa0479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d9a627-f52e-4aa8-a998-972c5b9be080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eeadd9e7-293b-4d6c-885d-37c56f0fe801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e56ede-db82-4c18-aa8c-04db020f2423",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "459cf734-4401-435a-b4f2-af28db121bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0925782e-80f5-4db2-b5bb-26f273f25018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1fc4b8-45c5-4295-80ce-848d0d164011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c8d2ee9-d0f0-43bf-9765-f97d988c6bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d855647-3528-48d9-bc36-81b54b11386f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57915118-1d17-4316-9724-603d5b470808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6662209-4a96-4d4a-a454-c3c85eb2d056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5398c722-4ae3-4e26-9237-71d3a9fe1253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c409f47d-d923-4619-9f24-7d7a55199202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3cb245-9698-4395-b0be-427eab9cf053",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2381c51d-cf30-429b-8cd2-74cfbb209b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47567cf3-66fb-4f93-a474-371e44968049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841e368d-3849-492e-b9c4-df37bbca2804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa003716-2db9-4d60-8db5-d277cd301c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc0fcc8-460e-465d-a9ef-18b65265fa79",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7803c6d8-2e69-4c39-ab34-41ef81afe361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aedc57f-a0a3-4100-971b-913d032a9f16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366939d1-f0bc-413c-8f74-43d07e508b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b93ef6f6-8821-4dca-9507-f2b29196088f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb09278-b752-4cd5-8a04-252e64c49927",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da8c1b53-85a3-4581-bb4b-630d5e78131c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "216974e6-2a62-4d53-97ef-eaf4049a7029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6212346-4d99-415b-9b66-a58fb78c9d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0154fd72-bbd7-4e53-bf19-3bcab278995e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76802cca-31f3-4e54-8904-65fa53f56144",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a74bab-7d8e-4021-a2ca-f537fb41d01d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57ad1b5f-b416-4476-a930-6a0ab978d1c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a77bd1-8d41-424d-9636-69d0b88bb994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1cce5b7d-4326-4acf-a028-6c6f7bb835b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8816ea1-dc7d-43d3-ba41-3e7a86aacd19",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80211ac5-8892-4305-afc7-1d303ad5748d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b7514c5-706b-42df-95f7-c16a009326a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400a6e5f-909c-4d9a-868b-e430820daceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc7ddce-c969-49c3-8482-934f8d835c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9b0bcf-792d-49a6-b548-486ade4f0a72",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "585d384b-407c-433e-b9e7-75a998f910fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e99ec5f-0841-40e3-ab8b-5c748118f547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18dd043-2bba-42da-9da1-49816935d2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "275221df-8e2e-40f4-8085-d3f14a51098e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4ab9a2-1dd6-45da-8e64-d408b5abd698",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f0ff6b-ac28-4159-8335-aa65463e7072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad891aab-7501-4cdc-bd20-3d382211c92b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7241d3a-b0d8-4acb-a030-70f10bed826a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "34f8ea1d-b34b-4054-a6ac-6b9907fb861d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6309b9da-a573-4a85-9d22-e7a46b226db6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1439f33-f3f8-4dcf-a2f7-4d7ceeb1f02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f612958-236a-4004-ba6a-0f2ddabb148c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fade1cb-9a3a-46cf-a95c-924fff07ffc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1316786c-6bed-47d7-abd4-2603fd07e957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e13d1826-ef16-49d6-8be6-2d995b64408d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b48c552-7ed2-4472-af70-fee4ddb558e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "653152f1-7bd8-45b2-8d37-4e091d31e839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5288203e-9f44-45ec-b2c1-9814950aaffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6d1d2b1-fbe4-4d5c-b2c7-24df006e1e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4746da71-37c3-48f3-9763-ed5da8cc75b3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2686673e-69d6-475f-a2f0-b86481c648fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "360cf6ba-31dc-4714-9567-05a700396a22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cca4011-4c11-442c-849f-c1c2e256c639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cd35ac3-c234-40cf-bc58-b3b03bb1214b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f56abe3-f18d-41b6-9a4b-4b7f39896169",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "511ca4d0-9b5a-4e20-b76c-5564cd9adaba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "080bad96-f6df-4752-becc-f69670e98f12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f3d4e7-7763-4d1b-82dd-c09ba31b4166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "879d01c8-c66e-4c2a-8447-3ace8048c94e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81fe930-0bb8-4806-b05d-924d7d1f409a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd10d82c-ed15-4d72-975f-7452c15ba3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "677fb484-48ca-4de4-8aad-cfeb9a5077b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633928e4-bbc3-4c75-b4d9-42ef4ec40cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aaffbdf7-671c-4d80-a1d4-09bffa5a2a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7adc82e1-68e5-49a2-91a6-3b6f817f16dc",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d84b176-b919-4295-824d-f95c48ec9848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e491ad7-4c39-41c4-a447-9dfa97856ee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2434385-1288-48b9-8dc3-c7f39ef04788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "808964b7-6293-4777-ace8-d4f04e0f4493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c798fed2-6d58-4bd4-9d56-d044e54b3258",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55fdf1df-58f4-4345-92d5-00467201ad4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5178e84-3200-47ec-b18d-788d1d4db819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b15c9f9-c197-4ac4-b6d1-76b533f0329d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e62c424-0dc4-4c59-9e69-209329c0d1a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9004beda-bb4f-4da1-8c91-7c9f88208a09",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8b41df-fdaf-46c4-a0c2-b7ab177dcc19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29193a04-2d0f-40a8-a1ff-efab961a0856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c7118a-6aa8-4518-a7e9-71222b055224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90771a93-0f85-4a1a-b8cf-9dc6dab0acbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d70a3760-903d-4e53-a770-afc4def48573",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f815d08d-ea6d-40f7-8a2c-f10a88437346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "303118bc-c761-4629-a68f-509e75ae2317"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "122ec4b9-37f9-497f-9f05-de2d91e666ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ebe5a8a-47fb-418f-a169-2d7dc4662786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8e1ad9-f39a-4c5f-9835-c5c6be9a97f1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb90183-a4c0-42dd-8b8c-92a0e32e3b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bb48cf8-9117-4dba-a80f-a6b794319b8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647f37c9-5b5f-4ed0-ada9-55038187ed7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2378a48d-9ee1-4b1b-a153-53cd5f6292a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f010d8-dfc3-4d2a-99ff-b668da21d02c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "382f6a21-12ae-4b8a-892a-4421a3a7ad33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c1444fe-7373-4396-b735-e065b4d44889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1542f69-a1be-4a7c-b311-223698981ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7967f41b-89a3-485f-8ca0-58b1115aa022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "174b936e-7951-4d4a-996e-8c1484ab24dd",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3867728d-e834-4f5f-a2c0-f47c542d7a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf78f8fc-a052-4836-8edb-aa285e5ef8b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b81f699-f1b7-464c-8355-59f746b8c5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3b8848f-f655-4269-af3d-bd6b2b09dc3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9859ace-fb21-45d4-9663-24862cfbc4c5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf43a8d3-1595-49bd-ba08-3fbd523ddb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1503ddc7-f8ff-49ef-ba6d-1e748037609e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2a879c-5c5b-41d6-9d26-6049cce15ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "018df567-bd4d-4780-96a0-8c66b2d921bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147a3298-a26e-4627-8d01-1293ae742091",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db31a3b6-67de-4601-b11b-6322c3a5cd20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64599bda-0d33-4f06-b7ab-91cd35829663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc33141-07c4-4291-819d-1df7fd3c4101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4a4a277-f58e-4a06-8cb6-edef6d6f6616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d37eb18e-3f1e-459a-9cb7-f03ea509a047",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6e978e-36b4-4c57-8a9b-297ae8c44a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42c3c241-4600-47c4-b3de-478b9cf7984a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ad1eeb-1217-40bf-bbc8-a8d01caca116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f7256bd-6191-4fef-ab50-ff088475df9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a82c210-d1e8-4a83-a0f8-996f1c0fa62c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af16022d-13ab-482b-b881-64ab2994529e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a368be5b-3804-4984-9ed5-62436adf0cda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb46b5b0-f4df-4636-a8e5-e967b00a1ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1a35cf7-5db5-4a37-90da-afb97fe6c4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd6e4da7-f0a5-43e5-a1e8-1513a3528b17",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80f5a92-6861-4b94-8684-d7f281227889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba2a5ee8-d984-4c7a-aa7d-1ba3dcf0f8af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3442279-9f1e-4a8f-8047-d2d6e53ea748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a82b25a-7ca5-4b70-bdf5-9cfb510fc8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83536466-7468-4f4e-89d2-96961546c8be",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b838cbe-afca-4dff-a18f-aecef4cd7dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35c1ed45-4998-4dff-b324-58069a23cbe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf91613-10ac-46b8-b7ca-845b119c93a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e13fc2f-8692-4060-aad5-98c159d03b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c1d72a5-7f29-4336-bc9c-31f8f35decea",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f6ac537-d071-4473-99d5-e4823b0fde73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e62ac635-2e61-4b57-9bb2-12c0dd257671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab37505d-e726-4a32-9049-2eb3d930c966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e0c50f9-3bb1-4a23-a1a0-d7e1389fad1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ecd332-8f20-4daa-9362-e7de97432709",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d526bb8-b21b-40ae-8a63-690b41943410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fefd91d-bd83-4210-b4d6-5111fc835ddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328e715e-f854-4e27-a6ee-d79f480d6247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ea2698a-50c8-4697-9256-6ec25d93189c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02800bfc-4a31-4c50-92b7-47ce4efb8e3e",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6269bcb-8e19-410e-a1fd-ee83cd0d48d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f75f792-0499-4c76-b39e-beb7d3d8ab39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8470c233-d8e5-48de-96fb-56bc4035fa78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d920810d-f2d1-4850-9ce8-8259935f31a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c022359-fe29-465d-b9a1-6f9f1a84d775",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72616a71-942c-459f-a023-23b71b3767d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e920721-1570-4abb-826f-6ddd7e02b0af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef4ca21f-a13e-4c89-a51b-5607c8a0941d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb2a73fb-3807-47ff-89c0-bc812c880632"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "17b2518b-b498-4ae8-8420-44d68bc13624",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b9e38b26-b887-48c4-91df-452c8e183e19",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b602df-5363-4131-b5e8-6d31efcaabb5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "06dcd158-f057-497a-9876-2a37d10ff8dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9463e2f3-04a0-421c-8206-3a90a897bff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c3fdccb3-defb-4151-a8cb-550969a57d2e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4fe949df-995d-4449-a352-f05414298c71",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "844d3bdb-0a11-411e-b8a1-e9578022bd7c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "486f5621-3e75-4ca6-a216-c46fd3a3d5cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "866f33b2-9144-4302-a891-364691098766"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "306a2c20-fa9a-4db6-b5e3-b178026be47e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d2043ab9-947a-43a7-9c7e-c7f934690003"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99cde348-75ec-4376-888a-e76b27b5c089",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a89961f0-57cb-4281-916c-f329c1fc3958"
            }
          }
        ]
      },
      {
        "id": "fff1b4b4-7d72-4952-81c8-79baef7ff49e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2c102f49-3c74-498b-91cc-5f71b31f489a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ffc6e6f0-9d12-4a7b-815d-8008d7cf0371",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d6ef656a-f62d-44b0-87f5-55cc4bea53ca",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0bc9b4-8584-4fb3-a4e7-0ba9b77a36e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "587dd8ff-ce20-4fcd-a57e-d4d94d786e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f77fc1a-85a3-4c77-98d3-e04c66dcf7a3",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2dd4ae-f9aa-450c-a7bc-5c351233ef54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4407d2cb-8952-4d63-a584-cfb59983805c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4b1494-17e3-49a2-9d80-0285cc1c0593",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35717a70-8a60-48e0-b04a-88e6cbd72a90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "430fade3-0314-44a5-bae9-7ada39bd323b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "330d0876-c6f2-4b6f-ae7b-451ad517e8e9",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa938d7-b490-4f41-8624-cb406ed9ed3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99334cff-025e-41f6-866d-272f54be9563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daec1d84-dccb-44ce-9bd6-2e96c5a569a8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5be0dd2-b0e6-4fea-8378-c2b991f680da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d978c4c2-65f3-4ef3-82ad-319d85643a46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806559ce-1d76-4ba7-a247-3551245e13c8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36c7d09-0b95-4e3a-8ad2-5593792430de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "616c3b07-458a-4942-8183-2c61f3957f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1ade4e-1978-49b4-8cb8-dbdc60e14e7d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4544d0-5c05-4a8f-9b7a-1f1e53b5b20c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12058852-f60a-4969-a26f-d84a4d63cedf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89288886-8db2-4b56-aae7-1e73844ba592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0275e20f-a5f5-42eb-b642-31c25bdd070a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94183614-fb74-46ae-b02a-69940afce22a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef0dada-e2cc-4912-8228-f4a3bb84cd95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4876e281-e937-451d-be71-72e4ffc99dd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e6c549-dc68-457f-ad95-a67f487c00f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a34f3ca2-22c1-42d0-a5ab-d87011315ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ca7507-b4b2-4110-adfd-da612a8b95f5",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d041823b-bf46-4dab-9417-5e5e6cfdef81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c7bc3b7-58ff-4915-a4be-d66c2732a1e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb27e72-5103-49c2-88c7-ab275635c944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed7e66f4-c9e8-45eb-8c20-17f428e20431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50ebfb0-2d80-4d7b-900f-194be1d7f468",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd7b6177-4349-4d32-bc5f-d029188e6811",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6b53dca-9c38-4c54-bce8-330940dd5276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "231d604c-2c4c-44a4-a6f2-285090b98aa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "140d9010-aca1-423f-8fe5-33d63fc98f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7692be01-9c0b-4711-b1be-8fbce84007df",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2fedd2d-8078-4166-b5b4-fec817f57faf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bf3d8d3-7e19-468a-9d7c-5d3fa47f875a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "790876a0-5878-4611-ae04-30c335950fdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad25e82-c8d5-404e-9302-1a802dfa92bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ecd551-ed5d-493b-b126-6b9797959dec",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f6df90-f5ec-4eef-bfec-12a6e413edd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fce5d6aa-f5d9-4b35-9935-69e083c0164c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b832e9e2-9cf1-467e-9499-2503bd52456f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f24a3d12-01d6-4f31-a21b-63288a21d17e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df09f851-bc42-4b3f-a777-ac3380dd8d90",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd2fe1a-2be7-404d-9582-15a3b1da7811",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "baa38826-a791-4ea9-b69e-8e6514cec95b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7aa91a4-9d43-4438-9863-2341ee453a92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebe2c871-adde-4502-896f-103da9140dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1265be5-8cd0-492f-baaa-59065368d594",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b0c272-a68d-4fa4-8636-665f0210381a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ae35a5e-c1d9-492a-a427-04ee7b8c7945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0022b8-bea1-4fcb-b855-22193ad2358b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f9006f1-4422-4e7e-9c71-eed7ad7cc659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bca0f4e-d8f6-4902-9f8f-1f9c2aed4468",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a4ae451-207a-4e0b-bf45-e9c8e7c00704",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdea1061-c3a3-48db-b939-6315ab2ecda2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd19fce-05b1-4c93-9959-e1a36306509d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f63dd83e-6f81-48f1-be26-b0af8a0743a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc2fda35-6681-4d8d-96b3-a9bbbf8e51d3",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7e6600-50aa-4b3b-a06c-2ac139018c71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cee26eff-cb81-48d8-ab9e-bff353a7b567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "422dd38c-a42b-4792-84af-c46cd3107cc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "371285b8-5062-4235-a26b-c49a88ee852d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2726a4-56c5-4a08-9b27-3179fa24a01a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa90bb71-c868-4d84-8dd5-e6b62bb5317f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59a37f23-a373-45c9-a1c7-02ed1481cf19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cce49f3-0a45-4f81-a88d-f9bb524f1044",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffed1bc1-c0f7-47fa-8c8f-dce68b7ff349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9913358b-a060-4d45-bac5-033008f70b34",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3dbf21-ab34-49c0-bf2d-d59b04e8080a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71aba498-5eb0-4ec3-ae82-d51d1d63a7f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f9719f4-624e-4ff7-82d4-56ab1f5ca9de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17e87958-7833-4fd8-9b45-5af85c24ddd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a75db3-796e-4464-a1ae-00b664558dc0",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc89c0e6-ae9f-43bd-90a5-353bbb7406e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da097109-e675-481a-86cb-2b7ddd190b32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9268bd6-0ee6-4ba7-9f90-21c50cf3d434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a670cfdc-50a1-4b0f-9d69-df34e8e1e60f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66eda0db-086f-476c-8989-7ae1f0c80c0a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae6f0c91-7389-46fd-9e5e-9d93bc8acbfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf8658d5-01ed-40b9-8dda-8438477c3f89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f23c6c6a-5cf1-4bf4-a90b-0536c39a203b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d23f48b-18c9-45bd-8e7e-7e1d63b00604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b17349-2d67-44ce-84f5-e7a6441b807c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43c976a-8b23-4f6f-8794-a993efe287a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9ddecd3-6ca8-4a25-9b40-93cb05374f1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e7d003-54b7-48bb-98d1-977a8f266795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85ffa800-afa8-4943-ba0b-634be0d5e6b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e998ff4d-326a-48be-91fd-020c3ed670b0",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63be303-a6fd-4051-b791-9c613cf077e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dacfba97-842e-428f-a07c-d5320982216f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9572f8-7ff2-4c46-ade7-f87e17bab586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1859f0dd-f1bd-4a40-8a31-38a603c19595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aebf3519-7356-41c6-a430-57012304497c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855e89f9-a67f-463a-8bba-69429b77ab19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dd2d3cf-921c-4f2d-a65f-b7da39e686dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "922fca49-a6c3-4e3f-ad51-90368b3de93b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30ac10a9-f2d2-43ab-bb10-4fe89605f961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc4d8d5-8103-4e40-80be-4011a60f32ea",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555f1f12-c369-4011-91a4-8aa02224a308",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a4d2606-5e7a-48a6-b837-ca883dd6cf03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fac0a1a-6c29-4f93-9827-fd85135224f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78554694-e779-4e14-a000-0e8cf1834c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8682e53b-1ff3-41ad-a129-fe36688d9bcf",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96bc8911-d62d-47fd-a0c4-9f40a317a879",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "866dccfe-3522-486f-8568-2f84fd895e3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f587c6-4ff9-4067-b210-25b4b3a98405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c6f1d47-e5b2-4659-8cb1-a747311e0504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1089dee2-4e95-4c6d-8467-d7491084a03c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa665bc-836e-4848-9e88-488f23ddf0f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a575368-4596-4f88-a5a3-b195debd34f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8bec322-ed28-4cca-803f-5cd31facee9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5912418f-0583-4afc-83e7-046dd3de08ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4191cf-256e-4653-9b35-501278ad37a3",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10053e93-b487-4ceb-8fdc-49a89f1e2405",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8ce23dc-1d76-4366-aab6-3bf6a65557fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "983c61f7-a513-4172-bd70-5f200b2aca22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65c0df5c-84b4-49ef-bc9d-5254e719cc85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1e1002-2b93-4276-96b1-223f91ceae4e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "090db6b3-a41b-45ae-941c-f337d049045d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f6aaca1-3419-41b6-9241-de3247a9cd60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d520d1-9af6-4f82-9793-8dd75b573784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86dabe08-8574-41be-a1b8-827b4fcb333e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd59318b-b6c5-4053-9854-8e4a246ecca2",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7134e0d2-6349-4a95-b1fb-543eb31da49f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6ea6f4a-84b8-4a75-b759-359ef0808f66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f63dafb-ee37-48e7-9b2a-71ed9174a96c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49a3fadb-5d59-424c-9e14-4adcd4d63d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f320ebc7-a91c-4e2e-a8c3-2fa03e6fd2e5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b6fa1e-0fd2-4d7f-b47b-ccbb70b04838",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0847a253-aa13-47fc-b070-01bf84dec13d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa2664bc-7152-433b-b2e0-e402f6ae638b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6afecb3-1bc1-4814-a80d-4f6778e58d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57de4f86-ae32-4667-8b6b-b8d20480927b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5ca6b8-99b4-476a-bdc5-e45d3df949bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a5243f4-1781-4c82-a144-0e9de3ca06fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fdfa5bb-c763-40c0-a308-22a946beb0a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f087b264-ecb6-432a-8e8b-fb848755cdd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1d03ce-55cf-4b32-b2e8-3b0fcaaa5bec",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d84feb74-80cd-4096-88b7-8cd2699bf698",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f8d2db7-76a0-486f-9056-a87babdf36a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7656b628-6c71-4960-92a8-21e475fbac1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d71efd43-1ec4-40be-8c62-69a3763c273a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12485993-84e7-48ef-8ea3-37e7c712153e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf61b46-3e50-4298-9109-7c42552a2aaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aca0ff9d-c964-4fc0-b0df-d9c3d9553eec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46adfa9e-83b2-45bf-a66c-f03f5cd875c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9c4fcaa-2fc2-4f31-8ace-e5781a296a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c3bafb-fdcd-4bbd-adb8-394ff239842b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc8f737-479d-4fc6-9a9c-22c7c0c42a17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1a77938-ffee-47f8-844c-a0b5212a8d1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08313c92-9813-4683-9cbb-8a567694841b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caa8ba3f-093e-4848-a1d8-1d9d77fb1018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4695a2b0-8811-4c7e-9a7e-ad22c416217a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a3929e-4541-47b5-b9cc-0b7cc531a232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "379f4202-12e8-46a0-9b8c-ee9d24bb7736"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "402efa72-6235-483a-889d-1a8923379946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79f9a764-fcee-4dff-9a44-243550fa6120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7434df22-fec7-4a39-be96-3a4141e6a101",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2453d2-2695-4bf9-b340-d5275bb4810c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "746f384d-5e84-4e01-8927-1bf2c3b30355"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2c9888-c2a4-4d27-a9be-ee80c65ba6f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b821267-019f-444f-99d0-93df6a23fa32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c2c99d-7889-4bbc-a663-17bb60fd313f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a3afeb-804f-407b-a2b3-6c7b036e8bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51602b53-cb5f-4706-ba05-0a8238da9eb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe7c2db-26f4-4745-ba44-0ea38731df99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "279a9d57-d78f-4805-b8ef-1c86ec14d624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc08262-a6d8-47b0-832c-42514151cc37",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67218135-3a09-4257-8e99-6eb3b786b089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3149ff2-da23-4099-bb0c-41f6884875fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e9a19e-55dc-4993-aa57-eadbf3e331cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b06b984-f9ac-40ee-9903-93c0c23276e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30693eac-c922-4584-9e42-7b69e787d958",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eca2292-6358-4628-b7d0-077eb83123dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55f18778-c082-44d0-a103-ab066dc47af1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9968e90-b2f4-4699-a58e-b92fd266d343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19ddf6c8-ab17-4b10-8107-1f4375accc77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a171c37b-b2aa-425b-93d2-14c3b9c9db0e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd00500-d1aa-4e67-8e7d-3e9cdf864fcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab6e3c5c-6cc3-4059-9854-e64ee6d1f2f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1baa241-095d-4a4d-b2fb-fbd8a0185127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac99b3e5-cf0e-425f-aff6-3c50f152e2d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3370aa63-bbc4-4a36-99f9-9c1943416575",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8a09a7-548c-4e3c-b2ad-a686437c1e47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43dde660-a41d-4ebf-b584-a1eb22744da3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb45164f-40dc-421c-aac4-6916b0a4e981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b2bcb07-d82e-4beb-a4d0-609e1f9ce13b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d97ac3-1745-41f0-9c69-c571159525e9",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6183e60c-0a33-4948-b369-5961996004cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "595bb74d-9928-4e48-94ea-35108efafda2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc99cfc-4033-4e08-9085-120dbb9218d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8537f96-2d8e-4c6a-a1b8-0723c19aac86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d28cf371-955f-411f-9342-910dbb750321",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b34ae6-3c37-44c3-89d9-a55f859baa9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fe464ed-5a89-419a-8369-20e0d0bc92cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63788278-1a86-4e46-b1fe-7e820ee847cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5b22814-e217-4f43-befe-80ad917ff74d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ced195-edd2-498f-8684-a3b555d85e21",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a20f7f-d7eb-422e-a2e2-7fbe69054fdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d8a3ddf-1e6c-4091-a287-905497ac50a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76aceb28-5c29-4817-9ff3-0032208e0ab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c115f74-6f4c-44f9-8758-182943c846ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9ce4de-8508-4d2d-9309-d6417d8117a4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da53740-3ca4-4855-8ef2-813091056835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d302938-0f9b-404a-b50f-8eaa9dbeeb0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "104e5e75-65ba-43af-a758-84af857afb4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72107b21-7292-44e4-9932-2479572f6728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a09414d-0de4-48f7-a35e-7c620c912a1c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8612bc-4f4c-4251-b1dc-91d66b8d8b44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8796430-4ffa-4028-b90b-69be7fb8ed67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e5c427-9628-4bef-b5b9-71c6dad82050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24099252-a83a-427d-9ed7-1c9523b34084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4126a0d3-54cd-4437-9b4e-a0910714adb5",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76573078-93c8-4afd-8e5a-d18c89686ae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "586dffdf-a6f6-4fe9-bedd-ae8d9d02da49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7408915-aeff-4e24-ac1a-bcf828ed1aa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3edb9aa7-a01c-4106-80bb-ab1eba01ea06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670feaac-487f-4b2b-bee1-62d0628d20a3",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58cc60fc-b07d-430e-99ae-28cdb2b66dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab283738-e407-4026-b83f-f32729893f76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bd3af6-da0a-4745-bd50-78b65f741c9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d93a2557-c0d3-4c04-a006-93c098649497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b6e215c-d7a5-4f12-8dad-b1719e87403e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "578e711e-45be-4f97-bf01-b07cd1fd84a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d203f3d4-424f-41e5-b9df-b613446ac9eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "307bf907-d5b7-4018-bc43-28970a69c1ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdc771f3-afaa-4ebd-bed2-f93c4e06f9ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a60462-a87a-40ab-8361-14d99f889b66",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895da028-1720-477e-9374-f0cbc952258c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10dc124a-67dc-4957-9318-42bafa9317d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4eae1a7-298d-4745-9ad0-3b6369843cd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48df0c4e-3fa3-4ea1-a9fe-738c3b82889f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f833d5f-1afd-4c6e-8346-f1d2ee7ad8b5",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc8ea4b-1da5-4eb5-ae3d-5c70129d15f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c37c6d58-4432-4927-ac17-c6bc3eae1764"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a61c529-36bd-47d2-b10e-7f8a70f0cafa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "507741d3-8561-4be8-8d8c-ce72efcd67e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc2de60-a6b2-4544-9ee2-ee8efbd78768",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60bb35d2-807b-4d7a-80aa-92466bbd5fc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "711e330d-8b80-47d0-a9cd-5e4f4d13d24d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d8df27-e374-4091-99b9-ec9eecd4a46d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c2ce736-2d38-4f40-a6f1-279f2830a914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32228f43-faff-4ef0-8bdb-0d9fbd9cf2ce",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f4173f-b21c-4db1-b441-69b4b251cd36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7761eb6-2f2e-48e7-9959-769dcfe53c7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50d2566-d61d-4b72-a6d9-155035bd994b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9211d4ce-6e8c-450c-8876-ed7f15d0fd9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f910c3-8439-4e5e-bfd7-f7340ebc3171",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac6f5bd-e9ab-46f4-b032-610d9860883d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e301795-387f-4d2e-861f-a32a97a33f88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d036ded-aaab-41fe-a5c9-d54aaa035127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77a2df0c-534c-4698-b8f4-a3f75a7bbbee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ab0170-117f-408f-a28d-23ac379f39b4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93b3ffd-2e12-4244-8917-ad54c459b63d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf648330-9a1d-448d-bf56-b29eef0ddf58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5ac694-0d9d-4899-bd1f-0102b85bbafc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44ceb407-9e8c-4f9f-9685-f5812bded45d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f7b993-1c32-4a82-948d-62f4ce301165",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04d224e-7212-4e2d-b78f-a3acf4696bfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0693c81d-c48d-4b37-b22c-d580c3bd8555"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72db0df6-df0f-49ee-a26f-35a7f264a73b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d38ad6a0-4618-4cfe-ba5e-0e4f8846593a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a66b1d-ffb9-49a6-be98-a3201170e856",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0fbecd-9981-4575-a0c7-028ff286de60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e3bb861-e0c8-4c7d-abac-1dc364420087"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92091495-8740-4cba-af65-9c4857492633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70fc01c6-5834-4d86-9c8a-deb588afae6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57f4d68e-099d-46e9-827f-c889181bf05a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e650f69-e896-47e9-9216-7f729549528a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f524822b-6225-4563-8dad-12783b586b2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2aa5382-24ce-40e3-a363-2ff34cd158a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a95ae1a4-aefe-4d37-8666-bee79a373c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a3e6d0-d0d1-4366-95f0-938baaf41bd9",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff19610c-0553-4a1f-81e4-e59fb057c423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab79a48c-3977-4d31-84a9-cecc95034299"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d676aa-931f-4849-bf8d-ac52fb323933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1206fe7e-5610-4cbe-bdf2-2a41defc9c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be95721-1c33-4934-9cac-6609a46a7794",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158b0f00-e2b0-48cc-83a2-f944193eb45f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6fe18bb-aac2-4bf5-933a-00fa561a5958"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82bc160d-a42f-48ba-8768-98af5282ea82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdd75ace-e5fc-4c71-b7bd-6b630e8a96aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1250f5a4-e253-49a2-82d2-077d5097af7c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1795dc3a-8910-4d6b-a6b3-69059446ec86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a9b50ca-c281-4f3b-94f9-b6e6af782ee3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1596a16-ab9f-47c1-af71-f984d643f9a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a743b079-f020-4ee1-8227-3737fd31a878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5496286-117a-4d32-a477-8ca2f9de4a54",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be92eea-9d75-4482-bb81-92f2c651ad5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e168b86-b14d-45ac-9243-2bdc1153e3c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1cee615-bc78-46a6-9d1f-c1859d7a7ba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c49ad0fd-47c1-4e2e-8750-5c605f2d5858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b9e860-c68f-4c4c-8a5b-588d761c7378",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dfddbaf-3409-4e97-a8d8-07700f52ab98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e1d6e68-4f28-479d-acf6-677c9c58f93f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e091924-7491-49f6-8e60-15b097d7dbda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c65cf6dc-169e-4169-9f1a-61197118e4c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ad1380-61ca-425b-b564-49f78aee83ae",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5333eb-da18-49c2-b9c7-8d4a65fbc938",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d4c5848-b0cc-407d-9ed3-8544c20d3b13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5839e2c-98b9-4307-a2a3-6bd9f0196c60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79f3366e-6603-4358-a46b-e21cbf2577ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6dd470a-bd93-4d72-99cc-ed48d8a7aa26",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c042fd-d07d-47ad-b6e8-b65dc6ca8d1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e4e8e9f-0877-4127-84b0-462c97870ade"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a359c9a1-2a90-456a-bc47-426fc569109d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04515ace-62b2-42ca-b723-244520ccd276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c738d4-7d78-4b99-8938-9888f6cacb03",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474fe776-4d57-476c-b92d-b829b5656630",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31266563-1e5b-4743-b6ac-4ce593e6a354"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd5b51f-c56b-492a-95bc-ebb3f5e78116",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81842927-e557-4759-8d76-e205b043d282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9ee5f1-45c4-43e1-8d52-a2bdde5e917b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a16358-4bd7-4e52-9020-7a7f5a1b4add",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1f5a78e-adc9-497c-8cb8-370a2fc11e1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f68862-ae9c-4db3-8a19-d49d3458058a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b7b1869-a0f3-4b17-8864-e8d189c51c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19f92c2-ccc3-4dfe-b826-6e71e37fa01c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a986dc-d5a0-4c6b-b3ab-12f56e59d408",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78a5f17b-2b56-43dd-86ea-60e1accb5845"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c11888-48ce-4ea2-85f9-4a5aba7443eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5de089e-7069-43b1-9c83-3cd1da8f29f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844e1d93-de14-418c-9f94-65b5c91b9cea",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a29b3e-0b96-436f-b0f8-586e04ce8f50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99c0e058-7ae0-48d9-bbdd-0fa69ee407d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1867dcd-d827-4588-971a-1b664f6413e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35694ecd-feec-404e-8615-655839b1e79f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac5fa93-9cb5-411c-af1e-f9a1a3af5ccc",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab6c90b-6aae-4eb9-841d-c7663697bb6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9a46bcd-8f7d-4586-a3a2-c1a1b7425eda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b005291f-a2ec-482a-b819-6c6c082855ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "946d720b-b31e-4f39-859d-75b5450c4add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478c60da-391a-4e70-9f27-0916a64d2197",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490ec5b9-c568-4521-bf0e-8f62e6081199",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc80a848-bd09-4310-96b1-cc8471249d67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "facd5576-84a5-45f0-958f-9a2d3e53ccd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17ef24dd-0497-48fd-bf71-2240db098544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0c14f1-466b-4e63-a8e9-899863a86744",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e604bfa-ee09-4873-8a6a-8976c1ab2a5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49596ea4-3e85-475b-af64-aea44644b523"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc299c0-e32d-4804-ac0f-1b31f164d4c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e58dcfc6-146e-4a70-a8dc-f5e65ea64305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227e48d4-d0fe-433c-bc66-c8379c598106",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbbc8dac-f62b-4469-97df-570094b81ae9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "411f1c14-eb45-4a7c-8938-eddaac3dfc5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fdc6973-0152-497f-8ea6-80276b617908",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "698a2fc0-3a5e-4bf5-aa39-05e3a66a208e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4061b2-c5b6-4608-8add-e4d894107b21",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75634ef-ef53-40f1-aa69-931572cd88dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c4e68f6-6bcd-4b06-a2f0-517bbff37012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50335479-58cf-4c8b-8712-f39dcfa2e6b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "228f3c05-dc8e-4925-864c-4802c60bd239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d040e8-1447-4a0a-9689-bc043cb9bf60",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23cc1da0-da30-4333-9761-40a1ec454050",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0a41c31-4d76-415a-9c7c-1d3b007325c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ffc1053-2638-4e00-9122-b94141538bb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29f732b6-1005-4402-bae2-a027725e4c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ba86df-c91f-42ad-8d30-61e50055eca8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f6cb2d5-a232-4603-9a20-2a19bca0cfee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3f06966-250c-4e61-9360-271c28cbeeb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd7db99-c007-4058-979b-1363c9302845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57e1abd0-d312-4207-bd7f-e25481753532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16d2680-f1c3-492d-a255-945e1ddf8127",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6cc061b-8b09-4e65-8a57-4e74c3975ae0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c118df4-ac88-4448-b903-c81fd0444fcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99187d8d-feab-4050-8de0-5cfebf9c87d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39b7a657-4f83-4405-b403-3bb7963dbfc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b064b65d-c9b8-429f-afa2-8319c700825a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "545e80bf-0062-4d39-a431-e6828380febe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d9465be-02c3-42ca-9880-1bc70c31433d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a23191-e920-41a0-ad5d-1bfaa96a4f14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56ba6789-15f8-4626-bcf7-96bc976242d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd995772-8df2-466e-bf04-5f823ce367c0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceeeac4d-d186-4971-84b3-7801f0f552b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db477efd-50d6-43e5-987e-834216409039"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1282a719-a426-4614-bed3-b015056e369f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dd1028d-627e-458a-a2c8-b9fd684893b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170494f8-420e-4857-92c5-b7235f77b77d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6394342c-aa3a-49c2-85ea-2d2f77bd0799",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bf9ffea-6f0b-470c-ace8-58228641851e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e122659c-a0d1-4548-a3d3-e217697b521f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bca7027-480b-4246-916a-abb4af43981d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21fca7dc-61ac-48ce-ba6f-9a8bbeab8fdb",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d176d5-a5f6-4a6a-a1af-35022492e833",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ce6508f-505b-4917-ae03-c3d1ee90d596"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbca499d-b23a-4be1-b50b-ef333f40783c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af2de5d3-0b59-42e7-9645-967cfc6592c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f038122-7ea4-4cf4-8236-44e37a48c855",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d85958c-4435-4c71-ab24-9d28d54d3c2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6b80dcb-03de-4e99-ab28-1372954abcd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a23d70-7f99-4578-819b-c662b4ffb4f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf6d8fa3-edee-4c4b-a4e9-f750516b48a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a128f7-642f-43a5-8830-0640eeae0c27",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae1a8da7-7bf1-41da-b6b6-4a70d092c639",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bd6934d-d59b-48ff-b01b-c7ed5d511681"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4cc3071-2eb1-43be-8589-6471027a98cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c8aa2ae-a07f-4332-a424-6515c658c1db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af38b643-7a23-4752-9af8-cc881553d872",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2588d584-3d5e-4b40-b326-5e2a79220ba8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a91228da-427d-4a25-aafc-3b752e5f58c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70c8a3a-220d-424e-a532-ba7363453714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "411d9f22-439a-43dc-b707-ce5fa8a6498f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2812ae9e-d5e4-452d-8996-103dc6f8819e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c6f1c5-4a6d-44fd-9b2b-184cd6f6ecc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d162076-e289-452f-b14d-24fa6236abd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e99e232-1e7d-4127-89a4-99c1c74e95db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9441643-25fd-4183-9012-b663882a6748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "200aedc9-085f-4625-b010-aad38464f98e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ceb752c-6adf-4a65-b784-747aee7e165f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe63848a-003f-4a56-a19d-204b6dc0a79b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8d34e7-a51e-4e14-aa89-942436fd3de8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45349913-2d51-4216-93f1-c5c2406bf555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f919d433-a102-4250-b1cf-58c8cf0153af",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ad6d97-8722-48f0-8d9e-9a90d6630eff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adf70fad-6e64-49a8-b11a-ce6dc30949c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63af9636-3e8f-4fec-a53d-08bb27461420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20eed9a0-9bd0-4b75-85dd-bb09b691b263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2b7f97-0fde-4392-af0c-4705c8ca742d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a8857f-9e14-469b-b255-ba854e4f8872",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d553df8-0c0d-44ea-bcaf-8e0f50ed38b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "156634fb-3c27-46da-9b15-50a94e411cba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24dbeeee-3f33-4c03-abf5-efc14fe21108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c56636-d400-431f-9ccc-36a3b98128e6",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a63d35d-43bb-45e7-921d-2b4322d03c9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be09a777-44b1-4748-85a4-6d36f888bb09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff966cb-b1c8-437e-ac14-475d98ff75be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efa24630-4576-4063-b5cd-32a7034ef3a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a684d6-c42b-41ff-bb37-101385bf9785",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db10ead-887b-47f0-afaa-c030f9e0b7c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d06ff31-c044-4e2f-a135-5b9fe353fc93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf883e8-3ebb-4f17-bfdd-6ed315f9c16f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c19c947-aaa1-4054-8db8-04551727cd60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a29e39f8-f6ea-47fd-badc-eed54a1e0096",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c203348e-d282-4355-8ccf-db34a583cd21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c4ea43e-7be2-42d2-bc22-8561f304afe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e04b796-89d7-4480-9a1c-70007429d2e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81c76fcb-4f61-4e78-9e21-e689ac4f17d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c87027f0-36fc-4bec-a691-9293f424a779",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcde1b78-6c1d-4474-a80e-c16c3c35fb38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "457b9db6-3ae7-4be7-94c9-a9adca495350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9252490e-397d-4a86-ac07-00b294ee5216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4e18d6a-fba5-45f4-8275-2b861cc0b10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eab9294-d7dd-4f5c-a5e5-803e5382a490",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f145560f-b75c-4e17-93a0-423851329b88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49ea3ded-1676-433d-b366-065d694ddf4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b388a7b3-e92e-4e23-9c9d-4f81d64adaa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1831df5c-5378-41a2-b80c-94dd23db22c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "546e3faf-6580-4a00-838c-6ba2f0e7ebc7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9940f7a1-26ea-44a6-8b6d-eb9a60d25832",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60e84495-96ba-4c27-ab01-69ce58083fd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ac2446-482a-4739-a587-7d791c216bf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2032331-c656-4b5d-9e26-4f523deac39e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b543a594-6a5c-44f0-9fea-c64399827f62",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3909485b-477c-451a-89c9-fdb5ce6a82f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55eaffb5-bc62-4501-adbf-e38b2816665b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c5cf441-8021-4092-bb58-5f7d38e2de57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22bafcda-ab2b-4dad-b259-8a6f49c10016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6824427-affc-4c06-bdd3-6b7810393d1b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43cedc74-a5e8-4175-a673-eb0c274a3691",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fab8f673-9b54-4f08-9232-221f1a40fba0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af03a624-3978-475c-b938-5871b8add11d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aefab527-7542-4238-90a7-afaf97623ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d2aeb2-6878-49fc-9734-ba73f71a71dd",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902be336-e736-4858-8e7c-57316d0e3628",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1feca29c-8031-4aaf-80ea-9ba46ad074a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b55e2f4-0a90-4408-a001-3afc0cc7d29a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cc92f29-cf55-4e63-a0c9-32ae45955999"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fae1b36e-d2df-4e12-a41f-c815438447ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9aee501-aa1d-450a-bd9b-811fea4848dd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "00513b05-4599-4d44-8448-d156e194e886",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2068d86f-db11-481a-9e73-61b7f12a1a2c"
                    }
                  }
                ]
              },
              {
                "id": "07404e81-d77e-4a9a-90d6-046cdb5e4c35",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0c5ff0e4-4e1f-4dbf-9144-d1f1c84f67d1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516eead7-c4dc-4f68-b409-e29fa098e8c8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "faf26b29-572e-4d88-97c7-d334e34d5999"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ec1e28-d571-48b0-adbc-ab054cc7a12e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "782c093d-d0c7-4063-aec8-82d4b86e4daa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b962c4c5-a6c0-42ba-adaa-fa1936609fa1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19ccb7d0-e881-4bdc-8e73-960cd3dd9bc9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f19c67d5-5c9d-44f6-824d-019764ba8fc9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "160921a6-39f1-44a8-937b-7f1e7717d9fe"
                    }
                  }
                ]
              },
              {
                "id": "6cfa0548-6474-4b83-a7f1-9206bcba002a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f9d758d7-4599-4b36-bdbf-5646acad8de6",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20f91e8-be52-4360-ac93-0817d3ed55c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b1c79328-8900-4324-b96c-fb1b6b93a5fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79482263-49cb-4e34-b6c2-fd4e317f05c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ed3b720-75a3-421d-ba13-59bbbdc8fcd2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7a106d6f-988f-4554-8dee-5954a4d1b90c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "53bf562f-9b3b-47d5-af26-5a9e4dec3d97",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d264da64-02b9-4a31-a30f-a638908df7aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3abff63f-c6a5-4403-9999-6b42b74af36d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba7a7bd7-2b4c-48dc-838d-83c0df1ff318",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68ccaa60-680d-48da-a3ad-21935d5947b8"
                    }
                  }
                ]
              },
              {
                "id": "568dd4a6-4612-404e-bb8a-867bc60d935a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e34334ab-c046-45cd-af39-763e571a8c96",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d6e53280-aaf5-4829-a521-eed12b1c35c8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9185ca00-92bd-4109-b9ba-64d94a1ff5dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0799f16f-c921-447f-9d51-d6b4dd35aca9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c0765fd-6993-4dfc-8124-f843607bb212",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d53cfd42-b583-40e5-863e-63b2f7c610e9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d324aff-3e64-40ba-a6d9-fb390a23f8a7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "40ede586-d492-42c2-82f1-3872d2aa0fca"
            }
          }
        ]
      },
      {
        "id": "3a6a54dd-716d-4bd8-ad59-b0bb5efd74b8",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "bdb08a70-d899-4cf7-abc2-6a7cfbde7d7d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "637ded79-f0df-4073-9e4e-f5876c8a7f89",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "048f1b5b-b0b3-4414-9dc8-bf41bf46ed77",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb0add1-c201-495d-b403-cb137a7e8dfa",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ae452f8f-c956-4c81-bebb-a3b2e555a3cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de7c904-4a9e-4dce-919a-287f543f0241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96afce27-d033-4db2-9b55-a56cbda52214"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88b6434d-fe12-477f-8bc1-0c558eb85e13",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8902dcb8-7a6e-49f1-9d03-c175d4690fa4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a2abc1c-436e-4952-8e3c-ed9e1dacf33b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a01fbd04-37c3-4d0c-8e34-100425b722b0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1bcd3097-8a24-47c7-988c-8201d93f89e2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5f681859-fb99-4d7e-8723-320787bf113b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "66085eb0-ecb7-4e49-aa55-1bbe3a0cbede",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b880434e-b3f5-41d3-96a9-408877f9f9fa"
            }
          }
        ]
      },
      {
        "id": "7fd6e748-5926-409f-92ba-e4a5e40ae922",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9074e6f5-46a6-4c7d-a20f-314086b2caa5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "db9ed2de-1c4d-4da6-8014-4d8f50aba20e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ca205609-d690-43e4-8916-46d6e3cd5f6c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe67ed8-8fa3-42be-96fe-ac2605a5b686",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7457ff96-ce13-479e-83bd-09f0bebd046c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b0c197-4d51-428f-92cf-4a88cbccfada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0dce778d-afeb-41a8-b831-37d67709810e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "069cb9a3-6b81-494e-8170-76f98887000c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b5a17f9-b6f0-4e7e-932c-4da1a0032761"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8205c2ae-7257-4db3-b4c7-fc66cd860b99",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3de733d9-550e-4694-a097-0c017b4f2ab7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5c5e62c3-1f85-457d-a5d6-937c8e17b2ac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "93190ca6-331e-47e6-9009-dc1bde3b1fdb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "12910772-bbc0-427c-b54f-6a84318a170d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "528753f4-85d8-4d17-b62d-2954e84e5c32"
            }
          }
        ]
      },
      {
        "id": "3b9b6d4b-9454-4c76-8540-fc7c4586eec6",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "052bdef7-071e-4994-a8f5-bbe6b7b34cf5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f509dbcc-e2c1-4225-bfd3-ca00ac263f58",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cb378b0e-013c-4755-9889-130ef4c2c75a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e0de82-9dc5-4459-b1d4-791dcf93eb4f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce5b272a-8ba5-4ea9-b5d1-1d8f7acba1a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "392e379f-cdea-4215-bcc6-be31b8a1ff2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c45b7cd1-bd27-4343-b2cb-f6535051bebb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8cfecea9-4b0c-4904-946b-46f53e8987e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7ab7429-9265-45b5-991a-114d166f55a0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "26d3d724-2697-4d50-a315-4b4f1c5689ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd3f237a-6ee2-4831-8fe2-dcaed7fbe9b3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9bf86a9b-5c8c-46d5-9df0-78fb4705a9fe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8f690a34-bfff-472f-9d1e-a7eb989b18f4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0cd69f1-d630-4503-92a5-0e9827ae6f23",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ffa325e8-975a-4378-8ab6-eb0cee26c34e"
            }
          }
        ]
      },
      {
        "id": "a319f565-4a82-4dec-b633-1b81c3b431ae",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a83c3e2d-0436-473d-9fc7-73c8e824f622",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a464d3e-70ab-48d3-8ef5-f5dcb5d39379",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "715a47d9-616a-49bf-b674-0aa9e767a07d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac70f227-c847-4b78-9160-4fcda40087ab",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "39bc0965-4ba4-45ff-9ced-25a69ebf3edf",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 637.637323943662,
      "responseMin": 6,
      "responseMax": 37266,
      "responseSd": 3783.05940895798,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1695947599698,
      "completed": 1695947793572
    },
    "executions": [
      {
        "id": "b31ba2b0-ea30-4f14-b210-a0902fb9221a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5a767a21-bcdc-4aac-af98-1f39d0c7780a",
          "httpRequestId": "949200ab-c66b-4f98-91e5-dcea5fc1024f"
        },
        "item": {
          "id": "b31ba2b0-ea30-4f14-b210-a0902fb9221a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7b580b31-f4dc-4589-b75b-51c74b821812",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "db1e3652-ac80-4a09-af88-5a149ca4f87f",
        "cursor": {
          "ref": "63cba6e7-2f16-4c60-81ea-abc140a1fc80",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ca271c21-2f9e-4322-804e-b6eaf0407419"
        },
        "item": {
          "id": "db1e3652-ac80-4a09-af88-5a149ca4f87f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "4c25dfa5-c39b-49e6-95b6-5eab2079373b",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "1c02a479-bd8e-4267-84a1-3a507335e28b",
        "cursor": {
          "ref": "bdf0ff1e-e99f-49c4-a286-0a3653b61a65",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b8504aeb-44da-4560-9da7-01450b46f3f3"
        },
        "item": {
          "id": "1c02a479-bd8e-4267-84a1-3a507335e28b",
          "name": "did_json"
        },
        "response": {
          "id": "a39d2684-9e84-4dca-861d-f799a70bf59f",
          "status": "OK",
          "code": 200,
          "responseTime": 1593,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a783e6-1ce7-4abf-94d0-0d50d1eef698",
        "cursor": {
          "ref": "2d814b44-8506-4866-92eb-df4525f64031",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "76df54f7-1497-493d-8518-81d1f39fa1f4"
        },
        "item": {
          "id": "74a783e6-1ce7-4abf-94d0-0d50d1eef698",
          "name": "did:invalid"
        },
        "response": {
          "id": "d5e374f4-f14f-438b-b858-2b6a2fdeaedb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a783e6-1ce7-4abf-94d0-0d50d1eef698",
        "cursor": {
          "ref": "2d814b44-8506-4866-92eb-df4525f64031",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "76df54f7-1497-493d-8518-81d1f39fa1f4"
        },
        "item": {
          "id": "74a783e6-1ce7-4abf-94d0-0d50d1eef698",
          "name": "did:invalid"
        },
        "response": {
          "id": "d5e374f4-f14f-438b-b858-2b6a2fdeaedb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf587a2-f94c-4596-b7f7-8de17e1ae0c7",
        "cursor": {
          "ref": "210c5fa2-db88-4d7e-b710-fb999e1e67a4",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6e7f84e8-7c60-4ba9-8093-f480892ff715"
        },
        "item": {
          "id": "6cf587a2-f94c-4596-b7f7-8de17e1ae0c7",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "63e661da-ce98-4424-91d0-33f5a318ca41",
          "status": "Not Found",
          "code": 404,
          "responseTime": 307,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef4096a-826f-4a96-a552-6509958f6228",
        "cursor": {
          "ref": "40c5b4a8-82f2-40e4-afed-45c2298bd37c",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "bfcf9619-9efe-4cae-bb3a-954d4acf81eb"
        },
        "item": {
          "id": "3ef4096a-826f-4a96-a552-6509958f6228",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d7eefa2f-aa1e-48de-a0c4-8aadfe950b7f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 324,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c9d020b-ef2e-4286-8468-e9744c621e59",
        "cursor": {
          "ref": "91ae29fb-677e-4b2e-9699-b62703dbdc52",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "fae90ced-2287-42b8-83ae-837648da0ee8"
        },
        "item": {
          "id": "6c9d020b-ef2e-4286-8468-e9744c621e59",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "906ae775-01ca-427a-998c-95b0c0bd74b4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a4ef4d-a85c-45fd-bf92-a93c68ef3557",
        "cursor": {
          "ref": "ab092051-6031-4ba7-9da8-e4eba8570fcf",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "180bdf85-36bc-4c72-9968-cd2b6bcdb265"
        },
        "item": {
          "id": "50a4ef4d-a85c-45fd-bf92-a93c68ef3557",
          "name": "identifiers"
        },
        "response": {
          "id": "0a51fa47-8f0c-4359-9477-bc4ecff27769",
          "status": "OK",
          "code": 200,
          "responseTime": 1146,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f75b1b-5361-48f4-bfc0-21b5e9276582",
        "cursor": {
          "ref": "c6e5a425-7745-40cf-be59-03543a50230a",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3bd71a88-812f-489c-8f21-92aed09405f6"
        },
        "item": {
          "id": "d1f75b1b-5361-48f4-bfc0-21b5e9276582",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "bae5c107-c59c-444f-b917-1230418a9781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343419ef-e555-4cd8-af27-f06360278053",
        "cursor": {
          "ref": "0659e3b6-0318-4255-8cc1-fc4a2e30dda0",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c999add3-6468-466c-8fd8-7f7d24b2a04c"
        },
        "item": {
          "id": "343419ef-e555-4cd8-af27-f06360278053",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e6e7c4b0-ee5e-43d3-8330-9deb86aef3ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be743ef-d24c-49f6-ae80-e37908147c5f",
        "cursor": {
          "ref": "bd94247e-7357-425a-9e8b-7d6a53eac7cc",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0bfd2aec-0c81-4db5-9847-490aec786fd9"
        },
        "item": {
          "id": "8be743ef-d24c-49f6-ae80-e37908147c5f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e172b1f6-054b-4734-a396-f6a0a8cbd2bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea80e16-3807-4c2d-a6ec-adfe99ec599b",
        "cursor": {
          "ref": "98dac6bd-675c-4158-99f5-8252748eec44",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "eb2699db-d901-4d14-bdbd-6c1c940b64f6"
        },
        "item": {
          "id": "2ea80e16-3807-4c2d-a6ec-adfe99ec599b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7f502154-f2b3-4205-a0c8-357d5da16d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988366be-4495-433e-963d-38b2e0e8e394",
        "cursor": {
          "ref": "5f9b6c26-3747-4ce7-8148-f5ff99d939f1",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8db67e9a-0ecd-4a95-b3ab-bdcfda87dfe1"
        },
        "item": {
          "id": "988366be-4495-433e-963d-38b2e0e8e394",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a5665016-68e4-463e-830e-fed903de9241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f855c49-357b-41f2-9d1b-3d532c87a200",
        "cursor": {
          "ref": "6f5afb9b-3cd9-471c-9803-8bfd9aa0f8bc",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "cbf52235-1216-4aa8-851e-ffc6e539fd6a"
        },
        "item": {
          "id": "2f855c49-357b-41f2-9d1b-3d532c87a200",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ed0674c2-1563-48e6-8181-41cd1c9e536a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7cadda-bcbb-42a7-ac08-c687e520a9d4",
        "cursor": {
          "ref": "f2f4b10a-abb2-4e07-a436-13e405c0fb10",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "cf249b50-b186-4182-bbdf-d73a357073f5"
        },
        "item": {
          "id": "1f7cadda-bcbb-42a7-ac08-c687e520a9d4",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "97d0e377-fd74-4b88-b863-8b1a86dacba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9476e85-cd59-44ca-98c4-9d2afffc0c48",
        "cursor": {
          "ref": "99f9c4af-c016-40ab-9d59-43579b640928",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "6688c354-a2fd-4c20-983d-641841c77bd4"
        },
        "item": {
          "id": "b9476e85-cd59-44ca-98c4-9d2afffc0c48",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "9bbe80a5-2a5f-40b8-8561-599bd383fef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af86925-609c-4990-90ed-36cb38dead9a",
        "cursor": {
          "ref": "11074d8f-473b-4291-9c9b-1555e1dc29bf",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1c6aaedd-f79f-4fb7-a13d-901f64642442"
        },
        "item": {
          "id": "6af86925-609c-4990-90ed-36cb38dead9a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "307bf9a3-da38-49ab-a222-9036cde12206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "499e6360-043a-4c67-b033-fa3c440b10e4",
        "cursor": {
          "ref": "67608847-96fa-49bf-aa80-60f5c5f9a357",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "e76200ea-b0f0-48d2-a432-d1308c46e6ba"
        },
        "item": {
          "id": "499e6360-043a-4c67-b033-fa3c440b10e4",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "233dc22e-7f96-44a7-9575-535ed03900be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72fbe1c1-728a-4db6-8363-54d9ed9eefe2",
        "cursor": {
          "ref": "c40d600c-5ce4-42b0-8593-3e4fb7f4cada",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c77de8e1-deb2-4c2e-9e9a-5cdda892a24f"
        },
        "item": {
          "id": "72fbe1c1-728a-4db6-8363-54d9ed9eefe2",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "046b7627-cfb0-45c4-b63d-73e94ac9eeca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2505d5d8-e9bd-404a-86c8-7c26e290a894",
        "cursor": {
          "ref": "7752652d-ff1b-4298-b71d-9044a6b7f718",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8f00b66e-156f-45f2-8a90-fc560f8c66fb"
        },
        "item": {
          "id": "2505d5d8-e9bd-404a-86c8-7c26e290a894",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5e840ea0-77b8-412c-ad44-5cbcb4b62d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "937ff78d-6a64-477e-97fd-68016d111617",
        "cursor": {
          "ref": "970144f9-9db2-454d-b6ad-4c4b801ba37b",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "df0d261c-8d5a-4e96-ae3c-2ddba4e405d3"
        },
        "item": {
          "id": "937ff78d-6a64-477e-97fd-68016d111617",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d7f693c9-5e84-4632-a85e-a3918370bb1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c207a7-3efb-4ba0-8f37-9555891beb25",
        "cursor": {
          "ref": "441d14b8-f228-4783-a4b8-b97491810342",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "2ab79b9f-d6d0-4dd9-b975-d8c3da033d1d"
        },
        "item": {
          "id": "50c207a7-3efb-4ba0-8f37-9555891beb25",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "94266bd8-8d72-4a0c-8c4a-c1d7a9aa1d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc07183-90b0-4391-80bb-ba0c4d922e22",
        "cursor": {
          "ref": "1ce64c47-ff15-4d9f-aad8-4a1109f9a237",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3813ae72-74b0-49d8-84e2-4baf2528ebce"
        },
        "item": {
          "id": "4fc07183-90b0-4391-80bb-ba0c4d922e22",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "57ca6383-3576-4757-81f0-e52c72e5938f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8de693f-c3ea-4253-b0ca-402aa2ce7416",
        "cursor": {
          "ref": "b3518eca-46fb-40aa-ba0a-2af730f2b01c",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ca7e8f06-3266-4cac-aaf5-8fbd19d2dd4e"
        },
        "item": {
          "id": "c8de693f-c3ea-4253-b0ca-402aa2ce7416",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "77b717c2-0e62-4425-85cb-2143efb66bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9095926e-19b2-4a98-8e02-045efe94172d",
        "cursor": {
          "ref": "03032143-173f-4fa6-9aff-50dfc862e21f",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "98adf314-cd84-4243-bbdc-1e1f2edecfeb"
        },
        "item": {
          "id": "9095926e-19b2-4a98-8e02-045efe94172d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e752b08c-d6f4-496f-b9f9-ccd1c7b54531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096581f1-e27e-4f0c-aaae-c79979db1bc7",
        "cursor": {
          "ref": "80708c9c-40de-4618-85ef-658f8f84acb4",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b5151216-c60b-43b1-97c9-61d57f6f7bde"
        },
        "item": {
          "id": "096581f1-e27e-4f0c-aaae-c79979db1bc7",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b958d898-c989-4cc6-b189-bfc8e5b9b378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82cbaf2f-a7ce-4635-adc3-6bc340a17fce",
        "cursor": {
          "ref": "84e895b3-3d5b-4357-9de6-1cfd4cf7ab38",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "96230396-7226-456d-b318-37b9eb7843a9"
        },
        "item": {
          "id": "82cbaf2f-a7ce-4635-adc3-6bc340a17fce",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "cd512b15-e417-4c87-a827-bedb6df761f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "216f8dae-7992-41a5-8beb-9e7e714ec87b",
        "cursor": {
          "ref": "af2f55d4-23a4-4623-be74-b95f0e77e9e4",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e847faeb-61b7-4328-8647-ebbaf6f96b3f"
        },
        "item": {
          "id": "216f8dae-7992-41a5-8beb-9e7e714ec87b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6ebb2ae1-24b5-4f22-aa68-c686d8a3d655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080c4175-423c-4dfa-8422-3ff9040406b8",
        "cursor": {
          "ref": "3de248ca-2223-4c3b-b175-dbd665b10cc2",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "550d2de4-f6a2-4894-86e9-018f8238a812"
        },
        "item": {
          "id": "080c4175-423c-4dfa-8422-3ff9040406b8",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b25a27a9-3f04-4835-bd2d-0a367d6b6240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602513bf-a892-4759-b947-116f6ab535c6",
        "cursor": {
          "ref": "35748466-67fc-42d9-af73-51fa8aab9165",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1b932b29-ef68-4bf1-b8ae-8f41c9f03ea7"
        },
        "item": {
          "id": "602513bf-a892-4759-b947-116f6ab535c6",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "50152784-1a6f-4708-8027-db56668354eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b3871d6-f6a8-4f07-80d0-369fe66fea4a",
        "cursor": {
          "ref": "2b3a1590-060e-4780-a6c4-9e84bbb3ca75",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ca2e5ebb-6ccd-41a7-9831-4f6ebd8ca38e"
        },
        "item": {
          "id": "7b3871d6-f6a8-4f07-80d0-369fe66fea4a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "588ecd88-5913-4d97-8db2-b15c202e846a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5af364e-0db2-4db5-a7c8-d1f309da9333",
        "cursor": {
          "ref": "3503d510-c4e2-413a-9dd5-67bb07f96a82",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7c4ed64a-d4c9-4157-81da-b71486973f4c"
        },
        "item": {
          "id": "e5af364e-0db2-4db5-a7c8-d1f309da9333",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "728a9199-d08e-4a66-85a2-de3743250a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101c9e2a-d97b-4e77-b93c-5f29a7fa540b",
        "cursor": {
          "ref": "85bd3168-0407-4374-a25e-814dbaeb1907",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "fc5cf656-054d-4406-b5cc-1eac5e0615b7"
        },
        "item": {
          "id": "101c9e2a-d97b-4e77-b93c-5f29a7fa540b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f8babd14-c4b7-4b03-b8c4-0b5d42e354fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34810e1-8b09-48f4-9ff1-9d9061782ff9",
        "cursor": {
          "ref": "8c2804aa-4ea9-4919-988d-6a690870fd46",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "86898828-49df-4317-889b-b158af46b6d8"
        },
        "item": {
          "id": "c34810e1-8b09-48f4-9ff1-9d9061782ff9",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "36ac3594-4b81-4f16-a914-3c488320706b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac9bc914-113e-4be7-b50f-8f491f63fa90",
        "cursor": {
          "ref": "573c32ff-1941-4bbe-b68e-f0fd13103be5",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "da116795-5850-49dd-aa97-3a245004eaac"
        },
        "item": {
          "id": "ac9bc914-113e-4be7-b50f-8f491f63fa90",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b487d836-8895-46de-bf6c-fac0628c630d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65796302-0585-4cfb-9079-a0777c03dade",
        "cursor": {
          "ref": "067a362f-32b5-457d-a9f1-c08e95379105",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "91742912-8b41-4068-ba5f-a1f169eefe65"
        },
        "item": {
          "id": "65796302-0585-4cfb-9079-a0777c03dade",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5953ad1f-c708-4478-b447-8ceea9a581b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342cb2cf-b8a2-4d07-bdf0-b0c336e1f2d5",
        "cursor": {
          "ref": "c9e18ac7-ec53-4eb9-b235-bd13f54db158",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "794d9dc0-ef72-4bdb-af82-be27d9fb8e7d"
        },
        "item": {
          "id": "342cb2cf-b8a2-4d07-bdf0-b0c336e1f2d5",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d3fcc464-0ad2-4296-95fc-7f433d43e8d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde217bb-02c4-4d0c-b6d4-5f8c9cd0d419",
        "cursor": {
          "ref": "0e70126d-7f8d-4418-89e5-3c84203ccc0b",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9e8f9cb5-c4d0-4a82-aae2-1cadc92e41b3"
        },
        "item": {
          "id": "bde217bb-02c4-4d0c-b6d4-5f8c9cd0d419",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "cf49deaf-2bd8-4f23-8fcf-546e15a94c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425826be-ae3d-4e51-a5b4-eb837b4d73fa",
        "cursor": {
          "ref": "e9304b69-484d-4884-a998-fab083ea959d",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f600ad65-a41b-4308-82da-1f451f1a75a9"
        },
        "item": {
          "id": "425826be-ae3d-4e51-a5b4-eb837b4d73fa",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "8c2de2e0-b0e4-44c2-9405-4bedfc99c36b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00773c50-926c-416f-9b88-83a52938f28b",
        "cursor": {
          "ref": "8d67fd87-950b-4e13-b18b-96df50d732ba",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "07786910-df8c-4eba-95eb-32408a133e3d"
        },
        "item": {
          "id": "00773c50-926c-416f-9b88-83a52938f28b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c23dbb6d-784f-448b-aecb-108b15858812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a968745f-2f9c-4552-b2a6-8b2d7c445e83",
        "cursor": {
          "ref": "d4294e49-c63e-4a9b-8af4-8d8d37a27cfa",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "eb24c515-ff3b-4cc0-8de4-c1b28604efc6"
        },
        "item": {
          "id": "a968745f-2f9c-4552-b2a6-8b2d7c445e83",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e82a2d0a-5f54-42c3-8d69-60b464a167b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659cfacb-674c-4761-9629-dd64635ebaa9",
        "cursor": {
          "ref": "553ea315-732d-4a71-b454-b670086e8298",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "7dcc654a-ffdc-4954-8e24-76a4ef85e1a0"
        },
        "item": {
          "id": "659cfacb-674c-4761-9629-dd64635ebaa9",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "dcc4a9c4-4465-4dd1-af57-f1a2002db685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b60ea76-aa8b-46ba-a1a6-d8648aa16edd",
        "cursor": {
          "ref": "3f49f9e9-1b05-41ba-a848-c5ad5211e233",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "bcb15219-a994-4a4d-8339-6cfb4de66fbb"
        },
        "item": {
          "id": "3b60ea76-aa8b-46ba-a1a6-d8648aa16edd",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "8591f5fd-a191-43e6-8b1e-161e617b9e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7df6fe3-282a-4bc2-8b5f-df474dd2f827",
        "cursor": {
          "ref": "799ae7f7-c641-453b-982d-83555d97a0a1",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0fe8a832-f98a-49f7-82f1-ffb32baff3ea"
        },
        "item": {
          "id": "f7df6fe3-282a-4bc2-8b5f-df474dd2f827",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ebfb93cb-950e-42c9-856d-9596f0538cc8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 593,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158dd2a9-8e49-47fd-9e5e-5efa5e9b643a",
        "cursor": {
          "ref": "d4f20086-3fb4-4956-bae8-7f91e49f1fbb",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "87e923dc-f33f-4da6-b700-f51942e22ba0"
        },
        "item": {
          "id": "158dd2a9-8e49-47fd-9e5e-5efa5e9b643a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e276df9b-a7af-44e8-9dad-2e212a08cde6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce87ffb-f448-4e58-9c02-191172242160",
        "cursor": {
          "ref": "3e16ddd7-6006-4503-82da-48ef10623efd",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a0e3fad2-0f20-4272-9628-a09617528f33"
        },
        "item": {
          "id": "fce87ffb-f448-4e58-9c02-191172242160",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e9dc531a-b568-4eb6-98e1-f9f7d229af5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99026e18-b532-45b0-a772-e4c216877b96",
        "cursor": {
          "ref": "3f3d893e-dd04-4808-badd-acec2fac4df2",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ab802f71-6441-420b-bb43-3d0a5616cc21"
        },
        "item": {
          "id": "99026e18-b532-45b0-a772-e4c216877b96",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b818ffeb-e5d6-4954-a34f-1ad31c0a8fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2984af8b-df48-4b69-a0cb-e439b974dcee",
        "cursor": {
          "ref": "68a6773c-4056-46a5-8b68-55ad10dba6fc",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3abd7d5d-019c-4994-a95e-aea90a8d598d"
        },
        "item": {
          "id": "2984af8b-df48-4b69-a0cb-e439b974dcee",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "eb06d564-5dce-42fe-8da9-a31533968487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665bd8ea-8c21-41de-bd18-c79f7f5572c9",
        "cursor": {
          "ref": "e8626127-b8d4-4339-9d7c-1cc16bb23909",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "42a3db61-b3fe-4bf2-ab83-f8a7fb8a7a36"
        },
        "item": {
          "id": "665bd8ea-8c21-41de-bd18-c79f7f5572c9",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "20a1750c-b6a6-4b6e-92e5-06fed2b1bfe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2713c7e-5bd1-4d0d-99bf-5ae7b3a17df6",
        "cursor": {
          "ref": "64947c36-3215-457a-8c80-335ef9698b56",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "799f07fe-a245-447b-8389-92b28ce36f04"
        },
        "item": {
          "id": "d2713c7e-5bd1-4d0d-99bf-5ae7b3a17df6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "951839e5-a14d-44c0-9ff8-de66798eea72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9111ed97-ed64-4763-a528-384b5faf9317",
        "cursor": {
          "ref": "3f077130-a173-42df-bb45-9e7c3f97a48c",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "86cc6358-2905-4ae8-90c3-6822ca3eb680"
        },
        "item": {
          "id": "9111ed97-ed64-4763-a528-384b5faf9317",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "39005548-2883-4d90-8692-0dcd7cadd04d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 593,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee5fd9ec-6360-4752-9dc9-07cd3a0e2a2a",
        "cursor": {
          "ref": "42f53b7b-ddd0-4a92-841a-6f51aa7278f6",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "917c0f10-339e-4f9f-b83f-810c4cd8ae5f"
        },
        "item": {
          "id": "ee5fd9ec-6360-4752-9dc9-07cd3a0e2a2a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "fe503227-0795-482d-8769-0cedb967cda4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e13774-dea5-4263-a74f-3e4698663aa0",
        "cursor": {
          "ref": "ed08119c-2ef3-4ef8-bcff-13ef31851f64",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "00017bb8-dc6a-4d18-b2b6-9942fb1be026"
        },
        "item": {
          "id": "35e13774-dea5-4263-a74f-3e4698663aa0",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "031fb285-0cdb-46a7-bd8e-efaf66987651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ef6100-74f2-4ed5-8c1b-1b8eb534ec80",
        "cursor": {
          "ref": "2da977e8-0926-4ff6-b0cc-b0aae73e5035",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6f88f75d-5e3d-446a-bcfa-362a095e590b"
        },
        "item": {
          "id": "d8ef6100-74f2-4ed5-8c1b-1b8eb534ec80",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2ae43e08-02bc-4171-ab04-9ac92f522354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee6d595-ef8c-4cf4-9287-a1c6a1f3a5ff",
        "cursor": {
          "ref": "ee293fc0-b449-418b-8f10-4ccd88495f07",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f0d2a637-9f60-4df2-841d-e78ddd7db4b8"
        },
        "item": {
          "id": "6ee6d595-ef8c-4cf4-9287-a1c6a1f3a5ff",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e9f35747-f8fe-45b4-b93f-bacb45c2a885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c542c0-ea23-4b33-b863-a22ff48961e0",
        "cursor": {
          "ref": "91aff11d-df9a-494d-bd29-81114bde19c2",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c4defc94-61ff-4883-825e-36bb3eaced52"
        },
        "item": {
          "id": "92c542c0-ea23-4b33-b863-a22ff48961e0",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a80f02ec-95c6-4238-ab3e-170301f75ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08ebcec-baf8-4a28-96b1-c3aa36b1de44",
        "cursor": {
          "ref": "e3cecbc9-1303-4ed5-8536-5fd496fe60c7",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "95723f21-2cd1-442d-896e-cb38e028087c"
        },
        "item": {
          "id": "b08ebcec-baf8-4a28-96b1-c3aa36b1de44",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c8d5754a-ef45-40bb-ae12-f7bf3587abc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01a2b6d-984a-4a28-8e50-a80530e54471",
        "cursor": {
          "ref": "bb981d00-525c-4ab8-b005-14eb497da721",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "833f1f9b-585f-47ff-9084-a7f7d660503f"
        },
        "item": {
          "id": "a01a2b6d-984a-4a28-8e50-a80530e54471",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e20057dd-d088-4463-9938-38bafafb83fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46aa2ce-0298-4768-9654-727f663978fa",
        "cursor": {
          "ref": "fd2c52a8-2650-4fc0-9b53-e3fdc3a9e05a",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c95c5698-6875-44e4-888f-ebd0d46a4f6d"
        },
        "item": {
          "id": "a46aa2ce-0298-4768-9654-727f663978fa",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c4d2f291-5c97-433f-8070-e933ad71714b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c0fc37-1747-44b9-b104-10a1efe341c9",
        "cursor": {
          "ref": "8e5d6773-4203-44b4-9e21-1b9142d6db7b",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "253df9f2-9001-457b-953d-596efe0fcaed"
        },
        "item": {
          "id": "21c0fc37-1747-44b9-b104-10a1efe341c9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f980fb8e-32b0-4467-aa3d-d7391619f61c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2a7c30-67ed-4136-a02f-5e3445dbb23e",
        "cursor": {
          "ref": "d438c725-597b-455c-aed2-b62860f5c31a",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d909c596-ccd3-41fc-9a27-054807c3f2ec"
        },
        "item": {
          "id": "9b2a7c30-67ed-4136-a02f-5e3445dbb23e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1767309e-3480-4857-b2a3-e908c8944f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002351cc-06f4-438c-99a3-041c661a1bb1",
        "cursor": {
          "ref": "bb7cee2a-e261-485c-b9ed-29eb2488b320",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e5591db7-2426-4cd9-9c9e-b591987a9cfb"
        },
        "item": {
          "id": "002351cc-06f4-438c-99a3-041c661a1bb1",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "710d1f9a-715e-4198-ac67-3888e883c313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c115c4cc-71a6-472a-9842-a70dbecfeb31",
        "cursor": {
          "ref": "a4ea60fc-ba75-4372-b9fa-b08379fb0892",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "66034b35-ebf3-44b5-822e-1a7f816a71a8"
        },
        "item": {
          "id": "c115c4cc-71a6-472a-9842-a70dbecfeb31",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "393ef4ba-67a8-43da-b836-06632b7ae9b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383b4ea5-a69e-4fac-a398-50f9606ad8c9",
        "cursor": {
          "ref": "a84d7b19-6cc7-4881-8024-9d99365b796e",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7e5e6520-2576-42c6-9eba-daeafc6132e9"
        },
        "item": {
          "id": "383b4ea5-a69e-4fac-a398-50f9606ad8c9",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "155e7f06-f7f5-4815-a803-6d086e0abb78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3def4a93-ad0e-4b1a-9c06-2e334e7a9dc8",
        "cursor": {
          "ref": "ec192a71-aa2e-4b88-92e9-1c7374992d74",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "db8f8582-6bdb-404b-bd1b-95be1c50c3bf"
        },
        "item": {
          "id": "3def4a93-ad0e-4b1a-9c06-2e334e7a9dc8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "13196da7-da5b-4208-9403-97613f14a8d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2229a69c-1950-410c-8200-6dceaceff877",
        "cursor": {
          "ref": "3688963f-b29f-46b7-81a8-238c33ace298",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "cf00022c-8650-42d0-9000-639312baf5da"
        },
        "item": {
          "id": "2229a69c-1950-410c-8200-6dceaceff877",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e0356ac3-9724-4a41-847c-d84043241293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1065829-dfbe-426b-a597-e5f37a123f58",
        "cursor": {
          "ref": "fed51a37-6c32-4d30-a7ff-3414f2183831",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "82f140f8-015a-4859-9721-7cfd2914a5c4"
        },
        "item": {
          "id": "e1065829-dfbe-426b-a597-e5f37a123f58",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1f879079-cf6b-4350-9958-fa0ea8b61cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69add625-7f40-4bf9-9ae9-99fd7b732516",
        "cursor": {
          "ref": "d6ac04cf-d856-49b7-9a4b-c8383f0fe8e7",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "502fe0eb-8cc0-41fb-aab5-847642822d96"
        },
        "item": {
          "id": "69add625-7f40-4bf9-9ae9-99fd7b732516",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "5050c72d-1967-4a65-b20c-2b6b820d3f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a9f0a8-d335-480a-8796-71c5529334d2",
        "cursor": {
          "ref": "726da77f-f17b-405a-b040-3dcd8d7e7f10",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a872e8c1-97d2-4caf-b701-cc8f9c50cc6a"
        },
        "item": {
          "id": "28a9f0a8-d335-480a-8796-71c5529334d2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d5003c47-9ab4-4331-b854-825e8196fea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd413850-111a-4271-9d09-7076b5d3f639",
        "cursor": {
          "ref": "c5934456-becd-4570-9e68-4ea2836f5d4a",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1203ee68-5442-4d56-9fcd-541dc499e4da"
        },
        "item": {
          "id": "bd413850-111a-4271-9d09-7076b5d3f639",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "77f45be0-6ef4-4e3e-9c91-eaf6ebbd38bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d1cecb-c74b-48ce-b8ba-2cc14bfdc32d",
        "cursor": {
          "ref": "0b918e70-0f50-42cd-9687-a3190444fa86",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b5ee60f4-01eb-44d3-a687-c997f5877100"
        },
        "item": {
          "id": "f6d1cecb-c74b-48ce-b8ba-2cc14bfdc32d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "cc8b9f67-9e52-45ff-bc1f-0b5bf7081d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80bdce80-5aeb-4266-a11d-cafd666db35e",
        "cursor": {
          "ref": "a1f04d42-18ab-47e5-806e-5560b72f9e70",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9cb3de3d-900c-4154-9e84-539eb1d25f95"
        },
        "item": {
          "id": "80bdce80-5aeb-4266-a11d-cafd666db35e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0e31c12a-79f6-416a-8158-a2f964d4ede1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e736ffc1-43ff-4a32-b510-6bfc3157986f",
        "cursor": {
          "ref": "f66f7e64-3ffd-4e12-9eaf-ddaa734fc7fe",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "116013a7-b468-4cfc-b7f6-33432752da0d"
        },
        "item": {
          "id": "e736ffc1-43ff-4a32-b510-6bfc3157986f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "47305708-8eb8-45e9-8a99-fb7ea5e1b772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d54376-1b08-4a1e-8615-488ed601d21e",
        "cursor": {
          "ref": "7ee9e604-0fba-4167-8c9a-7994967d1707",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8c636b9b-d24d-431c-86ba-095092c4a9b4"
        },
        "item": {
          "id": "20d54376-1b08-4a1e-8615-488ed601d21e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4f2c349c-33ee-4b77-8b9a-ef4fd8c681d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d639d0d4-61c4-4c8e-a47b-84d321a8feef",
        "cursor": {
          "ref": "567e9a4c-3b07-41be-b964-84ab6261ee0e",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2947c242-4e11-4fa5-9df6-7f3ff7d06452"
        },
        "item": {
          "id": "d639d0d4-61c4-4c8e-a47b-84d321a8feef",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5303dcaf-ec73-4769-9cab-16ed6bde504a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2661ed0-361a-44db-9332-967796f75a86",
        "cursor": {
          "ref": "6079ca3c-8e82-40b5-903a-afa17259abed",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "457b7bf2-8e79-4aa6-98bf-eab85f9425e9"
        },
        "item": {
          "id": "a2661ed0-361a-44db-9332-967796f75a86",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5ed0275d-1a50-4a53-a645-369db3f3fb20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5592f15c-38b9-42a7-9bc1-773d056b012b",
        "cursor": {
          "ref": "efdf4abc-b796-4f9d-9178-bea97d9fcb1d",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "5747fc51-c2c6-48c6-aa26-0426cb5a0e5a"
        },
        "item": {
          "id": "5592f15c-38b9-42a7-9bc1-773d056b012b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c8a71092-da05-4b47-91d6-84318cb0a19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c56550-725f-4ca2-a03c-7f6bcb905d8f",
        "cursor": {
          "ref": "0b907753-6960-4fa7-a455-ab2591bfecaf",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "eeac8d6d-d2d7-45a5-bf54-dcb10138a501"
        },
        "item": {
          "id": "06c56550-725f-4ca2-a03c-7f6bcb905d8f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "5f05e792-ec59-41da-92fa-6eade4ba50e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d6a9db-faac-4ece-9fcf-ef46d9120c79",
        "cursor": {
          "ref": "adf2c1f7-aedf-43ec-bbaf-663efd74436e",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "be52b8b8-801c-4f0e-a0e6-f0c3ea55f592"
        },
        "item": {
          "id": "b5d6a9db-faac-4ece-9fcf-ef46d9120c79",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b56659af-8b6d-4533-bde8-494d430f31c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758a56a7-a116-4d4c-ac57-7f9aaff4d67b",
        "cursor": {
          "ref": "d180a33b-37e7-4973-9ab5-c2102e44bde1",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "657854d9-5c98-4541-bc79-0a5f8d72db05"
        },
        "item": {
          "id": "758a56a7-a116-4d4c-ac57-7f9aaff4d67b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "890248bd-8fe3-4dfe-bd30-8ff304ee1e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50e4bf6-a537-466f-b81b-c44ab7aa6477",
        "cursor": {
          "ref": "58aeb64c-a9fd-4a08-b20c-6c964c4f98d5",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5998d326-c79e-4355-a7d7-8f6584e5caf4"
        },
        "item": {
          "id": "a50e4bf6-a537-466f-b81b-c44ab7aa6477",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "dcdf58f2-03d4-4996-94de-6339f5ddf8f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "398db81a-fed2-4f61-a542-acdbd9eddb14",
        "cursor": {
          "ref": "5d859b92-696b-4556-b429-9309e454f817",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "30f27702-2300-4b7a-b5b9-ad34ab752445"
        },
        "item": {
          "id": "398db81a-fed2-4f61-a542-acdbd9eddb14",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "abb56657-b035-4b34-a0bb-cecf5e4270c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8125eb4c-97d0-4103-9355-a47b38760fe5",
        "cursor": {
          "ref": "45e5427b-f18b-4b24-ad28-b23417c6dd32",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7b4d2d45-9496-4ff6-b533-60fdca4fcc21"
        },
        "item": {
          "id": "8125eb4c-97d0-4103-9355-a47b38760fe5",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1b5f25df-2d90-4944-a84a-9b4057240b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a96d3cd-42ff-4c11-b16d-f54cf237ef1c",
        "cursor": {
          "ref": "f5566587-1c17-42d9-91a0-29f64bff0af8",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "44393f0b-1ca7-44fb-be18-9d846d7e9f4b"
        },
        "item": {
          "id": "0a96d3cd-42ff-4c11-b16d-f54cf237ef1c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b0e07985-e5dc-432d-9429-680ee1870e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d689f216-28b5-4957-a890-894e13dad4c2",
        "cursor": {
          "ref": "1a0cec72-4409-414b-a34e-d158017ff675",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "7eeba3ae-e4a4-4f60-9552-7cc79d6af50c"
        },
        "item": {
          "id": "d689f216-28b5-4957-a890-894e13dad4c2",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "409483ac-fc9b-4023-aa60-85e78976463e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b05da86-38e1-4cef-a0e8-58596a049d56",
        "cursor": {
          "ref": "8bd86ed3-f1f0-463a-8286-dc33a5a13582",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3446d872-03e7-4ea2-82b3-6f4cf359a413"
        },
        "item": {
          "id": "8b05da86-38e1-4cef-a0e8-58596a049d56",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4bf01c6c-7b94-4c52-9a05-702cd7f68f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67b1d6a-bf35-47bb-a036-cde5de76684b",
        "cursor": {
          "ref": "ad6938bd-923d-4752-8933-487c0a709dc5",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "25cdbd47-2c07-4fbd-88bf-b1dc1b4371e5"
        },
        "item": {
          "id": "e67b1d6a-bf35-47bb-a036-cde5de76684b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d7ea8c94-8e23-4b41-9ed2-4fba24b839ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19cd2cd1-a34c-4c3e-ac93-455085272179",
        "cursor": {
          "ref": "587ad846-9899-419a-9879-c13ef92e4467",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1709382d-0adf-4f5c-b5d4-f627e1f09dee"
        },
        "item": {
          "id": "19cd2cd1-a34c-4c3e-ac93-455085272179",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7a602503-0f85-4e8f-96ba-c4e9eaed7a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13de17d9-ecba-4410-afe6-d819c0444fcb",
        "cursor": {
          "ref": "78e027f4-68d8-4c5e-bd0b-ee1ffe28820e",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "bb0f89b4-ee88-4e8a-ba44-86ee47b8809f"
        },
        "item": {
          "id": "13de17d9-ecba-4410-afe6-d819c0444fcb",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4066e123-af9b-4774-94de-5f6b7db3f6f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb3fd52-0bf8-4c72-8a37-3cde319210fd",
        "cursor": {
          "ref": "b993538e-c8f2-4e80-bfc2-8db91365a93b",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f3302a9c-e40e-47b2-a6ce-57ab7433086f"
        },
        "item": {
          "id": "5cb3fd52-0bf8-4c72-8a37-3cde319210fd",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6dfc332b-fbff-4b0a-942c-4c96e6108bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910fc03a-9f2b-46de-bbd3-fe85ca15a007",
        "cursor": {
          "ref": "e1d0d1d5-d965-4862-8c05-e714460ff823",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "901b74e2-525c-42e1-9390-d0989b42e6a2"
        },
        "item": {
          "id": "910fc03a-9f2b-46de-bbd3-fe85ca15a007",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a847cfb8-20e3-474f-b5ca-e5c91f29cdbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8402e1b7-0b06-48d3-a6a9-4e7ae4aac673",
        "cursor": {
          "ref": "86fa74fe-3484-4ed6-8110-07294f6b0c34",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "79775c59-d888-4df3-a91e-02ea1c5f7025"
        },
        "item": {
          "id": "8402e1b7-0b06-48d3-a6a9-4e7ae4aac673",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d3e5dff8-165e-4c77-a9a5-ec541938d8e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4eb59f-6313-43e8-8e66-f77c3730d873",
        "cursor": {
          "ref": "e6171665-faab-4db3-9237-803bdd41d6a1",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "90bea868-01fc-48fe-982f-52e699445478"
        },
        "item": {
          "id": "1a4eb59f-6313-43e8-8e66-f77c3730d873",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6e3a24ab-b5cb-4c96-a967-1660ed3c24b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28fedc91-eee5-4c31-b14f-360a1809d203",
        "cursor": {
          "ref": "4c0c4b4a-1ecc-440b-9d1c-e06dd3761ab1",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "cba07504-69a4-40db-9331-a376ecaccf3e"
        },
        "item": {
          "id": "28fedc91-eee5-4c31-b14f-360a1809d203",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4939d894-5d4a-498d-8689-378cfee8d162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4038763b-855a-4a3a-be3c-41406e960f22",
        "cursor": {
          "ref": "6a1efbf5-8780-4e15-9cb4-f06a3adae40f",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "35d50fba-fe70-4385-b73c-112ec4fe51d1"
        },
        "item": {
          "id": "4038763b-855a-4a3a-be3c-41406e960f22",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c4d0a2e1-4414-4cd4-9367-b9fef67bec47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f258e3-07d8-48b0-9de8-da23e759b1ee",
        "cursor": {
          "ref": "1cc31339-f06f-4e1e-80cd-d0f926aecd3a",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8ff964e0-86ec-46c7-b5ed-7385f89b5e12"
        },
        "item": {
          "id": "56f258e3-07d8-48b0-9de8-da23e759b1ee",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3a5b1f89-d6f9-4544-be59-244edd4c8c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306fb91b-d07a-4b1b-80f3-4bb7409cffbe",
        "cursor": {
          "ref": "4016c6c6-59e6-43cd-a0b0-f5074e75972b",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d18b8a6d-8c9e-42b1-9ebf-3c256255d9f7"
        },
        "item": {
          "id": "306fb91b-d07a-4b1b-80f3-4bb7409cffbe",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "286a1940-fd27-400e-b179-daeff6d9a774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c9467d-1e1e-4c6b-b312-c84d79c8209e",
        "cursor": {
          "ref": "5db9550d-1b35-465d-9a02-7b000ddc6435",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "09fbc723-9862-4fcb-b187-886453bed6f1"
        },
        "item": {
          "id": "48c9467d-1e1e-4c6b-b312-c84d79c8209e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "56b1e88e-8a78-4d83-a4c4-8ccc65a83d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c58c927c-d2ce-4d22-a240-84578432af18",
        "cursor": {
          "ref": "c870cb10-22a0-43a6-93b7-92bde37ec3d5",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3efee9ee-43b0-46da-a184-51fc851b658c"
        },
        "item": {
          "id": "c58c927c-d2ce-4d22-a240-84578432af18",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "33bfc1f9-2fd9-4521-b7f1-4157a4732653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5cbf08d-4939-41c6-a47b-45cf359318c0",
        "cursor": {
          "ref": "8863d527-8001-43a8-bf3f-dbbda4e820a3",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3614ea22-3f34-4339-b6bc-6bfcc03a8321"
        },
        "item": {
          "id": "b5cbf08d-4939-41c6-a47b-45cf359318c0",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "fbbe763d-34da-4a06-a085-dc96d51e99b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b58209cb-94d4-4acd-af56-75bffab84314",
        "cursor": {
          "ref": "8160949d-a3b6-4717-8e00-f9c9675719ef",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "06ca8034-75bf-4c48-8cd3-cdd88965ed23"
        },
        "item": {
          "id": "b58209cb-94d4-4acd-af56-75bffab84314",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a512b0b1-7801-4a4f-b63f-be38ce8084cb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b378a9dd-2f57-4869-bd15-b40483e63544",
        "cursor": {
          "ref": "2fc1a7ef-3b46-4e40-9fb9-205bdc7990b4",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "50a9d6d9-fde6-419d-bbcf-58b77c16d12f"
        },
        "item": {
          "id": "b378a9dd-2f57-4869-bd15-b40483e63544",
          "name": "credentials_issue"
        },
        "response": {
          "id": "55a941f2-d862-4059-83a8-9dbab8f173a6",
          "status": "Created",
          "code": 201,
          "responseTime": 37266,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2747c81-5060-47e1-95c3-a38903e516f0",
        "cursor": {
          "ref": "52abf8ae-3d1f-4aac-bef9-7a756d7e55bf",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0e17b3e2-d814-45ae-ab64-f784b47ae7e6"
        },
        "item": {
          "id": "e2747c81-5060-47e1-95c3-a38903e516f0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b33c6661-21a6-41c1-b882-c922e7548cca",
          "status": "Created",
          "code": 201,
          "responseTime": 7028,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f074f62-cb19-4773-951e-8d9a9099c3af",
        "cursor": {
          "ref": "e141dbd9-fae9-4742-b893-9ec3f6e514a6",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "13bb2454-c966-44c7-89c9-7568add8d558"
        },
        "item": {
          "id": "8f074f62-cb19-4773-951e-8d9a9099c3af",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2fda8b74-2129-4d8c-93e5-9767436d670e",
          "status": "Created",
          "code": 201,
          "responseTime": 36249,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0048d8-1f3b-43d7-ac2e-9861cc4b1c41",
        "cursor": {
          "ref": "259b080c-b85c-4916-a030-1e5355257d74",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1a15fb30-1428-4d8d-94d4-1d4c62cc24e0"
        },
        "item": {
          "id": "3d0048d8-1f3b-43d7-ac2e-9861cc4b1c41",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1b8511a4-7173-4b7b-aeaa-a79b20197f54",
          "status": "Created",
          "code": 201,
          "responseTime": 7054,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f3e34d-f8f3-4b15-8295-9881b6604ebc",
        "cursor": {
          "ref": "90715f6d-9d2d-420c-9d43-3a0a3f5315a1",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "088f5424-be6e-40a7-8f15-44b71b70ff9d"
        },
        "item": {
          "id": "40f3e34d-f8f3-4b15-8295-9881b6604ebc",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3e879dbe-02f8-41ff-a234-29648d1852cc",
          "status": "Created",
          "code": 201,
          "responseTime": 36833,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae201965-4145-4f29-bfc5-be1371b52a30",
        "cursor": {
          "ref": "487b68c4-edef-42f2-87e5-1cb532dfb319",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "62fbef49-326c-4254-9930-0345f356edf1"
        },
        "item": {
          "id": "ae201965-4145-4f29-bfc5-be1371b52a30",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "5e6b695d-e9de-42cd-bcd4-5b7775ada4d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "c11236a2-2756-415b-b2e1-e9322159fce1",
        "cursor": {
          "ref": "61a6d255-8082-4ffa-9bb8-a723ea1b8000",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "932f210f-e6de-40c0-a478-c98c50ed7f3a"
        },
        "item": {
          "id": "c11236a2-2756-415b-b2e1-e9322159fce1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7cb7f912-6b66-4681-81da-bff85dfeb892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11457db5-197b-44c3-bce8-6189453e1290",
        "cursor": {
          "ref": "38eefa16-ed1d-4ba3-bef5-629362ddac47",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "cf13d65f-9ac8-436e-9ad0-ca9e00845197"
        },
        "item": {
          "id": "11457db5-197b-44c3-bce8-6189453e1290",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7ea1138b-6992-4f16-9d24-ef1984f3c3c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0efbf381-ace3-4b1d-a1f1-fb5de74037c0",
        "cursor": {
          "ref": "1d7c8bf0-0956-4f67-a93b-89ad097a65b4",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f923d325-3825-4d9b-8884-6d7a005e8195"
        },
        "item": {
          "id": "0efbf381-ace3-4b1d-a1f1-fb5de74037c0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7bc524c8-2b68-47c5-924c-b0afaaaafe3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023916b4-3356-4003-8ed4-32f45967789c",
        "cursor": {
          "ref": "be3e8153-a6b4-47d3-82d5-ec099fb7dd43",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1ec602ae-1154-4cd3-b7d9-631adaeea518"
        },
        "item": {
          "id": "023916b4-3356-4003-8ed4-32f45967789c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1cf45596-a897-4a8e-97b2-a7bbfe914752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dae51f0-d833-460c-b6f7-9ab00974c7ce",
        "cursor": {
          "ref": "fd23ef18-53dc-4934-b378-627627fef64a",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "784bca07-3d61-44c1-879b-3c051028e917"
        },
        "item": {
          "id": "2dae51f0-d833-460c-b6f7-9ab00974c7ce",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3f7532b6-c22c-4d72-b65e-24b1428bcfa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d94602-ee47-4994-a765-897d33409603",
        "cursor": {
          "ref": "b5dc8340-e0d4-48bd-9ac9-c60152d32ef2",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a4211054-b109-48a3-b828-a1cd3d1824f6"
        },
        "item": {
          "id": "e8d94602-ee47-4994-a765-897d33409603",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ca14695b-053a-4741-be52-d7fdc6e5ae9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe2ada7-0052-49e1-a92f-84963d433bd2",
        "cursor": {
          "ref": "2f7de87b-c9da-40e1-bd42-e7cdb6acbe76",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "9e0fdbbd-2f03-4974-aeb5-4277568466c9"
        },
        "item": {
          "id": "bfe2ada7-0052-49e1-a92f-84963d433bd2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3ab2fb0b-238c-40cf-93b2-a667afa842d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792fba9d-80ca-4604-bdd6-76b76fdb6418",
        "cursor": {
          "ref": "7a651b29-11ca-4703-b039-20e589aa2013",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "51179877-95a4-42fb-8751-0fbaa84b0a52"
        },
        "item": {
          "id": "792fba9d-80ca-4604-bdd6-76b76fdb6418",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a816933a-ab25-4f16-9654-187c9e25a668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078b0c44-5307-464c-8bea-e6a612968ab3",
        "cursor": {
          "ref": "e1f654b3-8baa-4ed8-ad29-0574d59b4aa6",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "cf59e907-69d4-464b-a253-287cd0a22ba5"
        },
        "item": {
          "id": "078b0c44-5307-464c-8bea-e6a612968ab3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b034cfc5-ddd2-42c7-b785-2b4abdfb374d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e90b5f55-0eff-408f-9a92-12d62de684f3",
        "cursor": {
          "ref": "3440738f-5fa8-41ec-8345-26554ba137c4",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c290a5a7-7c12-486e-8c53-cb56b060fc2f"
        },
        "item": {
          "id": "e90b5f55-0eff-408f-9a92-12d62de684f3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "32403225-0b81-49ef-98ae-64b647ccf478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b85821-f142-4413-88dd-147f22008735",
        "cursor": {
          "ref": "3820e8fc-cb06-482e-a68a-6730fb402842",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9e468e89-66c8-451f-bcdf-ae0f769cecac"
        },
        "item": {
          "id": "00b85821-f142-4413-88dd-147f22008735",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f22a8d97-c602-46c5-aa7b-30580afa3bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07033b3b-d773-4388-8d74-84ec9fcb5b0f",
        "cursor": {
          "ref": "ca45755c-c941-48c8-85ef-c76bebaf0914",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f9b19da7-de62-436b-8fd2-f1a36c733ebf"
        },
        "item": {
          "id": "07033b3b-d773-4388-8d74-84ec9fcb5b0f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "34a1c365-247a-485c-938f-a9f85ca3b0c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec66ff7-f8c8-4e96-a59f-75662476fb50",
        "cursor": {
          "ref": "7ddbeb70-52b2-4614-b7c4-971d840911c4",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b044e191-d417-4918-a6f2-87698bdc0567"
        },
        "item": {
          "id": "3ec66ff7-f8c8-4e96-a59f-75662476fb50",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1d5ffe4a-8087-44fe-8402-881e288e5f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65bea90-0a9e-4995-a39f-876779c39541",
        "cursor": {
          "ref": "94f76c79-61b1-4f45-82d4-f1ebe800bce6",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "88819eea-6afd-4021-b65b-d2ea50c52c02"
        },
        "item": {
          "id": "f65bea90-0a9e-4995-a39f-876779c39541",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c3825993-d7fb-4e08-baf3-94e4785de45e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51580f2-2d04-4633-80e4-83499ea1e57a",
        "cursor": {
          "ref": "38ad64cf-f347-4d42-8c29-c4ac2ee033db",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4e73edbf-ebdc-4ce6-a836-70085f67beaf"
        },
        "item": {
          "id": "d51580f2-2d04-4633-80e4-83499ea1e57a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e4b8484e-4b9c-48a7-805d-90b0182c6e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f41e19-8154-4e80-8aef-60817d83206e",
        "cursor": {
          "ref": "e47f76d2-bb44-489b-a909-0f35c93dfb98",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8b320fe8-fe46-4a86-b309-7dbcb975cfc8"
        },
        "item": {
          "id": "98f41e19-8154-4e80-8aef-60817d83206e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "bf94de86-ee60-4a8b-99eb-9752e9744000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44307912-1060-4f3d-b0db-9713b95dd18f",
        "cursor": {
          "ref": "d1d4ace3-a2fe-44aa-8f85-70f2725aeb64",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7e8ccfba-23d4-45c2-8085-0465c2f44b41"
        },
        "item": {
          "id": "44307912-1060-4f3d-b0db-9713b95dd18f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1836f320-6f8a-4bc8-9692-349db8555789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bcc1a7e-de09-4b25-b886-272392a57e43",
        "cursor": {
          "ref": "cec66b9b-6cbf-4c50-b948-4e7766bd6164",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a3599924-31ee-4598-a718-299203f1285b"
        },
        "item": {
          "id": "6bcc1a7e-de09-4b25-b886-272392a57e43",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "08af6ddc-edbd-406f-9584-54473e2b3d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b1fb92-9677-400e-9b79-9e4b0a113ac8",
        "cursor": {
          "ref": "2f5fafb6-2e72-4ef3-b7c1-48fb179c4d4f",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "392de1e4-7066-429c-81f5-be60684195f8"
        },
        "item": {
          "id": "49b1fb92-9677-400e-9b79-9e4b0a113ac8",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f8687661-9dbe-4f19-870c-1af65afee1a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebd10f6-f666-47fb-8731-5f800a8f03f1",
        "cursor": {
          "ref": "2ef852b9-d6d0-4523-a361-7febe1313008",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "60ba26da-88e5-4761-90c7-e37eda02e6ab"
        },
        "item": {
          "id": "cebd10f6-f666-47fb-8731-5f800a8f03f1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d4151cbf-c33b-4bbc-93cf-8bb400bdaab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae82dbd-a64b-4c46-8f73-95c1ec114440",
        "cursor": {
          "ref": "3e4417b0-3332-4b33-9287-925d276c0d5f",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "756ec9c2-8051-4738-8d3b-9107d105fbf6"
        },
        "item": {
          "id": "1ae82dbd-a64b-4c46-8f73-95c1ec114440",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a6e01adc-f3b9-44bf-b245-08b2997d5e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364fcc36-5882-42d5-af46-64ac70936550",
        "cursor": {
          "ref": "36f54418-fce0-44cb-84eb-02b2432a7611",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a2283afb-675c-4423-bf33-69d0314fc877"
        },
        "item": {
          "id": "364fcc36-5882-42d5-af46-64ac70936550",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8d115ad7-b4c5-4377-a8fe-3becb203378f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d619388f-2513-49ec-834c-289f3eeaa52b",
        "cursor": {
          "ref": "5630f53c-eaa6-448c-88cf-669df5a384d4",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e5adffd0-8faf-43cf-be2e-7b053109cb24"
        },
        "item": {
          "id": "d619388f-2513-49ec-834c-289f3eeaa52b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1c3ebf1a-7adb-4555-8c8c-b305e20de627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a61875-9e28-4a52-9bda-359c3b97252a",
        "cursor": {
          "ref": "113eeac7-f708-423c-ab8a-c4b1dae14b12",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a0d90119-14b3-4890-b659-f1f684765940"
        },
        "item": {
          "id": "38a61875-9e28-4a52-9bda-359c3b97252a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "dd36aace-0d10-463b-a0f1-59abbe045a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b77894-4e68-4c69-8f51-1528a8cc863e",
        "cursor": {
          "ref": "726b55b0-dc80-49af-8d27-1bba9dbb41ef",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "25817719-54a8-47e9-a8b0-318c55024888"
        },
        "item": {
          "id": "c6b77894-4e68-4c69-8f51-1528a8cc863e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d9fe396e-9937-4077-a4ac-aa2c5b2a4d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a9d876-ead8-49c3-869f-1c01689758d5",
        "cursor": {
          "ref": "23a99460-e76f-44bb-a3ee-2b8b4bd7fea6",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a95efc56-d52d-4326-a5b2-d3fecd0e8fcd"
        },
        "item": {
          "id": "44a9d876-ead8-49c3-869f-1c01689758d5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a26bbb4a-0b64-4db7-9047-2dc393b94718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6fc6e3c-b90b-4a92-bcfd-3424713e2c62",
        "cursor": {
          "ref": "26438128-46ce-4fc3-8dea-95f05426a780",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "28c7fbaf-ad9a-4114-808c-5f8959e6903d"
        },
        "item": {
          "id": "f6fc6e3c-b90b-4a92-bcfd-3424713e2c62",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "23347643-b6d1-43ff-bde4-f0b61ea31a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611b0b78-6425-452f-8750-b80f1bb809c0",
        "cursor": {
          "ref": "26760972-54e9-4e93-bb13-3babe2fc9089",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d603adfc-00fa-4e2b-9a9d-a0c13f2c7786"
        },
        "item": {
          "id": "611b0b78-6425-452f-8750-b80f1bb809c0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e00903ab-ac71-4afe-a466-5985d4b1c9c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd375fc-b94e-4fb6-bd61-aa2d97242c0c",
        "cursor": {
          "ref": "9fa8588b-fef9-4e90-8f3b-6e1ab0d19d80",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5b13b6a0-b940-4c0e-bc3d-74a54d23c140"
        },
        "item": {
          "id": "9cd375fc-b94e-4fb6-bd61-aa2d97242c0c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3e1c6a53-ff1f-47a5-b059-797c8ad1eca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2cec134-6dc9-4050-b343-34026bfdee28",
        "cursor": {
          "ref": "09b087f4-281a-42a4-acf8-9d23bab975f6",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9d5bf996-baad-4684-99af-2668cd90eda6"
        },
        "item": {
          "id": "c2cec134-6dc9-4050-b343-34026bfdee28",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b94f6963-30dd-4015-af05-6db8fb1b6319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b06bcb7-d9f5-4538-9cdc-4f0d9c19d943",
        "cursor": {
          "ref": "4a5fac73-9b76-46cd-9c83-bdfe0704f0da",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8caeb414-c9bf-4cf6-9841-7f675b05abd5"
        },
        "item": {
          "id": "7b06bcb7-d9f5-4538-9cdc-4f0d9c19d943",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f53873be-ce7d-45b2-b3c1-ae90088504fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c39c080-b848-4aae-868c-484e31415d3c",
        "cursor": {
          "ref": "e9b3f901-40de-4419-aaa7-6f324ffd82ce",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4a0c8248-72c6-4364-825d-3e2db99d61ec"
        },
        "item": {
          "id": "4c39c080-b848-4aae-868c-484e31415d3c",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "f901f270-7010-432e-b49f-2d8e5e3f93f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dde6df8-fe90-47e1-beb7-de8c0a0b519a",
        "cursor": {
          "ref": "aba9d73b-0474-4001-87f1-4c2937aa9d9e",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5a01ff72-c87b-4c17-8537-e6b3bfc11cb2"
        },
        "item": {
          "id": "6dde6df8-fe90-47e1-beb7-de8c0a0b519a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "16ee27fc-c7a4-4db5-89ed-17c0c389b47e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961c0fce-8806-4b37-8c67-d74a4211f253",
        "cursor": {
          "ref": "4d231df0-422b-4942-91e8-dc2a33ea24b6",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "814d4b8e-4dc9-4df8-b582-4ee2afd3d342"
        },
        "item": {
          "id": "961c0fce-8806-4b37-8c67-d74a4211f253",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "07675caf-2d96-454b-a321-d7e475b8c4cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e40deca-92a3-4b57-a1af-cedbefcd1d9d",
        "cursor": {
          "ref": "e96f5e49-d0ec-4aa7-8993-0a72adc9dd59",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "90624756-f5b7-43f7-9a2f-9cac60898bd5"
        },
        "item": {
          "id": "4e40deca-92a3-4b57-a1af-cedbefcd1d9d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e9afb9e3-50ef-404d-9a5c-7894637a8752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ead98bc-abcc-4bef-8f41-9b0264967a48",
        "cursor": {
          "ref": "c26d1570-ef82-4f17-a502-02cbc410460b",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ecd2d911-588c-407e-a388-62c8aaba1b58"
        },
        "item": {
          "id": "0ead98bc-abcc-4bef-8f41-9b0264967a48",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "040e7407-4762-4916-9583-febc26818d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aff889f-8939-4c01-8afe-c69bb03b9e5e",
        "cursor": {
          "ref": "545b6d3a-5bec-457b-9a70-1c6523a48aec",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "488d929f-fee9-43c9-a83d-9f5a9d2f83db"
        },
        "item": {
          "id": "1aff889f-8939-4c01-8afe-c69bb03b9e5e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3d334256-280b-4ec3-b200-0e795bce11bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c73fe542-bf19-4ff2-982e-3f6ccd559a63",
        "cursor": {
          "ref": "e65e51a1-ca9f-42e0-9851-ba363f8f5840",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "0587d019-2a3a-4a8f-954e-f7e39f7a760f"
        },
        "item": {
          "id": "c73fe542-bf19-4ff2-982e-3f6ccd559a63",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e5ccad8c-8eb6-431c-96f5-16e0204c83f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf85ce8-28a6-48b0-a7ed-82c99bccf52b",
        "cursor": {
          "ref": "2af1f090-ec9b-410f-86af-5173f2840c80",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a6d19618-9fe0-4ca8-836b-57ebfa15e5f4"
        },
        "item": {
          "id": "daf85ce8-28a6-48b0-a7ed-82c99bccf52b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "66b3f0d5-3843-4e99-ba58-0e1e8f19a5a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e56ede-db82-4c18-aa8c-04db020f2423",
        "cursor": {
          "ref": "faf45ad9-c228-4ef4-920d-f976b5d2ff4a",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b9fc9c9b-dc0d-4d98-9339-dc8d52ebaac0"
        },
        "item": {
          "id": "d4e56ede-db82-4c18-aa8c-04db020f2423",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "bc0805da-6a7a-4b85-9073-b31fcb7ea00f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d855647-3528-48d9-bc36-81b54b11386f",
        "cursor": {
          "ref": "380d71cd-1fa4-44d6-8507-d08057cb8d44",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a068ced2-ab1a-4b8a-934a-d1b26c2a2b50"
        },
        "item": {
          "id": "9d855647-3528-48d9-bc36-81b54b11386f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c386bb07-768e-460b-9252-6c8a0a0e45ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3cb245-9698-4395-b0be-427eab9cf053",
        "cursor": {
          "ref": "dc7b419e-acb0-40c2-9499-a89a4b87103d",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "34ec4e05-7408-4f83-8175-84ff564e4a53"
        },
        "item": {
          "id": "cf3cb245-9698-4395-b0be-427eab9cf053",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6a582aae-6171-45f3-bed9-f1b39076d1ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc0fcc8-460e-465d-a9ef-18b65265fa79",
        "cursor": {
          "ref": "afe99057-58c8-4e5a-a16b-d0bbcd4e4c5b",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a6a5d184-9162-40aa-8db4-1ae281a10c74"
        },
        "item": {
          "id": "fcc0fcc8-460e-465d-a9ef-18b65265fa79",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "464eb240-49bf-45c7-8a9c-da681e27205d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb09278-b752-4cd5-8a04-252e64c49927",
        "cursor": {
          "ref": "68d3ddde-10fe-4917-8cce-0727babdef65",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "969e0d40-5592-4a41-a760-a921c9616933"
        },
        "item": {
          "id": "1eb09278-b752-4cd5-8a04-252e64c49927",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "dfd27dc5-7e3f-4142-899a-8470c5ef2da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76802cca-31f3-4e54-8904-65fa53f56144",
        "cursor": {
          "ref": "c7f25855-5256-4ce1-9765-dfcc50a422d4",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1e31ee19-738d-465e-aed0-8d44cba369a1"
        },
        "item": {
          "id": "76802cca-31f3-4e54-8904-65fa53f56144",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "af59b888-c149-4945-9487-54dbc19b1bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8816ea1-dc7d-43d3-ba41-3e7a86aacd19",
        "cursor": {
          "ref": "2a38963e-875d-405d-8eb7-eb00cab48677",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "efeaf28d-6ea4-4ae8-a102-dbd4c2115aa7"
        },
        "item": {
          "id": "d8816ea1-dc7d-43d3-ba41-3e7a86aacd19",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d13c6f4e-00df-49f7-acc4-b6adeebf78a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9b0bcf-792d-49a6-b548-486ade4f0a72",
        "cursor": {
          "ref": "7b7d6fc9-7096-4b98-ac97-95eea461b1cb",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1caaf38c-36f0-404d-9429-f4f57ae3ae0e"
        },
        "item": {
          "id": "7c9b0bcf-792d-49a6-b548-486ade4f0a72",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7feffd2d-4c2d-4bd7-84cb-e95e717ce327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4ab9a2-1dd6-45da-8e64-d408b5abd698",
        "cursor": {
          "ref": "fb59defe-08a7-4e10-987a-26a1319cf4fb",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6b82754c-746d-4956-8700-e890f9c85bd2"
        },
        "item": {
          "id": "ad4ab9a2-1dd6-45da-8e64-d408b5abd698",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c13c23d0-dcbb-4457-bb28-6362efa9fe51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6309b9da-a573-4a85-9d22-e7a46b226db6",
        "cursor": {
          "ref": "bb3ac4e6-5a4f-41e0-9ee3-90d1140fc8a9",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "af03fde8-c7ca-4a40-a5d1-5c1edef42f7c"
        },
        "item": {
          "id": "6309b9da-a573-4a85-9d22-e7a46b226db6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "04ffda19-f821-421f-a967-85ab7b53c5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13d1826-ef16-49d6-8be6-2d995b64408d",
        "cursor": {
          "ref": "3f62d286-d56f-442e-b2fc-4eb047a09b8b",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "811c1dac-fc88-4698-9a5b-50f71cf8e08d"
        },
        "item": {
          "id": "e13d1826-ef16-49d6-8be6-2d995b64408d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "df015e74-9a28-485f-8e37-04ba4e632f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4746da71-37c3-48f3-9763-ed5da8cc75b3",
        "cursor": {
          "ref": "473f8346-b886-4652-ab2f-ce8d4a632fd7",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a6baf3d5-867d-4468-a74a-b87fe2d650ef"
        },
        "item": {
          "id": "4746da71-37c3-48f3-9763-ed5da8cc75b3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f107f1de-7a6c-447c-9a11-ce0a042d0e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f56abe3-f18d-41b6-9a4b-4b7f39896169",
        "cursor": {
          "ref": "794f7ba6-7558-4107-a174-c8e9f78befaa",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "008dcbd3-b4d6-4289-a8fc-6f36f690793e"
        },
        "item": {
          "id": "0f56abe3-f18d-41b6-9a4b-4b7f39896169",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5201db3b-95fe-4190-9305-bd7ff80f1b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81fe930-0bb8-4806-b05d-924d7d1f409a",
        "cursor": {
          "ref": "2638cbeb-91e8-4022-839e-0ee1673fc0fd",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1621a336-7582-4fbb-acbe-4fceccede202"
        },
        "item": {
          "id": "b81fe930-0bb8-4806-b05d-924d7d1f409a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "bac4d6fb-6586-4f0e-87d1-ebc03fd37d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7adc82e1-68e5-49a2-91a6-3b6f817f16dc",
        "cursor": {
          "ref": "9f78b77f-ea99-42c2-a2ae-f69e9d9829f6",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "159122cb-bfaa-45b8-991a-2ac7363418e7"
        },
        "item": {
          "id": "7adc82e1-68e5-49a2-91a6-3b6f817f16dc",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9bef9f45-17c2-4525-8fba-9f8de1446b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c798fed2-6d58-4bd4-9d56-d044e54b3258",
        "cursor": {
          "ref": "40673cd4-d99d-4c22-8826-3742acfcdb85",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "05f74533-af80-4ab9-a510-747405be2cf7"
        },
        "item": {
          "id": "c798fed2-6d58-4bd4-9d56-d044e54b3258",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "405cdd87-057b-4c3c-acda-2ed4d54533da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9004beda-bb4f-4da1-8c91-7c9f88208a09",
        "cursor": {
          "ref": "9b3f599c-e9f0-4b4c-a8ea-13c49fa9e220",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e50b6289-14aa-4b8a-b187-b8ebda05edea"
        },
        "item": {
          "id": "9004beda-bb4f-4da1-8c91-7c9f88208a09",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5e8a172f-ad62-45b7-9aa4-175ba65d4567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70a3760-903d-4e53-a770-afc4def48573",
        "cursor": {
          "ref": "99a0c0d4-5f8e-4aee-b02b-511dd0c06110",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "fc0564e0-818f-4fb9-8709-29ec39ed436f"
        },
        "item": {
          "id": "d70a3760-903d-4e53-a770-afc4def48573",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d99cba0e-958c-4bc0-890a-76690b35a42c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8e1ad9-f39a-4c5f-9835-c5c6be9a97f1",
        "cursor": {
          "ref": "0bbd47d1-73e8-4de6-aae0-cb2ca66f9dc4",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ddd7ef93-983b-4161-882a-796c43af10cc"
        },
        "item": {
          "id": "df8e1ad9-f39a-4c5f-9835-c5c6be9a97f1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cc707071-19f2-456b-ace8-3c7e8f4fed96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f010d8-dfc3-4d2a-99ff-b668da21d02c",
        "cursor": {
          "ref": "b71514d7-3ae4-421b-a08b-1ff0e1969b99",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "99d30474-5785-4cd0-ae24-466dfb4e457c"
        },
        "item": {
          "id": "13f010d8-dfc3-4d2a-99ff-b668da21d02c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fe22ccdf-8548-4417-9407-8ee5339e0e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174b936e-7951-4d4a-996e-8c1484ab24dd",
        "cursor": {
          "ref": "290944b0-66fb-438d-815c-1561aa9c72e9",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c2949875-f9fc-4479-bbd7-9ee528a1cb42"
        },
        "item": {
          "id": "174b936e-7951-4d4a-996e-8c1484ab24dd",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0555bd48-f0b9-499b-b837-344e10b04995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9859ace-fb21-45d4-9663-24862cfbc4c5",
        "cursor": {
          "ref": "45288ff0-38b9-47b6-aaa8-fdcbea2f30b6",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "57682056-32ad-483c-b011-842790f3973a"
        },
        "item": {
          "id": "c9859ace-fb21-45d4-9663-24862cfbc4c5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1ce8e213-b203-49d3-ac52-4a643537d905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147a3298-a26e-4627-8d01-1293ae742091",
        "cursor": {
          "ref": "b6c95c3f-ce55-49b5-b021-40f700f20ff9",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9f471245-4415-48ea-b68d-c50a1914251f"
        },
        "item": {
          "id": "147a3298-a26e-4627-8d01-1293ae742091",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1617b0c0-c905-4f93-83dd-db13d124a3de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37eb18e-3f1e-459a-9cb7-f03ea509a047",
        "cursor": {
          "ref": "b6fe53e4-3944-41d3-bc71-614f6aa6275d",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "589f6cb4-b0d5-49e1-a999-b587232503fc"
        },
        "item": {
          "id": "d37eb18e-3f1e-459a-9cb7-f03ea509a047",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c2526967-29fc-48b7-ba7c-f3671d832159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a82c210-d1e8-4a83-a0f8-996f1c0fa62c",
        "cursor": {
          "ref": "ab92dc8e-74f7-45c2-9bbb-811064be5309",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "fd8805e8-25a9-4db5-8fa9-0de60fbcfc76"
        },
        "item": {
          "id": "8a82c210-d1e8-4a83-a0f8-996f1c0fa62c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5372b438-3ec8-4d14-b902-682f4902ae6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6e4da7-f0a5-43e5-a1e8-1513a3528b17",
        "cursor": {
          "ref": "f1002390-c03c-4437-8153-2bfc360cb2a6",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "1802379c-e277-4df0-857b-fad5f2fcd633"
        },
        "item": {
          "id": "bd6e4da7-f0a5-43e5-a1e8-1513a3528b17",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e03fc11b-d077-407b-a7db-737ad5a771d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83536466-7468-4f4e-89d2-96961546c8be",
        "cursor": {
          "ref": "c9511895-f9f2-4d4c-9b8c-b3a345fa9156",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ba91e8b1-b0f2-4b25-8a2c-4a197ef72f50"
        },
        "item": {
          "id": "83536466-7468-4f4e-89d2-96961546c8be",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "1528dd97-5a56-482d-98f2-03858e6104f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1d72a5-7f29-4336-bc9c-31f8f35decea",
        "cursor": {
          "ref": "ddacb1f8-3169-4d68-9379-f8383a44dd4e",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b99bceb3-c943-47ce-9990-10baaf884f8b"
        },
        "item": {
          "id": "2c1d72a5-7f29-4336-bc9c-31f8f35decea",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d0221f3b-f9c4-4ecd-a314-849b8d193895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ecd332-8f20-4daa-9362-e7de97432709",
        "cursor": {
          "ref": "965b1632-f15d-479d-ac82-2cd9cdd72bae",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "357a8c48-1dd8-41e1-92eb-9402a0ed1055"
        },
        "item": {
          "id": "47ecd332-8f20-4daa-9362-e7de97432709",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f891dc76-2316-4873-a437-24ed98d19648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02800bfc-4a31-4c50-92b7-47ce4efb8e3e",
        "cursor": {
          "ref": "4114ed00-a4fa-4310-9ad9-a8d9a366e5e1",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a487bd2b-ccb3-44b2-bbfe-e0e1e7d399b5"
        },
        "item": {
          "id": "02800bfc-4a31-4c50-92b7-47ce4efb8e3e",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "97ed3a2e-2980-48f5-b41f-891369885f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c022359-fe29-465d-b9a1-6f9f1a84d775",
        "cursor": {
          "ref": "bf81a24c-742d-4082-8c1f-267f83a7e35b",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "864e510d-311d-4133-9057-39b65349a708"
        },
        "item": {
          "id": "1c022359-fe29-465d-b9a1-6f9f1a84d775",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "28df31e8-f556-47cc-bd27-18d04b94e7c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e38b26-b887-48c4-91df-452c8e183e19",
        "cursor": {
          "ref": "a60dd1a6-c4b6-4337-bcf4-da2469527265",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3225b7cb-8223-4017-bc29-4ae8481c5201"
        },
        "item": {
          "id": "b9e38b26-b887-48c4-91df-452c8e183e19",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "91d8d38b-561f-41ca-bf82-6ad9784e4777",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ef656a-f62d-44b0-87f5-55cc4bea53ca",
        "cursor": {
          "ref": "34d8cddb-ee04-419b-ba26-13d3164db2c5",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "3101aed6-6d3b-4860-be1c-d16e39027a21"
        },
        "item": {
          "id": "d6ef656a-f62d-44b0-87f5-55cc4bea53ca",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b20e2fae-ad23-4f8e-b08c-213c0653b58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f77fc1a-85a3-4c77-98d3-e04c66dcf7a3",
        "cursor": {
          "ref": "c01ce78e-e1f9-4852-a18a-1c058d77c8a7",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0c55e61f-87ae-4874-aed7-571e163ecd91"
        },
        "item": {
          "id": "3f77fc1a-85a3-4c77-98d3-e04c66dcf7a3",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d163f67a-d979-43c0-996e-f317fa24996b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4b1494-17e3-49a2-9d80-0285cc1c0593",
        "cursor": {
          "ref": "683cd7fd-fdad-4d41-8ed3-cb122b43300c",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3802111d-4087-4f6c-a5af-557867361d74"
        },
        "item": {
          "id": "bb4b1494-17e3-49a2-9d80-0285cc1c0593",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e5ae951e-3fa7-4a24-904b-3d8af6e9d964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "330d0876-c6f2-4b6f-ae7b-451ad517e8e9",
        "cursor": {
          "ref": "c8cf2aa1-86e6-48cb-9048-871344237b35",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d3ff0dfc-c6bd-4f8a-87e3-538cdb969dee"
        },
        "item": {
          "id": "330d0876-c6f2-4b6f-ae7b-451ad517e8e9",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7b46cc6d-7418-4f30-955a-abb9dcd46133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daec1d84-dccb-44ce-9bd6-2e96c5a569a8",
        "cursor": {
          "ref": "c2907522-3b8b-4269-a68f-34c95115b798",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6adb9a05-63f4-4d94-8d52-3b934aced76a"
        },
        "item": {
          "id": "daec1d84-dccb-44ce-9bd6-2e96c5a569a8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "33db18ed-f219-4ef1-ac72-c2195f76f328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806559ce-1d76-4ba7-a247-3551245e13c8",
        "cursor": {
          "ref": "b35711a0-c58e-4239-99e0-d5d54167a91b",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5f5e4d0b-14fb-48d7-a66c-ee901470b850"
        },
        "item": {
          "id": "806559ce-1d76-4ba7-a247-3551245e13c8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b1455c24-9846-4ad5-b100-a87ef7682bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1ade4e-1978-49b4-8cb8-dbdc60e14e7d",
        "cursor": {
          "ref": "5a7fcee8-5a46-460f-847a-58b9bbd73edd",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7c775c3b-45b5-4faa-8c68-75c3a48f94de"
        },
        "item": {
          "id": "da1ade4e-1978-49b4-8cb8-dbdc60e14e7d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1020467f-0d0f-4848-90b3-cc78c83f3c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94183614-fb74-46ae-b02a-69940afce22a",
        "cursor": {
          "ref": "71d7e548-57cf-4f06-acce-668490ae8063",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "44a5d531-b915-47ee-81c5-95f8e1df01d9"
        },
        "item": {
          "id": "94183614-fb74-46ae-b02a-69940afce22a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "fdd8628e-5ce1-4213-b3ea-3a4be9cbec74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ca7507-b4b2-4110-adfd-da612a8b95f5",
        "cursor": {
          "ref": "ebcef829-d6e8-48b7-afbe-327b5c7f9000",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "81f6e6c1-eb26-4f59-be6b-4832278730b8"
        },
        "item": {
          "id": "01ca7507-b4b2-4110-adfd-da612a8b95f5",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7e06cb61-4e9d-4ccb-a648-91ee65ed910a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50ebfb0-2d80-4d7b-900f-194be1d7f468",
        "cursor": {
          "ref": "5d0f4eb9-96a4-4b64-adb1-639162959fae",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "04b3e3c5-9120-46d0-9497-ff0ddd6ae864"
        },
        "item": {
          "id": "f50ebfb0-2d80-4d7b-900f-194be1d7f468",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "6a93c05a-ba4d-49df-9192-52b42f564913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7692be01-9c0b-4711-b1be-8fbce84007df",
        "cursor": {
          "ref": "d29559dc-f836-44b8-bdab-ff978bb89714",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "86a44907-2750-4689-be89-b4925a502cbe"
        },
        "item": {
          "id": "7692be01-9c0b-4711-b1be-8fbce84007df",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3cbaa23c-e6af-4fb8-a4da-4faeaecafa99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ecd551-ed5d-493b-b126-6b9797959dec",
        "cursor": {
          "ref": "bfe8e2eb-27cc-403a-b520-d0e59c990849",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f336aedf-d7db-42b9-b155-ec5d4e19247b"
        },
        "item": {
          "id": "54ecd551-ed5d-493b-b126-6b9797959dec",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d181f53a-dd07-4359-8baa-89a6595f3f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df09f851-bc42-4b3f-a777-ac3380dd8d90",
        "cursor": {
          "ref": "4bcb551d-669d-48e7-9a2b-c2f8a5b20b20",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "07778847-7b79-4e39-8a93-12da8c8429c5"
        },
        "item": {
          "id": "df09f851-bc42-4b3f-a777-ac3380dd8d90",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c44045fa-358e-4bd0-94ce-375624a1cdeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1265be5-8cd0-492f-baaa-59065368d594",
        "cursor": {
          "ref": "984399c2-86d8-47c4-850d-908b0960480e",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e4fa505d-70d3-4b2f-a350-057be5123795"
        },
        "item": {
          "id": "c1265be5-8cd0-492f-baaa-59065368d594",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b7597295-f134-4f1e-a323-2bed3dd9b8ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bca0f4e-d8f6-4902-9f8f-1f9c2aed4468",
        "cursor": {
          "ref": "142e8fa1-cf2b-490d-bfda-7ed6734db93f",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3d986ba3-0ccb-421b-980f-18b9212f4077"
        },
        "item": {
          "id": "0bca0f4e-d8f6-4902-9f8f-1f9c2aed4468",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "18889de8-dd64-4322-bf81-ae852d6a1650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc2fda35-6681-4d8d-96b3-a9bbbf8e51d3",
        "cursor": {
          "ref": "1885c7a0-9d8c-4f63-b2db-929e3adb2ef6",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e1b1fc1f-22ca-4a2f-b2d8-e095a4ec72ee"
        },
        "item": {
          "id": "bc2fda35-6681-4d8d-96b3-a9bbbf8e51d3",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "bda11b9b-9008-4f20-aa85-d4ebf48a953b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2726a4-56c5-4a08-9b27-3179fa24a01a",
        "cursor": {
          "ref": "e27d718e-97c2-42fb-9bcb-2a64c60ac887",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7472d8ba-df35-43bf-b3f8-a6a7cb338dfd"
        },
        "item": {
          "id": "1e2726a4-56c5-4a08-9b27-3179fa24a01a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "bf5a11de-6f47-4ff1-b4a8-3835d0feb6a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9913358b-a060-4d45-bac5-033008f70b34",
        "cursor": {
          "ref": "9b0cb4d3-193f-4b4d-a1f5-e7ba18a56c3b",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6738b964-bce0-428e-a1e4-2f89a75e8e54"
        },
        "item": {
          "id": "9913358b-a060-4d45-bac5-033008f70b34",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c7e8deac-55ed-434b-9865-58667f619e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a75db3-796e-4464-a1ae-00b664558dc0",
        "cursor": {
          "ref": "6e539ad2-b97d-4910-809d-1dff98d7be36",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "690d89ed-7931-4d23-a030-e5cd0a928424"
        },
        "item": {
          "id": "a1a75db3-796e-4464-a1ae-00b664558dc0",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "427fc66d-9af7-485d-9313-a720d3236ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66eda0db-086f-476c-8989-7ae1f0c80c0a",
        "cursor": {
          "ref": "60fdb1d7-d250-40a9-b940-f709fb873dda",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b3728217-8eb5-40cd-8662-3dbc80eaabac"
        },
        "item": {
          "id": "66eda0db-086f-476c-8989-7ae1f0c80c0a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ce60534d-a857-4908-8e0f-46d9bc4f390d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b17349-2d67-44ce-84f5-e7a6441b807c",
        "cursor": {
          "ref": "993b79c9-5b46-4751-a315-ffd31f91ddfb",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8c06d8a1-1838-49a8-8ea9-cc1e7bf96b99"
        },
        "item": {
          "id": "38b17349-2d67-44ce-84f5-e7a6441b807c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "84df944f-9359-4862-b190-ab4abdcf6375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e998ff4d-326a-48be-91fd-020c3ed670b0",
        "cursor": {
          "ref": "a99da056-a80a-456b-ba8c-a335dca5dea5",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "016cb4ee-5401-4634-9d18-775a4e3b4578"
        },
        "item": {
          "id": "e998ff4d-326a-48be-91fd-020c3ed670b0",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0a0a7205-c66b-4fa8-b7ab-19e2626c62f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aebf3519-7356-41c6-a430-57012304497c",
        "cursor": {
          "ref": "4f92ac51-033a-4bd0-b083-66e0d68d2089",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9a3f61b1-70a4-474b-9962-84cf67e6e2d6"
        },
        "item": {
          "id": "aebf3519-7356-41c6-a430-57012304497c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0269fc7a-b178-4d58-9bb6-e3a65efe17b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc4d8d5-8103-4e40-80be-4011a60f32ea",
        "cursor": {
          "ref": "dcd11b00-fef5-4d90-a1bc-30e771a245af",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9a3ff91a-3eff-4a9a-a53f-5a2879913c87"
        },
        "item": {
          "id": "4fc4d8d5-8103-4e40-80be-4011a60f32ea",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "9b6f036f-d561-4ed4-a119-d7b547ddfa1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8682e53b-1ff3-41ad-a129-fe36688d9bcf",
        "cursor": {
          "ref": "83158125-a095-424a-9ee4-b6bb1b98d813",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "aa5e9421-31e3-4acc-9a43-f00abce91fc7"
        },
        "item": {
          "id": "8682e53b-1ff3-41ad-a129-fe36688d9bcf",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "47e5c587-b53a-4b4d-97fd-a30cedace20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1089dee2-4e95-4c6d-8467-d7491084a03c",
        "cursor": {
          "ref": "4557b18c-7fe0-4148-9a00-ea390f57fd53",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2120dd2e-0aec-49b4-9bec-0720b7054b28"
        },
        "item": {
          "id": "1089dee2-4e95-4c6d-8467-d7491084a03c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "55126751-dafd-4f0a-a27c-af6d65324cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4191cf-256e-4653-9b35-501278ad37a3",
        "cursor": {
          "ref": "479e8919-ebbb-4501-a084-0c7f68b0927c",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "3143bbc6-3bcc-4a82-b2e8-366c8f872741"
        },
        "item": {
          "id": "6b4191cf-256e-4653-9b35-501278ad37a3",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b3c3c726-33ee-4564-a2a3-2e5130802658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1e1002-2b93-4276-96b1-223f91ceae4e",
        "cursor": {
          "ref": "f75fd8d0-324b-4471-9d03-ed04e07fc7b9",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c7d1380f-6c5c-4df7-9a12-3d330c3bb6f3"
        },
        "item": {
          "id": "7d1e1002-2b93-4276-96b1-223f91ceae4e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d095b2d6-de50-4377-bc31-4c37bc9e368b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd59318b-b6c5-4053-9854-8e4a246ecca2",
        "cursor": {
          "ref": "2eb4caa6-62b4-4f84-a8b3-76cae1b3d2ca",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "211efaf1-4305-4cf9-a078-645470e78ca1"
        },
        "item": {
          "id": "cd59318b-b6c5-4053-9854-8e4a246ecca2",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e58f0b1c-5dec-4e69-b0a2-a95eb2d2d8ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f320ebc7-a91c-4e2e-a8c3-2fa03e6fd2e5",
        "cursor": {
          "ref": "b309bd40-95f7-4217-8b49-aa336768d1b6",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0cd87c52-aed5-458f-9b88-2206ad3e6230"
        },
        "item": {
          "id": "f320ebc7-a91c-4e2e-a8c3-2fa03e6fd2e5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1d769c18-ee84-4217-ae54-63e0f339bae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57de4f86-ae32-4667-8b6b-b8d20480927b",
        "cursor": {
          "ref": "6ac77fc4-617e-4e5f-8ac4-615128b3b114",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "4010dbeb-382a-4f75-9b54-59951cc25c2c"
        },
        "item": {
          "id": "57de4f86-ae32-4667-8b6b-b8d20480927b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "69345b37-da32-44ed-ac2f-b731d659b53d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1d03ce-55cf-4b32-b2e8-3b0fcaaa5bec",
        "cursor": {
          "ref": "5bfcbd56-4caf-4ef3-bfa2-d2360d0a4761",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5bef3014-fb87-4aae-bade-7cb89144a8eb"
        },
        "item": {
          "id": "0c1d03ce-55cf-4b32-b2e8-3b0fcaaa5bec",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ac398553-16d0-4188-8577-60d18a2b17e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12485993-84e7-48ef-8ea3-37e7c712153e",
        "cursor": {
          "ref": "27b6cb0e-5d15-4832-bb38-462c52d07365",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0d72874f-e834-4530-85a9-ff3c31b9c9dc"
        },
        "item": {
          "id": "12485993-84e7-48ef-8ea3-37e7c712153e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ca6022c9-5f49-4658-89f6-c4cd55c34a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c3bafb-fdcd-4bbd-adb8-394ff239842b",
        "cursor": {
          "ref": "20f6c9d8-74df-458e-a7e9-1980d9b8737e",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "bafcb08f-0ea6-4a9f-8175-3b1720238f12"
        },
        "item": {
          "id": "60c3bafb-fdcd-4bbd-adb8-394ff239842b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0bc574f6-40b4-4dc0-8f47-557c9360fabb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4695a2b0-8811-4c7e-9a7e-ad22c416217a",
        "cursor": {
          "ref": "14543667-73e1-43a1-9d88-08cc81038dd9",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b5728c0a-55b9-4cde-aafc-5b8bfe171c28"
        },
        "item": {
          "id": "4695a2b0-8811-4c7e-9a7e-ad22c416217a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "43b9c504-b2b5-49f1-a2f7-45d1009fa807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7434df22-fec7-4a39-be96-3a4141e6a101",
        "cursor": {
          "ref": "9483230d-37a1-4eb2-99ef-5382192d42e6",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "506f2754-8a4e-49ce-817c-053d71a4da43"
        },
        "item": {
          "id": "7434df22-fec7-4a39-be96-3a4141e6a101",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e9e253d5-5bc4-4f6f-a305-76cf2cb81fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c2c99d-7889-4bbc-a663-17bb60fd313f",
        "cursor": {
          "ref": "d2ddfba5-e912-45e9-83ef-36c7f167adf0",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "bedb4f34-986f-47cb-b48e-7dc5e1ce90dc"
        },
        "item": {
          "id": "e2c2c99d-7889-4bbc-a663-17bb60fd313f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4b2060af-c1c9-4bcd-82d8-d9681cc594fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc08262-a6d8-47b0-832c-42514151cc37",
        "cursor": {
          "ref": "f16c86a0-1f23-4b02-b93a-497fcb5ccb71",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c339b2ad-e577-4d30-be76-002068413710"
        },
        "item": {
          "id": "1bc08262-a6d8-47b0-832c-42514151cc37",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "30f09ff4-7ba8-4401-9a84-2f7ddd78b416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30693eac-c922-4584-9e42-7b69e787d958",
        "cursor": {
          "ref": "56795fb6-bf71-4892-a217-0b8e680937d3",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8baa661c-8ce2-49f6-9017-84d40309a1b1"
        },
        "item": {
          "id": "30693eac-c922-4584-9e42-7b69e787d958",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6b9afe13-f4a8-4e43-a8ae-f3e219f7da76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a171c37b-b2aa-425b-93d2-14c3b9c9db0e",
        "cursor": {
          "ref": "ed1b8d58-bfb6-429a-9114-4e6356342dcc",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "7b8272b5-a92a-45e1-b231-2f2ff4aeb9d4"
        },
        "item": {
          "id": "a171c37b-b2aa-425b-93d2-14c3b9c9db0e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a4ed5ece-1a0c-4e44-9565-a6cceed35569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3370aa63-bbc4-4a36-99f9-9c1943416575",
        "cursor": {
          "ref": "b7d216a8-74c9-48ec-b01d-689deb86f7d2",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "eee30947-e48d-4a34-9113-7c8b3fac5f69"
        },
        "item": {
          "id": "3370aa63-bbc4-4a36-99f9-9c1943416575",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a0bf18e3-7a67-42b9-9511-f2b5be387fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d97ac3-1745-41f0-9c69-c571159525e9",
        "cursor": {
          "ref": "b3c50c10-cc32-4f60-b921-304e95149ffe",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "10c79ca1-83e4-40e4-aed5-54d6069b7a9c"
        },
        "item": {
          "id": "30d97ac3-1745-41f0-9c69-c571159525e9",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3320e88e-6ad9-4601-b33d-f13898284728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d28cf371-955f-411f-9342-910dbb750321",
        "cursor": {
          "ref": "77f49ca7-4ce3-49b4-b6c5-987b3b6c57bc",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "14decd39-aba6-4144-adf6-887a16b7f5a7"
        },
        "item": {
          "id": "d28cf371-955f-411f-9342-910dbb750321",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "584a9ad2-8124-4899-bffd-5101e19daab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ced195-edd2-498f-8684-a3b555d85e21",
        "cursor": {
          "ref": "b969775f-8fb9-49ed-85a3-a4417f26bacb",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e6e2f865-11a5-4651-a5aa-5c358a453452"
        },
        "item": {
          "id": "80ced195-edd2-498f-8684-a3b555d85e21",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "2162c355-d412-43da-ac25-aa17672e9df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9ce4de-8508-4d2d-9309-d6417d8117a4",
        "cursor": {
          "ref": "06a44802-56fa-4282-8d66-e135756e0bad",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "7015c14d-5eaf-4e99-836f-4292920827d6"
        },
        "item": {
          "id": "ae9ce4de-8508-4d2d-9309-d6417d8117a4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "91ccc88b-c0e4-4880-9b6b-9b025329a2b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a09414d-0de4-48f7-a35e-7c620c912a1c",
        "cursor": {
          "ref": "2e4ef22c-28eb-4c81-b099-c031680ec5ea",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "adcbcd62-9c6f-4932-a7ca-c84684473ad9"
        },
        "item": {
          "id": "0a09414d-0de4-48f7-a35e-7c620c912a1c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f58ba529-b294-47e0-b843-edc687329c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4126a0d3-54cd-4437-9b4e-a0910714adb5",
        "cursor": {
          "ref": "667600e3-5d2e-4543-b1e2-28becc488174",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "8a3ec58a-4852-4a63-b618-59926c21f3e0"
        },
        "item": {
          "id": "4126a0d3-54cd-4437-9b4e-a0910714adb5",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b97d8f38-e8c9-4e07-bea5-6f3dd8ae02eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670feaac-487f-4b2b-bee1-62d0628d20a3",
        "cursor": {
          "ref": "a9d15e7e-c84c-4f35-b407-c267b257ddcf",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4615fdbc-5d78-421e-8f62-2e124685d00f"
        },
        "item": {
          "id": "670feaac-487f-4b2b-bee1-62d0628d20a3",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0b7d4230-f140-466a-9845-41717bda2248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b6e215c-d7a5-4f12-8dad-b1719e87403e",
        "cursor": {
          "ref": "154820c1-4d55-45cb-add5-26d38e8291f3",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "bf635e0a-9edd-4966-aef0-eea59fee86b8"
        },
        "item": {
          "id": "9b6e215c-d7a5-4f12-8dad-b1719e87403e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6624886b-4fad-4dbd-989f-681b1bf2c1b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a60462-a87a-40ab-8361-14d99f889b66",
        "cursor": {
          "ref": "5aa9c70a-1e2f-4f95-b174-0eea854d304d",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f7b47b1d-d0d0-4a8a-b356-761fd3deca19"
        },
        "item": {
          "id": "88a60462-a87a-40ab-8361-14d99f889b66",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "10575922-e276-4224-a5a1-7440699dc2ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f833d5f-1afd-4c6e-8346-f1d2ee7ad8b5",
        "cursor": {
          "ref": "1e3c75c1-d9f2-4dda-948b-f85727bc2fd3",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "12506291-178d-48e5-8103-27c93480c735"
        },
        "item": {
          "id": "7f833d5f-1afd-4c6e-8346-f1d2ee7ad8b5",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "5759ace9-558f-41b7-9f56-cffc5ab38312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc2de60-a6b2-4544-9ee2-ee8efbd78768",
        "cursor": {
          "ref": "118d8731-56da-4a89-bd17-758ad1270989",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5f33bc03-c06c-4442-b488-d0efd86e1d7e"
        },
        "item": {
          "id": "2fc2de60-a6b2-4544-9ee2-ee8efbd78768",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1c426455-5a68-417d-9b99-a9988b6ea5be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32228f43-faff-4ef0-8bdb-0d9fbd9cf2ce",
        "cursor": {
          "ref": "73819193-676f-4bfd-80d7-ba2ef9956ad0",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4a70c89e-ac5b-4299-8720-130c68e19cf2"
        },
        "item": {
          "id": "32228f43-faff-4ef0-8bdb-0d9fbd9cf2ce",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f111dd3a-272f-42f7-a0d3-f30ded6ea10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f910c3-8439-4e5e-bfd7-f7340ebc3171",
        "cursor": {
          "ref": "941ab760-e911-4609-ab01-a601892b23b8",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "89c31647-97ca-42ea-81f9-20fdd8f8bb2d"
        },
        "item": {
          "id": "c3f910c3-8439-4e5e-bfd7-f7340ebc3171",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "33e636a0-69f7-441d-9649-dc28abb8504e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ab0170-117f-408f-a28d-23ac379f39b4",
        "cursor": {
          "ref": "1e4cc261-f110-46d2-a87b-a3c0e8f3be19",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b45e0a58-1063-45b1-9b84-42679de204b4"
        },
        "item": {
          "id": "41ab0170-117f-408f-a28d-23ac379f39b4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "29b3b50c-abb6-4801-99be-7c0c0b715ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f7b993-1c32-4a82-948d-62f4ce301165",
        "cursor": {
          "ref": "ece732cc-95cc-4362-ad2a-3c68aa611801",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e9749f74-7f8c-454b-a2dd-07653a64cf43"
        },
        "item": {
          "id": "42f7b993-1c32-4a82-948d-62f4ce301165",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d8a0812b-3b06-4efe-a282-c1313b1212e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a66b1d-ffb9-49a6-be98-a3201170e856",
        "cursor": {
          "ref": "f4fe1cce-d5e2-4670-98c3-c94e0c00e131",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "23a5eaab-ede6-4d4d-a371-db1cd7439657"
        },
        "item": {
          "id": "b1a66b1d-ffb9-49a6-be98-a3201170e856",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "80093db3-aa9f-499e-a93a-088f1bad0481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57f4d68e-099d-46e9-827f-c889181bf05a",
        "cursor": {
          "ref": "bab4a9dd-389e-4f40-b593-6c2b8fa377fe",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6fc32ea1-4dec-43da-83d3-b83abaf7b69a"
        },
        "item": {
          "id": "57f4d68e-099d-46e9-827f-c889181bf05a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3141d17f-f4c0-455e-9c99-2e14db39ed20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a3e6d0-d0d1-4366-95f0-938baaf41bd9",
        "cursor": {
          "ref": "ba1f9425-7c4c-46a1-9fcd-c3c647bd991d",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "00a8cad1-72f8-496b-8a3c-6e6f4d29eb89"
        },
        "item": {
          "id": "e8a3e6d0-d0d1-4366-95f0-938baaf41bd9",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f776143b-7ff2-4c6d-ab53-5c392fd63d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be95721-1c33-4934-9cac-6609a46a7794",
        "cursor": {
          "ref": "b0e2ec63-3857-4bdf-9666-cb99ed935eab",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "5d03f3ef-7d72-453c-866e-489c3117c18b"
        },
        "item": {
          "id": "6be95721-1c33-4934-9cac-6609a46a7794",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "bb9309e9-90a1-4cde-9101-c6c2688c4544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1250f5a4-e253-49a2-82d2-077d5097af7c",
        "cursor": {
          "ref": "11d5cc1b-eec7-4e6d-8e01-67d0173fdf50",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "3c70ecc5-8443-47f4-8f47-3b568c082365"
        },
        "item": {
          "id": "1250f5a4-e253-49a2-82d2-077d5097af7c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "63b1cab0-5100-4daa-a2ae-d72154560cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5496286-117a-4d32-a477-8ca2f9de4a54",
        "cursor": {
          "ref": "58a68ef2-bea7-471a-923c-2de65520edd7",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4b337c11-9981-4e23-b200-b5176b72b182"
        },
        "item": {
          "id": "e5496286-117a-4d32-a477-8ca2f9de4a54",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "520d70b1-606d-4282-9951-8d31f9befc90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b9e860-c68f-4c4c-8a5b-588d761c7378",
        "cursor": {
          "ref": "9fa059ed-5fa7-406b-b4d1-6bfbd9f9dd70",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4e7a79de-9b49-4061-9b66-db2e5dd069e4"
        },
        "item": {
          "id": "71b9e860-c68f-4c4c-8a5b-588d761c7378",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2c42538d-b830-4ab6-b03d-47473a06931a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ad1380-61ca-425b-b564-49f78aee83ae",
        "cursor": {
          "ref": "059e6684-b9b4-43d1-8a98-1e4ea3a0d364",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "cab55d13-f229-4ee9-b8ae-d18b835f40d3"
        },
        "item": {
          "id": "e0ad1380-61ca-425b-b564-49f78aee83ae",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6aa5623a-7601-47ba-ac89-ca65f304091d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6dd470a-bd93-4d72-99cc-ed48d8a7aa26",
        "cursor": {
          "ref": "2f1268f1-e03d-4b3c-a10e-c2de29bfa987",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0c3f973c-9fca-4573-8afe-e91d51e694cd"
        },
        "item": {
          "id": "b6dd470a-bd93-4d72-99cc-ed48d8a7aa26",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "74edeaab-9061-4e6b-a341-ea4b1deaae63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c738d4-7d78-4b99-8938-9888f6cacb03",
        "cursor": {
          "ref": "de5de8e5-12e3-4246-9c8b-6ab8fd89506a",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "35559394-8522-4979-ac44-735451c22bc0"
        },
        "item": {
          "id": "43c738d4-7d78-4b99-8938-9888f6cacb03",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "92073c6c-5147-4ef5-a9ee-f6bdb835dae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9ee5f1-45c4-43e1-8d52-a2bdde5e917b",
        "cursor": {
          "ref": "a290e926-c0f4-42d2-a86e-1dcc8824d63c",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "268c1938-71af-4155-8d51-c721368c9629"
        },
        "item": {
          "id": "7f9ee5f1-45c4-43e1-8d52-a2bdde5e917b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6fd8f680-2e00-4efa-a615-008205d2098f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19f92c2-ccc3-4dfe-b826-6e71e37fa01c",
        "cursor": {
          "ref": "0d088cbd-0ad6-4374-bcbf-2c17b1383087",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9e04c246-f6ff-4261-9cac-af8e66ea27b4"
        },
        "item": {
          "id": "d19f92c2-ccc3-4dfe-b826-6e71e37fa01c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "3f3d8a16-167e-4b1d-b681-bb3bd7657800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844e1d93-de14-418c-9f94-65b5c91b9cea",
        "cursor": {
          "ref": "6a338ec8-1234-4630-a6c3-979c63e20002",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0b5fcc3c-6db2-4d9d-8e17-ab77982dcb46"
        },
        "item": {
          "id": "844e1d93-de14-418c-9f94-65b5c91b9cea",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "81bffd79-0502-4237-9e5a-129dfdd6292b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac5fa93-9cb5-411c-af1e-f9a1a3af5ccc",
        "cursor": {
          "ref": "83607aca-a1ea-4bef-9e0c-c1351a2c69b5",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a96c9dd3-44e2-4810-b260-baced42b4182"
        },
        "item": {
          "id": "aac5fa93-9cb5-411c-af1e-f9a1a3af5ccc",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "fb89ecd2-f922-4659-a696-5b57921bc6b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478c60da-391a-4e70-9f27-0916a64d2197",
        "cursor": {
          "ref": "e4f4ce10-5076-4c4e-9162-4739dc2bef1e",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "896ddf2c-0761-4c10-89e0-9778095174e9"
        },
        "item": {
          "id": "478c60da-391a-4e70-9f27-0916a64d2197",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5fb25ee9-5b9a-44e8-a678-1d1b84926300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0c14f1-466b-4e63-a8e9-899863a86744",
        "cursor": {
          "ref": "794a98f2-4666-4c44-98ed-dcd6a3598b48",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9e94d3ee-861c-4ac7-bbcb-b605b0828bc8"
        },
        "item": {
          "id": "2b0c14f1-466b-4e63-a8e9-899863a86744",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "800b56c4-d420-4c18-a194-e0adeba0a7a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227e48d4-d0fe-433c-bc66-c8379c598106",
        "cursor": {
          "ref": "e8d3b060-7c16-448c-ad52-c26905d660fe",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "0f41fab0-e1ea-4ebd-a45d-126326bdd5c7"
        },
        "item": {
          "id": "227e48d4-d0fe-433c-bc66-c8379c598106",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4dfd4855-8b4e-4265-8811-2182f01748a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4061b2-c5b6-4608-8add-e4d894107b21",
        "cursor": {
          "ref": "982500a0-55f7-4cad-aca0-0999e7c1be1d",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "cfff625a-dc10-4917-a429-b5f036d9a3a5"
        },
        "item": {
          "id": "ba4061b2-c5b6-4608-8add-e4d894107b21",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9819719c-c566-4017-a5fd-60e1482de24e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d040e8-1447-4a0a-9689-bc043cb9bf60",
        "cursor": {
          "ref": "50621535-2eb8-4673-a58c-1235a40934b4",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "96f7f5ea-ff99-4c2a-b1df-ef5a41b3c2bb"
        },
        "item": {
          "id": "62d040e8-1447-4a0a-9689-bc043cb9bf60",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1d65276f-2168-453b-9d24-f039fa165cc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ba86df-c91f-42ad-8d30-61e50055eca8",
        "cursor": {
          "ref": "3d7fa59b-6b06-4c17-b2c5-3647daa9532b",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "2c9d7003-f827-4115-861f-fe28080690fc"
        },
        "item": {
          "id": "53ba86df-c91f-42ad-8d30-61e50055eca8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a129d079-7bc1-45ea-bc28-f04c496a6b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16d2680-f1c3-492d-a255-945e1ddf8127",
        "cursor": {
          "ref": "2919837b-5c41-493c-ad41-94ae2b95ae46",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "372674bd-2a85-4a54-b47d-6a4336855de4"
        },
        "item": {
          "id": "f16d2680-f1c3-492d-a255-945e1ddf8127",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "684c3316-b1f7-42bd-9e66-8a6a3427eff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b064b65d-c9b8-429f-afa2-8319c700825a",
        "cursor": {
          "ref": "9e9fe7ff-5dd1-43d7-a112-88ab69b7c152",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "f53939f0-d2f9-484e-83c2-34aebd7552a8"
        },
        "item": {
          "id": "b064b65d-c9b8-429f-afa2-8319c700825a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a15a3fe2-e144-42f4-9018-1731172eea3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd995772-8df2-466e-bf04-5f823ce367c0",
        "cursor": {
          "ref": "67bd2222-fb07-41d0-bdba-93f3986de548",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "acdc3ac4-1044-4110-85d0-9d2706afb5a0"
        },
        "item": {
          "id": "dd995772-8df2-466e-bf04-5f823ce367c0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d5221701-f2fc-400f-affa-0f4b7080fe73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170494f8-420e-4857-92c5-b7235f77b77d",
        "cursor": {
          "ref": "04f9e46d-9447-488e-96cc-4d8cccf489ae",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "2c8c5dbe-7079-436a-8a88-a3dae351645a"
        },
        "item": {
          "id": "170494f8-420e-4857-92c5-b7235f77b77d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4e5e4f92-4f5d-496b-acd2-1eaacae105b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21fca7dc-61ac-48ce-ba6f-9a8bbeab8fdb",
        "cursor": {
          "ref": "3b42c96a-94a3-42b8-b364-64127b42cb4c",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "c1726ca3-eb15-4a69-9956-b1fe3d962243"
        },
        "item": {
          "id": "21fca7dc-61ac-48ce-ba6f-9a8bbeab8fdb",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9be97c58-0fb4-4c47-902c-8b5c5aa0a021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f038122-7ea4-4cf4-8236-44e37a48c855",
        "cursor": {
          "ref": "2394323d-a1f0-47f1-a6b0-f0c64da5d0bd",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "2d1a0550-7ccd-4d83-8e12-983a46bc8abe"
        },
        "item": {
          "id": "3f038122-7ea4-4cf4-8236-44e37a48c855",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b58bc757-2970-440c-b320-5248ed4cf747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a128f7-642f-43a5-8830-0640eeae0c27",
        "cursor": {
          "ref": "a4bc855b-1168-4a90-a2ae-9c9b0d4d5ed2",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "e7f222c9-f8fd-4e4c-bfa3-14b3f6d40ac9"
        },
        "item": {
          "id": "09a128f7-642f-43a5-8830-0640eeae0c27",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ad9c9e6a-f2d9-4953-976d-395bf2d868cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af38b643-7a23-4752-9af8-cc881553d872",
        "cursor": {
          "ref": "2d752cb7-b546-41da-8edd-e22a1b61226c",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "b85be773-2327-40cf-a69e-d7f06b3378f6"
        },
        "item": {
          "id": "af38b643-7a23-4752-9af8-cc881553d872",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "bcb55f5b-d552-4841-ab32-c2368805fe18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2812ae9e-d5e4-452d-8996-103dc6f8819e",
        "cursor": {
          "ref": "e1d85ba2-dfb6-4526-a0ee-8c973f09374c",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "b68d1b91-246d-4e5d-a687-85877d249c3e"
        },
        "item": {
          "id": "2812ae9e-d5e4-452d-8996-103dc6f8819e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a4b93fcd-303b-4b06-a9f8-9a30db60742d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "200aedc9-085f-4625-b010-aad38464f98e",
        "cursor": {
          "ref": "7f244012-df9b-4a4f-89b8-85489a043059",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "c84c8a47-30ef-4dd6-bcf7-e7d7a01ffab2"
        },
        "item": {
          "id": "200aedc9-085f-4625-b010-aad38464f98e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a84a07ee-3351-4f17-9186-d48f4793cb92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f919d433-a102-4250-b1cf-58c8cf0153af",
        "cursor": {
          "ref": "b586ab9f-0b2f-4c77-991a-3d4afa26511f",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "805a337c-4e86-4007-b7fc-fb0dead7bfc9"
        },
        "item": {
          "id": "f919d433-a102-4250-b1cf-58c8cf0153af",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d8f1c7d6-8fc2-47c7-a75e-d09c2aa2717a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2b7f97-0fde-4392-af0c-4705c8ca742d",
        "cursor": {
          "ref": "c051a7e2-7b5f-40a7-b77a-5e1a83e35c24",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "51968de4-c791-484d-9531-2358996c8cc2"
        },
        "item": {
          "id": "3a2b7f97-0fde-4392-af0c-4705c8ca742d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "342d450e-c7e6-4a6d-b503-d398b8be01c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c56636-d400-431f-9ccc-36a3b98128e6",
        "cursor": {
          "ref": "73333792-33a7-4e5a-a360-b43ed32f86c6",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "3708f34e-f379-4407-bd54-9ea9b1d435e8"
        },
        "item": {
          "id": "38c56636-d400-431f-9ccc-36a3b98128e6",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "555fa523-88d8-4a11-866d-73c6c91e4ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a684d6-c42b-41ff-bb37-101385bf9785",
        "cursor": {
          "ref": "74e347ec-8e2f-4136-87f1-32f19b2fabe0",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "84de07a8-2dc8-45c1-9919-2b9648c06edf"
        },
        "item": {
          "id": "82a684d6-c42b-41ff-bb37-101385bf9785",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6cf9138d-92d0-41d6-9869-9139130985dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a29e39f8-f6ea-47fd-badc-eed54a1e0096",
        "cursor": {
          "ref": "a5ac00b2-2240-4111-af97-76fafac16f39",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "b41f5be2-f890-4bd0-aa12-916766a2865e"
        },
        "item": {
          "id": "a29e39f8-f6ea-47fd-badc-eed54a1e0096",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8d38f379-69c3-4ec8-b8c6-599d214ae0fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87027f0-36fc-4bec-a691-9293f424a779",
        "cursor": {
          "ref": "6f9ef5ad-f597-46e2-b05d-4cae1618c3ce",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "e0a498db-765b-44a7-a5a3-98cf115dcf2e"
        },
        "item": {
          "id": "c87027f0-36fc-4bec-a691-9293f424a779",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e5572f6f-1d51-419a-a558-2f0de9f69fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eab9294-d7dd-4f5c-a5e5-803e5382a490",
        "cursor": {
          "ref": "fc3cd0a8-fdca-4614-9469-10e042ac5906",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "bedef502-617d-432c-a508-b3f8f2b0943f"
        },
        "item": {
          "id": "7eab9294-d7dd-4f5c-a5e5-803e5382a490",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "cfb54faa-0010-4e00-8b64-2b75d69d105a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "546e3faf-6580-4a00-838c-6ba2f0e7ebc7",
        "cursor": {
          "ref": "be674932-d848-4c1f-8680-db49511f722f",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "c14a3ebd-d4f6-482d-9235-5a1217a606ec"
        },
        "item": {
          "id": "546e3faf-6580-4a00-838c-6ba2f0e7ebc7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e73fe21f-9095-4e29-8f17-06afca95f61b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b543a594-6a5c-44f0-9fea-c64399827f62",
        "cursor": {
          "ref": "2e38053d-6cc7-4ffe-bf4e-857ea088fc20",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "5dd02746-20ad-4af9-835e-4cbfb06a2375"
        },
        "item": {
          "id": "b543a594-6a5c-44f0-9fea-c64399827f62",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "47e085a3-1bcf-4bf4-ac08-c153c62d0e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6824427-affc-4c06-bdd3-6b7810393d1b",
        "cursor": {
          "ref": "a49f4683-d9a9-4fc6-b955-0a772bf74e9d",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "1ebd3355-f4dd-4490-88f9-68dd8f272f80"
        },
        "item": {
          "id": "b6824427-affc-4c06-bdd3-6b7810393d1b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4533ac64-0eca-49ad-98ca-392b264f626b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d2aeb2-6878-49fc-9734-ba73f71a71dd",
        "cursor": {
          "ref": "7797cc61-7879-4dcc-8c1b-f64e776804e1",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "571a0018-2243-482a-a212-54b46fd9eeab"
        },
        "item": {
          "id": "36d2aeb2-6878-49fc-9734-ba73f71a71dd",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ab9c669f-44c6-401b-9c91-e3507c721631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5ff0e4-4e1f-4dbf-9144-d1f1c84f67d1",
        "cursor": {
          "ref": "965b85f6-d510-4a70-8a0e-7481d6a47ca2",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "5f8c0fc8-2b18-43c9-ab62-c1abc37f7a28"
        },
        "item": {
          "id": "0c5ff0e4-4e1f-4dbf-9144-d1f1c84f67d1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "81bbae60-e9de-4569-9b66-06299b2e9a89",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d758d7-4599-4b36-bdbf-5646acad8de6",
        "cursor": {
          "ref": "5c013384-7cd8-42f0-9493-0dfad02d38e0",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "c686f5c3-3a73-4e3f-a812-2f49671b3d6c"
        },
        "item": {
          "id": "f9d758d7-4599-4b36-bdbf-5646acad8de6",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "fdbca87f-1a49-4aba-9742-cd33a246eda5",
          "status": "OK",
          "code": 200,
          "responseTime": 102,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "53bf562f-9b3b-47d5-af26-5a9e4dec3d97",
        "cursor": {
          "ref": "a6b1db04-9c42-4cbf-a0fe-43df3563250c",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "e9a2b22c-dffd-4155-b19d-f94077aa77a2"
        },
        "item": {
          "id": "53bf562f-9b3b-47d5-af26-5a9e4dec3d97",
          "name": "credentials_verify"
        },
        "response": {
          "id": "90b51615-d306-483e-a7c8-dfcdf821294c",
          "status": "OK",
          "code": 200,
          "responseTime": 1518,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "568dd4a6-4612-404e-bb8a-867bc60d935a",
        "cursor": {
          "ref": "5cee0494-2295-4699-885e-3297f39f06e0",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "eb5c4f58-1de1-44e8-95da-723194d13896"
        },
        "item": {
          "id": "568dd4a6-4612-404e-bb8a-867bc60d935a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "95cbfe4c-99b6-43ba-a559-a4ed8f59a292",
          "status": "OK",
          "code": 200,
          "responseTime": 1284,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "048f1b5b-b0b3-4414-9dc8-bf41bf46ed77",
        "cursor": {
          "ref": "acb83ef3-1ba2-466a-a83b-fc5740eaf415",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b10770c0-44c4-4468-8a2b-f0306b66eaf2"
        },
        "item": {
          "id": "048f1b5b-b0b3-4414-9dc8-bf41bf46ed77",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1f73fe8d-e7d6-405b-ab3f-759d0630537f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048f1b5b-b0b3-4414-9dc8-bf41bf46ed77",
        "cursor": {
          "ref": "acb83ef3-1ba2-466a-a83b-fc5740eaf415",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b10770c0-44c4-4468-8a2b-f0306b66eaf2"
        },
        "item": {
          "id": "048f1b5b-b0b3-4414-9dc8-bf41bf46ed77",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1f73fe8d-e7d6-405b-ab3f-759d0630537f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca205609-d690-43e4-8916-46d6e3cd5f6c",
        "cursor": {
          "ref": "3cddcb4a-5287-496c-b1bf-79d3b03a239f",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "98eef9f2-369e-443d-a0b2-8ce0f3c531e7"
        },
        "item": {
          "id": "ca205609-d690-43e4-8916-46d6e3cd5f6c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3e819345-edf0-44e2-85ce-bbf9426425e2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb378b0e-013c-4755-9889-130ef4c2c75a",
        "cursor": {
          "ref": "cf13239d-5e8f-417f-bfb3-3eb2d8d27622",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "9080151d-6be3-4cba-ad9b-e680eff2f9f5"
        },
        "item": {
          "id": "cb378b0e-013c-4755-9889-130ef4c2c75a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d44810ca-91c5-4df2-ba11-5da7c731a460",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}