{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "bd69b040-85f2-4db6-869f-e4ae6616846d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4f738aed-4686-4f4e-b09d-4e5e0b3b859c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "213459d3-7279-49ab-8d86-0ccf944d687c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "56258fa8-86e1-4770-b43a-ddde6b341d21"
                }
              }
            ]
          },
          {
            "id": "37abb7dc-7e8c-4995-85c2-127adbbdf79c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2398aa69-8285-40fc-a7fc-67c5f26e56a1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b2c5303d-510e-4eaa-8a91-1259a7ad65cd"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4691325e-3597-40d2-9f8f-3ee40a58d52d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "bf3e21e0-2a39-431d-80ad-a7ab2a988ca2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "24c2a159-052f-4560-8043-082ff761dd09",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ba0719b-e2b2-4c50-8d89-4d25394e2f5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "012a9db3-3d34-4fe9-b367-c86ad3ce50a4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "23796736-1e59-46cb-a11a-1f3da3784f74",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9349c617-1c86-4692-a475-20d0bb9662ef"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8976f6b8-0722-4f8c-9565-bb76c2d4ffeb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d6b5980b-f38f-4523-bb99-ba632c6e0da7"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "179fd425-59db-4dbf-86a5-a54b39e5f229",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "79314aa8-42b1-4ceb-93b2-9215873ecbd3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "58622cdd-af1c-4294-98aa-1102d083b3a8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5805b7f8-b1ca-4f3a-89ab-c37450b61d2c"
            }
          }
        ]
      },
      {
        "id": "6dec1f3d-d8bb-4c97-bdb9-602c0dd45b84",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "16d76e77-f9f5-415d-91c1-f947827f6c8d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0f37701e-9f1e-494c-8232-e2c4b1d81be0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0f3e127d-1935-4091-a866-bd6443e7571e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a10f92-dff2-455c-a69c-8093d1217e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ffc4911f-a506-4ff4-9094-8cccdfc2d499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "605cc559-09c6-4d51-b39d-b33e47c94db0",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa7495c-ced9-4180-b377-618c0d5b3d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cbbdf0df-862e-47d1-aaa0-29be7ac65892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e4be8ef-0b3a-4698-80db-d613f8adfb33",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1e15df-6263-45ad-9809-d952c91e41cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53343774-5be0-471a-a423-0a3161c72a72"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "85475cad-f1dd-460d-a7a1-ec86d7e01f70",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3954cfc0-8f43-4fc0-a310-7f81f65abc1d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b21a11-2550-415f-9aa8-24c8b0d50581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "285b8758-9c6c-4ae5-95e2-a6e87e24a2a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7622a770-02ff-4db9-8118-ad28848899e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4f53722-fba7-44ed-ae19-73cb2174c193"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "20b90b29-9e0d-45f4-bd06-1b2be9a8f34e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "65bd8e0a-6bc1-4336-906b-f8a73c0fa4dc",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "41626638-c7d5-4752-8479-6482474c970e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "52f2fc0c-1fef-4402-bb40-e97870e7fb4f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b318ef47-447c-4985-a147-2293094efcac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d6b8cfb1-73f7-4202-9f7a-d6e82dd31554"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1c8aaf2-b135-4203-b659-f676f941ff2e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "38842cb9-7f62-497a-bb95-e45011d4b63d"
            }
          }
        ]
      },
      {
        "id": "f4694786-391d-46a3-9cb5-dfd42a2ff91e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f14d4382-ea79-42e9-972d-e46170b2be3e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f9d21216-c9d0-4f32-a998-d8114ede650e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b2500007-38ae-499a-bb58-5523d18ac4ef",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa90615b-764e-484f-9e62-099fffd7caf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9baf9873-1540-49d6-a987-9aafa2909b59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f56976-a5ad-45b3-84c4-798ee50884ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb8b1a03-02e6-452f-90d6-f6ff37ea7dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff05e454-a0e4-40af-a576-1f23de50ffc9",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f8fe5fa-14a5-4322-9245-d71137efb69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da792a64-045a-481a-b168-61373a0fda85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24dbcc78-0aeb-4429-8bf0-c89859f1945f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d989aaff-7958-4eca-87b2-7a473004f13e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae87851-7bfa-4baa-b09c-9c5df5b8f16a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e15ee73-db5c-4369-ac3d-5c046d1ff3fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d240a545-e51c-43ea-bd22-9b9b460e0e11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d84ce848-2784-4525-a45d-0b8ff4f084b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eee496c6-3079-4f70-8b50-d231a377f35e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c9e1ba-b008-475f-93b5-a2c61fed9427",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a37c363-308a-4bfa-a37e-723a0d9bd3ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e676845a-7e26-46d6-9c6a-4a886eeefd0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70432aa3-987e-4d81-aa5b-264b9af589ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6e32e1f-e959-43a9-9eb0-2378f9a31607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd7f514-562e-49c5-bc01-0dbf7f82febd",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b30320-3c92-414d-8ab5-2851ba78bc7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "208aecbb-5fe0-4963-92bb-0f2b2f816b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee5bf82-595e-47ac-89ec-454a8896f161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa0e36fb-c2ef-45a1-92da-8a2c02431009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170893d7-8da4-4193-b03e-cffbd36efc94",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e735414-e9cd-4b42-80ac-f006b315dbc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d047ffe8-d117-4144-bd23-9227581ad265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6badb9d6-e2fa-4b52-995e-562e9f3ef16e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f73199f-616d-4de7-95ee-197f3b8426ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b1d66f-b7aa-4951-8457-19bafe2c3433",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1768821-0a68-45ab-82df-897f578e863b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fef515ca-4e0a-49a5-87ac-e90c52705900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c51bb4e-5422-4fe7-aab7-1fdb2f6cad1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6766252a-e979-492b-b1a5-a152b46693aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfbad5c4-858a-493c-95d1-8f75a6789e9e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9193b892-b99d-4541-ba7e-3f6fdf67f997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8da830e-daff-4aed-9aa5-3bf0b36f3b40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61761083-33fa-4193-b446-a7bdda6e7956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "129c1f75-750c-4484-b2c0-9bd6d50ce253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd46c81-e1ff-465a-8b18-0dcb12c48e95",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "958a57d0-b994-4c94-8b0f-d846a04891f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1897ce25-953d-420e-bb7d-4a319f4b785e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5f0188-4942-4ec1-932b-72bb0c73331d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c126bfa6-e193-423c-bc1c-5a3179830cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ca3ce3-d0c7-46f4-8667-86ceb304b2f3",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6964846-5910-47d2-a5b9-21a55e019612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e0789fa-aefb-41db-9b94-2a1d36cc5bdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a481e9-0329-479d-9434-9b0a1c829054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f83c102-3b21-4ab0-bd92-a77c41b25a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910d9e75-4b7f-430c-8823-54390c1036a7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22db1665-7fbe-419b-84a8-5428f4009198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9f90c08-5268-4f72-8668-3baabed5c258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d75b57-61c3-44cd-85fc-72cfceb0efbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10885325-7ed2-4f92-84a5-f41d1a2e106f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f6b515-a4c2-47dc-b0e0-d48f9b2d3076",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dabe555-c1e0-489d-af3d-cf6baf7d912a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edf93bcc-febf-4ea5-92bb-415e4a1c7296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b05cb370-fc89-43aa-8914-c435da07c703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "affa0904-0bc2-42c9-bb8b-1474fcec1237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85aea721-b9c5-43bb-86e4-3981798f6057",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccded260-343b-480b-9ed8-2e26d671f4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0afd58e6-364f-4ef9-9dc2-ce24051c8c51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c0a43a-9ad2-48d9-862e-9235c6264b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1849d57-6692-4c58-9173-77168f11bef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9e1b80-f38f-402f-b9a0-215ec8e8d9a4",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4968c519-c716-46e0-8dc4-fa97495ef6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcba0de9-76bc-4616-9cbc-13ccdb6fa74c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c656bd17-4aac-4647-aac1-61953bc93265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a08be65-967e-4b95-af34-38d45dc38918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a12e4a-373a-4abd-a632-f0c4cdeab4a2",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb4536f-c61c-4528-851f-671114343ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dde9c36f-8994-42c2-82bf-18dfeb70ff29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045af431-c09d-4785-a5b4-7b33d9b7083c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7732dce7-a91f-403a-b7db-8f4a7a6cb5c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665385b1-a750-41db-950c-f33596d02672",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39a8e7b-9172-4244-ae3b-36c8e807306e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ce2045b-e048-4a53-99a2-f47fda6a0f4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8119f3-1ee3-41d6-8c74-fccff3bc86d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e338343-f9c7-49bc-a884-5468c0ea21d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5773d3e3-ec4c-4870-b79f-905b4f1cfbdf",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d788a6c-8b6d-4d34-9737-d8dfd6ca64ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3ca3bb7-33fb-44b2-b565-348e5761b4b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06444dcd-0627-4f7d-9912-f77b2113c968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b9b5f72-3f57-41db-8e2b-8ac4e529834d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ba6f27-0bd8-4433-b803-457a455e89d2",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4417535e-c2b1-485f-861b-37c9327f0a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bae59cb6-0a37-44f4-afe1-bedeedb69624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c964c44-e490-4ac1-b88c-0085dee54bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "088c3c4a-136b-4d2f-a8ca-a8c76041f6bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9d8da3-41c6-45a8-8227-58b6c9fcabd0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86db944-0e1c-41bb-bb3d-bf5095b12fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f653eb8-05ab-42a2-a784-972849c749ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f62208a-664b-4fc8-a706-0ea6fcb27312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9132e6d0-e3df-4401-bf6f-0b5a76ffaab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4120d3e6-5db6-42b1-8dd8-3f3112222e29",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acce8197-ae4f-45a6-a47b-3eea5f6824ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d306ee57-6206-4701-8bd7-69b132b2382e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d436e5-5b75-4f30-9e15-9fd59e9e4721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e4459e-12ad-480f-8b31-5488daa85a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0250f566-eaa4-4b25-aea0-e626e5bda7d3",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b04e1f-d5bc-4dc9-9a12-2b3e04a73151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0062586-8a21-495c-a27b-c3a4eb58fe0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06bf648-2c6b-4e10-a170-68a67e590d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8332370-a082-4c0e-8819-7c7578819a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b0babaf-6929-44af-8b01-88037201ccaf",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e6bd8d-6924-4fcc-920c-6a26358a8944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c96a6a08-59cf-4327-a5fe-39af91101184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da143636-8093-4b83-9e7f-5e110897b60e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f83c01c1-6dd9-4719-8f8a-f463dce0935a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961a0e2e-d10c-4386-9df4-d7ae138d6226",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58124bc8-e3c4-429b-b90e-4b5cc4cd64a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef85bc62-97bc-4553-994a-688e4462a23b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e88a2560-d173-47d0-9890-b8ffea36f07b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8443d356-8ce4-4fdf-8a72-daabf89cc615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbebe8f3-cba6-4e27-85ce-3c8ce246bb1f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3961871f-d2b7-4021-9202-6c7ff5f53b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72a13768-6456-428b-af84-929b7973259a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a14d4e-cd05-402a-86cd-1e2310e9d8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "692dee17-a1ff-419e-85b7-b1873505ddd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc15bb2-9ed8-4876-ba9e-32617493ae4a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f0ad3f-dbb9-4dfb-ba1f-2075bededeaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06833dfa-c3f2-4523-ad06-978e274ee06a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d632ed81-1a4f-4d97-a521-5ec18749f856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ed405d4-3c27-433b-9b62-7494e6bbc804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e194a81b-30cf-4b86-a0e5-d850f98d9413",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d385d9-f300-49bd-b2ad-7a88f265e643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8bffea5-1d5c-4d28-b40a-7a539af4af24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca6b5bc-efd1-403b-b372-f87c6217d20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f84a852e-a22d-4a5b-bd55-477901eb149e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "540fdb19-7bc4-4670-9e36-e873626ece46",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d8b932-41e6-4fb3-ae53-19b35cf3e539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61e6f6bd-5032-4075-835d-a7574cb8141f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b09c8f-5061-4572-bd8f-ea506a80fc19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "acafff78-02cd-4654-999b-8c5a4960080e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b1b75e-3339-4883-8cfb-ea07844eaa7e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5805fe-05d6-4a41-a4d9-22beac286d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51d4e6fb-9b24-4dca-966b-2d867cc0d576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ceb1834-854c-45b0-a04c-f765152c760f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "623e5421-c832-4a5f-8016-b94c295b98e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdab567a-e7f2-4292-b23b-1a5dbffe6fa9",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16faf0aa-7527-44b0-b0f5-769124d1db1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8a59e08-d985-43d8-98cb-2bb37c441027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9504b9ae-8184-4569-9854-aba60c2e1aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c0219e5-5098-4725-b0a9-48b0aca6d0d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef7b25e-b4f3-4736-9a00-44ce246620d1",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a965e657-879c-4110-b575-b896f92274ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68dbdf0b-680b-489c-b552-09f6e9d36605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeba1276-ec05-4db9-8040-ae9772b84a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9990ecf-0519-4e79-9afa-0a862880f5fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8b570c-6b9f-411c-a5f7-dce54b60eec9",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "683b27f3-2684-46dc-8201-e8eea603a57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af2242f9-5d12-4ac6-915e-f6557657d671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20912be9-bf5d-4861-a63e-018c157b989b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c36b7a2-6e64-45ba-b92d-af8b123c3570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb64fac-d92e-4e1f-9631-685656e9d4b8",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "980b2ec3-32d2-4d5d-a173-fee342a8f1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c480b13-a4a0-4de7-a36d-836aa0ec39ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "512c10bb-91a2-4501-a4e9-3c16026ef7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "92d85aa6-cb11-400e-84a8-e613b68234b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8676218a-4b06-4a7d-9d43-13ca1701309e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f13572e-875b-4c5b-95df-c5adb7351d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceaf175c-2920-4718-af9b-d664f1105b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d670d19-124a-47f5-a930-2172f3867723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3ce2a3f-e405-4b29-9b9f-eb72025dc189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5220e00-d961-44a1-975f-45295538c0ff",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf25d82-e43c-4a89-a632-08a8e89961d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42891239-ae9f-44c8-8851-9e3b69153278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2512e126-a11a-4cde-9d14-40d79958ca67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "360ce903-84e3-4e4b-a1b7-28381ae2c3ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f57d38e-d6cb-4d68-a217-6ee0aa830701",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe87455-0715-487f-b19e-bfd8c6eac703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "226402ea-3314-4304-8222-bbbbb6f819ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c861c454-1ee9-45a2-abcc-bd22a7676b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "68b5fec4-bd82-440b-bc0b-5c37151d1957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87abe93b-fe14-4113-9b35-fadd6c98d732",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5999c4-8414-417f-b9e5-92b1615dd960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db73a1fd-146f-42c2-ace6-a5400a843460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1aaa46b-746b-4ca5-9ae1-58478f94a7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ad5a8c64-19ec-4c79-b428-a8f52a162d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64504ad-542c-417b-976c-a9c25eed1038",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc816fa2-429d-4dfc-9e98-5cd16e0efc6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9012aca3-8222-4afb-87b8-9f6fdeec0cb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d299c8d-a92a-4c2c-90f0-3006cf34189d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "23c6a8b0-4ed3-40bf-bb13-2f6876894d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5fb12c8-d4cc-4575-b8fa-34a5992fdc36",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9254bfcb-671f-4e9b-bf8c-de0a145a5695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77b134af-cd55-4527-a27d-08817ca5011a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd67fa90-0687-4aac-84e2-67c852102bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "97f97266-df66-432c-9bba-653b79f10abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641a5006-9717-496c-8e49-94ded33390e3",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2009b3-6b31-4fb2-8caa-db0b4f0bca02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b15c79e-1466-4aa1-8cf0-35d9aaeb6ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce01d30-42c1-4f84-b1ff-75b5b61f8b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "aaddeee9-f869-4baa-b9b6-d4aae4676dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7522b8b5-29bc-4779-905b-7e153c4f8b7e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4cf4d3e-d62b-494b-bc6b-f860afca49fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e5c37ec-42ab-4ff2-9228-1d4e805235a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b798b33f-fa5d-4043-b3ea-3ac17eafe1cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "02d6ddec-2371-4fce-a73d-1c7b600b5272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "708e6ba0-6bb2-4b4d-8b00-d912af401d49",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52451e04-35e5-4f72-84e0-55e433d1cbc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "879cbf8f-14c7-4720-8ce1-28e7c29b375c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85219f8f-762d-406a-94fd-7529de2808f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "74d67b19-2e7e-4fa7-9820-d6ec657af280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7f5041-7e8c-4db5-91d0-53e2737325c7",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c12aece-1967-4c23-bda4-3dd16cad06cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5141bc32-2568-49a9-b7f4-b89b6576f4aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ca5972-dcde-41ca-a9db-687eb2d82fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "6a0c1dff-53b4-435b-b378-acb995206568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e5dccc-e3ff-46fc-a889-08b37a65d5c2",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2aec85-57ab-406b-95f6-1b9b9f15bee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff6ac4f4-846c-4932-be03-19e485af7042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43fa442-d54e-4668-a4fa-4ee7387a1c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d14eb780-3a45-43be-ae41-4ea9ae6d6954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37eb17c-67cc-4c99-819b-0e8b9b6bddd9",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa432d5-a596-4e43-a092-7078e8d335ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a34a8af-602a-4f80-8d70-8b23ca0c56f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f07949-3ab5-4958-a615-e0b362ff7086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "323b50fd-1930-413a-9f38-76de2b52ea24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "178f4fa4-cd68-4de4-979d-da61b599b6c9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6efce5-cc75-48ae-b078-c7c821c9a149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cc61eb6-3cd2-4525-a76c-d1331f7e4930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6acc2a79-3910-43cd-94f0-f02952aba2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bd33982-e18e-416f-bf8d-6cbc37e4d97a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca90549-b760-4b9d-9290-09d4e73e5bd7",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0261f77-f5bc-48b5-8091-5c801c3b7ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc8f152f-9a7d-4cc3-81f8-80dd82c9bf73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16da23de-5659-4429-bee2-da5dad7bbada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e180ee0-de65-4cae-a210-00fbf4b5fcba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa843585-c9e9-45ef-995a-a84b7d8171af",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e721388-eeec-4289-8eac-081d5dd79d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d67ffd2-31d9-4a30-8796-f119dfb9b853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bdbddd5-b087-4e38-bf6b-2df32c69113d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c926d1d-2e2f-4161-9462-5c60c80238e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1c7c7a-7eff-4239-bbff-c77e7dfc755b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1811fddf-9710-4a57-8f6f-1bd985f78a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ee67c4d-99b1-4183-a163-2d4994e3837b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4314a2-70c3-44f4-a0d7-d49d551b90e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "38370f7a-2985-4270-bf73-42e6300505a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad00fb0-872b-4358-9c69-7dc96d74a78a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "471f8bd0-151a-49bc-911a-c5c1b0098d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b6c9ffc-3c51-4b5a-a70f-95736a14ac75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734b472d-de42-4838-b186-243d3f31c4f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3fba21f0-b47f-4517-99e7-114b2782fb43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b7d3f8-d1c7-4c7c-8a8d-0a84d7e04aa6",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "935e7f47-29c0-4783-b450-4b0e7986d3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ef2e88e-c473-424e-bda4-67b7cf73696c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50734a6-8ad9-424b-a3cf-18f3882b9245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7e7b32f8-f226-4e20-95be-c7c63d5c8fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b0fd4e5-a10c-49a8-adce-172e98aff467",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9dfd3fc-4ed1-45e3-9960-bf8932d2a7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9642106d-71c5-456b-9d06-27445032f4ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2554dd46-56e3-4ecc-83ac-021c81aefe86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a59dbd7-99d9-4f87-a42c-c3025e8d8c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca8162f-3bc9-43a9-b04a-2478eaab54cc",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf892a7-0c0f-459c-938c-e29a59d15d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea6dd00f-85af-4489-87ea-87f7092704a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35c1e30-6027-4db3-b228-19a5069730a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "72795125-1eb5-4796-b388-0af22e23705e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24448b5f-c26c-4cb7-94fe-9b047c066c00",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa67095-72db-490e-bb5d-94a5bf6f6e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "938dc24f-4341-42ba-9042-2fa14ce2a5a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a96dc1-3c0b-4ad5-a189-0b4a3bf51517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "36f83c99-1135-4796-b043-f5364b3660f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f33f9e47-8f4d-441a-a730-a091bf1caa37",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb2fb704-89a9-4ab5-a83b-f02c981f07ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ead98187-4b54-4fb6-b03e-f70440853263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2cb7921-4024-4d3b-8525-bc3a7490e8ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c7e6bf8-0bf5-473e-890b-9330acb41fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d292dec-6187-4b20-add3-ef58eac40dd2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "061a9f8a-bf6b-4df4-8996-3d851c7b383f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf97bf5d-4d66-4bad-8f48-6ab9dcc8089f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68923017-6234-4b34-8525-c6f68ba2243c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1c251bc-864e-4864-9ebb-f25c239f183d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2f13a6-8a61-44ff-9115-7831623b3285",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c4a217-a4ed-404e-92c5-0e253e12c5de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d2b1e4-568b-4f94-a2db-419ddf087141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d52272d3-e582-4185-a6eb-968ebbb52e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5750366e-ac1f-47ef-9115-089b07ddfd6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec77e21f-e702-4028-b5de-e46f8352d92c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ddbfe5-3a04-45fb-a09e-bab958c4148b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51bdcace-fb13-4069-acdd-397aac0f5357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8096537-b5c9-4bbc-b83e-3bf3b5bd3662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea0dac90-8370-4c4e-bb2e-19962ec1fbdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55259338-7648-4446-99b0-f75be2259ab6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73de5983-17e5-4fc4-b7e7-61e00b311982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56ff9116-76f5-4178-8493-cceda1295163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1dfc74f-05d1-4747-a3e2-60dafdd12644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "26c8d393-e7d5-48c2-9439-940f483611b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab27525-2c2a-4f35-b368-60902aae9ebe",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "825d821a-e468-4ae8-b262-d5cd8dde8e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76988dbf-9970-4a12-8e44-0ec79b892c8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be5829d1-ac52-4f33-a284-35ef552a3889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1829515-d7e4-4aa1-8ccd-790ef92ab022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfdde80c-ab2e-45e7-9743-143e181beaf4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2396cca6-197e-4733-8926-ccc93cb1bb6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f72c57fa-2f3d-440a-ae6e-bc97ee4f9fa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bedbde8c-4d22-4e8a-8742-b730a67e2775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "00416ace-3afb-4cdb-87b7-89a9808571a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42391492-408d-49e1-ae8e-b7ee56718b14",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d36778-ac00-4ed4-9710-70539aeaf873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c214bda1-0d9c-4c7c-80c7-88fe5052276f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13dfb2ff-7e07-4e79-84d2-6c8d9bec096a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff1707ea-008d-4986-a2c2-991267ec19e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1772ea48-d8a0-49de-81da-616dc91d4ac8",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1676bb1a-5629-4336-8ed6-5b740cc6447a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b0b1a40-2aed-44ce-a633-0b33b18eec8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5bd7920-1855-4d24-8f2c-ce1fdf428d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4276b03c-a89e-4193-9daf-bad5c86d41ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe46ce8-3987-4b3f-ab9f-17312a5f7038",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc00458-45f2-47e8-908c-9724ae331dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eac200e1-6510-46ee-987e-66c951270ba4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca8970c-1124-4b78-ac7e-8a22c2672513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d5a194a-2a4c-4182-a23b-b939e2f17e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7197220-4a1d-41db-99ea-97c6b176a9ef",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f145f4eb-22d3-438e-bdea-47df01764e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "758c461b-202c-4a13-af6a-3066ee9bbc3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca01af1d-ee25-4b65-84e3-340412e9821d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6eba5c9-84aa-4112-9580-3aa88899e57f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac228c57-76bc-4d01-a27e-2050e27c673a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d87436d5-ea02-4f77-909d-4e1cf40f5722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff73d21b-d83e-4a65-b80a-6ac46cd80f69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86fa2765-c590-4141-803a-a2e7f00d7a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "564ae992-bfaa-498b-b4d0-95a77f8183c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c18d6c0d-d06b-472d-8180-236f5a06416c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8888cff5-673b-4a2d-b090-9d814ce95fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1585b26e-a5c7-4e55-a567-16e0e849b38f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec7a7bf-e78b-4983-9cb4-ce24b68648f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8be48435-6245-4381-83bb-fae93d075fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93cb23e-0dd7-4827-a24b-03778cddfeb0",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc9dc0ee-88ce-4e42-85df-491ff0a9f848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03e7c642-3520-4021-9afa-48711fe51f6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d6995c-6192-42c5-a70d-bfc504f0f1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5a2e0934-adcb-41b4-9982-934cfb7abb1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c33da3-45c9-481f-991b-840372b2442d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9541b2b-56e8-4d7a-94c2-d07f42ac628f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb1eb696-43f8-4e3d-abf8-b1a1baf90c60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aabee1c3-819d-4ed3-8795-1faa7b3e054a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef5cf819-1319-4787-bd15-cbe540f5180e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "938792e1-3554-48e6-bbce-e6544d5909d7",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c66279-12bd-45c3-b151-ccbb039af310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd5c0256-607d-4a6a-9477-4f8e33ce40e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54358065-245c-4f95-a843-97f1fcc42044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cf50400-00ca-4447-b464-300d3c9dd724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61eb2941-8707-4e9d-9178-54aa98aaaa69",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "969b9f64-c6f0-4d69-be41-326157844e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83b91762-5e8a-4eb1-bafc-b86d20fec043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791bdc56-bbf7-49f7-bea2-d251a1ab3d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "22a26a73-a820-4e62-ab40-99fbb0528baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90109c8a-ac4b-49b0-8157-8362dcb4ee11",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3610c2d1-ee6e-4824-8b2d-694b04651159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ad64ea5-8428-4729-b2d5-85d8b594925a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81f17d2-4ee4-4da3-88db-fb76de78a566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "31149210-94ce-4b37-80b9-39803ca7d151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032e32cc-4277-48ad-8a71-19ba49793580",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e53386b-3038-4780-b13c-ddb72f91e4ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2409189d-1653-4bd3-99db-debfe975823e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff28f0b-0853-4c99-8542-fd687575f307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d83c2f8-2840-44d6-9d1d-3a34b8e6ab6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a15dac-d2fe-41dd-ade6-c8c61e651f5b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed19f21-7167-4763-8b0f-09eb2e628ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "741f8b4b-3a8c-49ec-866f-9f3d5f3b932d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d16f2fc6-1bdb-49f4-8ecc-81471643384b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2caf9295-1b21-49f5-9261-763eab9a7e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa11d46-e30b-43ff-b38a-42bb6fdcb43a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d24255a-e791-4538-8e5f-e05dc1b351d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cec9ffb-149a-477e-a883-c6a664a7448b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de9b465-3639-4942-b503-55f8f7f8d265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "40b5b044-610c-4e87-8376-c8fcfe8af253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6269073-4ee1-477a-9ef2-39255eb31d61",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30cef04-d884-48df-8a88-21db9f7f9101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "743016bf-917a-4403-986a-74cbd1c8b5a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b462878-907b-4af7-99da-5b356c658f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed198d00-f223-4a96-b8f3-39fd2ad30c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d9eea86-84df-4475-a380-ea337f4cb07c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3117e687-8a43-4aca-b456-922bf189e839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f9e41bc-cf5e-40a1-85e9-c9806ee593ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abca7d6a-a032-4093-9684-8f38136d4844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "168ae572-4b01-4c39-bd87-e97a1445b1ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa8f1a2-e19e-4680-84df-4ee20eb066a6",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5115f5af-f160-441e-9c21-7f28cdb9b4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e1772bb-5f20-439a-843b-910a5fa00f13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b26bff74-dd60-40e2-b6c1-d8a477a0adc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b3cb5b1-c11d-451b-b448-5d2afef144eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc901e86-3dc1-4206-9a92-dcab4574c423",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c56bc9d1-5681-4652-9015-1ba8159e1929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "792bba89-442d-4aeb-944c-8575e4de0be3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85d70a4-cf34-4196-a8f3-da215a399ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee1986bf-cccf-4378-91e5-deae2dea5c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2859e5c-3981-4053-8d58-896303927670",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "871c2f29-48a7-4765-8b6b-77c9856821ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46dd70f8-2a51-4f7f-adcd-a3ef3380cda0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c232217-703b-4af6-b280-bae80183e9f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1e4a27c-9e56-4d51-bd62-d6c4a49e58b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a03aa0-2e73-4011-8167-c18a9c85c8be",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f8d300-eded-48ec-a360-e9d498ed04ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1e82b53-6a33-4c9d-9816-9305ce6dae03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ffad6ee-2fb1-4307-9353-93dd17bcdfeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b8ed7544-ccc9-4f94-add3-1c166cff9fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93913685-eb7e-45e2-a559-b516d00d629c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a3786b4-aeeb-4dfd-b7cd-1caee7f184ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1ea05bf-fe4d-413b-b2cd-58b318f27fbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33fe02f3-969d-4799-b425-4b5fdea21b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3dee8f9-198a-4e78-bf32-b1b4bcf596cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182c681f-b46e-40f1-a48f-71742ff28714",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8680cac8-0466-44e1-8c1c-66db0ee56677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbe81bde-8c72-4af0-b386-29da8917c4c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51bf8ab2-b74e-490b-99a5-80ae2ac2ab7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca0a292d-e79c-4f23-8deb-2be75ac2b6de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c951b7-6bcb-4a2e-95f7-2d0814cfe072",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b0a62d-be48-4b8b-93f5-8f8b7bac918f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd7befbb-70eb-4107-90b2-21d5c6d8015b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632e2d27-723b-4bc2-af6e-4d4e57559a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "feccc549-0053-477f-ad2f-c5c102e695a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5532321-418f-431a-8faa-3c32621ade9a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7d0263-cd0e-4892-af73-4076fecc1c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cbd25ac-7d9b-433b-9f5d-7a5993fffee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e07cf6a-c924-460f-ab84-44d849f08add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dcbc9a4-2b54-40ec-ab0e-592521054ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "969034da-892e-4717-9da5-b85b1fac4c6d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8076dd-0d0b-4e91-92ff-d77306c50556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53109be0-35e9-4f84-a933-0221ee097051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505cc255-7e40-4afd-9ab9-0788f5cf22b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3c7556ed-7957-4ff7-b7a7-9e7332760c85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a40e5dd2-6a00-471e-9f5c-23e7adf91d1e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd271b4-fd94-4321-b039-66dae34b1999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b3befd9-4e0a-4641-a8ce-10338d0bac50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a5311e-308c-4a32-9f48-2ec325811f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e07a5f5-ce16-46be-a78b-697afa4ebaa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d15ba7-ce73-4672-9378-6a50ca204926",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ff94d6-0673-43c6-b150-7099427c35bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05d9c0ff-94cc-4eef-a22d-c62a5f4c546d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1656af22-ab37-458e-b244-12a6d4673ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c053a55-306c-47b5-bc72-8f3ffbf83c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8113fe8-35ea-40a1-b203-d68219a3238d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b46d426-affd-44af-935c-4e6340b84998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "803276d8-8a34-40e1-9bdf-ac660f8b0184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c075ec7-be18-4036-a3e6-0f0753f75440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9947a1c6-7eab-4677-8594-51f621c4e67a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b4ba1d-92a3-43fa-b6bc-75d312528963",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57821632-2828-48da-a3d5-87a79e87b4a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf4b7148-2d62-4e73-993f-cf38cb521682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73be0f25-21cf-49ee-b1a1-3a5e91338ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b5ca0a0-17c6-4fda-bb93-742adf54075c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6537ba0-4d32-4ddd-93dc-0c6122c4faec",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ecdb8f-804b-4eb7-a446-62f95efcafd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7d6e195-b303-4da8-9bbf-fa80930d8cda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12fc3e49-2b1f-4192-b4db-0a67b527fd9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c2037d0-9bd3-4f31-8c3d-a2dede569a88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1b7f9a-d259-4fb4-bc6f-7e88df5e7199",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc2ebe9-4806-4d3d-bc93-90f68a0be29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d451fde1-72c2-40ae-9f48-2949429636a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a7ea265-1774-4616-aaaf-9eb32dbb5e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab6bc4ae-f7d1-4121-a31e-8015113db208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898ffa1f-3258-4b65-b94f-0764c624c39a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30b37d2-33a9-4e72-b8a8-a4aab62c987a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "de6e46dd-8e6d-4339-a488-a7d63773c2b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4655824-499c-4066-92ce-bc4f774b103e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e39d70a-8110-48cc-998b-a9be465ac9b5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1f2cfec9-9c58-465e-ba5c-2c6e4033c54d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "88c11eae-894f-49f2-afe1-847d526b2663",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c84f92-0f36-48d0-8f7a-0f9cec8ca420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eca6f941-7011-400e-8703-50c34364d6f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0236c9-aadd-4c17-b6aa-895ccbd44ed0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ed38260-88c2-42cb-a10f-c472aaea2d8e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7fdffcf4-3e23-472d-ba7a-85b10611e93f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "220a402e-5498-4eae-8779-3402dbc88a20"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3fa62980-69fc-4608-836e-e545c7ee84cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0809bf1f-3c75-4489-8836-279bd2933006"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4b9302b6-7bc2-44cc-9bdb-937da6262312",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "23e32611-77c2-4d60-a60b-9c5a434ab7d7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f1b386fc-46db-49a9-9fdc-d3f243433d56",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "78e49c37-01e6-4eda-ba18-003968f1f95d"
                }
              }
            ]
          },
          {
            "id": "79063a7b-36e9-4c85-afcf-5a768b632432",
            "name": "Positive Testing",
            "item": [
              {
                "id": "45797edc-f3fc-47dc-b421-ee61d1220ee9",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a1b4485-3e4d-477d-8697-ffb686a932f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "de539192-73f1-4866-9d7f-61ee3ff4137d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a8b3344-cf2e-4fba-b356-d4d5bc4e8366",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "386de957-7d68-4b9a-9afd-c8bd2008d8bb"
                    }
                  }
                ]
              },
              {
                "id": "a7badb72-ea43-496e-bd2f-b3729673a8dc",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5b785a3-57bf-44d5-a2eb-eb5ebbb56c9a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ed7b2e51-7272-4664-8902-5056032f1c44"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15eb340a-3e28-40e4-832f-fc77234c24a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f933b511-a2a0-406e-a5d4-144fff17eb03"
                    }
                  }
                ]
              },
              {
                "id": "b280a756-6711-44be-b460-93c57ea57134",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d2c123e-649b-4291-94c2-bc8ad7b4e8eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b3d3f827-c55d-4dfc-80c6-3b44dd6f6a40"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73575bdf-ccba-499d-a5f8-e02947b41846",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "628d46b3-b552-40e6-a237-290d78edcee5"
                    }
                  }
                ]
              },
              {
                "id": "2863c569-5b69-49c5-b5a6-64dd51c40059",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "98c25625-44fc-434d-9d25-e87b7ceb8f42",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e88e4de7-ced3-4dbd-adb7-716da75354a5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dce821bc-fd32-45b3-81f7-2bdd5c4a534f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "cb06ab06-60f3-452e-b184-f51f294b79bd"
                    }
                  }
                ]
              },
              {
                "id": "f745cdd5-e38c-4faf-bb2d-33fa24aa1662",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f64f1189-919b-4f8f-b733-22954f022e8e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9f34f875-56a3-420a-a9c6-343b3961e53a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec044a4c-9441-4185-867f-f567abdc93d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8b5e9378-16e9-455f-b4f9-172b3e734875"
                    }
                  }
                ]
              },
              {
                "id": "47514de7-b76e-44a4-a786-33b8f7a42c17",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3707ba2f-ca40-4604-bf45-d2f0a7537f81",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "666c35e3-f715-4655-a082-91606b44c88f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b3e3d34-65ec-4a97-996c-6560654ecee7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "01867fe2-b35c-4152-bc34-8d5d39acfbed"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "12be305d-929a-405c-bd88-d98783fc0c33",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d2e8eab4-d518-4451-aa7d-210c3f2c29dc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "375f978a-8d98-462f-b232-883ae69eb9f6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "42d565cb-3eeb-4d83-805a-8bf23652f193"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2edf99d3-37f1-4c2e-abef-79cba27c8ef6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "fd1fa2d6-83cc-4b02-9e7f-3dc1f132733e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d4837d75-ac4d-4800-b1ca-bdbef606eef9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2b20353d-a13f-4f22-b134-5f72dcdecc82"
            }
          }
        ]
      },
      {
        "id": "1dfe7f78-af62-4963-a395-9d977aad5450",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "48077512-7764-4f00-a314-387351acf423",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7e262d49-0bad-4e0e-87b2-e9aee84fba95",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3b3e3160-b7d1-4bec-9bc0-1d48eda449fa",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12321f4-5316-4cea-ba50-44f7ec73e97d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c74d97c9-5209-4d71-bf5d-ca180ce68f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2222be98-243b-42e3-8362-848347402798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "39614e58-2424-4f88-9a16-2dcca34e4fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74bbc2ca-713e-4c8f-9da7-7d988fe05d5e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25de6dd1-c4e6-45a8-a1b5-099e5e109fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e015656a-d005-459c-82ff-976f89acf10c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d80bab-2788-406b-a1d7-cd5c4076df87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d22e204e-4768-4fd3-809e-334340e59a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d50c6c-9565-4f7d-b7ad-b82995827d14",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00fbb67-e293-4aa7-a60f-ed44758e826a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5822cad0-7a88-4f21-80d5-08700190b617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1b001a-e35f-427c-bfbe-2fc8777464da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcf19ca6-4ef5-41e6-bd94-e02b4bbab201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c943b629-47b3-4cad-971a-4c0a5aad4094",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60dfde2-ee14-4c97-956c-4b2bc2091d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "393c6483-45a3-4ebc-832d-b3f267cb7259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "793f7cc6-0219-4837-99c1-a78c96075580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d08a034b-745a-4ab6-a4ad-0f2d648a5932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac579cf-e1de-4b00-b465-720ea4fb0ea8",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e9201e-2c04-4519-8d80-da1026cee68b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51ca62ad-eb56-472d-85e2-f9b514d97a97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643aae39-175a-4911-9d36-7098e210236a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e82fab43-b5d4-4270-9397-c126363ad090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8bc3290-e562-4761-8c96-1e2867361c9e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6596c1ff-c0d3-4b98-9779-9caf32d7aaf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "270f5039-6b93-40b1-b087-240fd670939d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08dca2e2-ec6f-489b-942d-44db2c760563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "43a67adf-6caa-4acd-9870-256b76c31436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a1b954-b0a6-44a1-846f-04fd7d8fdb18",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc949225-a0b6-4605-a23d-03f748cc38cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41618bfd-0272-495a-9ac0-07455ec15654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98c4c72-4060-475b-8ffd-08902083313c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1198b049-2945-4396-82e7-47bb7f43014c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "171b4376-7dd5-401c-9435-0b5e932d81cb",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ebcc6c0-06a8-4ca0-890a-bff6669bbbf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60b23cc4-da72-4997-bca3-a879ec3dd50c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea912e3c-6385-4508-9d04-63731ae0a63e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b90cab97-e8ae-4852-b8c9-5c4e94d691fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476f10b4-5ff7-41df-b410-3dbd43595485",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd23b2f2-8fbd-4d95-99f8-429bdb9afff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aa352c0-d63b-4375-acc4-486caeadc929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3211f8a1-b3f6-49e8-8bbe-bf3bc3e74427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f76a9878-0ce5-4749-bf59-f583e70a4a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f4a545f-78d0-491a-96c9-02ef436dabac",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa785d4-c534-4d1f-b6f6-943e152da24b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46aaa220-6e4f-49d4-8101-0ce102fe3952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ed6d2b-8cab-4a4c-b770-08ba29fba38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1028885d-d4c7-457c-b25c-71d2893de06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5aa2ca-9597-4b06-8811-7968c0c3aca7",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea44f18a-0970-4c78-8be0-7318d763f574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fec6615b-8887-4294-9968-b6e9c4166065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c0c359-fa65-4e5e-9bb7-188e7d4bb672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "19571b58-e259-4563-923a-665b5e8ccb57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c26ddf-1886-40d2-a371-1c7cca25d227",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e0302d-02c4-4b84-8c5e-cdda0a1fd12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3805ddd-627d-4a18-8039-d2f7a9faa0aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1096bf-d2cd-40a3-9095-51e8b21648ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6a38b4c8-940f-42de-be89-713ca237fac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7953af1-26b4-4980-9ff0-3cf33b2bd5e8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3864b7c2-e731-4a77-bf09-304d92e00f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e0f9e31-a376-47a5-84bb-4f67af6376bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6035cbf-2f6c-46af-806c-6175489ca347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf47f790-0d74-4cab-ad62-4bcc3a6d07c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8ed915-ba26-49f4-9bf1-562424151346",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52734102-8597-4442-9339-4d519bc19590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef47b764-6c3e-4fcc-b163-f3721b0f29e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6493f27-c746-43e8-9aca-06689fd0f82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "47c1734f-60f2-42e8-8cd2-bd12d01e0a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec37b3c-a825-4222-8802-aeb451775dca",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fecd6e07-392c-408f-af7a-2f0d53f6ed97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c88c394-4464-4237-987f-04fd9339c3d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0740acba-f4c8-426a-aa63-4f18a89fc352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ae3c055-6ac0-4b40-8aba-5b6822c8025a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6804ae2-1a53-4645-b1f3-7207749598b4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b887c3b4-48e0-4481-ae33-de421c3556e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b45d214d-05b5-4938-9933-461f6a52a22e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56852d1d-305e-45de-9c22-3221bc5c0b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "79c65a84-3fc1-48e1-afea-c871c2976680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da088b0-e385-4d20-b3e9-2b659cc0b609",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e2d4949-165a-4c51-9655-fbc6cbed57dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4281d90-5b49-4172-8a89-39a78cee49f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d172c69-2182-480b-ad6a-271970710b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4f51a46-8a68-4945-b8af-7db793066849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa09cb0f-af36-44fd-a39b-83085f380797",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3dded0b-aa7b-4a64-9e84-98e9ff016bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45a457b7-e71d-44de-b5b6-a41cfbfd9432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c6c95db-1d33-48ea-b861-50ec5e7c97a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e9e6ccc-5239-402d-bda2-67575287ae0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8bb1e3-66bb-48a3-906a-50cc3fae214a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1492a1c-1b84-4749-ab36-6534a2e0ace3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80dacb34-c59c-42d6-9a2b-9eb7ae2d438c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a4575ed-2bf5-463e-8f83-777576240b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6f84ac5-9de8-43fc-b27e-fb28d1663262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6603d5b2-f15c-4ce2-9f3c-72cb9c36e66a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "773d9506-3c9e-4bdc-9c61-dd4fc8f0bc4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "081fc662-6181-4c4e-981e-4744475b5a5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9faaf2f-92d7-48fa-b5e3-958570ba8118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1d2451f-4eea-4afc-afb8-f0465980299c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e124d4-57fb-4a60-80f7-5b627ae56981",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42565f8-3ce5-4c64-a0d4-a19670db1bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b78d5fe-43df-481a-9d32-2edf28b0d578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd847cef-af50-4e2a-b235-dc37d0209dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bde82c07-8169-4c65-a079-d4ec36867441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d5cac3-8440-4d11-b22d-6170de7bfd4d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3497b7a2-3169-4b69-9bcb-c45dce7be47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba753d2b-2c79-4d27-a3af-4c24e31bbea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3020b81-566e-46f2-a4bd-ded1248245c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a3d3e6c-14ba-464d-a4ae-b63fe617ae55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcaacefd-1758-4dee-8f82-070390cae0e9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9420a1e5-1c14-4cf2-8158-560152d613e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68baf014-3428-443e-8f01-44a59579083c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4749ab77-d6a2-493e-b528-270cd996e7e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "337cbf6e-3646-4846-9899-b508f1b9a182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432677fc-a9ea-4c29-af79-33009802b43a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45f1fdd-38f8-4326-bb40-2c9ade926424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14bf3ba4-8bfb-42fc-806b-1b0425647f5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d6a0524-0597-475e-95f7-29c844c872f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb028d0d-f584-454a-8526-43ab39bfaa56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6708300-e4f8-4d86-89d3-5bc06ebed093",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c304b049-8f8b-4442-b1a0-c958752087fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "472b54e6-e8f5-49bc-b556-c8724385653f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23eeae0d-8862-4e59-8b75-4749fcc96694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc6d4504-e187-4917-ab38-67935c23f53a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fcaccbb-ec26-497d-bc4d-fdfdc553bb55",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1f6775-d254-4615-80c8-ba2489222f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7760361-90a1-46b3-a067-b03b5827cdc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc1e751-c5f9-47ed-bc5a-ead346948944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14d3e0bf-a545-4869-a798-d13f761bce16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e755d456-73c6-4dcf-baeb-fe372309ac81",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8478cac-9a57-45e5-b6a1-fbe0cd189ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a14dcb0-431f-4aca-9b72-7a14df4c1971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a0a231-8a30-4a5a-9838-838cd79d4607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d679d950-4f95-43c4-98ce-a4e4aa25b6dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6bb2363-8209-4121-9d00-59d7af6616a0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef7fc59-780f-4ac3-83c5-b3805bc5ab10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33a68989-dd55-4830-9443-39b6406f4951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2299576-4d50-49e0-9a93-7f404f325f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a410c00-828d-4e7a-a817-43a7d2db6784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "befb8098-af0e-48f9-9605-8750091a4a61",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "867fa30b-0b4d-43a1-8786-d9b7d840ec87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b25386-2eb1-4409-839e-bf1f15424a73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe281f4-1f48-4524-97a4-a0ea404e5161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "171f94b9-f130-40be-ac28-8a4515130149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ccb072-7c6d-46ea-a8db-9c1848c9efa3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74fcb75d-7611-4612-90c7-0a9e9ee3316f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33ba33ab-9d22-4cb4-9441-5a10ef955435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35d4985-6bc6-4fbe-b5e7-40254db26698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef92ab1a-30a7-4772-bda5-1744b49cc68e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b502022c-d153-45ef-a33c-d551e861d075",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d1c7c5-ffc8-46a8-a556-75fe3ba38477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee177c2-7bde-4759-9bbc-c0976d37d8e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09cac371-b259-4236-9ded-54aa1ee84730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf4e00c6-1aba-4ab3-9cd2-7d0f54c32244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e6826e-4931-43ae-9ac3-a21f4e092806",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d81975b-37ce-40f9-8df3-c11434bc4fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98c9dde4-aca1-490b-8f60-8e43e35c036e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7e5482-0c44-4d09-8d6e-f1d3daa87a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f09c1835-9e91-41d0-beb4-c8e01c9188a9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a19dd065-e97f-44ac-844d-3a32dcdfa760",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "398f244d-81f1-472b-8ff8-955526b61c65",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "488f6469-f520-4812-b397-f8051c4ad19b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5d3990eb-3efc-418a-8028-d161caf0d7c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9722e814-7b1b-4dbd-9eea-0be8a1b6acb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d49ae83e-6c44-4d7d-8802-94862d14cc2b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c5c1bb2-a8d2-4d56-824f-8ac7ca9df832",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20d53229-af18-4adc-a279-90d472e6b9ba"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "78d577f9-06a9-4154-8062-65a928c36b85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f8a602f-9e59-4533-b9f4-0990cf81bdfa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "408701d7-2dbc-48e9-940e-47bda0dba51b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7379bae1-329f-4e35-980f-00303cde44c1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c4f3b803-ee08-4521-9494-a91e15701cf4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "15efca91-0f03-446c-bca5-b79eed8164ed"
            }
          }
        ]
      },
      {
        "id": "6ed2a7ea-5e67-4bb1-954d-6f78c81c610b",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "c27851a6-20f9-4f65-afb1-580b56898019",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3ab42133-f0f6-4900-9f14-9c6074215b10",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2df0e088-632f-45dd-916c-10b60b6b8a38",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8edbc24-8ae7-42a8-85f8-fc9a1525ec14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fd6eebb-9eea-4f67-920c-b132f8fd9155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86114b1d-a43a-4a2a-8db1-aa26571b8781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "202de913-048d-4649-97c4-077aff0d092d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72de7546-cc58-48d7-9a7b-4d8fcc751139",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa284480-9e5d-4633-b012-af6f82a5cb1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f883a57-9a92-410f-80f5-5974749897b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e6d719-14c9-4f4e-b61b-0f1cd7002870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc37716c-e25d-4246-a2c7-cb0a7d170d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28495b0a-9720-43f0-9ffe-452f2afdaea7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "129608f0-46b7-4ebf-8b65-0f2c24231659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e56163d6-4da6-4837-9195-87bc883ad1c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16891246-f5a9-4d42-b477-3987ece2b4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "22bbb8ce-9967-48bf-9b0a-6742f9a8d717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dde5f57-7be6-47ed-95d2-9e792d78e900",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc17fde-1b53-4b96-8fad-92e86c8a0063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1377b1e2-e86d-42be-b95b-2b5b5a0a8ee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe536fd4-0ac1-4aa1-8ba8-36f3a226322a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4dd2640-fb22-40c3-acbe-071416f8329b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c5fb7b3-8179-482b-a0aa-e82410a6ab5f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac91342-fb29-4778-bed5-5ee5c030fd65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea49cc2a-55be-44b4-bc4b-9abf4dbdb9dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0047794-b280-4514-9fc3-bc1fb9804f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a50fc551-cdbb-49ca-92ea-3a24a46bb0d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801dd27f-19b5-42af-a04d-866b5f661df5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b92a61-4c2c-4add-b0ba-babd9b488e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54bd412b-3f27-4440-a55c-9f9048422078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d840448-8bb7-400d-bf18-1a83c7b396bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba84365-84e8-4347-9627-262eeff1f976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c638e4-3674-4e01-a00d-fb597477c8f9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a87728b-bd7f-47f7-b6f6-c8dcac2eb854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "864134c1-1054-4a5d-91f6-94c88fee5063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14118a4f-922c-4827-af47-d5fa4f230274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ebbfc0e-e427-49b5-bdd7-f5d61b7fbef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f1fdd5-15f7-4e26-a55a-62e87beafc48",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6367d0-525d-4097-aee9-b71b74319a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a49e936-4858-4c3a-8337-fb74888c0ede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04587ce-7006-4a56-aeef-cb2dc079fb08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ada443a-0e06-467a-8426-7a1a094cb89e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f2275d9-775a-4955-99e3-507e8f0c0657",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "728bcd7c-dd7e-4aa0-b133-24b8e80b767b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aaa2c1b-92ab-4402-8da1-772b596adb77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f800872b-acad-4666-93bd-76ab506f1549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5094a39a-f027-4c1e-8ff4-2531ea33d684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0abde88a-2533-4ca6-8066-377d37169322",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f0ed91-4a6d-42c4-9406-5951cbac603b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "263ef1e2-cb97-4161-9656-253b314b2f83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff57f22c-5056-4d06-bb92-d0ead5a21848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b8b1512-25db-4c19-9806-abe7e60674f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd4d151-ee48-44aa-a815-7dc6598da698",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5619b0d8-6ec3-4ebd-b62b-a7baf9854c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8a01e04-3870-48d9-b9af-5634bf6d0b83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa76b4ba-c4c5-4e0b-b8af-081692b87e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9868e948-47f0-452b-9eda-789ef28feed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cbc4c0a-27e9-4129-ae96-40de0b0cf37d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a7d140-73e2-4c8f-aab2-74ef98d529bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed5a42fb-db3b-4da5-aed3-01afa6e0abfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6751f98-7208-4b80-9fc0-d09c47028e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b1f5b88b-bc39-454b-9d2e-c1bd93466623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "903fa8f6-9d46-4370-825e-bd6fb99f5bbb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb11699-5bbb-4edb-87f2-9b25d9337b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21867594-3787-4e7e-b82d-61020498f759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c20171-160e-4bf3-8ff2-14db8d866890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7add856d-9edf-466b-9535-f195ab70007f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f46696-a283-478b-b90a-75a502eb043c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e0b9c5-0f21-4ac6-9760-bc42a094aa7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a97b3619-4ea3-40f5-a98b-c41c779cd959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "518f5930-2f5b-4747-aa4f-3aa4fe76c737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b0de45e-b5cb-4c63-bcaf-44e67586fc07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc784ac6-561e-4bd8-a531-b9aba804e497",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc26324-c635-474a-aaa4-d8332701defd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "876de29e-5cf5-4272-b95d-f4b26624913a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78fbe0ca-0ec6-4930-8961-d5a3fdcba014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac742fa0-a962-451d-b9d8-2fd4da5a3a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9331a5d-416e-4eb5-9121-da1fae71feed",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe971863-2983-45f2-b7eb-1ea749f02de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6472713-e98b-465a-bcb0-1f97c27cd133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9f9a49-12c7-445a-be2f-04a4d679ea67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c26cb376-04ed-4621-8f7f-f01c50f7b9c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "959d3a18-cf9e-4dd1-b0f2-9b0e4840394c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be07ec2-29bc-408e-91a6-4e94f63f43ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03a4698f-d505-47fa-93ae-40d96d1f51da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3bb513d-28ad-4a83-be68-771f5bd920fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b26a8f3e-fcd1-470b-a3b8-150b731d0fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab39de7-74d6-4380-810b-5ffc903407ce",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efacb75b-1734-4c6f-a058-9ae1f1ec0dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b9d55f3-c954-4aa0-8420-3776524fbc88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e44e01-d9d1-49b7-b21a-159afc4001be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a0d893c-e50f-4383-9a13-1a6fdb28f61c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f5e839-374e-46b0-bd24-bdc40ccc6b5f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37cd7bac-a29a-4c82-8d52-10908689ef68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07cc0a66-dd3f-4749-b432-b82777f97e49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5b8b2c-ec92-4c8c-899b-f31c9188b3ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "534218c5-79c4-45ae-8862-c91a7510658a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "019d0a71-4c51-44c0-be79-4ea489e4655a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32cc3276-e850-47f2-ae0d-c887eff1e91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12fef835-1e7e-425f-850b-1db3782cc8b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b6b71c0-9dee-42ef-bd2d-daf18c548516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3afc8fd0-619a-4cf1-8692-dcf804775d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a219e3-ab3e-4096-878a-e27c353f2c2a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad425fdf-2eb5-47df-bf7e-4c0b99ad9192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2144954f-9151-442e-a86d-faf532dc2b91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6051337-2805-4a3d-a6ad-de124f7f0f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96b3c152-84bf-4082-9d9c-96aa96816be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d474468-0879-4fee-93ae-cd52abba2b7c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7d345b-3cbc-4d13-8195-7095eeb16605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d485a90-e6e9-48f7-997b-7c849b16a382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a69b938-9671-4b39-8e4b-1a08e2ebd8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae57542c-e1b4-4395-9545-c04196bb3e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cec9bf5-2f91-4e3a-843d-bd5610899e95",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a5fc0f-e0d0-44c8-a258-edb5cda81774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04f04dc9-e348-465a-8123-5806c00dedf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e467571-edc8-4792-95ee-bf3718925a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53f64fe5-5a15-4150-a301-2678bdb79dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cfb93e4-9fae-43f0-8daa-b4dcfb0c962e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d74428-fddf-415f-aa1d-7f6f9bbe0db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f28ce30f-bdd1-47b6-951d-6450b918ad72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad634eaf-129c-40d7-8773-8fc935703e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3eda1dc7-081f-4baa-8e8c-8c3e67b692e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15dff60c-d1fa-42a3-a255-d13e04e36a49",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51756799-a051-4d0a-85c5-1233e06d2dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d35ef854-3280-4194-b42a-07a205315ce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa767dc-6e8a-4a24-9a1e-6a7aa6ea18c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ee6d55f-4bd1-4eaf-9b22-da6dc7db6170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "564198d7-fb4c-4499-861e-dad023d86bca",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8126fe42-6035-4fb9-a3dc-945858defb84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3bd471b-d10b-4d18-ad93-1d42e2982246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "824929c5-a946-4927-a7d4-51a9656f1835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b996154f-9a81-44b2-bc1c-0d60d780632b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0b863f-4395-486c-9e27-411f49f6fa47",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7bf0ce1-24fe-449b-a09d-66d9f027140d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9beb5e3a-cbd1-48a1-abc6-0a314f552e9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba8f203-9a5d-435d-8ca8-c52924b7ee93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac7bd12e-40a5-4148-b836-b532a52d3ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92969ec8-64fe-4da6-8830-6821a0e82fbf",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c567ba-2d88-44f8-bf9b-8d3e0af95481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "058d5846-7b47-4915-bbf7-7b7517901a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315c0ef0-c52a-48d8-be28-fbec6d4c71ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb002ad4-cb75-4d20-a1d4-a4d7b287e5e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ed6a51-bdfc-4432-873d-f60217e70c7e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c8c55e-8446-4f63-8085-8ffa088d3850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06864d5b-02ab-4c1f-a944-9727a71b5536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d983dc66-63e6-4c4e-a16f-e2b009693472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba3de6fd-b1ad-4ccb-b99d-1d831739dca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f220f67c-afe3-4d7f-b5e9-fd1416597bb4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868267e4-3ba8-4697-bc25-d851bd835c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74361425-9144-4edb-93a3-8c3e9076be57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a08c75-114e-4456-849b-43c1cd511c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb8f13ac-6677-4b88-815a-8a9125560988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff468777-56fe-4272-bbcf-2f6c97ba010f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac73b2e0-c6fb-438b-92e7-b813763dfd3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19ed6308-9378-4727-80c6-b29a228bc671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08117383-33e8-4660-8c16-77d73b4cd7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6e73257-ba50-4903-b470-35542d209949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98eb3e26-0586-4ed8-884d-2e443955fc4b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b2f5e9-1790-42b9-9784-8f1e96fbf4cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d74c91ee-c921-4c42-80f1-2b777b782ac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c401e743-3f4d-4566-8a05-16b203432e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1697495-f32a-4582-93a2-1b2e97db60a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18197db-fec2-43db-bfba-d431e1050368",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5e1623-fe6a-4851-8e9f-32c5f8d11863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4043e3a-3b67-45d0-a7b9-16dbaa55f4f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008b4c4f-30f5-488d-a431-5012ad9b601e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14dc5880-240c-4ec2-b7a6-f78e1bda1f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3551c39-a330-445f-830b-8d50e8468d7b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4c9fd5-b177-44ce-b868-ca08815efe02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c00fafc-3bea-4ea9-85f8-c9121bfae5ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb921745-b0ea-4ae4-9f1d-75188308bd32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71f941b2-6af8-492c-ac5d-40ea6daba1da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df7f0356-c66b-4815-b26c-49ef57da54a9",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68fc5a18-0a0a-4c45-96c9-b31c1f381f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a02b9a7-1b7d-4981-a131-1ddc3b707127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15595cf6-7e58-4006-81e2-bb973b24e4d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c6e40e0-25c4-4d62-9dd8-559c831fca3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d733ec1-cb7c-448d-8616-d69e751b4673",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98c8389-8df1-489d-bc41-18563a290665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c3ffdc1-78c4-4812-8678-fc48cfbc6c40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e69a54a-cfa7-497b-8a0a-23c54f55cd43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ea51821-748c-4f27-a16f-dfda238764de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a715b75a-e40e-49fe-8643-e772138b5998",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64b6b2d-0053-49ff-a808-73a3fb7a9316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cb1dd15-56f6-48f9-8c02-b12e885bbdf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f9a6f9-0534-41d4-8a9c-301baf6895c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "538e854c-7c45-45c9-8bbd-250325017ba7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9a67d34c-c25b-4422-833e-36a90d65fe81",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "44e5dbf8-3f37-43b0-a689-38a3f9be7010",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8151761-7b54-4208-9f11-9baef9fd33e5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "58fb6232-aa71-40cf-8d05-8ad0f7e17b74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4996c9c5-50d1-4ba7-bf90-d7001e326360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "605bd1a6-7e43-4d25-91d4-8c5f61f81706"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1398f39-5886-46c7-8806-927422801d1d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1b1a9f1-d647-45e5-85ce-94fa17f11c4c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d94b06cf-ec74-4ac1-90f0-9ae4db877414",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6be05b86-740c-4f3c-a160-75aaa176d8fb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b1236426-9d9a-44df-8d32-4961dc50a835",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0323ec9e-452d-4a32-90dd-093b77237f6d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3407f76c-fa79-4bfa-bf47-3b777dc91a41",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e83aa034-1730-466c-a895-92e5c0befe17"
            }
          }
        ]
      },
      {
        "id": "ce2767bf-385d-474e-8588-37f332b8cf89",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "83a0a8e4-70a5-453b-8d19-a9eee392b502",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e9788bbc-e857-4d51-8870-2d76b3b8dea1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9ab500eb-1282-4b20-8f4b-9be52a756ac0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf830e70-5611-4f92-be2e-1c0c37c40f40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e3e41ce-0006-4510-9a76-0262f575c7a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e474a03-5df4-492b-9fc8-ecbe2ed8aa4a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "938889c1-7a6e-4adb-9a07-30d495501fba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "690d1e1e-1cc2-42db-b9d8-9a5577e92490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc91974-a2f7-4902-a1dc-d6e12442bbe5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "275124cd-d213-484f-a812-59d8b827d7b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d105fc40-b18a-4846-a151-78fd2e9352ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8802bf8-a2cb-488b-8b84-7b6012f8506b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1dbb76c-4e6b-4951-946f-9a466e86d356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "997e5a35-3eef-43d6-8991-eea0e6e1d022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca442721-d16c-402f-a0ea-eecd9ab87e3e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5c212b-0b3d-4b55-b05f-c13a47b3ee15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e763094d-1689-489b-adde-b8daf820d698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46475df-7205-4bf0-a5f6-e43d2e66998b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b9a8f2-6695-4d4c-9798-1ee819463ada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "841f5b20-2174-4426-8282-63717ecf1602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebbb8d71-1136-4ba4-abe7-43c652945e2c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1acb40d5-7f5d-48bf-a74e-db9e1ef12501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa28922b-5857-4983-bf75-e868333f80c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "828446f9-a326-4b1e-920f-a4fe909cfa84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aabda824-35e0-45b7-8ab4-250de7a8ddf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b16e62-5a79-4902-9cd3-573dac325313",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e937e2-0e9d-44e0-8471-37d0bfa584ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb9ad537-0a8d-4bb7-9d6a-0b6894c63657"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc5c11b6-f8d2-4376-bfc0-5e2b25223d6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c3fb754-afb3-456f-a461-b80c28264567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "debb634f-0fe0-40b7-8660-820c820f0239",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73fee37-0efb-4ccc-bc17-0c4362485deb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba1913d0-1302-429f-8843-b987004373aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08873fe2-b607-49c5-a0e9-e6c225d77c6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac37a546-562c-4bcf-a5d5-139937432512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32bb7786-7173-4d07-8747-5da9c0e4c2ae",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81bf0b3d-508f-4e47-8ca5-0e95c3ef5614",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b988407-1498-44e7-bd85-e0d07e1e000a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba3c40b-7d05-4ac2-aac2-425a2b354ba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9acd605c-29ce-4cc0-bc43-2482cfe6552c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a29a9db-1738-4424-bcfd-44270a2bcf56",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "113db904-dc3b-46c6-806c-9fa26bf0b32d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b203989-d60f-442e-9882-c7f38fd4bdf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9febba73-dcf8-45b3-83b8-d06bddea50e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a457ab80-2a0e-4c06-b9f7-82b2629ba322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504a7270-5a2a-4bd0-b846-bb9f12efa387",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc4c28fa-cc0a-49f2-ab4e-cd5405b638ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ded0879-f1ec-41a8-bfdd-5c767395a69a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e492a661-ff48-4c0d-84f2-054a61f052b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb770bb3-2a61-4d16-bc7d-919064fc7f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d041a5-4f27-480d-a36d-48591291b010",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "766c5204-df41-4881-abef-89b93d6758da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76b2a763-3eba-47c6-a9e6-57b050ad1ff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35df9dd-d89e-4b50-9499-e6f09a3b69a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63da4846-2b52-49f2-a9a6-f9042dd6ae1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67792325-a977-40d1-bdbe-e331e17aef39",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c42c748e-4cdb-45f8-b68b-b7c9f14427a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3946a6f9-8c5d-4d67-8e92-e98aa15d3a2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a53bbf6-df76-496f-ad9c-be035079754b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40993a93-4e26-43aa-b72b-e9925d8344a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905efc6a-0f3d-4eb7-a621-c4ff3294e7aa",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007e5d60-91e2-4cd3-b03b-b2e9848665a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5da1e61-9f3d-46a6-8561-86b26306ab41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a8dea1-d916-47cf-882a-65eb9e7c84f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f210a408-4515-4108-ba9e-33c49456cc3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e426c5d2-fe32-41f7-ab84-0c8acfa83953",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88bd58ec-ca54-401e-ba81-3264db1a241e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e459ac7-5289-4b71-9609-f99216f68ed7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eef37cb-6203-479d-a4a4-c8ebb5bd85d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28715809-f34f-4071-bc3c-584b94f349a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17245b42-8575-4cf6-9c6a-3e151661c05c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12f7144-0db6-4581-85ca-aab129500222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43a4e612-4a23-42ca-bdf8-4d19077ff0da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be09875c-8e69-4eb2-9782-bfa026376702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8190dd8-19ca-4f36-9b61-6602d5e86325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f9b7f1-5992-4c3f-b8de-ecb2bf92d8fa",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2066a7-ec09-4f46-9cf0-df04ecf3172f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4db3e775-7c34-4765-8189-597b07667aac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c05a54b-8e04-41c0-bf3e-a248adf684c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5604eaf-5205-4aeb-bd4e-09be9bba3781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8a2565-9f6e-4c28-b487-78909612d371",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb9e4b0-a144-4064-9795-fd34be0b221d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "493ae30d-2ff2-4cd7-8bc7-2a2aef67e0ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e06077-8733-454f-9061-72acf103f0a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bf2d907-e721-4323-94f2-3669b0df656b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "783eb58e-180e-4b82-8119-885205f7b1ac",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd9240d-c0b7-475b-a785-417db43231ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29fb7fc6-4c5c-400c-8095-bde6a2dbdc5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ac47df-8895-4b8b-92f3-5cafa106f36a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9e933ce-a830-4f78-a17f-68e22126a1db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59536861-44d3-4eed-a3cf-c997f79ccd58",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f9ed51c-7e6f-456e-92de-b4da7c46877e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b6d3d5f-2c1e-4e33-a13d-9ec5c67f70f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1c5552-b207-446b-bf80-4362ffb5d252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aef6f65-96bc-4ff2-b979-83a95235da5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd36d3db-1d9c-4e20-ba33-21cff0e82352",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c662b56-f5fa-4ba6-8fcb-ec1e8f0ea7bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cde0b37-1bdc-4947-a625-5a3338938e3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ce8cf2-5963-4f5b-9c26-42f2d778c54c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d557eaa-d5ca-4cfb-9b8e-dd0ce08306e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a329e4b-5c23-4027-b439-cdce07cdc5e1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb61fc7c-858b-48da-9ce3-300fb23180b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5bd1f99-aee3-40d9-85e7-8addcbe1ac0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3dda07b-7cde-402f-abd5-13dd7f3b52c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32506592-1e34-4902-8330-1efc4cf22c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94bfdc4c-34f9-4d9f-8e9b-2e486f8845b6",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7e9a0f-a4b3-4cd9-845f-6216a961d5d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b039e50-0ca2-4ae1-835c-4b7b9e1cc8a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb33e6d-6374-4e7f-8b53-2c22efa0930b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7400782-e273-4371-97d6-e9d56b191215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3556a328-aba3-4851-9c8d-0096e93537f4",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe593fb-878c-40e3-af74-5df2239573fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b03b45f0-bb68-4540-be98-6269eba5d71c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c36155-2555-49d5-8376-cc2506680475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8958aad-758e-4e61-ae07-6b7e05c013df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c833ba-a642-4a40-8755-3d491a0d79ad",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de11185-3eb5-4d98-881c-4ee4e7058b10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6b9aec7-bade-4c97-8822-b4e94f0b866f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd335f4-7aab-4a96-bede-218bf327568f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83216133-77a7-4cfc-aa8b-a416a606003e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd16c54c-35e4-42c7-830e-0e00d7981fe7",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c876b9f-7cd1-4686-8ac9-315ecf4fd983",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d88edb85-c6df-4fc2-89df-dbd48fba6e48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d347e0-41ec-4d1c-ab54-19068a855e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "940edb1f-7c44-46a1-acf3-585b1ec4cd46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4096f4cb-e297-48ad-a9ed-ac4e30394921",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "568decf8-5f83-49e1-8e78-4f0b86b12ece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "280e4a15-ce2d-4bb0-9b50-934f51fcf71f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "491c05ad-5117-4a84-a65a-6dc6a1c037dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e30526e6-1ea0-4815-a072-c5153ea5d88c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5573db-ef04-4918-83b2-f09852bd2530",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee11dfa-d7e9-49f5-b4b0-314b7c83e702",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cc1ab3e-902d-4184-9bae-4c09af2fea8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "042afb0c-19e7-432a-a5e2-dab6f5fbcf4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3638b616-07a6-42bd-b058-ab71b5c5a085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edfde392-991b-4830-9fe6-3487ee96f47d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b49f5e-4182-45d3-8891-860d497e3a5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "722ddce7-7afa-42dc-944c-a3f34faea11f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcec61f5-cd43-40c4-8e48-248a6c253650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "944bd378-b044-4d85-8f27-ebbc1b7c2887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8327bf18-211b-47d1-9961-43d035901f92",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72145e9a-3f98-4ec9-a1af-57bcb8986f97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "242e306d-2a46-4712-91f9-0b0eb403348b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6be8bb1-ef6d-44a6-b73e-39fc7b3efa5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25aa4487-9156-4faa-be8a-fbbba12f7825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b963c514-90f9-4c1e-b574-ac318e395dcf",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07a6e83-02fb-43e8-89cd-f9cb17c03773",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d030ab99-32ea-435f-8700-cb8db95ec615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b153fd-a943-4195-b6dd-63046e54a9e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0be1487a-2f44-45a8-b363-4bed2cb60cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9ce60a-f434-47fc-9851-7955ddcdd610",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8825f873-afaa-4b6b-a41a-d232ea7337be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f7a06ff-0dc9-4a0d-906b-9bbf2c1c03fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91028a41-fe8e-4341-a5c2-e88670594a68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c814409-807f-4869-876f-785ae5e53fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5057c34c-e12a-4290-8f69-2b2fea3bf36f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9622a0bb-c6a8-40fb-8eed-df1748879575",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbec9c31-43ba-4441-b469-4ab02050925c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "619e1e66-fc77-4421-a53d-367f1a89c145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "578f127e-ea57-44b4-8f8c-1e36e47b2801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2058618b-b736-4e73-90ef-7a5e20b6ca5f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9088ecce-7f8f-4806-b20a-a43cd68a67ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f061aa53-f3e8-4763-9f68-619c29fd81dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df088487-1cfe-49a0-9bd5-28ee55216fa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bf1c48c-2535-47e8-ada4-6708e4be74c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ce4d36-70fb-4b50-8441-ab4d3980ee84",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c048d050-cce2-4b55-90ca-cf606f3c5cde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34a9f204-c41e-40f9-b38c-90572cca29f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc8f362-a5ac-47d4-bcba-88bd1455fc76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8147683-3030-4325-99c1-4f5df9f32672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a23ab1-609e-4c33-b4e0-7e05d4340f3f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "372f5644-16f8-4a75-97b5-8d223be723ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d21d88b-e7e7-4ae0-92d1-7bf7a432cc0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca4201b-2c29-454d-b250-d1589677bedf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ca382c6-31a0-43d1-909e-dbad30ba40cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca56a5b8-f912-4f71-8585-57ca31222ccd",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6025d3b-922c-42ef-940a-9d0aae3e2c47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3b1ef4b-2be1-4630-af24-4bef0075d036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b411efd-f9ba-42ae-8b84-966faaa9055e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9939c9f-a92f-42b2-bc3e-319fce3c9c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d4eeb64-d775-4172-9ca3-11d563d9e164",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ae8a2b-ea72-4cae-b9f3-753f559d87f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec5033a1-3a27-4c62-be6f-e57368349fcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a5563bb-691c-4c2b-a778-2858e0d4123e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9126a7bc-e220-4ffb-b116-2f2110a3c394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2bcfdf4-a188-4502-a743-068525b5fd19",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8a4cf2a-0415-41c5-9fa7-e48a4d1606de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d019a6e-cdc5-4e68-9840-ba80334058ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "031d13d2-0689-43e2-bf11-5059a01c0631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a35f7198-3bed-46de-9adb-f6914abf33c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79438583-7590-4544-b0b8-7da614975416",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34edc692-4d01-41b9-b0c9-94cd2e24c93f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12a41932-ad88-4d40-8dc8-c7e0ae50b0d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b23ce69-2318-438d-8dd4-b3193e93f500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70c75a27-2edb-412d-ae5c-642d26223f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c05210-8683-4e2d-b38a-e2a1dddda2ee",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0ec5aa-c3ff-4eda-8b98-aa953bc4beef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad3500ca-7b93-4f34-bd8e-798e4ea3826f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1608e3e-7f7c-4d4c-8c55-8f44b474d641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bda5e3cc-3399-45c4-a1d3-489f265e4977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6401842-e01a-4e66-9945-68df906aa297",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f6582f9-e621-425b-b799-21e376c18b3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a7470e4-5eb6-4836-85c4-d5761448344a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5df9ba9-c52e-49a6-9757-11ab32daceb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ebda943-8e84-4ab1-acc0-707a9ffe3259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aabf824-0f4f-48ad-b475-b17d8c02b263",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dcac346-ce67-42f2-a7ee-5a9ac7412444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7c88d29-e9af-403a-b9c6-eb40d7f641b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "292cbcf2-0980-47e8-8a40-157f0417038c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb882563-8b58-4078-904e-0ed0b3259486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9131c10d-1a3c-4074-9d3d-095a3cf4f3cf",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3249e11-0ea4-4358-820e-9241d24da5c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22a450bb-6359-4a94-ad05-41ebbf8b1032"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c585f21f-43da-4ebb-a789-456ca59b4111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82f42245-9895-41bb-a09f-69324fb1f929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "134fc99c-34bb-4420-80f4-1239c39fa606",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e693e7-a40b-4386-8b3a-70444097466c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14196e6a-0a92-4059-8266-6770771428ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5a41f9-cba7-4482-8385-96b1ed3a3e80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f7af5d2-332b-4dc7-9aaf-f8c45c5f4575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe1f1f4-ee0b-4466-be82-67595924e915",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a190124-4e23-4589-b719-4864808e7735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6735023c-e5c0-44e2-9e8d-9a91ddcb986b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc83201b-d7d5-4043-9767-260c515c06f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1062b852-d24a-4ea6-966f-4a0cdab8886b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab96d2f-3dd3-4be6-b419-968205033628",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ba76d6-5969-44c7-8487-be25217f5e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03f1ceb1-a8b7-4d50-9e0d-7ee6c04e7100"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98302277-4136-42a2-8291-4cff6e897fc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc7fce8f-f4c5-42ec-8123-15a2a0ed47aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b62255f-1045-472f-9c5b-b8971cbed044",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaffbdbf-e3ce-4c3d-aebe-ad43106e2b9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a79c2f1c-1f88-4cc5-842d-2a1eb68d64ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e46999-aa1c-4b98-a36b-110ce996abc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62b93380-334c-430b-b76a-94548598d62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f959a3-1b1f-40db-b0f0-c833161b6cca",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837d09b4-8bfe-42ee-b5e6-049d395c6152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42d8b175-5fc7-41f8-87aa-9f5ed38e6bd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd18a1b-3759-48dc-b6b9-e1e0822eea99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "401b079b-8fa6-4cc3-8232-0655f9d548f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ca3c76-a330-4d3c-a53a-fc2ec9eca5ef",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274690b5-3d4a-4641-ae67-cfa1556b4c7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1272ec1-cee2-4055-a63a-1a5cfd59abe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1195be4a-a679-46ca-8fc8-b11bfd8c951c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b00af1a-56ec-464f-9e56-a6bd0406d8b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df7f264a-7a21-4775-a599-0f21529ca427",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1c1d02-b478-458a-87c7-ed6f8c929cd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a638df42-5754-4d25-b40c-b03c61a5f740"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe80413-75e9-412b-9ee8-cc8a80ca1fd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a90e63e-e2d9-4a24-aeed-a4c3710d6a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861db347-c91b-4829-9f5e-bea93d35276b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cafac37-3254-4024-ba94-2211189d534a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daf68c4b-4de5-4aa6-8868-54792bf3037c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c15fc632-3b5e-46f3-95cf-653280382a3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae4c99ed-22de-406a-ae95-6febab726b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "110829cb-757b-4fb0-884e-533ef4b4cb82",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b556661-bf6c-45b3-952e-144539a6ca2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0cc98d2-36a8-4e69-a87f-52e4d09f47ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02d6bb6-bfca-40aa-b5e9-439cfebee9aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dead3ddc-27ca-4715-986e-5559ec4f7ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b32bd63-d778-4591-a319-e09f9f0dd307",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "362dad12-170c-44b9-8e34-092d05a75c96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51303c2c-2c9f-4172-a219-d6a22f53c11c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "491db327-34d0-4411-a9d2-0e35d3310200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e79b55a-5ff8-41d4-9ef7-2686aaf3076a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872abad3-5044-47d0-9090-f7f7472a6ceb",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a47bf7b-9a5d-4456-be49-5b7f3ae3f5b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a66b1b88-bb21-4adb-9859-1f7c806f6f7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "509871ae-d1cb-4fe8-9160-49b7473c8520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b95c43e-a81c-42f4-b56e-96a5b7f1ce57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef20692-8de2-451d-90a2-c04e20bd2a09",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85e2c07-1924-40e1-bc57-462d5d4b49c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11e17ef4-f5a2-4c62-b905-2cde835a71a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "446dd818-3036-4ddb-8322-10ed9825676b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "422fe98a-e663-4a7d-a629-3904c3e30d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998befbb-70e4-465d-947f-c7bd1d53613d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db47b28-d59e-4c4a-902f-e91e57b4030e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "077c818e-0534-4fd5-92a4-abc5581c009f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cafc12c8-7617-48e9-8d67-65a5baf7767c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef3b6fa7-c6fc-4f26-9356-83e4a511021c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "463d8cbc-f42e-4f89-a162-913db0588568",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69ea457-a1ca-4ce4-8c46-56756a71ab49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d188be8-40e9-4b90-8a33-64b421935d73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ffd589-d551-4fdf-b9ef-f8faaf63f503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d7f5bc6-6cab-4d4e-9340-1540ff5a0155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7d8c91-8762-4c92-83ed-4daa3d8fa304",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb79ff5-6eea-4145-8f1c-7bcf7a4d3c7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5503bab8-4c73-4589-8c9e-25b308b3b76a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1edf4b21-5672-4d62-a076-65dc5c080a52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51997717-c9b6-4a11-959f-4c5e422adfbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9338cf09-2203-4f4d-8d6f-ef4cfcb01ac2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f22c2b14-2f2a-41e7-919d-35e6dbc35df3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58e9d7d8-9ecc-4d96-98ca-07d069931e19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94efe1b-d7e8-4ca2-90bb-df5dce323a4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "280ced59-ee4f-45f7-9e3a-7be7070556a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "137fa90a-bb8b-4f12-a81a-0b983a645afe",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a2093a-0c5e-4ab7-b122-9ebdd7281ec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "600c3e7d-3243-4545-a47c-ebf09402c029"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88cbf5a-df48-48fa-ac14-83572f1ee1ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdee5627-69c9-4d1a-8e1c-77d55f301f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b27760-8155-45c8-8d8d-21bfe94f0480",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef098e8-1def-4d1b-8d36-4c4aaaab689e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73bf541b-bd5b-4bf9-9cdd-ce36409a47c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39146ca3-2c61-47ef-8034-ea87bae3327b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d0882ae-4868-4d19-aab8-3efa1d4d3803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b6daf52-a7da-440a-9782-8f4520da6593",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c4fcce6-bcb0-41b2-80fa-7cc1b50a5e7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a76b5320-3aa4-4c83-8481-26d95d5c0b69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "399e365f-23aa-4cc5-bb58-73466ad0b9c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09b868da-9ad3-4fef-a726-d870365daa0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5948e4-f4e2-4107-abfa-30dae9287372",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c7ef21-f096-46ae-9b6c-cd6f9ba35582",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e671c0d-35ab-42bc-a8f7-5d15e5825ed7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e3c689-5963-409c-9a94-332ad6d1146e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0c519a9-8ca0-41da-b1bb-c7548b6fcdc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9194c6c-0231-479c-9d84-4a65c918a9f7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5795a480-ace8-4bb8-b4fc-6f4dca2206a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8530c3cf-609a-43de-9376-018f0db48cc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7509d972-74f1-43c6-b9ff-434ae5a49908",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d72eeb-554d-4619-9bcf-0d8785d40405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef5ab9c-bce1-4db1-befd-d48a8aaaddf4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721bf5b2-907f-4c32-97fd-3b8b2518da12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21f59cdb-baa8-4ac1-ae89-a34b71fceb6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1400c547-45fa-49c0-8655-febeaa616cd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a735a98c-704a-4209-a3c7-321aa3934392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b02b54-5dd5-4bc3-9928-e5f81a1b84a5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b75e462-7d26-460b-9344-97d0a48a5e2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ee4e609-1b60-4931-b53e-429c57501c68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57954381-d077-4fb5-ab00-a20e52bc333f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83ccbd03-1dea-4387-9a43-8b79aae5a323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d94061-6547-44ff-9a90-60c7a25032b8",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b7941ee-eb71-4899-b689-566677c7828e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b270238-280e-49d7-b3df-93c57e35272f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3674023f-5c08-49fa-ae18-1414f7940f7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64c380f8-65ec-4b7d-9ead-f8a4d30a6f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8107cd1-03c6-47e5-bacd-bf70f7e46ac0",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "108a34ee-820e-4db5-99de-288aa0281404",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae79f44d-6844-4bef-947f-d300ccc498a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aaa9741-bfa3-47b6-ad34-644a16e0d921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a04ddfee-681f-46ba-aa41-27199a88b00a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f130610c-56c5-4d4d-8701-2eedecad2177",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1998ce48-b17a-4b86-9354-4144d07ad2c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1645d7f-7e5c-481a-919e-180998153cdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce29e50-54b8-453f-aff0-827fef89636d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24e04ced-97e8-409c-abbb-df8b7de998e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6855c752-4703-453f-a262-f5a5f1ad850e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b27abec-1f0e-4829-a246-047f6ce42810",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00fd1028-12bf-4020-8559-379c5dc391cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45366548-12e2-4e79-b3d4-5c7bb68bd035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec7b1ee8-71a8-4c5c-bd8c-ec5fe485c543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad75ec55-bab5-4bc9-9a6d-17a93747e110",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4df909a-e573-413e-8ab8-29d987c8e8ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "def37d90-1112-4b30-9e2c-1d6f5a4a124f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2afd5726-8295-486f-8b34-a42b8da616eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb42a165-9a6a-49d5-8795-1d73e0296529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be65030-d2d9-4439-a179-be1b0fe1ac4c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc563db-71e7-492d-8171-87acb2c3cc2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58f0c836-5332-4cea-8e50-2f4e163c1266"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4b9181-7923-44cf-ba07-b0ff947b3300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "333f1d6a-7656-4c08-9b73-ca6da6a21a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf2b741-4f52-418b-9f4f-0e851b39e167",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60c7315-6caa-4b4c-9d26-a2deb8b23a73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95ad9092-78c5-4abc-9e97-133747813673"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c48470-3b31-4098-871d-b36914ae0251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a5a23a8-b15d-4884-b77d-8304d28de383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c87c46e8-4bc0-4a51-98fd-ddbdcffa41c9",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbbbbbf8-b62e-40f5-8d9b-9d7ed84e9d41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1dcd171-3589-4f84-98f9-676ae1dfcd51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce29a8d6-b722-4611-8d12-56171e686805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa740254-de5e-4db0-ac73-ed054216b7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07037ac8-ba50-4056-a39c-c73cccdaa8f3",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb1505b-47d8-448b-9096-ae778e976e6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0ff4d4e-85a0-4a72-9a49-5958fca33df6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da81cd3-7ace-44eb-8e6e-8990b3162f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed049b7a-822d-41b2-971d-52a3c55be37d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f76a3e7-d5f1-409d-8c2c-70129124e7ae",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3f363f-d814-4e0a-bd37-58ca869f3cd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea355087-b6ea-43a3-8714-6be52480a0fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ffbfb3-4417-4a17-a07c-452d707821a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79dc811d-5761-4fc9-819c-5830037e96e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1621f23-5443-467a-865c-54eb498e9db7",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b74dbbbb-305a-46ac-bc99-c45ceb88e41d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1a355fa-97ea-4f79-aff7-e2961db106e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b29f2c-2804-49f6-9e61-d60603799558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba5e6ac2-9b3f-480a-a0f4-40cd9e9f3e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db269123-add1-4c4f-b88c-a3ccce662728",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3f6b80-8e75-4a1f-9c84-c5494512df2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "900206e2-8cf5-475b-9754-bff7f670bcfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a14fc66-2c31-4500-9a47-9f020a3d8e0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "029cc55d-819b-4255-880c-55823d457e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90853862-d625-47dd-b5e6-3b84fb814750",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9193cf36-f3ae-4ef6-a64f-b3057c54507b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "677cf027-c490-439f-95d8-17bdc96094d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a58143-cbec-4c4e-84cd-16f49685496b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fdfe829-1c37-4232-9f8a-ffd8ec518f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6954ddf-420d-4326-a362-d805b62d45a8",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626a109a-933b-4969-aa92-39155d8ee375",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33fc5993-eaf8-487f-8329-6447982fa012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69485a6f-c7a0-4b13-9edd-68d33f7bb688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd534deb-327a-45d8-a43e-e58a3870ad87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4ab46a-c981-4e67-8860-57456dae287b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62882bdb-0bc0-4a4b-9d7b-e5d6d4dc728d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ea9046d-4314-4a07-a376-b67c04a6d0aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32ee48c-08b6-42ec-bbcf-5e97d9e28833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c120097-06fd-4169-b11b-b737cc0dfbfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b179a69-8a00-4379-8ec7-833a367446b5",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a171beae-1c2a-4c77-be37-8901f841a0f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d02c51d-6062-44df-b5b3-3f549d4857da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2356760-66b2-42a6-8420-ba6da9084b0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cc765e8-1e40-4b31-af5f-8b85d4094493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c246846a-327e-441b-b8b8-e34883b5e72b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628e8c2c-c9b0-4f65-9692-a54c09afe21f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58446be2-3150-4722-b599-84325c117a32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01950716-4c77-4a69-b865-10e46cb09798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3fe2e26-7421-4d0b-bdd4-d71e44540968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0674f93-8780-4885-9d20-4085972c2ff6",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9ca95d-de38-4e07-99e6-1e4d27091131",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73aba402-e347-40d0-a3d9-4ff85cd9c53c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb3f71d-6fe8-4e61-a79c-664f6e3205de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb825a68-8e72-4c46-83ed-0ff4db4f0cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61377110-ba92-4a8b-8668-cc046ee3fefb",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7173e62-2ed8-4739-8684-3cd61466c49f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8d93ce9-94be-4a80-8689-6f06ea0cd029"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd467c78-02f9-4b87-9732-fba2798b904c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3aac75c-3cde-4744-8cf7-0d9253887397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f506d6-7849-4eb2-a603-9ba96d829356",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9267b032-d314-4fab-b24d-f87df7ed2eba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63687ddb-ca65-4975-80bb-88d9ac52c155"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d85b450-075b-4249-86a0-0b2d5fbd7d45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb7f96ec-eb71-47ef-b264-123b54ce22cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609daf5b-2310-4602-bbce-04eb3d981fca",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4680331e-245b-44c7-b999-ad314d1f241b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bbe82b7-8350-4e79-9e28-75126fb77cdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab02bf3a-6fc3-41a2-a4e8-257a08886a78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4a1dfde-c83f-45ac-bf82-b8cfe94acd2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b0853d-b54b-47fa-9cfc-a61109d6ac45",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "859e85d3-5121-4341-a326-ee41133befe4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1e4e79e-c919-4801-9ad4-b63ae29d1b7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6fa39b3-7093-4f7c-b0b5-ea03fa46be49",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81491dd9-4fcc-4cbe-a3c9-b5be33b2b219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb0f32a-1fe0-48c1-8f8a-48fc1417f101",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26bff302-5079-4a0f-b40c-85d3daefc8c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be96261f-7bba-44a4-b7b8-b3a697c60437"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57ed1be-635b-43ae-8e0e-0893f38b9e67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e32a3d0-6872-4e2a-b278-e72a324f2f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf9a016-e87e-4a79-aa9d-637834c0ac1b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2496b2ed-41c0-433c-98c8-4128016051cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86c3b799-fb84-4949-8f48-c1b5c869404b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af9f11c6-cd24-4b12-bb1f-a6da7ae30710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cea8a5f7-60ca-485a-89c4-9a648f91df55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f910c0-77f3-48c3-ad99-0ce8b675d0d9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32be5744-674c-497f-81a7-bf55930c1788",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60ee18c0-c062-427b-a831-72d2876772fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aabac204-b5c5-4266-b202-16d013367d91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5112712e-6648-44ee-920b-c9beefc380d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af84a65-73d7-4cbf-ad4b-24466d27ca6e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d4e4c0-f53b-4105-ad0a-6e1034e49af0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae228166-aa43-4e82-8421-047bfd25be23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c429c2-2e2b-49d5-a71a-2d704fda908d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0207764a-bb5c-4af6-bffb-62a640d6a6eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9727b9-d99d-4b56-94ad-5859ec318e51",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29178f19-f270-40b9-8f66-a4df381fb659",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d95a688-2f76-454c-bdd6-5f13dc45936f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84228df8-d314-4311-bd75-51c21432695f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f33a37-f12b-4cc4-baad-44a0101a0ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a7fa223-0328-4863-a80c-f2b6512815d7",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c626a20b-97ed-4126-b661-ce0fb34570b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c01a96fc-48b3-416c-a1c4-f704c7d75f13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02badae-5e51-4658-89c8-ee83087b99a1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bce9393-d881-4558-a860-a8488417edfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6517124-1813-4775-823a-508fde35a845",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073fb2d3-7e5b-4438-b951-e92d17c314bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd92747b-8f89-4a30-87f6-b123670bae80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c67cc744-18d8-438f-a5e4-58db2c552335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55477087-3540-4698-bf95-a556435a417f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9bdfe5e2-03a5-4a55-99de-5a5e458602ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b24b2dc-da07-46d4-a29e-5c46f8963c4c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "99159b66-6341-416e-9ee3-d86cfb2a0d15",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e0a429d5-3677-44bc-9cd6-6199843b0e4a"
                    }
                  }
                ]
              },
              {
                "id": "12dc39d7-98c1-43ef-8224-4e013bef805c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e863eb04-410c-4d27-8efd-b8dd0e285f51",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fcd920e-a9a2-49ad-b04e-51a91fdfc532",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "efc38243-c186-45e1-86cc-676992e037bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13144ca9-26e2-4a40-8a0e-6f4da28c4c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "127d4ba6-cc1e-4c60-9e03-e252499854e1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6fe9f519-c63a-4fff-b606-47f343eac088",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63116fe7-217b-4813-9c12-d7a2fff162b8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6011cc49-aa2e-4464-9a14-4e25ae6a84c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46f167de-c28a-4263-90a5-07eb2d0169dc"
                    }
                  }
                ]
              },
              {
                "id": "e9ebfe28-e82d-4819-9269-b77044d30b2e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "9355232c-9857-4669-acff-80270a0bcc23",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "743cf6ae-4440-4cd0-bc02-a36e4633c27e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9e0facc3-ccaf-443d-bf2f-cfb1d4b3794d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2e6f6e-ffb2-4cfa-be7a-b3a5aff6806b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fd941dd-ba77-4a43-beed-54be4dedf026"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cb80f46c-495c-426e-9355-8e070be7024b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "933801d6-f85c-45c3-9a12-35e3b7a94f4e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "96504623-5270-4914-b841-57cc34b6ee49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f33297ed-3abf-4f82-b9f1-56059206466b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd1af232-57db-446e-8c40-3e1c655f599d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0a0b869-1be6-48dc-9411-8a1fc2f739c9"
                    }
                  }
                ]
              },
              {
                "id": "842e3be7-4b45-415a-9290-372ebfc60c7b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f702bb50-a27f-4cc5-a201-9654d9664a9c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7fe8a36d-7aba-4534-ba06-4b7322a50277"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ca3deff-1e28-4230-81af-64d1cd657450",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eaa8305c-ed5e-4e1b-9ab5-234259d4b399"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "26a1f7ac-784e-4b79-ab24-b6826fc47496",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "16353da9-5ea1-43bb-8331-e07d414bb3e8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "24305e14-63ce-4e1c-bfbe-23ad1148eebc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e5b453cf-fbef-4b2c-bf6e-67ea0b1f4e67"
            }
          }
        ]
      },
      {
        "id": "4c14a4d4-0360-4d7b-8cc2-d0795a388b4f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "21834f80-42fb-414b-8dfc-2522dccdc72d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d9a4ceca-18ad-4387-9d93-1758ddf062e4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "03538d1d-0773-46eb-819d-5d575e2dc3f6",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0902f20-3a1e-477b-8b2f-29f167681bdb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8a8f7deb-1a66-47a8-8243-4edefce35003"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33cd90de-715b-4556-b7b8-f5c87b7bdfa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c993d68b-988a-42f4-8ff3-514b834515ad"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3414217f-e587-4d59-892c-a2ddeda21289",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19c2eaa6-8c0b-4ab2-8d71-5f6be18ef917"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1cbc0d3b-8592-460d-bcd6-83398440dc8b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b237679d-5768-4af8-8f27-c1eabfc5bcd5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "558c15ad-d271-48ec-b492-bdb15c53740f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9dabb8aa-face-4772-8ae3-b6bc73e39639"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9db1d731-318c-4dee-9be8-5b9e926ad292",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "79ff2020-421a-47e4-9226-73a229e4c830"
            }
          }
        ]
      },
      {
        "id": "e53ba73d-7421-4f23-831e-575e0b5f4ce5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c5263c93-a05c-436d-b300-f885533371dc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bb588389-f559-4d82-aaa3-8ee96984b61a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fd84ebea-b108-4972-a411-5d6c011533af",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca17a29-3c53-4dd6-a297-c0d2321885b7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "350ecc78-c3d5-4b4a-a270-f5dfda74f900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8455cca7-d975-4559-ac62-12b6d0c86862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa5e1277-1a24-49f6-a231-67fb17d40c8c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8927677e-2d77-4530-9cc1-e30ab04cb1b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "646df29c-6940-4f9e-85db-d9fcdf3aea05"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c24062b-8588-4eb6-ad25-04cb47720a85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3cf75f13-8206-49b7-a1dd-0be609b6c5f9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "de275a48-67fd-41c3-8b1b-6fe28bb71f5d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5efa36d4-c882-4b59-b49e-7ccbda3884fc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f8f92698-0a1e-4bc3-8aa2-4f97054a9b9a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ba4f00e0-0635-4f3b-9a81-b28c186561de"
            }
          }
        ]
      },
      {
        "id": "bb0c8633-73e7-4d0a-abb7-ffebc316a43f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f44e1d18-a43b-4844-a496-5252bc62367a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2660af32-ffc1-4f96-a03d-3c4e8de2d56b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2f9fb3ef-4dea-475f-8043-1238db21a422",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f302e4f3-8e07-4589-b0bf-2e6559ff696b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83306d9c-a598-4f7c-bbd5-1377e92c1d45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa63794f-a5d3-4d5d-98b0-a1264ea06ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd85778d-a4bc-423a-915a-1f1c3ca6443d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9294835d-d568-4a14-b287-5399aa02221c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b3124a6-39d9-4f01-8708-b9a232338225"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bfd660a9-8080-4ba3-b368-fdde52c27348",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "926805a4-cb52-4569-80d2-1d6cd34f6ae8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cddc763d-10f5-4bfb-803e-9e985d664f50",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fa1e88ad-4ca5-4fd6-8bb3-d922d2722141"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "59383d41-2fbf-46b8-b650-ba9612150456",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a32486d2-cc37-4c38-8b93-da9ba2957f74"
            }
          }
        ]
      },
      {
        "id": "31269662-27cf-409c-8078-fd9c3bbf983e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c3eb3c7f-7976-44e8-bf93-0b14193b2155",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e81e99bf-1db5-4f65-a9ff-4d1713a12f76",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "eb6aab69-87a5-4d84-845b-5ea34bdafb96",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0c3bab92-ffe7-4f8b-adfd-3a1341e1f964",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c41c32cb-e4ea-4e08-8020-9c85b337d584",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 86.79577464788736,
      "responseMin": 11,
      "responseMax": 5097,
      "responseSd": 404.4508107199265,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1694306090422,
      "completed": 1694306126646
    },
    "executions": [
      {
        "id": "4f738aed-4686-4f4e-b09d-4e5e0b3b859c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "785c9dfd-3c4d-4fe5-b1b6-8bef11f6befb",
          "httpRequestId": "fefe1e74-84f8-4575-a1ee-e3f57a7ef3e6"
        },
        "item": {
          "id": "4f738aed-4686-4f4e-b09d-4e5e0b3b859c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8d15b82d-e166-476b-b895-4faa1acef34f",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 0
        }
      },
      {
        "id": "37abb7dc-7e8c-4995-85c2-127adbbdf79c",
        "cursor": {
          "ref": "b33ced6c-ac01-4726-ab0d-45a6cce7ad3e",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0be56ca6-b474-4c18-8235-816a5ebd6ed0"
        },
        "item": {
          "id": "37abb7dc-7e8c-4995-85c2-127adbbdf79c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "711ba0e0-d9aa-47f6-9977-e9e90e43cdf4",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "24c2a159-052f-4560-8043-082ff761dd09",
        "cursor": {
          "ref": "602db510-0cd3-4889-9835-1ff44fe001dd",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c1ed8ea3-ea2b-4c5f-8fa1-038c3a9d2e8c"
        },
        "item": {
          "id": "24c2a159-052f-4560-8043-082ff761dd09",
          "name": "did_json"
        },
        "response": {
          "id": "c20c85c7-eb2a-43c3-b83f-1e23a9c0a57d",
          "status": "OK",
          "code": 200,
          "responseTime": 322,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3e127d-1935-4091-a866-bd6443e7571e",
        "cursor": {
          "ref": "5352a0df-a809-42a4-afe2-f97622dedfe5",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "db149b69-836c-41f6-9977-b08f5ba1ae69"
        },
        "item": {
          "id": "0f3e127d-1935-4091-a866-bd6443e7571e",
          "name": "did:invalid"
        },
        "response": {
          "id": "9b0dc0e0-3559-445e-b28a-85fbbfb10695",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1433,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3e127d-1935-4091-a866-bd6443e7571e",
        "cursor": {
          "ref": "5352a0df-a809-42a4-afe2-f97622dedfe5",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "db149b69-836c-41f6-9977-b08f5ba1ae69"
        },
        "item": {
          "id": "0f3e127d-1935-4091-a866-bd6443e7571e",
          "name": "did:invalid"
        },
        "response": {
          "id": "9b0dc0e0-3559-445e-b28a-85fbbfb10695",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1433,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "605cc559-09c6-4d51-b39d-b33e47c94db0",
        "cursor": {
          "ref": "8c52315b-1539-49eb-ba04-5a4bff0cff51",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c2c9ab6e-7821-4c54-a9bf-0552b6522725"
        },
        "item": {
          "id": "605cc559-09c6-4d51-b39d-b33e47c94db0",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "de4a6216-80c6-4439-bd32-2699baa1320a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 34,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e4be8ef-0b3a-4698-80db-d613f8adfb33",
        "cursor": {
          "ref": "29ccbd4a-d491-49de-a692-1d4f609a800d",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "166741a3-bf77-4cab-a5c6-2346449a2881"
        },
        "item": {
          "id": "4e4be8ef-0b3a-4698-80db-d613f8adfb33",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5cfca7ca-ff47-401b-9192-b22b8939b6c4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 34,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3954cfc0-8f43-4fc0-a310-7f81f65abc1d",
        "cursor": {
          "ref": "e1121c92-9e12-407b-b20e-406372841b1d",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "888f45e5-2057-4536-9d2d-95992a0a1c04"
        },
        "item": {
          "id": "3954cfc0-8f43-4fc0-a310-7f81f65abc1d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f30ebba0-9614-48c8-b316-8f7a6a162cb3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65bd8e0a-6bc1-4336-906b-f8a73c0fa4dc",
        "cursor": {
          "ref": "f4193c26-ca63-4cb6-96a0-2e4dba895329",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a9e66ea1-de31-4ac7-9ee3-2ff6d4876849"
        },
        "item": {
          "id": "65bd8e0a-6bc1-4336-906b-f8a73c0fa4dc",
          "name": "identifiers"
        },
        "response": {
          "id": "31070640-f393-4cb6-b786-9ebb7ef73d13",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2500007-38ae-499a-bb58-5523d18ac4ef",
        "cursor": {
          "ref": "cce83e9b-4cc6-4d5b-903a-567b43893a4e",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "22951183-bd53-4046-9e1b-cc3ffb5dc728"
        },
        "item": {
          "id": "b2500007-38ae-499a-bb58-5523d18ac4ef",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d62054d5-0655-4b4c-80cd-e7b2c4acc680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff05e454-a0e4-40af-a576-1f23de50ffc9",
        "cursor": {
          "ref": "a43cdb6b-cd48-4e0a-acfd-37ad0401e8c1",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1e9ea125-bf87-4d60-a9c7-e9071d776a06"
        },
        "item": {
          "id": "ff05e454-a0e4-40af-a576-1f23de50ffc9",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7a47e5cd-53a6-483e-8303-1b9fc94d33f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae87851-7bfa-4baa-b09c-9c5df5b8f16a",
        "cursor": {
          "ref": "03610608-c058-40b5-9c79-df182812d9db",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f6c699fc-51e8-48d7-975a-df7c45f730de"
        },
        "item": {
          "id": "bae87851-7bfa-4baa-b09c-9c5df5b8f16a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ccad2a86-f85b-46b2-bbd5-62a1fcea1e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c9e1ba-b008-475f-93b5-a2c61fed9427",
        "cursor": {
          "ref": "0ee933b9-ca2b-4ffb-824d-c444006374a9",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5e1b9b21-1878-4980-ab84-718be31c0db0"
        },
        "item": {
          "id": "28c9e1ba-b008-475f-93b5-a2c61fed9427",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "311ce6f8-a431-4d25-9ae1-40ec32dfc1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd7f514-562e-49c5-bc01-0dbf7f82febd",
        "cursor": {
          "ref": "6e5ce2a1-a3a5-42f1-bed7-9346f38df30f",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "420f1d19-3090-4e12-bbea-43ee7ee04709"
        },
        "item": {
          "id": "fbd7f514-562e-49c5-bc01-0dbf7f82febd",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "39e45acd-2021-41b1-b7d8-a1af2af738a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170893d7-8da4-4193-b03e-cffbd36efc94",
        "cursor": {
          "ref": "792719be-8f50-4ef7-801e-72e2b11940a2",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "86e9a5ff-5188-4adc-9ae4-001255a24e01"
        },
        "item": {
          "id": "170893d7-8da4-4193-b03e-cffbd36efc94",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "111c2d1f-80c4-428c-a366-060ff859639a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b1d66f-b7aa-4951-8457-19bafe2c3433",
        "cursor": {
          "ref": "7f1ad95a-d29d-4588-9154-b78cc45a8b65",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7c48edf9-7513-464d-9ac6-aa38768b9c78"
        },
        "item": {
          "id": "54b1d66f-b7aa-4951-8457-19bafe2c3433",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "817dadf5-3c92-4483-82f4-277b4b240913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfbad5c4-858a-493c-95d1-8f75a6789e9e",
        "cursor": {
          "ref": "cece6689-159b-4a1f-80d2-fb6d096e7566",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ba874256-0cf4-482d-a627-1359e2c6bd83"
        },
        "item": {
          "id": "bfbad5c4-858a-493c-95d1-8f75a6789e9e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "94d50ff8-f9f2-4851-ba64-30f044d42495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd46c81-e1ff-465a-8b18-0dcb12c48e95",
        "cursor": {
          "ref": "a2b82812-3506-43e7-9bb1-86c690482486",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "34d63a18-aded-402c-abbf-22926e0bcd58"
        },
        "item": {
          "id": "3bd46c81-e1ff-465a-8b18-0dcb12c48e95",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "33a20eff-cf98-465e-b3c4-38bdc4b82776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ca3ce3-d0c7-46f4-8667-86ceb304b2f3",
        "cursor": {
          "ref": "fd5265cd-13ec-4a48-931f-333ee9e490c3",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "89e54fd1-f1bc-4648-8c9b-43f823448493"
        },
        "item": {
          "id": "20ca3ce3-d0c7-46f4-8667-86ceb304b2f3",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3ca8e971-9b88-4f27-b3cf-3871878ec4ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910d9e75-4b7f-430c-8823-54390c1036a7",
        "cursor": {
          "ref": "08c9f0c4-e029-4e54-b4fc-50e9dcd247b3",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9496961f-53ec-4502-a518-f48fd1d57d02"
        },
        "item": {
          "id": "910d9e75-4b7f-430c-8823-54390c1036a7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "37f9f79c-85e6-4de5-9a39-a30a35096a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f6b515-a4c2-47dc-b0e0-d48f9b2d3076",
        "cursor": {
          "ref": "e3326a66-2c9e-4ce0-8ef0-85cbbe108b45",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a992deb6-3cf7-4afb-9b2c-9814462f9824"
        },
        "item": {
          "id": "99f6b515-a4c2-47dc-b0e0-d48f9b2d3076",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "20d70e82-6d21-4b8e-9f0c-7a5496f8337f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85aea721-b9c5-43bb-86e4-3981798f6057",
        "cursor": {
          "ref": "e301705d-fdaa-4319-ac96-9488c4451093",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "61497847-2a4d-4279-aafa-5c046b1ef84b"
        },
        "item": {
          "id": "85aea721-b9c5-43bb-86e4-3981798f6057",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "21245b91-ce2f-409b-b7ad-4e41064ff675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9e1b80-f38f-402f-b9a0-215ec8e8d9a4",
        "cursor": {
          "ref": "63694c51-7307-4e4d-ab1d-1affa69c8a5c",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4ba58ce0-0a26-4c25-81b8-578faf80bc65"
        },
        "item": {
          "id": "be9e1b80-f38f-402f-b9a0-215ec8e8d9a4",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1faa7761-db2b-4fc1-bc84-c117be9bdbfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a12e4a-373a-4abd-a632-f0c4cdeab4a2",
        "cursor": {
          "ref": "5055fd63-7042-4af1-862d-1d27959b552f",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5872b7e7-a2f8-4245-a8ae-b94b49452662"
        },
        "item": {
          "id": "f8a12e4a-373a-4abd-a632-f0c4cdeab4a2",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9571e4a0-5eb4-4944-8eb1-20c7f661ac58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665385b1-a750-41db-950c-f33596d02672",
        "cursor": {
          "ref": "30d5a11e-09a4-4d0d-a119-0158eab0aebb",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9134b1df-0da8-4f40-90a3-3189dd728708"
        },
        "item": {
          "id": "665385b1-a750-41db-950c-f33596d02672",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e15bc071-2f5a-4b7b-8d75-04921e4feac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5773d3e3-ec4c-4870-b79f-905b4f1cfbdf",
        "cursor": {
          "ref": "b5a2f129-ecf4-472e-a01d-1832d2318b16",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "077e94bd-1266-4cf7-967e-5928a50d4814"
        },
        "item": {
          "id": "5773d3e3-ec4c-4870-b79f-905b4f1cfbdf",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "14e7719f-187b-46d2-a46d-bd40d33ba75b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ba6f27-0bd8-4433-b803-457a455e89d2",
        "cursor": {
          "ref": "4bea8b7e-f4c3-4622-8f48-1fc961780c36",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ce7491d7-75e1-47ca-b93e-c47f06689ea8"
        },
        "item": {
          "id": "c0ba6f27-0bd8-4433-b803-457a455e89d2",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "84dafa2c-26cf-4e46-be55-bc73a03180e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9d8da3-41c6-45a8-8227-58b6c9fcabd0",
        "cursor": {
          "ref": "65136e9f-2a20-4bd0-8e5f-bfbb4502fd1a",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "30e7b536-b49d-4538-ae0c-4a4dc78ceab7"
        },
        "item": {
          "id": "be9d8da3-41c6-45a8-8227-58b6c9fcabd0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "13da0a77-d8b4-4958-8c13-93539341822d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4120d3e6-5db6-42b1-8dd8-3f3112222e29",
        "cursor": {
          "ref": "1646f8d4-911f-4aec-bc9f-fdf272c6f5c4",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "aea6ed76-4f6f-4ff0-91d8-e056fa447397"
        },
        "item": {
          "id": "4120d3e6-5db6-42b1-8dd8-3f3112222e29",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ad05331e-1a6c-464d-b711-af2bc55a0528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0250f566-eaa4-4b25-aea0-e626e5bda7d3",
        "cursor": {
          "ref": "929f5d9b-bd64-46f9-9d0e-d37a5ecffa97",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6ddf48ef-0912-4d65-9ee9-e7ecf2c6971b"
        },
        "item": {
          "id": "0250f566-eaa4-4b25-aea0-e626e5bda7d3",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f645a6e7-414c-4f44-bf7b-94021a44c910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b0babaf-6929-44af-8b01-88037201ccaf",
        "cursor": {
          "ref": "b17f26ec-0b62-4f5a-a0a2-377d1aff58b2",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1c3e1ed6-03d7-485a-85a9-fa3e8fd00c10"
        },
        "item": {
          "id": "1b0babaf-6929-44af-8b01-88037201ccaf",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3492cf6c-14d8-4e63-8827-50cd40c7cda6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961a0e2e-d10c-4386-9df4-d7ae138d6226",
        "cursor": {
          "ref": "b691ae69-23c2-4d08-a7e7-cb8e9d8389e2",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "22e262c4-18d9-4e2b-88b7-35a3c349327f"
        },
        "item": {
          "id": "961a0e2e-d10c-4386-9df4-d7ae138d6226",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c00addac-c068-4133-b205-a68597186bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbebe8f3-cba6-4e27-85ce-3c8ce246bb1f",
        "cursor": {
          "ref": "25722aae-0682-44e1-b196-861c0d111cf8",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8e2914a0-130c-4c97-b299-3f66176ba77f"
        },
        "item": {
          "id": "dbebe8f3-cba6-4e27-85ce-3c8ce246bb1f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "74868086-e71e-4b05-9dd0-1f962fbe12ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc15bb2-9ed8-4876-ba9e-32617493ae4a",
        "cursor": {
          "ref": "5974d16b-ef1e-4682-a224-dff3d6fc11d2",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "10c4661a-63d5-4ad1-a3dc-be06e23cc41a"
        },
        "item": {
          "id": "6cc15bb2-9ed8-4876-ba9e-32617493ae4a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f5ee375f-07dc-43fc-9417-3ae04f608380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e194a81b-30cf-4b86-a0e5-d850f98d9413",
        "cursor": {
          "ref": "7e6f57b8-ee80-4721-a19a-7ffc8c9e8bd6",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "76c07e58-ca14-48ff-b8f1-9578fea700fc"
        },
        "item": {
          "id": "e194a81b-30cf-4b86-a0e5-d850f98d9413",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "466b4c57-9e48-4fee-9049-c31a12aac4ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "540fdb19-7bc4-4670-9e36-e873626ece46",
        "cursor": {
          "ref": "e85b2246-5e46-4ce5-98cb-155dd2945199",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e7fdab94-5e49-4db3-a6f1-2fca8b82d039"
        },
        "item": {
          "id": "540fdb19-7bc4-4670-9e36-e873626ece46",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "18d39979-b8a2-4f26-82db-57b492aa8e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b1b75e-3339-4883-8cfb-ea07844eaa7e",
        "cursor": {
          "ref": "39542f35-5bd1-4d9b-a734-3bde5c3dc227",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "741c2e07-8b5f-47dc-83cc-d126ab7dc8b9"
        },
        "item": {
          "id": "91b1b75e-3339-4883-8cfb-ea07844eaa7e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "77d1ca05-129a-4d0b-9d37-6e6149d7dc45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdab567a-e7f2-4292-b23b-1a5dbffe6fa9",
        "cursor": {
          "ref": "4404097a-7788-4ecf-b567-8a7c7d526f0a",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "12b0bb3e-fbba-445b-b197-eb840cbf1a63"
        },
        "item": {
          "id": "fdab567a-e7f2-4292-b23b-1a5dbffe6fa9",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a2e05709-5fb4-4fec-bc5f-33ff9d1de5c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef7b25e-b4f3-4736-9a00-44ce246620d1",
        "cursor": {
          "ref": "7c867604-9079-4add-858c-3261b28a12d4",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c0535a9c-d83e-4d0f-96f1-bea165e833b2"
        },
        "item": {
          "id": "8ef7b25e-b4f3-4736-9a00-44ce246620d1",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "95862c25-9068-4b74-a01d-5ff957af41e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8b570c-6b9f-411c-a5f7-dce54b60eec9",
        "cursor": {
          "ref": "2f659ad3-efa2-4d5e-a20c-539c592c73c2",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "2a5437f6-7e66-4b9b-ad78-17ad732f386e"
        },
        "item": {
          "id": "0c8b570c-6b9f-411c-a5f7-dce54b60eec9",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "db5dee07-bb4b-44b4-b2ea-f00a843c4432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb64fac-d92e-4e1f-9631-685656e9d4b8",
        "cursor": {
          "ref": "a2b066cb-4c8b-4fd5-bce0-8321c0bba18c",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "805b400e-38b8-48e0-a9b7-e3741b4ada70"
        },
        "item": {
          "id": "3eb64fac-d92e-4e1f-9631-685656e9d4b8",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "bda1b88b-9898-4f50-a330-8a610b275cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8676218a-4b06-4a7d-9d43-13ca1701309e",
        "cursor": {
          "ref": "791e828b-7a61-4978-8eab-702141288edc",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2d1adcde-590e-4232-b029-cd0edd270d6d"
        },
        "item": {
          "id": "8676218a-4b06-4a7d-9d43-13ca1701309e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "684e61a3-99b5-425f-9a66-1cfd5d08af51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5220e00-d961-44a1-975f-45295538c0ff",
        "cursor": {
          "ref": "694cf919-2e05-4a7a-aee9-60b51292808b",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f1845622-725f-4dab-a2eb-0b2675f7c494"
        },
        "item": {
          "id": "d5220e00-d961-44a1-975f-45295538c0ff",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "cbed1aa0-4d28-44ff-9616-8aaada67b956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f57d38e-d6cb-4d68-a217-6ee0aa830701",
        "cursor": {
          "ref": "b8ea8a7a-d833-48ea-a9e7-f3ef83dcef7f",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "0f56e526-a4a6-4810-894c-6d7bd1467740"
        },
        "item": {
          "id": "2f57d38e-d6cb-4d68-a217-6ee0aa830701",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2ee4a13c-abd3-4e14-9704-300e5ca6f11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87abe93b-fe14-4113-9b35-fadd6c98d732",
        "cursor": {
          "ref": "94ddc2c7-5ec3-427f-8fc5-8bf212770f6b",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b6ddd7dc-07bb-4352-af4e-7461dbc5fac5"
        },
        "item": {
          "id": "87abe93b-fe14-4113-9b35-fadd6c98d732",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2adb2e6b-dedf-441b-ac1a-39545979cd00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64504ad-542c-417b-976c-a9c25eed1038",
        "cursor": {
          "ref": "a4f953d3-7399-4fa7-9dd6-e27b06593770",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "981e48da-2142-46d8-8acc-967d5c6d2635"
        },
        "item": {
          "id": "b64504ad-542c-417b-976c-a9c25eed1038",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2b04919a-2d61-4279-bb6d-ad5f007fc12c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5fb12c8-d4cc-4575-b8fa-34a5992fdc36",
        "cursor": {
          "ref": "e9c72709-a869-4601-b1e6-344f2424f096",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "563046d3-7f23-4ddf-9cbf-2c8e0d91a0a9"
        },
        "item": {
          "id": "c5fb12c8-d4cc-4575-b8fa-34a5992fdc36",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "23f070e1-378c-4ce8-851c-b5469751f731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641a5006-9717-496c-8e49-94ded33390e3",
        "cursor": {
          "ref": "56aed437-97d0-4361-ae6c-108b599f9711",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0f94ec40-567c-48a0-b498-8376a930d7e9"
        },
        "item": {
          "id": "641a5006-9717-496c-8e49-94ded33390e3",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "eb0aebe5-8066-40ae-9252-109018179f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7522b8b5-29bc-4779-905b-7e153c4f8b7e",
        "cursor": {
          "ref": "07fa0155-7854-4202-b7b2-709e69cc5eaf",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a0bdb914-f517-466c-94b0-f2b95110d949"
        },
        "item": {
          "id": "7522b8b5-29bc-4779-905b-7e153c4f8b7e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1b3fa0d4-1bb5-4d1a-96e0-031adb03b671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708e6ba0-6bb2-4b4d-8b00-d912af401d49",
        "cursor": {
          "ref": "82d9b9e5-c2b4-4cae-b145-50ba67a6e58e",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b1812372-1545-4c90-bb3d-51a07f3a18a5"
        },
        "item": {
          "id": "708e6ba0-6bb2-4b4d-8b00-d912af401d49",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "56d75852-df83-401d-abbe-b1d03c188f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7f5041-7e8c-4db5-91d0-53e2737325c7",
        "cursor": {
          "ref": "ccba0835-0477-4ad2-a502-21bed309defb",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "73575377-1ac9-423c-9ba1-5db9e55274a1"
        },
        "item": {
          "id": "0d7f5041-7e8c-4db5-91d0-53e2737325c7",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7397f0b1-2ea3-4eaa-9421-4b016923c113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e5dccc-e3ff-46fc-a889-08b37a65d5c2",
        "cursor": {
          "ref": "5ece672d-0eeb-475a-89cf-2fd72c82ee41",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8c807c85-179d-4dc6-83ec-462ac3fb69ec"
        },
        "item": {
          "id": "52e5dccc-e3ff-46fc-a889-08b37a65d5c2",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "13680853-a49b-4386-9680-400fbd17c0a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37eb17c-67cc-4c99-819b-0e8b9b6bddd9",
        "cursor": {
          "ref": "5299db98-5e04-40f2-877c-6a7f089d1853",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ec5eb49b-ce58-4468-a979-f8f4ffb51eaa"
        },
        "item": {
          "id": "c37eb17c-67cc-4c99-819b-0e8b9b6bddd9",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b3fb144b-6ce4-4cdb-862c-e563b0fe2865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178f4fa4-cd68-4de4-979d-da61b599b6c9",
        "cursor": {
          "ref": "75d2dc78-3357-4360-ae05-1f723e464b58",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2be61135-d7e7-4f33-bf16-a0a0ad0365f9"
        },
        "item": {
          "id": "178f4fa4-cd68-4de4-979d-da61b599b6c9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "3bd33a5a-6f24-4e51-be7c-42c2f6d013d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca90549-b760-4b9d-9290-09d4e73e5bd7",
        "cursor": {
          "ref": "e9d54ba2-6800-4f81-8f40-4868659c27f9",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3e40d911-c738-47fb-9775-8dfafa773c7b"
        },
        "item": {
          "id": "eca90549-b760-4b9d-9290-09d4e73e5bd7",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0d2077d7-3bf4-4787-aba1-24553adc65a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa843585-c9e9-45ef-995a-a84b7d8171af",
        "cursor": {
          "ref": "612c8217-8224-4567-bc10-7b31e2b44f1e",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "0abf746d-49d7-4ff3-9d42-b7089c5bb5d3"
        },
        "item": {
          "id": "aa843585-c9e9-45ef-995a-a84b7d8171af",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d3c3c7d5-c604-4516-a286-a6a675c050b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1c7c7a-7eff-4239-bbff-c77e7dfc755b",
        "cursor": {
          "ref": "64a99505-976f-4788-b397-f46690543354",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "cea4147f-40d7-420c-9bb0-3c34a7a52915"
        },
        "item": {
          "id": "ff1c7c7a-7eff-4239-bbff-c77e7dfc755b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "af45fe13-ef8e-4fc7-8441-fa592dbb6660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad00fb0-872b-4358-9c69-7dc96d74a78a",
        "cursor": {
          "ref": "33ceb519-f49f-401f-ad4e-4adc4655bfa9",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d7a4f2b6-ede8-4077-b09a-e0c765eb0915"
        },
        "item": {
          "id": "9ad00fb0-872b-4358-9c69-7dc96d74a78a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f677d745-4d0a-437a-8e0f-3ee2c4a1d203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b7d3f8-d1c7-4c7c-8a8d-0a84d7e04aa6",
        "cursor": {
          "ref": "a19ac18b-0752-481a-a648-64fc9b0dab1f",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a8e6bcdd-5ba1-40a8-805f-a2ff986a0df0"
        },
        "item": {
          "id": "96b7d3f8-d1c7-4c7c-8a8d-0a84d7e04aa6",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c4b4f1f6-a3d4-462c-a703-8581041425c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0fd4e5-a10c-49a8-adce-172e98aff467",
        "cursor": {
          "ref": "26220f7e-e654-41fb-8975-eb44805c86db",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a06744fb-2a90-4d0e-a234-6334c7e03341"
        },
        "item": {
          "id": "6b0fd4e5-a10c-49a8-adce-172e98aff467",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e79fca07-78a5-47a7-80df-9f956058a65d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca8162f-3bc9-43a9-b04a-2478eaab54cc",
        "cursor": {
          "ref": "b662a602-c81c-40bf-b798-02dfd41177f2",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e6d7a7c6-3d68-4e9e-a3ea-7409b8cc9f65"
        },
        "item": {
          "id": "eca8162f-3bc9-43a9-b04a-2478eaab54cc",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "45161fd5-3c98-4953-afe4-5578633c0995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24448b5f-c26c-4cb7-94fe-9b047c066c00",
        "cursor": {
          "ref": "9a20b4bf-a789-4c98-b275-7da13e6c6bbd",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c075bee3-b5b7-475f-88fc-548e90c377f4"
        },
        "item": {
          "id": "24448b5f-c26c-4cb7-94fe-9b047c066c00",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "39ca3112-abd0-4d64-85ad-b7590bfece89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f33f9e47-8f4d-441a-a730-a091bf1caa37",
        "cursor": {
          "ref": "02e4a104-32db-498b-b8a8-bd3abb9a91d1",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3f13c3d9-a152-4c7e-845a-5a869a0fadc0"
        },
        "item": {
          "id": "f33f9e47-8f4d-441a-a730-a091bf1caa37",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "dfc89dbe-e33f-44a1-8931-b846e73cee6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d292dec-6187-4b20-add3-ef58eac40dd2",
        "cursor": {
          "ref": "7ee02c75-70ad-47e0-876a-c08c0d3fd3a4",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "80581ba6-e04f-46e7-bafd-898020c3ab73"
        },
        "item": {
          "id": "7d292dec-6187-4b20-add3-ef58eac40dd2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0f14a4f9-dd10-4548-8e51-5aeeb39ddb48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2f13a6-8a61-44ff-9115-7831623b3285",
        "cursor": {
          "ref": "7d6195bb-9aba-40be-bc32-54a26c9dd19f",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4437ae0a-346a-4514-af64-2fc08bdf3b08"
        },
        "item": {
          "id": "1e2f13a6-8a61-44ff-9115-7831623b3285",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c78f5eb6-c9bc-47ac-af21-ffe6e1db630d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec77e21f-e702-4028-b5de-e46f8352d92c",
        "cursor": {
          "ref": "264d90b3-4a8a-445c-b662-5cb3dd4072d1",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ff164508-5737-490a-bf64-399a9e903bce"
        },
        "item": {
          "id": "ec77e21f-e702-4028-b5de-e46f8352d92c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a8f1c9f3-a0ff-4bf2-8473-a88faec4efa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55259338-7648-4446-99b0-f75be2259ab6",
        "cursor": {
          "ref": "70702131-bbd4-4f0e-b80d-49e59566330f",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b190da49-dd6a-4068-a93a-89d345c8df9e"
        },
        "item": {
          "id": "55259338-7648-4446-99b0-f75be2259ab6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "691540d9-a8b8-4b69-913f-1671939e8dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab27525-2c2a-4f35-b368-60902aae9ebe",
        "cursor": {
          "ref": "3fa36b19-cf10-4fbf-982a-0fbd6010f016",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "41f5800e-4f2e-4a18-b54a-230e6e66202d"
        },
        "item": {
          "id": "dab27525-2c2a-4f35-b368-60902aae9ebe",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3d9fe793-595a-4475-a774-56dad7e0fa43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfdde80c-ab2e-45e7-9743-143e181beaf4",
        "cursor": {
          "ref": "3365ebea-b2fc-4862-baca-bae005b4113f",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1d52af5e-23aa-45fa-be5a-70bb06a6a532"
        },
        "item": {
          "id": "bfdde80c-ab2e-45e7-9743-143e181beaf4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f637d52f-ee58-4656-8c1f-c831d988724d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42391492-408d-49e1-ae8e-b7ee56718b14",
        "cursor": {
          "ref": "f671cbe2-38e0-4bd1-835b-c4378b995848",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8b010b67-ac19-41b7-9394-f81ea34ef059"
        },
        "item": {
          "id": "42391492-408d-49e1-ae8e-b7ee56718b14",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "bd37a82a-1556-49d3-ba91-892ee0476738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1772ea48-d8a0-49de-81da-616dc91d4ac8",
        "cursor": {
          "ref": "f92889eb-b600-4eed-99ef-1d97d805b7d9",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "cdde36c8-d98d-4bd6-84c9-d60bccf6659e"
        },
        "item": {
          "id": "1772ea48-d8a0-49de-81da-616dc91d4ac8",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6e0ef813-1a1b-41d7-93dc-67e938718ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe46ce8-3987-4b3f-ab9f-17312a5f7038",
        "cursor": {
          "ref": "b9d33370-b6d6-46b7-8001-1abc860a01da",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5752fdc4-e87e-410c-907e-547774af253d"
        },
        "item": {
          "id": "1fe46ce8-3987-4b3f-ab9f-17312a5f7038",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "cb30d91c-e20e-4775-9f8e-1339b23ac6d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7197220-4a1d-41db-99ea-97c6b176a9ef",
        "cursor": {
          "ref": "3c80742a-f8e7-4292-8605-6eb7c86fcb7d",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "61f0242e-e776-4217-a916-e014a9b7a5de"
        },
        "item": {
          "id": "a7197220-4a1d-41db-99ea-97c6b176a9ef",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3f6c9b54-ba89-4d98-8823-6a0c288a33b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac228c57-76bc-4d01-a27e-2050e27c673a",
        "cursor": {
          "ref": "c3780674-24e6-488b-854a-74cd804acec5",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8eafa41f-125c-4870-a1d7-6725e49ac52c"
        },
        "item": {
          "id": "ac228c57-76bc-4d01-a27e-2050e27c673a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1c7a40fb-cb78-4ef5-945d-3e875339fc05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18d6c0d-d06b-472d-8180-236f5a06416c",
        "cursor": {
          "ref": "0f5469f9-d8c7-467f-b8b5-5735792c5a11",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "04e7b90e-a122-4287-8e5a-3bb77dbd110e"
        },
        "item": {
          "id": "c18d6c0d-d06b-472d-8180-236f5a06416c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9bea336f-d5cc-429a-b578-ee97dd092b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93cb23e-0dd7-4827-a24b-03778cddfeb0",
        "cursor": {
          "ref": "b8e23e00-dca0-4756-ac1e-6b0880874c1a",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "443a037d-5d20-41b6-a744-e5a6cd4885be"
        },
        "item": {
          "id": "c93cb23e-0dd7-4827-a24b-03778cddfeb0",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "19a4d53f-81bb-49ba-8cd6-4aae4a0b085a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c33da3-45c9-481f-991b-840372b2442d",
        "cursor": {
          "ref": "257d70f5-d92d-4ebc-b68f-3244e588e70f",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "25ff1a39-e4d4-4995-bb95-9080ad632113"
        },
        "item": {
          "id": "a1c33da3-45c9-481f-991b-840372b2442d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e2608920-ebdb-490d-a92e-68acc74197be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "938792e1-3554-48e6-bbce-e6544d5909d7",
        "cursor": {
          "ref": "b5840821-d175-4082-9778-ce60f3f15c9e",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e974b237-b384-4afc-89b4-636a821bf7dd"
        },
        "item": {
          "id": "938792e1-3554-48e6-bbce-e6544d5909d7",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "14c69f33-f8a6-4ee5-a8a5-8ce33fc103af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61eb2941-8707-4e9d-9178-54aa98aaaa69",
        "cursor": {
          "ref": "d928ef8a-db8a-4a82-89ba-e1e36ce71ecc",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5723cc09-ffb4-423d-8a56-ad258504d73e"
        },
        "item": {
          "id": "61eb2941-8707-4e9d-9178-54aa98aaaa69",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "5d8cb860-1251-4f6d-9eb3-8de975da5993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90109c8a-ac4b-49b0-8157-8362dcb4ee11",
        "cursor": {
          "ref": "70bff081-6070-4bd8-af17-ca093a0b2d22",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "85b6e26a-ba18-4447-acf0-18fa8336209d"
        },
        "item": {
          "id": "90109c8a-ac4b-49b0-8157-8362dcb4ee11",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "374c9f4e-7eb3-4d1f-9db6-ab457d135e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032e32cc-4277-48ad-8a71-19ba49793580",
        "cursor": {
          "ref": "a43be778-7c6d-47a5-8e0d-3ed7d5c4aa86",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4ce14a81-85d8-4588-a502-6d98476fe5c5"
        },
        "item": {
          "id": "032e32cc-4277-48ad-8a71-19ba49793580",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "12580f94-85bc-4c16-b113-0543c0990194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a15dac-d2fe-41dd-ade6-c8c61e651f5b",
        "cursor": {
          "ref": "165f05a7-eaee-455d-a97c-a2529a44e921",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3d76aff6-fcef-4f27-8e06-ed401dc141ad"
        },
        "item": {
          "id": "52a15dac-d2fe-41dd-ade6-c8c61e651f5b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "718212d2-a854-46ec-b6a2-2ef5847f25b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa11d46-e30b-43ff-b38a-42bb6fdcb43a",
        "cursor": {
          "ref": "aa8de720-428e-482a-b4e4-70f6d1ab4e64",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a2905886-cfa3-4b94-94aa-3c975d0dc538"
        },
        "item": {
          "id": "8aa11d46-e30b-43ff-b38a-42bb6fdcb43a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e49eafd0-cfa3-49ce-98bb-2dbc4a90e945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6269073-4ee1-477a-9ef2-39255eb31d61",
        "cursor": {
          "ref": "fa75dfaf-9c40-411a-aa46-4a7cd71011a4",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9f5b2b0c-f9f2-48d7-a490-8d64004a1d7b"
        },
        "item": {
          "id": "a6269073-4ee1-477a-9ef2-39255eb31d61",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "cd68c7ec-13e3-4c81-830c-9127fab6cf6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9eea86-84df-4475-a380-ea337f4cb07c",
        "cursor": {
          "ref": "116398b4-937a-4052-9726-d20030be49dc",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f57d4bb7-7d49-483d-aa32-87af3d07b0f4"
        },
        "item": {
          "id": "0d9eea86-84df-4475-a380-ea337f4cb07c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "170a6d0b-1db2-4992-9c1f-5e5027ef6067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa8f1a2-e19e-4680-84df-4ee20eb066a6",
        "cursor": {
          "ref": "c0a6bd9c-7d10-49c7-8fda-65c2b9e0d572",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ea8cc9b3-f31a-4afe-9728-eb16a2e0f426"
        },
        "item": {
          "id": "3fa8f1a2-e19e-4680-84df-4ee20eb066a6",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e25542de-5fca-4624-b468-e755fdee9a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc901e86-3dc1-4206-9a92-dcab4574c423",
        "cursor": {
          "ref": "567677e0-7ebe-495e-b155-36f27078cb90",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e39dd542-ae47-41e9-a7f2-946388f6c067"
        },
        "item": {
          "id": "dc901e86-3dc1-4206-9a92-dcab4574c423",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "8e487d2b-6938-49f1-a489-f86a11e990c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2859e5c-3981-4053-8d58-896303927670",
        "cursor": {
          "ref": "49efa779-0f89-4b98-99a9-dc76a6daa235",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "225d26f0-3de9-4fef-8ecf-e5faf3ed168c"
        },
        "item": {
          "id": "c2859e5c-3981-4053-8d58-896303927670",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a7d9ec4f-a663-4f49-88c7-89b12fa09253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a03aa0-2e73-4011-8167-c18a9c85c8be",
        "cursor": {
          "ref": "5dc10e82-7a85-4910-9f0a-6d160224b490",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0f63f502-abdb-4676-b610-f741bccf49d0"
        },
        "item": {
          "id": "10a03aa0-2e73-4011-8167-c18a9c85c8be",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "874eade1-cd24-40f7-957f-924f1dfeefb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93913685-eb7e-45e2-a559-b516d00d629c",
        "cursor": {
          "ref": "ab09e7e4-4d88-4f49-8235-6187f9e56f9b",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b7cda176-fd0f-488c-b52b-86f457bda3af"
        },
        "item": {
          "id": "93913685-eb7e-45e2-a559-b516d00d629c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "aed5932f-d140-4547-921a-8829a2e98e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182c681f-b46e-40f1-a48f-71742ff28714",
        "cursor": {
          "ref": "362fa25e-2fe2-4161-9477-9c3fd45a70e1",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "272fc8fe-3685-403e-88ca-cd8a2a15b754"
        },
        "item": {
          "id": "182c681f-b46e-40f1-a48f-71742ff28714",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4cf91f3c-1098-45fb-a28b-1a255fbcadf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c951b7-6bcb-4a2e-95f7-2d0814cfe072",
        "cursor": {
          "ref": "f126adc0-c234-45ba-9679-e30f3ab37953",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a83b0e71-11d8-410f-8dbe-470bd7ab5851"
        },
        "item": {
          "id": "a4c951b7-6bcb-4a2e-95f7-2d0814cfe072",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "889382e1-2b94-4aca-a374-93a624ba54cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5532321-418f-431a-8faa-3c32621ade9a",
        "cursor": {
          "ref": "18396d62-3074-4d9b-a494-1a9ae09560c8",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "fdb9ef35-078f-4036-b640-ccff5d08b176"
        },
        "item": {
          "id": "a5532321-418f-431a-8faa-3c32621ade9a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "7e740270-63b2-452d-a3a6-f3d87847595e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "969034da-892e-4717-9da5-b85b1fac4c6d",
        "cursor": {
          "ref": "265871ac-0e0d-47fd-bae4-57b9312ab63c",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "9bd8b943-5ab4-4149-b5a8-38c297398da7"
        },
        "item": {
          "id": "969034da-892e-4717-9da5-b85b1fac4c6d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "29cea2f0-0ed8-4d22-8d00-368aa3c0b1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a40e5dd2-6a00-471e-9f5c-23e7adf91d1e",
        "cursor": {
          "ref": "c728e2c4-83d1-4bb7-91cd-623d69b483b6",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "3eb54f4c-1878-4555-823f-1d0bfacee5f3"
        },
        "item": {
          "id": "a40e5dd2-6a00-471e-9f5c-23e7adf91d1e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "771b7c58-63e8-44ed-86fd-fd0a236e2c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d15ba7-ce73-4672-9378-6a50ca204926",
        "cursor": {
          "ref": "c528061d-6dde-4455-9cbc-27559a2843f8",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a67dec2b-cbd2-4e57-8974-b58eb051ff9b"
        },
        "item": {
          "id": "b1d15ba7-ce73-4672-9378-6a50ca204926",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "03f2d3ce-5916-4be4-aa4a-bcb31427c265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8113fe8-35ea-40a1-b203-d68219a3238d",
        "cursor": {
          "ref": "b05bc376-3613-49cc-abed-7d8a40a99efb",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "25818892-fc81-4ace-bd94-d9e097bd3596"
        },
        "item": {
          "id": "c8113fe8-35ea-40a1-b203-d68219a3238d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2387eada-a7f9-4643-8d10-11a9cb78db87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b4ba1d-92a3-43fa-b6bc-75d312528963",
        "cursor": {
          "ref": "9a1c8a6a-41b2-487a-903a-553ec7c2d895",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ca707487-9f9d-4d6f-9e63-cfe531966ece"
        },
        "item": {
          "id": "f3b4ba1d-92a3-43fa-b6bc-75d312528963",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4f53409e-c825-4e44-97e1-aee0c478a1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6537ba0-4d32-4ddd-93dc-0c6122c4faec",
        "cursor": {
          "ref": "c9e9d32f-e2a8-4116-8ed0-ab8cef7c35bf",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "55ce10f3-b3dd-4ded-9975-83c611359060"
        },
        "item": {
          "id": "b6537ba0-4d32-4ddd-93dc-0c6122c4faec",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "74b160e1-2313-424b-bce4-b8924230884b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1b7f9a-d259-4fb4-bc6f-7e88df5e7199",
        "cursor": {
          "ref": "5ca7f1d4-f359-48f7-b27d-6ea0e40c2885",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d3e50478-1eae-40b6-895e-0be514560a3a"
        },
        "item": {
          "id": "9b1b7f9a-d259-4fb4-bc6f-7e88df5e7199",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "505a3074-56d9-459f-8762-6738335332a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898ffa1f-3258-4b65-b94f-0764c624c39a",
        "cursor": {
          "ref": "0f89f2c6-b3e1-4cb1-b9f5-f32facf6da82",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "131d6ab4-70b7-45eb-b748-4f712da10a27"
        },
        "item": {
          "id": "898ffa1f-3258-4b65-b94f-0764c624c39a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "74d3f601-9861-42e9-b6c2-917c6039dc03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c11eae-894f-49f2-afe1-847d526b2663",
        "cursor": {
          "ref": "b9998388-e41e-4dd5-8e76-f57b58e3c037",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ab93f64e-4b07-4d33-b7b8-d9991a0a4abc"
        },
        "item": {
          "id": "88c11eae-894f-49f2-afe1-847d526b2663",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7af46d99-31bc-46dc-b6b6-cee0dec4ad12",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45797edc-f3fc-47dc-b421-ee61d1220ee9",
        "cursor": {
          "ref": "ae983b75-8b01-42fa-80aa-aba90b4554bb",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9e557144-4851-4a07-963c-81278fbd8987"
        },
        "item": {
          "id": "45797edc-f3fc-47dc-b421-ee61d1220ee9",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5fc5b50b-457e-4f54-87f5-742c18260b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "a7badb72-ea43-496e-bd2f-b3729673a8dc",
        "cursor": {
          "ref": "ef453fa0-2256-4ec0-a9b1-2e6a1a4e2e66",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7b8a2e33-59bf-453f-83b7-a33a667f772c"
        },
        "item": {
          "id": "a7badb72-ea43-496e-bd2f-b3729673a8dc",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c23cf812-a78a-4a19-aba4-98545a925345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "b280a756-6711-44be-b460-93c57ea57134",
        "cursor": {
          "ref": "0dc52d30-ff39-4314-89ce-e227bc21aec1",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f918bbef-a39e-4d33-a777-16337b37f6d8"
        },
        "item": {
          "id": "b280a756-6711-44be-b460-93c57ea57134",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a7e82758-8310-4fe0-8290-0f871f6669ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "2863c569-5b69-49c5-b5a6-64dd51c40059",
        "cursor": {
          "ref": "1fd00be6-5723-4db9-83c1-59558ae8594a",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ed8f06db-3f55-4504-a9e6-8186de8cf5d7"
        },
        "item": {
          "id": "2863c569-5b69-49c5-b5a6-64dd51c40059",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6300c8ea-e397-404e-bc75-55428147084f",
          "status": "Created",
          "code": 201,
          "responseTime": 5097,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f745cdd5-e38c-4faf-bb2d-33fa24aa1662",
        "cursor": {
          "ref": "71f5ff52-c04d-4ab4-8519-7be4b8b6ded0",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a2bca5d7-a4ca-4cd7-9850-74101f956f44"
        },
        "item": {
          "id": "f745cdd5-e38c-4faf-bb2d-33fa24aa1662",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a5221a5e-6bcb-42f7-9746-f3d634e2b6db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "47514de7-b76e-44a4-a786-33b8f7a42c17",
        "cursor": {
          "ref": "39440177-28da-4b04-ad6a-f1797f39a2fd",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ce5e35a7-9c2a-48cb-b71d-596fba46cefd"
        },
        "item": {
          "id": "47514de7-b76e-44a4-a786-33b8f7a42c17",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3715958d-400a-4e20-97bb-2f59fea2b1b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "3b3e3160-b7d1-4bec-9bc0-1d48eda449fa",
        "cursor": {
          "ref": "93d53885-0c56-4f15-a5ee-f0be4003e336",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "40c443b3-80cd-498f-a5b1-049246503b2f"
        },
        "item": {
          "id": "3b3e3160-b7d1-4bec-9bc0-1d48eda449fa",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "173e2612-0385-445a-baa4-3a4f819572d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74bbc2ca-713e-4c8f-9da7-7d988fe05d5e",
        "cursor": {
          "ref": "320f219c-8335-4686-8cb4-e73d2f7d5623",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ac8395e9-5517-437c-a995-43d11e78359c"
        },
        "item": {
          "id": "74bbc2ca-713e-4c8f-9da7-7d988fe05d5e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "841f1deb-5cfc-4f53-ad64-7e68d757fa76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d50c6c-9565-4f7d-b7ad-b82995827d14",
        "cursor": {
          "ref": "eab96ba1-e7ce-4743-8db3-99ce6eb79351",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "439561d6-2457-45d3-a846-cc09633f68cb"
        },
        "item": {
          "id": "14d50c6c-9565-4f7d-b7ad-b82995827d14",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "66e735bc-5806-4612-a35a-c0b49a85ea02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c943b629-47b3-4cad-971a-4c0a5aad4094",
        "cursor": {
          "ref": "3c4a77c3-cca8-464f-b88f-11d1c290c7a8",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "3700b568-84c6-4c33-ac0c-1bc9ac41044e"
        },
        "item": {
          "id": "c943b629-47b3-4cad-971a-4c0a5aad4094",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9fac0507-7284-4e72-9748-55cb9d013185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac579cf-e1de-4b00-b465-720ea4fb0ea8",
        "cursor": {
          "ref": "4f93a949-795f-4f98-9936-658a065609fe",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "cedeeecf-7353-45eb-819b-809b22eac80c"
        },
        "item": {
          "id": "4ac579cf-e1de-4b00-b465-720ea4fb0ea8",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c4170940-5861-47eb-afe0-df49dd653ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8bc3290-e562-4761-8c96-1e2867361c9e",
        "cursor": {
          "ref": "90304969-069f-47f1-af49-4faed107b084",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "92228ef5-3954-4769-8572-b615f0f319a1"
        },
        "item": {
          "id": "d8bc3290-e562-4761-8c96-1e2867361c9e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6fbd9ba2-913f-4108-917c-716b6afa5745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a1b954-b0a6-44a1-846f-04fd7d8fdb18",
        "cursor": {
          "ref": "86b4bdec-bab0-4a10-a935-84e3b64df379",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0a77a9ed-e150-4210-9bc9-c457aa1a8962"
        },
        "item": {
          "id": "67a1b954-b0a6-44a1-846f-04fd7d8fdb18",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "bf9312b0-f4fe-480c-bd58-a737fc8d47ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171b4376-7dd5-401c-9435-0b5e932d81cb",
        "cursor": {
          "ref": "84c8017d-a259-4098-9d6a-1fe5cff104c2",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "79415934-33e8-4a40-91b3-e26560d71ea1"
        },
        "item": {
          "id": "171b4376-7dd5-401c-9435-0b5e932d81cb",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "92188b9d-702e-40a4-ad43-dc926cf6f784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476f10b4-5ff7-41df-b410-3dbd43595485",
        "cursor": {
          "ref": "aaa25b56-77b6-4606-a300-8e204b3d5b84",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "35315240-ae0c-4254-8c85-3cda72a7c97e"
        },
        "item": {
          "id": "476f10b4-5ff7-41df-b410-3dbd43595485",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9f1a9730-54d5-427a-a44c-3a9a3a170875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4a545f-78d0-491a-96c9-02ef436dabac",
        "cursor": {
          "ref": "5a1294ab-28e3-4c95-9a89-a81029ea04e8",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "70b641ba-8858-4d9e-ba20-57f209e7e299"
        },
        "item": {
          "id": "9f4a545f-78d0-491a-96c9-02ef436dabac",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "84cd45db-1e03-4a8d-8773-85e0b9c4d52e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5aa2ca-9597-4b06-8811-7968c0c3aca7",
        "cursor": {
          "ref": "1ab18b14-6a19-4d42-a866-6951f7e43f15",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a2e33cb9-207e-4971-a038-3e3613b87666"
        },
        "item": {
          "id": "5a5aa2ca-9597-4b06-8811-7968c0c3aca7",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5b358c40-d12a-4629-819c-1295852a0c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c26ddf-1886-40d2-a371-1c7cca25d227",
        "cursor": {
          "ref": "38923fc0-3d13-4d9c-947d-2634ccf3c2f1",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "96ba4351-db1b-4394-a309-aab57b79ef81"
        },
        "item": {
          "id": "d6c26ddf-1886-40d2-a371-1c7cca25d227",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8fb702e9-d6b9-4906-9be4-37395dba12c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7953af1-26b4-4980-9ff0-3cf33b2bd5e8",
        "cursor": {
          "ref": "a8d26716-ffe2-4309-a8b7-16c607989f52",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "88c7e3d9-a899-4d67-b6b8-8848ef15abfd"
        },
        "item": {
          "id": "b7953af1-26b4-4980-9ff0-3cf33b2bd5e8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1ccc84b6-f332-49d2-9037-6006f0e86012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8ed915-ba26-49f4-9bf1-562424151346",
        "cursor": {
          "ref": "8dde6a7e-f01b-41e8-adb6-962cc86d5eaa",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "31034dc8-f5fe-44fd-b781-7352160cf932"
        },
        "item": {
          "id": "2b8ed915-ba26-49f4-9bf1-562424151346",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ed74e9cc-bef3-4e49-af5b-adc180ca8a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec37b3c-a825-4222-8802-aeb451775dca",
        "cursor": {
          "ref": "1b74ade7-cee0-41fd-b42e-9e0b1162a9c2",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8d021b5a-a533-40d8-ada4-c93ae01be617"
        },
        "item": {
          "id": "eec37b3c-a825-4222-8802-aeb451775dca",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "783c97b1-8c76-48df-b179-44aa300add55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6804ae2-1a53-4645-b1f3-7207749598b4",
        "cursor": {
          "ref": "189a3c93-9921-4d75-9648-fcc291d25de6",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8b16d4a8-04cb-4f1f-b5ea-734b808c23fb"
        },
        "item": {
          "id": "c6804ae2-1a53-4645-b1f3-7207749598b4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2b091abc-f3d1-4f6e-bd75-b0c98d7f3d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da088b0-e385-4d20-b3e9-2b659cc0b609",
        "cursor": {
          "ref": "32453d7b-8764-48c8-91bf-1f23399ddc46",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "73b7254c-4e69-42ce-a3ea-c2d3f5a77744"
        },
        "item": {
          "id": "9da088b0-e385-4d20-b3e9-2b659cc0b609",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7ccb1d34-0600-4908-97dc-97bc4bf9b95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa09cb0f-af36-44fd-a39b-83085f380797",
        "cursor": {
          "ref": "c5f314bd-793f-4a71-b47c-6a8bdca3a633",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4969a7bb-47e1-48c5-aa21-e9022c4fa483"
        },
        "item": {
          "id": "aa09cb0f-af36-44fd-a39b-83085f380797",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c6f3f414-8507-44fa-a090-a31de52f2e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8bb1e3-66bb-48a3-906a-50cc3fae214a",
        "cursor": {
          "ref": "e2546aa2-3c81-49e1-990f-e48b4c5a50ba",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d347c492-fd95-4a7e-b8b6-239bad704117"
        },
        "item": {
          "id": "ab8bb1e3-66bb-48a3-906a-50cc3fae214a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6a9ad00f-e698-420c-9929-0594a95585e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6603d5b2-f15c-4ce2-9f3c-72cb9c36e66a",
        "cursor": {
          "ref": "e8ea9ac5-cc88-4861-aacb-e3c5ec9c08a5",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b9a1a1b2-3e7c-4156-b8eb-2a3e8633d984"
        },
        "item": {
          "id": "6603d5b2-f15c-4ce2-9f3c-72cb9c36e66a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ece520d6-8218-4340-b097-24bccb61e91b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e124d4-57fb-4a60-80f7-5b627ae56981",
        "cursor": {
          "ref": "b6e974a0-9521-4bda-9392-ebe30eb9dc4e",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c086cd7e-8822-439c-ac38-651f3541f28d"
        },
        "item": {
          "id": "a1e124d4-57fb-4a60-80f7-5b627ae56981",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "649270ec-315e-440b-b1d4-4450af608de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d5cac3-8440-4d11-b22d-6170de7bfd4d",
        "cursor": {
          "ref": "8a278aef-5b4f-484b-bc50-fdf4827ad3a1",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d5e6a044-8392-4bb6-a34e-048d85e88c71"
        },
        "item": {
          "id": "b2d5cac3-8440-4d11-b22d-6170de7bfd4d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b95dbdcd-a53a-4207-9dff-eb9429a9c5fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcaacefd-1758-4dee-8f82-070390cae0e9",
        "cursor": {
          "ref": "e17c951c-2cd0-4159-be94-a8737b365839",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d4052143-790e-47b3-bf7a-25abbd94fd81"
        },
        "item": {
          "id": "bcaacefd-1758-4dee-8f82-070390cae0e9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7295c9ba-4a31-4714-a020-6b5d851aa041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432677fc-a9ea-4c29-af79-33009802b43a",
        "cursor": {
          "ref": "5278ec24-db48-4d12-92a0-a066e2edabb2",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "bfcb5207-c583-42e3-9750-f28c1be0cc97"
        },
        "item": {
          "id": "432677fc-a9ea-4c29-af79-33009802b43a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c714ea4e-9b95-4a57-a2b2-1a4c2b160acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6708300-e4f8-4d86-89d3-5bc06ebed093",
        "cursor": {
          "ref": "749122cb-f138-40a8-89bc-a73c697a6d5f",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1fe2f2d3-c288-41a2-b92c-55506d737037"
        },
        "item": {
          "id": "b6708300-e4f8-4d86-89d3-5bc06ebed093",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3d533a80-72c6-42ce-8b27-f13fa5dc8f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fcaccbb-ec26-497d-bc4d-fdfdc553bb55",
        "cursor": {
          "ref": "5c47a90c-62ef-4e7b-a10d-59bec6e06cc3",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "994cfd17-cb96-4259-a3f7-f90548dea887"
        },
        "item": {
          "id": "4fcaccbb-ec26-497d-bc4d-fdfdc553bb55",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "69131ef3-0e7a-43b2-aeb8-a1cc820d4861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e755d456-73c6-4dcf-baeb-fe372309ac81",
        "cursor": {
          "ref": "da03d33d-27f2-4b76-8e58-304454bcf58e",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "de3db7b3-8d25-4f41-84d1-2a448aa2ba2a"
        },
        "item": {
          "id": "e755d456-73c6-4dcf-baeb-fe372309ac81",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a111d2eb-7362-4e59-90ed-a51712609e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6bb2363-8209-4121-9d00-59d7af6616a0",
        "cursor": {
          "ref": "e5a6cf9a-2088-4a28-803b-24fb88cac756",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1e425846-28fa-47c5-a69a-b016633c78c3"
        },
        "item": {
          "id": "a6bb2363-8209-4121-9d00-59d7af6616a0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a719f3b5-d2da-4dd6-a5c4-599b68d031fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "befb8098-af0e-48f9-9605-8750091a4a61",
        "cursor": {
          "ref": "b67217f6-d446-467c-a0c7-2ae178be0956",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ee2dd99b-91c5-419e-a470-7da05071e4c9"
        },
        "item": {
          "id": "befb8098-af0e-48f9-9605-8750091a4a61",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ccbff147-fa45-4783-80b7-be77dff0c6c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ccb072-7c6d-46ea-a8db-9c1848c9efa3",
        "cursor": {
          "ref": "ddeaaae8-57aa-4640-8abe-f01b3a6cba6c",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "4f475079-5545-4c6e-bf76-55219546711e"
        },
        "item": {
          "id": "b0ccb072-7c6d-46ea-a8db-9c1848c9efa3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1ab3acc3-f06a-471d-8c3e-94c7e868c35c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b502022c-d153-45ef-a33c-d551e861d075",
        "cursor": {
          "ref": "2e2dd55f-fb33-45ac-b4b0-b9491057bed6",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d61416e3-4543-49de-87d5-65b8299b41dc"
        },
        "item": {
          "id": "b502022c-d153-45ef-a33c-d551e861d075",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "306873d7-a616-419e-a176-d39ff431937f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e6826e-4931-43ae-9ac3-a21f4e092806",
        "cursor": {
          "ref": "5b139a41-7d68-4fe2-a7bb-a9edb11c5e7e",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b1c22b96-f4be-4b9c-baa7-bd684b99d7ca"
        },
        "item": {
          "id": "51e6826e-4931-43ae-9ac3-a21f4e092806",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "af5f7b1e-dc67-44e1-a4b9-894c2ddf548d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "398f244d-81f1-472b-8ff8-955526b61c65",
        "cursor": {
          "ref": "317501ca-be5c-4285-b13a-5cbfc5bf36f4",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "dde815f4-74d4-4b83-8ec5-a7d51dcd3fea"
        },
        "item": {
          "id": "398f244d-81f1-472b-8ff8-955526b61c65",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bc7cf393-fc08-46cb-9cb5-87a29c06edc4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df0e088-632f-45dd-916c-10b60b6b8a38",
        "cursor": {
          "ref": "33d84a4a-6669-4869-a98b-aacc9fe9cc33",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "89e9a14e-10f7-452f-a4d9-45fa93069fde"
        },
        "item": {
          "id": "2df0e088-632f-45dd-916c-10b60b6b8a38",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5475c164-0f17-4a8a-bffb-3fc29fa5ffc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72de7546-cc58-48d7-9a7b-4d8fcc751139",
        "cursor": {
          "ref": "e7a1099f-3a9a-4307-86d8-4c5df7c75de2",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0fe5a2e4-519d-492d-b6b7-57e078c3c9ea"
        },
        "item": {
          "id": "72de7546-cc58-48d7-9a7b-4d8fcc751139",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1c40c17d-1066-462a-a9c2-c80ca8477bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28495b0a-9720-43f0-9ffe-452f2afdaea7",
        "cursor": {
          "ref": "927c77de-1943-47e5-9029-ea29a174e17a",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6bc9f038-45c5-464a-88ca-ace3eb4f9bcd"
        },
        "item": {
          "id": "28495b0a-9720-43f0-9ffe-452f2afdaea7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "83f0484e-8abe-4c31-a583-b111f7a779b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dde5f57-7be6-47ed-95d2-9e792d78e900",
        "cursor": {
          "ref": "9b11291f-885b-4576-aa5e-3c140256278d",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "da1bdada-0aea-411e-848d-770919f9b943"
        },
        "item": {
          "id": "5dde5f57-7be6-47ed-95d2-9e792d78e900",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "914d8d8e-5951-406e-9a72-474444827b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c5fb7b3-8179-482b-a0aa-e82410a6ab5f",
        "cursor": {
          "ref": "178d45a3-1921-4d24-8b56-a90c06bbc97d",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b2bee9d5-70d6-4e07-aedd-1b25eb580cb4"
        },
        "item": {
          "id": "5c5fb7b3-8179-482b-a0aa-e82410a6ab5f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "87dc67d4-7b2f-4b87-931d-980776d680b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801dd27f-19b5-42af-a04d-866b5f661df5",
        "cursor": {
          "ref": "46676fe6-31e5-4416-8019-ee041d010025",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c29315dd-3772-45fe-adfd-23d1f35be925"
        },
        "item": {
          "id": "801dd27f-19b5-42af-a04d-866b5f661df5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7ec71c72-f3be-4426-9a40-232c20c7cad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c638e4-3674-4e01-a00d-fb597477c8f9",
        "cursor": {
          "ref": "4b2b6fd0-88ec-4530-9b5e-a16ac9f62522",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2df9e301-b3e6-4125-bf6b-e8a70ecd35fa"
        },
        "item": {
          "id": "56c638e4-3674-4e01-a00d-fb597477c8f9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "81dd4995-a2e6-4be6-bfdb-352fbb117650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f1fdd5-15f7-4e26-a55a-62e87beafc48",
        "cursor": {
          "ref": "01cd7995-4ccd-4498-b547-a707e1ea9f3b",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "dfd3cfbd-fc09-4e77-bb3e-c8659ab12c33"
        },
        "item": {
          "id": "47f1fdd5-15f7-4e26-a55a-62e87beafc48",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2f76febd-6156-4f07-bbe6-b79446a97e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2275d9-775a-4955-99e3-507e8f0c0657",
        "cursor": {
          "ref": "07096726-e163-404a-9433-e607b3b906c2",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a71933f2-0fb2-4c00-8139-69c220918257"
        },
        "item": {
          "id": "6f2275d9-775a-4955-99e3-507e8f0c0657",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "87b9e9d6-9f6f-493a-b7fd-630882e1e1c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0abde88a-2533-4ca6-8066-377d37169322",
        "cursor": {
          "ref": "5d6edc3b-4d96-4bcb-9918-724758e68465",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0b51b0b9-1d75-4a97-8f13-5f911be24e23"
        },
        "item": {
          "id": "0abde88a-2533-4ca6-8066-377d37169322",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c524b6a5-3fab-4289-a695-71791b4ae375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd4d151-ee48-44aa-a815-7dc6598da698",
        "cursor": {
          "ref": "a9b43f45-9bb6-4823-9bbc-4a467a9b90c4",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "af81b3e0-e1a7-470c-af22-ea92ce2faacc"
        },
        "item": {
          "id": "0bd4d151-ee48-44aa-a815-7dc6598da698",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fbf20d3f-c827-4ae1-aa03-e7d3dbb55569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cbc4c0a-27e9-4129-ae96-40de0b0cf37d",
        "cursor": {
          "ref": "6287e318-8fc1-4fa1-b6b9-864e8d79a08c",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "12e7045e-5aa5-4ca1-817d-b6f633b60a5a"
        },
        "item": {
          "id": "5cbc4c0a-27e9-4129-ae96-40de0b0cf37d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "939bddb8-50db-4c78-9a63-f38cec54e4eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "903fa8f6-9d46-4370-825e-bd6fb99f5bbb",
        "cursor": {
          "ref": "5895ab24-def7-4310-93e4-24aa8e6918b9",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9dfb6d12-1479-4b12-a68b-e15314ffde76"
        },
        "item": {
          "id": "903fa8f6-9d46-4370-825e-bd6fb99f5bbb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7b87d9d2-9edf-42ad-b14d-bc849d1a9409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f46696-a283-478b-b90a-75a502eb043c",
        "cursor": {
          "ref": "f80aef4c-80b2-4b80-9c33-7d2067514838",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6fb8f90f-3864-49aa-b319-baa07606f015"
        },
        "item": {
          "id": "32f46696-a283-478b-b90a-75a502eb043c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5235ae96-cd11-44c0-a488-e3a6d55832bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc784ac6-561e-4bd8-a531-b9aba804e497",
        "cursor": {
          "ref": "b9777e54-45e2-453e-ac6a-429f41b9891d",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "490c5f30-ac17-4eae-bf19-2d7c81f8addf"
        },
        "item": {
          "id": "bc784ac6-561e-4bd8-a531-b9aba804e497",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e634fb0a-85d4-4b77-be73-0ad2cc52838d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9331a5d-416e-4eb5-9121-da1fae71feed",
        "cursor": {
          "ref": "bda00877-7a91-431c-b40d-a2f50167adfa",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "76d68677-64a9-4a80-af76-48e2c8575a35"
        },
        "item": {
          "id": "c9331a5d-416e-4eb5-9121-da1fae71feed",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "07ad1d2e-15b1-4d0c-8a47-be4d82626bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "959d3a18-cf9e-4dd1-b0f2-9b0e4840394c",
        "cursor": {
          "ref": "641bcedf-efc4-472e-8296-fa09ca31387a",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "4fa8a75f-09a7-4951-b974-dc7bdd579009"
        },
        "item": {
          "id": "959d3a18-cf9e-4dd1-b0f2-9b0e4840394c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e3ea0d88-ec80-4950-9009-758801f9a0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab39de7-74d6-4380-810b-5ffc903407ce",
        "cursor": {
          "ref": "5e93e2b8-38db-4686-add3-11d162d7325d",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c4548efd-88cd-4f7c-b30a-02e3fa7ac60d"
        },
        "item": {
          "id": "cab39de7-74d6-4380-810b-5ffc903407ce",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "62b1e356-420d-402a-ba16-fca6ead9718d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f5e839-374e-46b0-bd24-bdc40ccc6b5f",
        "cursor": {
          "ref": "18bbc990-fcc3-4c8d-b59e-ff8afa06ed44",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "cef31ed1-1b64-4492-9481-f6a6552c0f5d"
        },
        "item": {
          "id": "47f5e839-374e-46b0-bd24-bdc40ccc6b5f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0fad913e-f541-43c6-90c2-7f3572b4813f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019d0a71-4c51-44c0-be79-4ea489e4655a",
        "cursor": {
          "ref": "2d31d040-7887-4b4b-9304-3b1798575bb3",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2491b347-02a3-426c-a6ed-207fa68586f8"
        },
        "item": {
          "id": "019d0a71-4c51-44c0-be79-4ea489e4655a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "266772ec-ae9b-42a7-83ef-60739ddf0f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a219e3-ab3e-4096-878a-e27c353f2c2a",
        "cursor": {
          "ref": "2d0602f4-9fb0-47ff-8b22-70cc4241372b",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "25b563a5-8931-41e9-a741-9411c694f686"
        },
        "item": {
          "id": "e5a219e3-ab3e-4096-878a-e27c353f2c2a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5e889b01-129f-4d36-b8b3-7c1e62664159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d474468-0879-4fee-93ae-cd52abba2b7c",
        "cursor": {
          "ref": "ec557a7b-739f-4c15-acd4-85dfa80c52f4",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "db9392a1-9089-4846-91b5-665c6ce94989"
        },
        "item": {
          "id": "7d474468-0879-4fee-93ae-cd52abba2b7c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a6cc259b-4a3b-4f6d-b437-260067489bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cec9bf5-2f91-4e3a-843d-bd5610899e95",
        "cursor": {
          "ref": "31d4466b-8e05-450e-bb95-5e9dbf0109a4",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "bf3f6552-5c85-44bd-8362-2eae7ec1c166"
        },
        "item": {
          "id": "4cec9bf5-2f91-4e3a-843d-bd5610899e95",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "54b2cf4a-e923-4f9b-a930-8676b4dcaf9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cfb93e4-9fae-43f0-8daa-b4dcfb0c962e",
        "cursor": {
          "ref": "5cd7cc6f-3e3d-465a-a5c2-bf43992d53f5",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0350683b-31ce-4cf7-a73e-37f3eac1571d"
        },
        "item": {
          "id": "3cfb93e4-9fae-43f0-8daa-b4dcfb0c962e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "162fe2a3-22b5-4a5c-a553-2a0ce37be407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15dff60c-d1fa-42a3-a255-d13e04e36a49",
        "cursor": {
          "ref": "e6b582a7-ea92-4eee-8fa1-268ba4ca1874",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "3745d6c4-922c-4b0f-9642-8f37f16b9000"
        },
        "item": {
          "id": "15dff60c-d1fa-42a3-a255-d13e04e36a49",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d152e5b1-44b1-4115-affa-3acf9879a9df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "564198d7-fb4c-4499-861e-dad023d86bca",
        "cursor": {
          "ref": "4e0935ac-5820-495c-8cab-aa0c9f8f846b",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e8356654-888c-4f1c-8464-2f4377807577"
        },
        "item": {
          "id": "564198d7-fb4c-4499-861e-dad023d86bca",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2bc4a41e-eb0d-434a-b65f-6303fc6dd5c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0b863f-4395-486c-9e27-411f49f6fa47",
        "cursor": {
          "ref": "997dfdd0-1244-4c5e-b9ed-bee02d32384a",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f51f8233-254d-45d0-824a-6e8effc063e9"
        },
        "item": {
          "id": "8f0b863f-4395-486c-9e27-411f49f6fa47",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "cc237332-fca7-497f-bf14-f3fae9c949ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92969ec8-64fe-4da6-8830-6821a0e82fbf",
        "cursor": {
          "ref": "99ec5679-aece-41b3-9a74-b4826af0fb3e",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "83f98d5f-d7ce-485d-b034-149fa9b55c07"
        },
        "item": {
          "id": "92969ec8-64fe-4da6-8830-6821a0e82fbf",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9a3f0c6c-f4c0-409f-8747-efca992d2ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ed6a51-bdfc-4432-873d-f60217e70c7e",
        "cursor": {
          "ref": "2566e0e0-fbd5-4ecc-94d7-d5d1d28b7172",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "45373b68-e2f6-4139-b2de-4a4c61705c34"
        },
        "item": {
          "id": "b1ed6a51-bdfc-4432-873d-f60217e70c7e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2fa19126-a00b-4443-9ad3-7abef3abafa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f220f67c-afe3-4d7f-b5e9-fd1416597bb4",
        "cursor": {
          "ref": "870b6a4e-b48a-4081-a9cc-47bc247c0f53",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "77d62bb2-1cbb-4873-a6af-d684f3031988"
        },
        "item": {
          "id": "f220f67c-afe3-4d7f-b5e9-fd1416597bb4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5ae7f646-5ba6-4898-82b6-bb8c753afa1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff468777-56fe-4272-bbcf-2f6c97ba010f",
        "cursor": {
          "ref": "9251e75c-fd4a-4b03-a525-351cd7c9b227",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "6d85d8a6-c7bd-4e12-a125-9ac3e895c16a"
        },
        "item": {
          "id": "ff468777-56fe-4272-bbcf-2f6c97ba010f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "92170f25-825e-48ab-8d54-21a43589cb97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98eb3e26-0586-4ed8-884d-2e443955fc4b",
        "cursor": {
          "ref": "6e336190-ee47-4052-9f55-e280ccead86e",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7cb0f662-d6ac-464b-a82c-b1a98d25fd4c"
        },
        "item": {
          "id": "98eb3e26-0586-4ed8-884d-2e443955fc4b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "40ee74c7-b69b-4c08-8456-b1b65773a0a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18197db-fec2-43db-bfba-d431e1050368",
        "cursor": {
          "ref": "b1113e0e-5e59-4b03-9abb-ea0ec6afe839",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2708c238-60c6-4f14-a382-586bf2f00bb7"
        },
        "item": {
          "id": "a18197db-fec2-43db-bfba-d431e1050368",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "93f4aacb-5742-4f54-bb6f-7671e1300725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3551c39-a330-445f-830b-8d50e8468d7b",
        "cursor": {
          "ref": "9690ce20-8bba-4190-aef5-22dfc9fd42d5",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "329dbb23-b61c-4de3-a82c-023b858c3b1b"
        },
        "item": {
          "id": "e3551c39-a330-445f-830b-8d50e8468d7b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e5771fd4-e431-434d-9069-f50c2de42108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7f0356-c66b-4815-b26c-49ef57da54a9",
        "cursor": {
          "ref": "41284b34-6fe4-444b-84e9-b6fce68ada72",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "04c8f020-6e7e-4601-966f-b520f84997bd"
        },
        "item": {
          "id": "df7f0356-c66b-4815-b26c-49ef57da54a9",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "48947b0d-9ff3-4e76-be6f-127b8989f2db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d733ec1-cb7c-448d-8616-d69e751b4673",
        "cursor": {
          "ref": "4fd15bfa-0697-4e75-99a0-9313d44cb196",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2d890b55-1541-4ecc-a1ff-b8a2b1eb360f"
        },
        "item": {
          "id": "0d733ec1-cb7c-448d-8616-d69e751b4673",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5bfaf973-99de-4ce2-9d4c-9667a4ee0735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a715b75a-e40e-49fe-8643-e772138b5998",
        "cursor": {
          "ref": "f32ec54d-fa5d-4328-b8a3-d0bb3a9eb239",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "48225b96-5d21-4b89-9b4d-c3c78b699297"
        },
        "item": {
          "id": "a715b75a-e40e-49fe-8643-e772138b5998",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "77747bfe-9dc1-437c-aec4-b8af99439147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e5dbf8-3f37-43b0-a689-38a3f9be7010",
        "cursor": {
          "ref": "e156528a-6074-4d4b-83cf-bd8b49a6e0e8",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "93fcbe10-da39-4c3b-936c-36db57bd2c9f"
        },
        "item": {
          "id": "44e5dbf8-3f37-43b0-a689-38a3f9be7010",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "53cb054a-7053-4a68-a42f-25ee69fe7ff5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab500eb-1282-4b20-8f4b-9be52a756ac0",
        "cursor": {
          "ref": "75d95298-c951-4f47-bc06-228727fbe501",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "115794e3-417c-443a-86cc-a04bb97b7bcf"
        },
        "item": {
          "id": "9ab500eb-1282-4b20-8f4b-9be52a756ac0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f871be41-cd85-4354-9b06-de441ca4c9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e474a03-5df4-492b-9fc8-ecbe2ed8aa4a",
        "cursor": {
          "ref": "7ccf0334-9b26-4400-8003-0ddde731fe54",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "686dd0a3-4f27-4a8e-a438-d3fbaf4b34c6"
        },
        "item": {
          "id": "6e474a03-5df4-492b-9fc8-ecbe2ed8aa4a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3102feea-5f7e-4af8-a8c7-35277944ae23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc91974-a2f7-4902-a1dc-d6e12442bbe5",
        "cursor": {
          "ref": "97731ef0-bab9-4a1f-a3d7-6b0c746cf040",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f2b89385-2b2b-4416-a15f-ad0e313b0c6a"
        },
        "item": {
          "id": "4fc91974-a2f7-4902-a1dc-d6e12442bbe5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "22f94412-d825-4166-a0a0-424b6841e532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8802bf8-a2cb-488b-8b84-7b6012f8506b",
        "cursor": {
          "ref": "6fbc3eb4-981f-4176-86e1-4618777de5d7",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8dbc8619-cc91-43cd-b444-d9fd15952dcf"
        },
        "item": {
          "id": "e8802bf8-a2cb-488b-8b84-7b6012f8506b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0a993fa5-c8b2-49a6-be4c-921acb6a7360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca442721-d16c-402f-a0ea-eecd9ab87e3e",
        "cursor": {
          "ref": "3e410a7e-4e85-4ec3-a037-85dd3b094351",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c3e0bf46-a90c-4666-b12b-ac71deb5d60e"
        },
        "item": {
          "id": "ca442721-d16c-402f-a0ea-eecd9ab87e3e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3a3f6852-2031-482b-8b8b-c521a9d7841a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46475df-7205-4bf0-a5f6-e43d2e66998b",
        "cursor": {
          "ref": "88c8a575-d167-4fd5-879a-bd3ea23293d6",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "80dbd2a3-b99b-4135-b8c3-52ed4ae305a7"
        },
        "item": {
          "id": "d46475df-7205-4bf0-a5f6-e43d2e66998b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "912d29cb-ed37-4c09-aec9-2e4718500805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebbb8d71-1136-4ba4-abe7-43c652945e2c",
        "cursor": {
          "ref": "ad5f227f-1f44-4a53-ad16-a7c6ab0c26f4",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "146c2ca4-9d5e-42b9-9fee-a9b3eaad7782"
        },
        "item": {
          "id": "ebbb8d71-1136-4ba4-abe7-43c652945e2c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7308b88e-b903-437a-ad0b-f65b7da2e576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b16e62-5a79-4902-9cd3-573dac325313",
        "cursor": {
          "ref": "384f6003-9237-4e84-a022-146b7f611ded",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "583792c3-562a-4eda-a585-ce0825291392"
        },
        "item": {
          "id": "c2b16e62-5a79-4902-9cd3-573dac325313",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f03b12f6-7b85-4917-b870-b27d2ca74df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "debb634f-0fe0-40b7-8660-820c820f0239",
        "cursor": {
          "ref": "8aeedc2c-f248-495b-b198-c2c04e5070eb",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f5156682-9821-4688-9e52-8c6ea20c67c5"
        },
        "item": {
          "id": "debb634f-0fe0-40b7-8660-820c820f0239",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "56ed0268-7755-4bc0-8145-401080bbcd13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32bb7786-7173-4d07-8747-5da9c0e4c2ae",
        "cursor": {
          "ref": "c7f1f8ad-0e54-49dd-a1e7-9bfbc4c110f4",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0db55600-cab5-4d2d-977a-11725dbaf77f"
        },
        "item": {
          "id": "32bb7786-7173-4d07-8747-5da9c0e4c2ae",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "25d858ef-497e-42b5-8e92-371107253c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a29a9db-1738-4424-bcfd-44270a2bcf56",
        "cursor": {
          "ref": "3a14b161-edd2-47b6-8a81-dc61768c5458",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a9c8e9e3-0a1e-4b16-b7d9-020d2931df07"
        },
        "item": {
          "id": "3a29a9db-1738-4424-bcfd-44270a2bcf56",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a659ab8c-a464-4590-8897-8094dbbb0df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504a7270-5a2a-4bd0-b846-bb9f12efa387",
        "cursor": {
          "ref": "3ce85c39-ec21-4344-82e1-24b98d0912dd",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "816cada3-3cc0-4369-89a5-c01be3183a26"
        },
        "item": {
          "id": "504a7270-5a2a-4bd0-b846-bb9f12efa387",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e387400d-e64a-4bfc-b9e7-c2d4d59b1f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d041a5-4f27-480d-a36d-48591291b010",
        "cursor": {
          "ref": "3ebdcffc-5de0-4148-8d97-15f9098410c8",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "cda5c7af-8095-474e-9077-40287e9dd1cd"
        },
        "item": {
          "id": "42d041a5-4f27-480d-a36d-48591291b010",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6b2ff818-8220-4fc8-be2b-4100613a2021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67792325-a977-40d1-bdbe-e331e17aef39",
        "cursor": {
          "ref": "206eeb42-43da-496f-8306-e33d949eae37",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "25e7e05f-c3c5-45ac-82a7-aa472edfbc95"
        },
        "item": {
          "id": "67792325-a977-40d1-bdbe-e331e17aef39",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6b1be53a-758c-4db5-b27f-f58142b27b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905efc6a-0f3d-4eb7-a621-c4ff3294e7aa",
        "cursor": {
          "ref": "bfd13aae-d36b-4dae-a40f-8d286899d8f8",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5a01899a-b876-4524-9ef2-f8b67ac6beb8"
        },
        "item": {
          "id": "905efc6a-0f3d-4eb7-a621-c4ff3294e7aa",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "48cc42b2-674c-4173-a76c-08173a19c0e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e426c5d2-fe32-41f7-ab84-0c8acfa83953",
        "cursor": {
          "ref": "9162fe1c-86ec-49a4-9534-7fca29c17085",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "33867cbc-cc57-4681-aa57-155897fa9d2d"
        },
        "item": {
          "id": "e426c5d2-fe32-41f7-ab84-0c8acfa83953",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "9cbbbd9d-5215-4af5-af67-fc1095cec618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17245b42-8575-4cf6-9c6a-3e151661c05c",
        "cursor": {
          "ref": "36059fc9-b7c6-446b-a5b2-01a5ba240f7d",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "cd1bd300-cae8-430c-aaed-235f76e5c421"
        },
        "item": {
          "id": "17245b42-8575-4cf6-9c6a-3e151661c05c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "95ea8446-06ff-421e-8004-5892366e00b3",
          "status": "OK",
          "code": 200,
          "responseTime": 73,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "98f9b7f1-5992-4c3f-b8de-ecb2bf92d8fa",
        "cursor": {
          "ref": "b8988f78-d912-4187-877f-7d8d5f2f2967",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "31260bdf-f829-4f45-9d4b-4b1bfc3d3f53"
        },
        "item": {
          "id": "98f9b7f1-5992-4c3f-b8de-ecb2bf92d8fa",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d1fa66eb-b530-45ce-8a39-ccb3fa6f7bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8a2565-9f6e-4c28-b487-78909612d371",
        "cursor": {
          "ref": "05354716-a6f6-44e9-94be-87c78edd4074",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a11bb2fd-bdd9-475b-88c8-bf9a2c7f841e"
        },
        "item": {
          "id": "0a8a2565-9f6e-4c28-b487-78909612d371",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "58162888-4beb-4411-bdcf-aa8372a1d023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "783eb58e-180e-4b82-8119-885205f7b1ac",
        "cursor": {
          "ref": "0c61329e-46d3-4e14-829f-d7ca844b70ae",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f3970d50-1c89-43c2-b37b-deb6250d4d72"
        },
        "item": {
          "id": "783eb58e-180e-4b82-8119-885205f7b1ac",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "fa263c23-c38b-43aa-b0d3-13b835f6a42c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59536861-44d3-4eed-a3cf-c997f79ccd58",
        "cursor": {
          "ref": "2a454322-09d9-4d7e-a248-1ab9d94f0977",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "831a66bc-b923-464a-ba0f-677695456b28"
        },
        "item": {
          "id": "59536861-44d3-4eed-a3cf-c997f79ccd58",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3c03fd53-47fa-41f9-92d0-5c49466273c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd36d3db-1d9c-4e20-ba33-21cff0e82352",
        "cursor": {
          "ref": "7d7ac814-7020-4ba8-a87b-608f984cdd7d",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5f0b177c-cb03-4185-8dbf-6725f0560a24"
        },
        "item": {
          "id": "bd36d3db-1d9c-4e20-ba33-21cff0e82352",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4eb9d203-794d-4d21-bf0f-80cd336017b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a329e4b-5c23-4027-b439-cdce07cdc5e1",
        "cursor": {
          "ref": "880b34ce-c9fb-405d-a8eb-39062d9df625",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "097b7cd6-3404-4a9d-8611-04362e0578a7"
        },
        "item": {
          "id": "3a329e4b-5c23-4027-b439-cdce07cdc5e1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "9c8e7469-6e8c-43b8-8fd9-08fac2f2a375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94bfdc4c-34f9-4d9f-8e9b-2e486f8845b6",
        "cursor": {
          "ref": "f9326bd5-cf9b-48f9-bb4a-2c5213b40d5a",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e5f20be2-4953-42da-b9ef-565534cddefa"
        },
        "item": {
          "id": "94bfdc4c-34f9-4d9f-8e9b-2e486f8845b6",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a03df757-fad8-44f6-b475-5fcd342f78a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3556a328-aba3-4851-9c8d-0096e93537f4",
        "cursor": {
          "ref": "a86aaa69-098c-4617-82a9-a422a76983aa",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "615f63fc-5971-4567-83b0-ea16843c8119"
        },
        "item": {
          "id": "3556a328-aba3-4851-9c8d-0096e93537f4",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "558209b0-edba-465d-a4e4-6295d29a1e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c833ba-a642-4a40-8755-3d491a0d79ad",
        "cursor": {
          "ref": "71ec9de7-18a6-4b05-9699-c8724462ce4a",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "fb229d4d-0829-477f-a1e2-d8d7bb814f31"
        },
        "item": {
          "id": "f3c833ba-a642-4a40-8755-3d491a0d79ad",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e39419e3-09ad-4d0d-b1f1-95fcee5fd16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd16c54c-35e4-42c7-830e-0e00d7981fe7",
        "cursor": {
          "ref": "97b0d3ce-8080-4bfc-98ca-11061b23420f",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f0f7b108-f7aa-440e-8f13-96c28aeb9ab5"
        },
        "item": {
          "id": "cd16c54c-35e4-42c7-830e-0e00d7981fe7",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "086603f4-42cc-47fa-b76d-3ba0d5bbf51d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4096f4cb-e297-48ad-a9ed-ac4e30394921",
        "cursor": {
          "ref": "96d0a437-6930-4577-825d-9c07a144fae7",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "71452743-733c-4d24-bc25-acb411f9f402"
        },
        "item": {
          "id": "4096f4cb-e297-48ad-a9ed-ac4e30394921",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "80984aa5-f291-4374-826c-923570dab9bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5573db-ef04-4918-83b2-f09852bd2530",
        "cursor": {
          "ref": "b4dd7678-0a54-4b4e-8fbf-a7c268f20e91",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a18c6184-75e3-449d-80cc-55072561ec82"
        },
        "item": {
          "id": "2e5573db-ef04-4918-83b2-f09852bd2530",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3407b821-948f-4cf7-a965-2fc958b4982f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edfde392-991b-4830-9fe6-3487ee96f47d",
        "cursor": {
          "ref": "7e7f5adc-935c-47f1-a945-263361dc5ebb",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8186efa6-87c7-48df-be37-8415a26f2735"
        },
        "item": {
          "id": "edfde392-991b-4830-9fe6-3487ee96f47d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2bd7a70e-c121-4f2a-9cec-6a94cb5b90b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8327bf18-211b-47d1-9961-43d035901f92",
        "cursor": {
          "ref": "e674ea5d-3f51-4c5b-a7f0-3f615e64c578",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "01d9f5e8-4172-4cde-aa20-93409896d641"
        },
        "item": {
          "id": "8327bf18-211b-47d1-9961-43d035901f92",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "54c03e07-9372-44b0-be8b-23974c2682e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b963c514-90f9-4c1e-b574-ac318e395dcf",
        "cursor": {
          "ref": "47ed254c-8153-478c-878b-d8252fbb1ad9",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "559e72ff-cc68-4222-a6a4-cc51e5c04c38"
        },
        "item": {
          "id": "b963c514-90f9-4c1e-b574-ac318e395dcf",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "993128b5-7854-4cf1-baa7-97c94a979ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9ce60a-f434-47fc-9851-7955ddcdd610",
        "cursor": {
          "ref": "4dee5237-d616-4945-a166-01a8351d1d3b",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8ce89d44-2e96-4f28-bfc7-b6bfdaa6f39a"
        },
        "item": {
          "id": "ed9ce60a-f434-47fc-9851-7955ddcdd610",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "96ba9d32-b06e-4abf-a08f-f6cb79c19487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5057c34c-e12a-4290-8f69-2b2fea3bf36f",
        "cursor": {
          "ref": "4e31dc80-bcbf-4ef5-830b-33333e2f5f2b",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "1ca5be74-43f1-469b-b707-705ba2f5954b"
        },
        "item": {
          "id": "5057c34c-e12a-4290-8f69-2b2fea3bf36f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "decd0f6a-98fd-47d1-9fc1-6dceecd713ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2058618b-b736-4e73-90ef-7a5e20b6ca5f",
        "cursor": {
          "ref": "a2775b1c-768b-4b8b-9117-9f8955323960",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d3ac9a19-a82a-4026-ad62-3795c6ee5600"
        },
        "item": {
          "id": "2058618b-b736-4e73-90ef-7a5e20b6ca5f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1eaf79ec-4e8f-4b85-b12e-fd3dc455c353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ce4d36-70fb-4b50-8441-ab4d3980ee84",
        "cursor": {
          "ref": "5e6d73b1-c0e0-4c90-a2cc-f8a8c4bd8dd0",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6af88551-b4cf-4383-a26a-1c8523d441dc"
        },
        "item": {
          "id": "e0ce4d36-70fb-4b50-8441-ab4d3980ee84",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0eee11bc-4e9a-4496-ac71-2987ba3f4d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a23ab1-609e-4c33-b4e0-7e05d4340f3f",
        "cursor": {
          "ref": "8aef8af6-7552-45c6-8fb2-caa56a410c82",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "4dd290fb-2803-4ed6-973c-4aa814563e9f"
        },
        "item": {
          "id": "49a23ab1-609e-4c33-b4e0-7e05d4340f3f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f75956b6-c42d-4c5a-9b60-5964e2de4c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca56a5b8-f912-4f71-8585-57ca31222ccd",
        "cursor": {
          "ref": "d6d5af97-f3e8-4df4-8c52-48a5f3b90c9c",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8daf16f9-9452-4e58-a521-86ad6ff23ed7"
        },
        "item": {
          "id": "ca56a5b8-f912-4f71-8585-57ca31222ccd",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b6f926ea-f023-459a-abef-96a8086da3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d4eeb64-d775-4172-9ca3-11d563d9e164",
        "cursor": {
          "ref": "f127275d-0ee2-4d69-93f6-3b52b5b7e27d",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3a6b215d-a710-4767-bbb9-5a95e596d134"
        },
        "item": {
          "id": "7d4eeb64-d775-4172-9ca3-11d563d9e164",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "155a8701-63d6-4eb1-940c-7aa5d81a7927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2bcfdf4-a188-4502-a743-068525b5fd19",
        "cursor": {
          "ref": "33e1f6cb-4bc2-4d08-acf8-ed4bb5db996c",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f2ac45d9-c04c-4a23-9402-70f99c1c436d"
        },
        "item": {
          "id": "a2bcfdf4-a188-4502-a743-068525b5fd19",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1695acb5-7134-467a-91db-23bedc10c872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79438583-7590-4544-b0b8-7da614975416",
        "cursor": {
          "ref": "b277d265-93de-450a-ab51-ef3d5951c861",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "40943483-4de6-45f2-91d8-9d8af809e47d"
        },
        "item": {
          "id": "79438583-7590-4544-b0b8-7da614975416",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "64875646-ee7a-4c81-82ba-7291e0879a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c05210-8683-4e2d-b38a-e2a1dddda2ee",
        "cursor": {
          "ref": "42f42422-0625-4ac3-b2c9-9039822b241b",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "183972f4-0f73-4b9a-9edd-51b653aefd9a"
        },
        "item": {
          "id": "48c05210-8683-4e2d-b38a-e2a1dddda2ee",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7aba1ca1-ec0f-452b-9d2f-394954e72c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6401842-e01a-4e66-9945-68df906aa297",
        "cursor": {
          "ref": "fc9b8403-91ea-48a7-8aae-5eb3512cc775",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "5d229066-f654-4a10-a8ba-2c546856c1fe"
        },
        "item": {
          "id": "a6401842-e01a-4e66-9945-68df906aa297",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "bb9993f8-b5a2-44ad-819a-ed918e08df16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aabf824-0f4f-48ad-b475-b17d8c02b263",
        "cursor": {
          "ref": "6c6706f9-ee6c-4269-a849-1d03b1c1753f",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "78b750f4-795b-40b8-9d3f-a2e9a142a85a"
        },
        "item": {
          "id": "6aabf824-0f4f-48ad-b475-b17d8c02b263",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8d012bc2-817a-4e5f-9665-7f2c1403687b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9131c10d-1a3c-4074-9d3d-095a3cf4f3cf",
        "cursor": {
          "ref": "1dd7b90e-8fa7-443c-bbf5-2c1e269ffc54",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "668c19b7-e942-4839-8fe5-71fcc92eb1fd"
        },
        "item": {
          "id": "9131c10d-1a3c-4074-9d3d-095a3cf4f3cf",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "599c8dc9-3008-408b-885d-82472bd16dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "134fc99c-34bb-4420-80f4-1239c39fa606",
        "cursor": {
          "ref": "22d6a5a9-93e5-410d-a86a-9afa287d8764",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "32c0caed-1cde-443b-95da-c2437b224b58"
        },
        "item": {
          "id": "134fc99c-34bb-4420-80f4-1239c39fa606",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "fca79620-8b9f-4636-9b6d-e7c6b66a8ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe1f1f4-ee0b-4466-be82-67595924e915",
        "cursor": {
          "ref": "6af4cd13-b9da-4e65-8ea6-d76b84a00db0",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c01ea07b-91b9-4a57-b801-f55b804abfed"
        },
        "item": {
          "id": "7fe1f1f4-ee0b-4466-be82-67595924e915",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "77ee89e8-1c8d-469d-a7b3-b1bb78defd42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab96d2f-3dd3-4be6-b419-968205033628",
        "cursor": {
          "ref": "5f5d15eb-fce3-460f-8407-16ae216e4b56",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7a1c9a91-1ef7-49fa-a92e-474de766ae88"
        },
        "item": {
          "id": "cab96d2f-3dd3-4be6-b419-968205033628",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "55d1c3e1-9e72-400a-b25a-882b1a0192b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b62255f-1045-472f-9c5b-b8971cbed044",
        "cursor": {
          "ref": "1a44df7c-a1a0-4c38-bd98-a5728b1817f3",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "21deaf70-b3ba-4854-9af3-c71d152c213c"
        },
        "item": {
          "id": "7b62255f-1045-472f-9c5b-b8971cbed044",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e15d16c7-f6bc-4a35-be5e-2dfd301e8a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f959a3-1b1f-40db-b0f0-c833161b6cca",
        "cursor": {
          "ref": "2d15f0cd-5893-4199-a4a3-d6750423d22e",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "6a70529e-c868-41fd-9220-4b9de348dcb0"
        },
        "item": {
          "id": "f1f959a3-1b1f-40db-b0f0-c833161b6cca",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7d508673-1df8-4f48-84a9-df8a7234c572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ca3c76-a330-4d3c-a53a-fc2ec9eca5ef",
        "cursor": {
          "ref": "09f32cbc-6d28-4631-bcbb-2f622021b994",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "29d76f8c-ada1-465e-b8af-3e5a3f49de9b"
        },
        "item": {
          "id": "13ca3c76-a330-4d3c-a53a-fc2ec9eca5ef",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f00b1fba-8e69-4921-8ec8-a46c6835a0ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7f264a-7a21-4775-a599-0f21529ca427",
        "cursor": {
          "ref": "4adca08e-57ea-41c6-a9d4-8738730c9d66",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0250b609-29e0-4faf-ad18-88c3b12a9005"
        },
        "item": {
          "id": "df7f264a-7a21-4775-a599-0f21529ca427",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f0780bec-4b6d-4eb4-99fd-1e298c4d7ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861db347-c91b-4829-9f5e-bea93d35276b",
        "cursor": {
          "ref": "875b718c-9298-4b75-beaa-de0a9d30b55a",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "16550e12-009a-42f6-b10c-8c6fd9d7b980"
        },
        "item": {
          "id": "861db347-c91b-4829-9f5e-bea93d35276b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "bd06a185-0f9b-4d21-8f6d-db772641fabf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "110829cb-757b-4fb0-884e-533ef4b4cb82",
        "cursor": {
          "ref": "996838aa-5ffa-43d9-b6bb-c28d892a1fca",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "25ef99cd-68e1-4c74-929e-6de7b62c4f6b"
        },
        "item": {
          "id": "110829cb-757b-4fb0-884e-533ef4b4cb82",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1afe38c5-f7ff-4aff-9c68-972826c90461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b32bd63-d778-4591-a319-e09f9f0dd307",
        "cursor": {
          "ref": "d7c45088-4714-480a-800d-29b17d9e3851",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d53b07b4-afc1-4689-a8f3-8e6cd838eb3e"
        },
        "item": {
          "id": "5b32bd63-d778-4591-a319-e09f9f0dd307",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "fba53e43-abf1-41dc-a097-d5fd7d505de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872abad3-5044-47d0-9090-f7f7472a6ceb",
        "cursor": {
          "ref": "dfdda74b-a382-497d-a6b6-3db26feba767",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c7b3daa6-77e3-4f35-92ac-4fbb5d957dff"
        },
        "item": {
          "id": "872abad3-5044-47d0-9090-f7f7472a6ceb",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "31793fd1-ecc9-49a0-af0e-66fe000f30b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef20692-8de2-451d-90a2-c04e20bd2a09",
        "cursor": {
          "ref": "428d662a-5eb1-4b8c-8504-0c1ab0958bc2",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "aef7e1f8-c8a5-4f39-9550-cdbe7b0e26f8"
        },
        "item": {
          "id": "8ef20692-8de2-451d-90a2-c04e20bd2a09",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "eff6c9a9-8196-4a79-8bb0-38d403685eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998befbb-70e4-465d-947f-c7bd1d53613d",
        "cursor": {
          "ref": "74647970-b2a8-4964-8f3b-a98542da2e64",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9c49892a-dc4c-4713-b2e2-7c75b411ce47"
        },
        "item": {
          "id": "998befbb-70e4-465d-947f-c7bd1d53613d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "425c05dd-1f46-43d3-8a7d-e2621dff118c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "463d8cbc-f42e-4f89-a162-913db0588568",
        "cursor": {
          "ref": "b9a90171-bc6f-4f30-ac17-2acff5bda408",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8ba18380-6a1b-477c-8bb2-3f6afbac46e1"
        },
        "item": {
          "id": "463d8cbc-f42e-4f89-a162-913db0588568",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "859d6cc8-d3b5-4741-8470-4673bf16110f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7d8c91-8762-4c92-83ed-4daa3d8fa304",
        "cursor": {
          "ref": "83a93853-6a6f-4338-b1ce-fe6b6cb2db69",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "1e9af000-a759-4541-b910-1582fba38144"
        },
        "item": {
          "id": "fe7d8c91-8762-4c92-83ed-4daa3d8fa304",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2a1977b6-7fba-41ab-8930-f531f92a5153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9338cf09-2203-4f4d-8d6f-ef4cfcb01ac2",
        "cursor": {
          "ref": "a0b834a4-2d3f-4ca9-8863-b7819301482f",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "cc26f7ca-0ec0-4aab-ae69-045e32d5e6d7"
        },
        "item": {
          "id": "9338cf09-2203-4f4d-8d6f-ef4cfcb01ac2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7887dcce-d3b0-46f7-9266-eb714b8d329c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "137fa90a-bb8b-4f12-a81a-0b983a645afe",
        "cursor": {
          "ref": "b0e40acf-eb01-4949-ac61-2616d975cc9d",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ba7fef7a-07cf-4234-b6e2-54b77e8cf3c3"
        },
        "item": {
          "id": "137fa90a-bb8b-4f12-a81a-0b983a645afe",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ac2aac08-b4de-4843-8e63-65b08e17a126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b27760-8155-45c8-8d8d-21bfe94f0480",
        "cursor": {
          "ref": "b34f2e69-ec37-47dd-8830-8fad7a4c2a12",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3fc43210-a27e-4c7a-af0e-e3f7f63fa7ee"
        },
        "item": {
          "id": "15b27760-8155-45c8-8d8d-21bfe94f0480",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b733926f-4368-4d2d-b0b0-b6bb74b0c79e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6daf52-a7da-440a-9782-8f4520da6593",
        "cursor": {
          "ref": "85b1ed95-2cb9-4610-9bd6-38efaf98c73e",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ea6c7ed5-8143-4fae-8b48-349ba3487be6"
        },
        "item": {
          "id": "3b6daf52-a7da-440a-9782-8f4520da6593",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ff9722c3-6eea-4ff6-b7b7-6c65ffc15c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5948e4-f4e2-4107-abfa-30dae9287372",
        "cursor": {
          "ref": "ba73f5e4-a6b0-478a-84b0-58525dc0e0f1",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "aa2a3c25-8adf-4083-883b-f74793012ca2"
        },
        "item": {
          "id": "1e5948e4-f4e2-4107-abfa-30dae9287372",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "553603bd-d629-493d-9123-59a15c59cbe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9194c6c-0231-479c-9d84-4a65c918a9f7",
        "cursor": {
          "ref": "11dcc248-f057-4b84-bd5d-fa94ff0d0088",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "44330a1f-6221-4cc5-b732-715a548a51f3"
        },
        "item": {
          "id": "c9194c6c-0231-479c-9d84-4a65c918a9f7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f975e7e9-9683-40cd-8d97-883d106ae953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef5ab9c-bce1-4db1-befd-d48a8aaaddf4",
        "cursor": {
          "ref": "2fc56b14-91a5-4368-8d08-f426b58ffa47",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "47c60ec5-c2df-45c0-8562-cda26991fd84"
        },
        "item": {
          "id": "4ef5ab9c-bce1-4db1-befd-d48a8aaaddf4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2dae786e-547c-4ae6-bf07-c58f5ed69461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b02b54-5dd5-4bc3-9928-e5f81a1b84a5",
        "cursor": {
          "ref": "94029d86-f22d-46d9-bfe7-585baec33f3b",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f8cbf2f6-38d3-44b5-ac64-c452a17536e8"
        },
        "item": {
          "id": "e2b02b54-5dd5-4bc3-9928-e5f81a1b84a5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f2cac566-8832-4508-a942-79f05094f24e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d94061-6547-44ff-9a90-60c7a25032b8",
        "cursor": {
          "ref": "33681b90-fc20-4d39-b79a-58815ce86c2a",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "3b8ee18f-f0d0-4aec-9350-5ef1883ba014"
        },
        "item": {
          "id": "04d94061-6547-44ff-9a90-60c7a25032b8",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "cc61c53f-dd18-423a-8183-94842167ac07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8107cd1-03c6-47e5-bacd-bf70f7e46ac0",
        "cursor": {
          "ref": "c551e403-0f44-4e93-b732-7e725c3fe1b7",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9d156d13-5d19-46e1-8b9f-39864c51ecaa"
        },
        "item": {
          "id": "d8107cd1-03c6-47e5-bacd-bf70f7e46ac0",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "00e308e5-7ae5-4372-a748-fc9004a04847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f130610c-56c5-4d4d-8701-2eedecad2177",
        "cursor": {
          "ref": "aee8bc85-c76a-4808-a025-aeb793d45e00",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "af6f6ec8-27a9-4fde-b746-da8e8329d9a7"
        },
        "item": {
          "id": "f130610c-56c5-4d4d-8701-2eedecad2177",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a739fba4-7d8d-4549-968e-d0fbf6ea1b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6855c752-4703-453f-a262-f5a5f1ad850e",
        "cursor": {
          "ref": "9e74ad44-615d-4db8-adff-2372ccbd6c4d",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "be501972-7717-4f5a-ace0-d6a1b1bbfae3"
        },
        "item": {
          "id": "6855c752-4703-453f-a262-f5a5f1ad850e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2287b453-77ed-4d87-af42-0f14fb11275c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad75ec55-bab5-4bc9-9a6d-17a93747e110",
        "cursor": {
          "ref": "c3dc15b4-4451-427a-9e67-227f53406337",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "73a6f31f-ea36-4411-becf-ec6c57a3bf98"
        },
        "item": {
          "id": "ad75ec55-bab5-4bc9-9a6d-17a93747e110",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "75baa6b6-ef4b-402e-bc5d-24c974b7d204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be65030-d2d9-4439-a179-be1b0fe1ac4c",
        "cursor": {
          "ref": "e1a75cba-a985-49e0-82d1-d47278248dbd",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "d74ba88f-f9c1-4ff5-b805-75907b2212d8"
        },
        "item": {
          "id": "0be65030-d2d9-4439-a179-be1b0fe1ac4c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "893fde5f-c1fd-40bd-b570-1f7485887026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf2b741-4f52-418b-9f4f-0e851b39e167",
        "cursor": {
          "ref": "d124d825-73d9-4110-b837-cbe3e132d88e",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "bd0ba9a8-41ef-44a3-a927-7d6f9b91af39"
        },
        "item": {
          "id": "5cf2b741-4f52-418b-9f4f-0e851b39e167",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a72ee696-c008-400e-a031-1805967d05a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87c46e8-4bc0-4a51-98fd-ddbdcffa41c9",
        "cursor": {
          "ref": "3ce25264-852e-47f8-a1f2-b7070b9cd0f0",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "980d8fce-e3b4-4c6b-80db-33b919fd3b49"
        },
        "item": {
          "id": "c87c46e8-4bc0-4a51-98fd-ddbdcffa41c9",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c5a69b0d-c13f-41eb-8344-4b138074f0af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07037ac8-ba50-4056-a39c-c73cccdaa8f3",
        "cursor": {
          "ref": "fcaf06b4-a3fc-4907-bbd9-e3a26ad6bb54",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "82dff915-317e-4736-a270-79ed4e091a17"
        },
        "item": {
          "id": "07037ac8-ba50-4056-a39c-c73cccdaa8f3",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "42a5d9c7-d17b-4f59-b81b-a42c88978d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f76a3e7-d5f1-409d-8c2c-70129124e7ae",
        "cursor": {
          "ref": "9265f5bb-3238-4327-9ac4-50a4b242f081",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "131bf28a-daf1-40ed-82cc-3f4f6bb15225"
        },
        "item": {
          "id": "9f76a3e7-d5f1-409d-8c2c-70129124e7ae",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3d715080-39dd-4a92-8cc2-96f9798f9940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1621f23-5443-467a-865c-54eb498e9db7",
        "cursor": {
          "ref": "8eb603b5-91fb-4bcc-b15c-df9bd110e731",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "451073ac-86c9-45e6-9ffd-ecc8a6675fab"
        },
        "item": {
          "id": "d1621f23-5443-467a-865c-54eb498e9db7",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a22e5a77-38b9-4adf-bdcb-fc83d44787b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db269123-add1-4c4f-b88c-a3ccce662728",
        "cursor": {
          "ref": "5c0b4be0-849d-4f63-84b7-a3fdc667a0cb",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "16b7513b-febb-4c11-bacb-0b6cad198f6c"
        },
        "item": {
          "id": "db269123-add1-4c4f-b88c-a3ccce662728",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0a918e76-dc50-4f8f-b778-669779e54343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90853862-d625-47dd-b5e6-3b84fb814750",
        "cursor": {
          "ref": "90cbd117-001f-4a0d-a5c6-a3228bf7640f",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "792947c4-1896-4213-bcbf-9727f1364ced"
        },
        "item": {
          "id": "90853862-d625-47dd-b5e6-3b84fb814750",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "12cdb571-c26b-4218-8196-c84f5a9451c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6954ddf-420d-4326-a362-d805b62d45a8",
        "cursor": {
          "ref": "90c1eb22-1fe3-45c8-8360-503605052b18",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "7604f4c8-5973-409e-a7d2-6be9d072b67d"
        },
        "item": {
          "id": "d6954ddf-420d-4326-a362-d805b62d45a8",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "be1f97a0-3035-458b-bd2b-e132a40d6cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4ab46a-c981-4e67-8860-57456dae287b",
        "cursor": {
          "ref": "f35abd78-c6ca-4d8f-b269-307cc750ea76",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "4b1c8ff1-1879-4826-bbc5-6b0c219ec63a"
        },
        "item": {
          "id": "3b4ab46a-c981-4e67-8860-57456dae287b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "fe96215d-0778-41a3-847f-25ce47208b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b179a69-8a00-4379-8ec7-833a367446b5",
        "cursor": {
          "ref": "a3aa1795-b974-4972-9203-e87aea876f42",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "382366e5-49f0-4cda-b09f-a6e930e916be"
        },
        "item": {
          "id": "6b179a69-8a00-4379-8ec7-833a367446b5",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "20e49661-06fc-4fe9-af91-7ccb8b569193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c246846a-327e-441b-b8b8-e34883b5e72b",
        "cursor": {
          "ref": "5ffe18a4-f03b-4ea2-b34e-71a2aa1a4b30",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "3f3b27c5-3b25-48b5-a63a-9f21dd6c65b2"
        },
        "item": {
          "id": "c246846a-327e-441b-b8b8-e34883b5e72b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b69888b7-794e-4506-a121-775b7f7a73e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0674f93-8780-4885-9d20-4085972c2ff6",
        "cursor": {
          "ref": "891e253e-d9c3-4dbf-9687-97b7692b85c3",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "55c0ea60-53c4-42fe-baca-1a164bfc1407"
        },
        "item": {
          "id": "d0674f93-8780-4885-9d20-4085972c2ff6",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ef4d6301-c74c-4c63-92d0-f8e0269b70b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61377110-ba92-4a8b-8668-cc046ee3fefb",
        "cursor": {
          "ref": "ee0cfdab-51ad-4a9e-a1e1-7e7f5948960f",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "01aa2825-2fcb-4360-866f-49398f3ea7c1"
        },
        "item": {
          "id": "61377110-ba92-4a8b-8668-cc046ee3fefb",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "595deb23-ac12-4784-94ca-f307566b74e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f506d6-7849-4eb2-a603-9ba96d829356",
        "cursor": {
          "ref": "558e2938-1dd8-442f-b8fe-10517658411d",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "62dfc8e7-c131-4853-bd8d-4f35340a4987"
        },
        "item": {
          "id": "c1f506d6-7849-4eb2-a603-9ba96d829356",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d53829ee-f047-4f62-ad0e-87410459592b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609daf5b-2310-4602-bbce-04eb3d981fca",
        "cursor": {
          "ref": "8de9c4c0-2616-44d0-a469-ec849f69f22f",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "94330e23-fcdf-4432-b2aa-ce7509d991d6"
        },
        "item": {
          "id": "609daf5b-2310-4602-bbce-04eb3d981fca",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9f177451-8ee5-4fc7-ace9-383070f5566d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b0853d-b54b-47fa-9cfc-a61109d6ac45",
        "cursor": {
          "ref": "46d1d9fa-8b66-49e0-a6dd-93cb3786f197",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "b052c674-7b4b-400f-8253-317aae7cc639"
        },
        "item": {
          "id": "c4b0853d-b54b-47fa-9cfc-a61109d6ac45",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e5552cbe-5c82-4d2b-8732-ba464d6de242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb0f32a-1fe0-48c1-8f8a-48fc1417f101",
        "cursor": {
          "ref": "3bbb9454-b702-4500-9caf-8b6e9e9d6d5d",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "38c8d376-2eca-43d2-b6d8-12b1a22ef706"
        },
        "item": {
          "id": "ddb0f32a-1fe0-48c1-8f8a-48fc1417f101",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "bf7ae1b1-b618-4da8-96a1-ade898176d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf9a016-e87e-4a79-aa9d-637834c0ac1b",
        "cursor": {
          "ref": "19d77988-de47-47cb-92b6-f7d8ce1af371",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "376ec67d-54e6-4a43-aaae-f5dc83e9f8af"
        },
        "item": {
          "id": "6cf9a016-e87e-4a79-aa9d-637834c0ac1b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7c53f803-c1a7-43c2-8ef0-d292d370f0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f910c0-77f3-48c3-ad99-0ce8b675d0d9",
        "cursor": {
          "ref": "2b389904-1c5c-4853-a15a-0a24a0a1ca44",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "389cdf61-66e3-46fc-9e3d-f9d644f9473c"
        },
        "item": {
          "id": "04f910c0-77f3-48c3-ad99-0ce8b675d0d9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7cda0a70-d3fc-4093-8453-2679ea859969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af84a65-73d7-4cbf-ad4b-24466d27ca6e",
        "cursor": {
          "ref": "8c5fb75f-2d1c-44df-8777-4001e7d564a5",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "ad9539fe-5526-4bd2-8442-ac0735cfdaae"
        },
        "item": {
          "id": "8af84a65-73d7-4cbf-ad4b-24466d27ca6e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d352d2c0-1439-4168-9c6b-351ba0b0ba46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9727b9-d99d-4b56-94ad-5859ec318e51",
        "cursor": {
          "ref": "b5dc710d-1705-48df-ae15-54af9db22093",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "5b9071af-69ea-499e-a19c-ce5be1538ae0"
        },
        "item": {
          "id": "9c9727b9-d99d-4b56-94ad-5859ec318e51",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8b024d26-b08b-4941-9190-ee56a11d7e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a7fa223-0328-4863-a80c-f2b6512815d7",
        "cursor": {
          "ref": "d4286257-a3ca-4f2d-9ff0-39afe4dedbe5",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "efc638e3-8f02-4ed6-aa4a-140e920c414f"
        },
        "item": {
          "id": "0a7fa223-0328-4863-a80c-f2b6512815d7",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "87156b8a-d314-4104-a256-2526159fb02b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6517124-1813-4775-823a-508fde35a845",
        "cursor": {
          "ref": "d10d71be-6944-416e-9f0c-42dcc5df34e0",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "d06ed885-b4ed-4883-8ff4-75ccce1c1a18"
        },
        "item": {
          "id": "e6517124-1813-4775-823a-508fde35a845",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a2356067-e0fd-4053-971c-9343c2030520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e863eb04-410c-4d27-8efd-b8dd0e285f51",
        "cursor": {
          "ref": "b40a5e42-97c6-444d-8977-4611277d2974",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "06aaf6e0-df3f-4f8e-8123-ca3469a8d486"
        },
        "item": {
          "id": "e863eb04-410c-4d27-8efd-b8dd0e285f51",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e4fec362-4a38-49ce-b529-1bcc24ebf67e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9355232c-9857-4669-acff-80270a0bcc23",
        "cursor": {
          "ref": "ee25f613-5d27-445d-87f9-a17f5bc0e3f3",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "d11690d9-6516-4c24-96c8-cd7d77bd1ac3"
        },
        "item": {
          "id": "9355232c-9857-4669-acff-80270a0bcc23",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "9e57ad31-8a60-41b8-bd28-6652aeea7ae4",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "933801d6-f85c-45c3-9a12-35e3b7a94f4e",
        "cursor": {
          "ref": "cb39a4c3-2e23-4811-bd17-5d39356c02f6",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "60264645-bcc7-4501-ba7d-4063820bc12c"
        },
        "item": {
          "id": "933801d6-f85c-45c3-9a12-35e3b7a94f4e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "bbca3ac3-6268-4d60-8896-3138482da644",
          "status": "OK",
          "code": 200,
          "responseTime": 2893,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "842e3be7-4b45-415a-9290-372ebfc60c7b",
        "cursor": {
          "ref": "b7bc557c-ac1d-4d07-a28a-5882c3cfcf76",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "7f1efa0e-11dc-43c7-9959-2d468cf56cfb"
        },
        "item": {
          "id": "842e3be7-4b45-415a-9290-372ebfc60c7b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f44e14f1-d762-448a-8709-442fcdce3fa6",
          "status": "OK",
          "code": 200,
          "responseTime": 3289,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "03538d1d-0773-46eb-819d-5d575e2dc3f6",
        "cursor": {
          "ref": "63f67865-09b8-4846-b2ad-4547615c740f",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "11b2b809-0876-41a7-8a2b-47b4503518c9"
        },
        "item": {
          "id": "03538d1d-0773-46eb-819d-5d575e2dc3f6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a296e29e-6cd0-4241-949e-d1f66d6d3ef9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03538d1d-0773-46eb-819d-5d575e2dc3f6",
        "cursor": {
          "ref": "63f67865-09b8-4846-b2ad-4547615c740f",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "11b2b809-0876-41a7-8a2b-47b4503518c9"
        },
        "item": {
          "id": "03538d1d-0773-46eb-819d-5d575e2dc3f6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a296e29e-6cd0-4241-949e-d1f66d6d3ef9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd84ebea-b108-4972-a411-5d6c011533af",
        "cursor": {
          "ref": "0957d5c7-bbc9-4586-ae07-158c66143264",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "266958ca-6fbd-4500-9baa-a09b5c9405fc"
        },
        "item": {
          "id": "fd84ebea-b108-4972-a411-5d6c011533af",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a2aa9076-26e7-4e3f-822b-e9601e85f027",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9fb3ef-4dea-475f-8043-1238db21a422",
        "cursor": {
          "ref": "5bd490e0-45b9-48f7-bb79-cb778646ce92",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "d3d96532-9854-4ca3-9cba-64d5f4f33068"
        },
        "item": {
          "id": "2f9fb3ef-4dea-475f-8043-1238db21a422",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "2687cd4c-4a55-4241-b8b4-1d32829f300b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}