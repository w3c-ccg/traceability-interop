{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8c688b18-d8d7-476c-8243-a6b6323540e1",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7ac2d4b3-f032-4ca9-b75e-ec4a108705be",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "27d00b2e-8de9-4583-ac84-0d1e957ab5de",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6d9f6cc4-2abb-4eb9-a4de-448d0857830e"
                }
              }
            ]
          },
          {
            "id": "8e7eb393-924e-4ccf-b0c8-653517fb63b9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "af5ef639-862c-4c73-b152-a04e5e0bb055",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "60f5e870-641d-481f-8cb5-9a3bdf2a3403"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b34939ae-d0c9-46ea-8a13-e80d91ff7289",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "de896d81-2dbe-4967-88ca-7ee5ad6ecfdd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "93916409-0e41-4911-a8dc-03f67bdfea67",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "186814ef-0297-4cd4-a779-106c2ca26356",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7b24fc8e-5bb6-402c-b0ef-715c97774c15"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a59bf063-de64-479a-95a4-e550d41642e7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1f67990a-c5a6-41bf-bfd2-0564c294c1b4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "58b1aa43-6dd4-4c28-81f1-a08ec7980c7a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "287d6e8c-0a71-4821-a1f6-3ae37c3ab74f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9bdc7a0f-6d03-4259-9cda-03945c3bd989",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8b899251-7655-4145-98da-4e00fe1f6b87"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9fca50b6-fbcf-4643-91ee-3d7d0555f85f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ec9db6e0-9150-46e0-a55d-394a5c3af790"
            }
          }
        ]
      },
      {
        "id": "10685138-0402-4a9d-9080-b2848062d140",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ee64ab7e-d1c4-440a-b1de-8d6eeaca7bd8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0d5dae66-337e-48c4-a411-621036e01a37",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "14ecae74-1771-4389-b730-30b3f1e0b89d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "858e00af-734c-4244-a488-c5af436c25d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e551219f-7789-4b82-86d9-689b33bdc4b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803567b3-c178-4af5-95b1-1583ab5fae5e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e3b23c-4fed-4500-9d93-c758425c5803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5cb35d88-18a2-4a20-a53f-6644e9e050b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8efbe19-c17c-4a0c-a61d-da9ebb1c3004",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4959eaae-ec52-4cb6-ac53-170cd4661bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b50a5493-2da2-43fa-a3c4-073d0067dda6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7e0b0e72-b5b7-4989-a70b-48f6c58c2d8c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "72f2471a-be7f-4c86-949b-4226be79e770",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0622c920-f5b2-45e1-baf0-16c229d4763c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f39bcaa5-7b50-4a38-936b-9ba6cd2c5c2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a351489-73f9-4a75-823a-81dbddd8fe84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17987820-e7ab-44aa-9f38-4d7e3af2dcd2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1bb1f866-a375-46bf-851d-a6f62f88d835",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e3460698-9bbf-4ac2-9d2e-faccd9865d02",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "614a17f1-9300-49dc-a77a-b3b5f498e454",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e2c292fb-4cad-4730-9aab-3a5bae802bdc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "57f205e9-33f9-46c0-916a-ba6d5f19e4d2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b6d1f2ae-80b2-4351-9f4a-063c3b51de92"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f212f1f0-73bb-4437-89f0-8811a1ec80d9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0c3f7c02-3176-4946-a911-6640e4633afb"
            }
          }
        ]
      },
      {
        "id": "e5a1c2bf-c1c2-4409-8f2b-c3d16f48b987",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "53423e19-21ba-49d5-a753-b680ae143cf7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "83d6d73c-716e-4bf9-ab7e-7ac865ddc363",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9670894f-d429-45a0-8aa3-9d601f84c444",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41baa047-a3af-4d69-8a60-10739f5e12b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c173cea-fbcd-4608-89c1-0ddeb5dc04c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c11794-3bb8-4c9a-9517-047e00c03dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45fd63ac-d7f5-440a-8f5a-f2a61debba84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bfac917-b784-420c-a087-dea7d4a8ea83",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96d2460-6f80-4722-baca-f2bb678dc34e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efb45bc4-0837-41c4-b64b-c542ef02068c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f4cad78-c7e0-4ead-bc5f-10ea9a6d352b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a0aeb1d-00b1-47f6-b5bf-eeee4a9d1924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e22ab669-69fb-489d-af2c-ddb403c50b92",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53beca9f-0feb-422a-82e4-de4751558140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "566eab5f-17b9-4871-8c8a-c99efda16ff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68b32c1-0429-4c07-8010-fa51660d3f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36c22fe9-4c25-462e-8789-1775b82e2cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf28ecd3-bfab-4500-868d-5453d36f65c9",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06bff83f-0df8-4cfd-bde9-2438e8deefb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eb39222-68fa-4242-8e39-31e8526e353c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a388e6-624d-43d5-b866-9d4005b2554c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67974f76-7d94-431d-93c3-2c19d2a0831c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bdc8370-9399-4a9d-b511-3a30cb1d682c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36fc0994-976a-453a-9991-816447757599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf0a95bc-7015-4c07-9095-bec4c0107a5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13829ffd-7d3d-4dac-ac44-d3718d4319fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddf568a9-ad98-49a3-87c1-45e9003964e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6133a4c8-3853-45c6-9cd8-0dd53741cde6",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb285fdf-1042-48b9-b833-cc3499635aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd5ce6d-30af-43d5-93b9-845735b88047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33956ca0-82fb-4d89-b239-1ab03ca53798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c08ad8e3-88d3-4f6c-8f47-011ff0d883db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5fefe66-8819-4b87-9d52-b81e303d9f20",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f069b5-f8c0-4479-a795-72c2fb9d6e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19ec09b4-ad31-4319-b73b-2ff6e185100e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af94bb32-62a9-4cf9-8686-7ce9aa587613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1daea78-bd93-439f-b077-44f34a62223b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e669b583-5713-41d7-a6ae-c9bb9d095f32",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d56f5a20-81b9-48b8-a656-9fa21af5a56b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f90fb4-b1c3-4665-bda8-567fde9929c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "433f3dad-7a38-4d2d-a0f9-8e7ca43242c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f13fb68d-e95d-4a5b-9f9f-cf789abb9739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0926cb60-841d-47da-8b89-7f53f78581dd",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7274ca54-e460-4803-8735-9f98ee545f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08fb3dce-e846-4420-bb80-ae9e088d0175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0313a3f4-12e2-47d4-98f8-c14121b39058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe2b437e-61c9-47e9-bd39-dd709aef3673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58765e2e-aeb2-4f40-8567-f32b6bddaa65",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "087df66f-966f-4fd0-b95d-e18f39aa2c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb09c5af-1edb-4c60-8142-8053c31783d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa6ae3f1-f614-47f2-b2b4-9897d8a38caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44d7802f-9ef0-4c66-8a86-9a3faf339e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c220eb-1a35-48a4-be2b-39c4c7c22fe5",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf079241-c745-45d8-8866-8e3fc945b3fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61f2aedc-6151-4340-a687-7087de97f1e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1463c636-47aa-4d79-8c87-9360d14eb79a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1cfc43f-890b-46ef-90c5-0e8ea2f65431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "716783b4-b06d-4bd8-950f-a738c67bc58b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e002445-15c7-4301-b19d-c9bf1c49411e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a4fc647-bbe8-48db-b959-e1f1765c3295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c0aeff-2b97-43d0-a70b-e406fddcc340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85dc5ecc-05ee-4158-a7fb-a4bb7cf9a5ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad53cff-9866-46c2-bf84-f95cc2bb299c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b9df6f-598a-4c31-9c54-9f299cf4f976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9097a9f5-5c28-49c6-ac37-387e7a53b977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d48f35-5a63-4ef9-b0ff-a3649cf5c61d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b00fe65-96b9-4a97-adc4-bfb1f89982e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8aa5f23-75bc-4a9e-acfd-7dcb32764529",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "577e5ffb-06b5-4f36-ad4c-13e031e8ada8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af02bad3-8a0b-40ca-a664-b0fe6801a21a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee9aa62-da12-4e69-8a93-0d59851518a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4341f86c-cb8a-454c-9d59-ab91a0593a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae46311-635c-4a0c-9530-9d029ea03a1e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0b472c-232a-4cc7-89e4-9e79d3697fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4fe39d7-671b-4460-855c-1eee40803a83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4733a871-ac16-4403-ab26-012359c7f795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ebc4417f-db95-40f0-a851-cac066cda3be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd25fd37-6110-4e51-84e5-d56f8abda2c9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93100d04-a243-4c25-b849-00afa2cebe3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "778afa78-ef84-4ebd-b193-610890719f51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a61908a-0468-46e7-be51-2f2ff0501bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "995c5dff-d8f7-4efb-9626-97f52fb4af64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "040e642d-29fc-4017-8fd9-d590a57a9684",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "470b506b-2acc-40bf-9c5e-6d20bad6fa75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4314b4c-cdf2-41bb-afa9-8c91824a4b75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b3c30e-8ac4-4c9b-9e9c-9071e34acc31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee8dc126-b427-43ba-8f7c-1f40b76e22c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ae8612-80f0-4f30-9bab-e33c0bf0f39b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d315824-2f6a-464a-a2ba-0a4601d97bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7624c985-36fe-4bb6-bf5e-702e93c3256d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6494319b-6b08-44de-867a-5d8c570a7675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bed8f2fe-06b7-4a4d-b00e-320b8dfab538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256bc238-7ffb-4a37-9654-0d2e461ae336",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09cff86a-48d7-4585-8871-1693c616de79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3179abb-d02c-4741-a61a-9c0522ab9def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c568570-1ff3-4ec5-96ef-c4467130a85d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b946cd75-b5c8-4137-9a8e-73bab1cd75dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec297e2-4881-4816-8410-d7c5feff64d3",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9343ab5-a768-4bae-b5af-3a27c0780f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "713384a2-5245-4373-afce-9d6d61636eed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aef780a-6a36-41a2-a3cc-e6d45ba22456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "389c75c6-5d98-470a-8af1-ed9db3c23807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9700c552-eeaf-4c4c-b52a-3d19c89e625e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1c904a-6ef9-4cc9-b0cd-8cb75d524ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0155450c-563d-42bc-b3de-c1b471ae9f3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29177be3-7dbe-47a5-8938-9196bbc1d262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "73b4e61c-1adf-4dd4-8707-880d198cd5a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b74c592-c7fc-471d-aae1-7ab3ae395fd6",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0b1fce-5366-41ab-ba9f-17b2d1660b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47377d4e-c704-45c9-83dd-f589c407ab9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf05dcd3-3ed2-4c73-8340-5af25935ce0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "688d027e-0d9e-4368-9d9d-cbdb19937691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff42e387-6b6b-4dc5-bc2d-8659f743c760",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0ae056-d4e9-4218-8b2c-f9f984066598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c61804eb-5baf-4cea-8a82-8d3f394c5339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "367f412a-1d41-4cfb-94f0-1125810fa68e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e97a67b0-58b6-413d-90ff-cf41e4823c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09bdb0d5-361c-4061-b306-6a38ac745468",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7864185c-3ddd-4b9c-8130-7a47f511c0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f37d552-af88-410a-99ed-3fe70b06d5cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b283fd8c-266e-4138-bc1a-9bf99ff7d3ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "77499a12-4b83-44da-8108-bbc4d6d29ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dccc52e2-834b-445b-863e-3cf9731e4e9d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d4fd4d-5f8d-41bb-9676-de45ad25b528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c342853a-7f45-478d-b838-c6259beec349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a69132-fce8-407d-bf3e-21c490f45f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "879ae814-1f1c-4f93-af2e-822213f0f176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1d8e71-2d9b-4d8d-8189-6498865ff7c2",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5215b70e-d1f1-4313-a874-8ef02764c741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded1e8d0-1bcb-4fb2-b3d9-146a5beb2362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f6bfdf-cb8b-4d11-aefd-5a3370837e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a70c1c7-e316-4fd1-9127-4b3002126551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9ce4fc-9bfa-40b6-8008-b065b821e355",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec51a590-515f-4ada-a263-b397b1572d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bd3ed7c-23fc-4a8a-9508-680cef0ff38b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3ea6bd-4689-427a-b0dc-aebcdd86f865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "80dcda8a-e4cc-46b5-8223-22e820f31e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6225d498-fc57-4007-a7ed-dfce7f55ce5f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "231bc80f-adb0-40c7-9257-31fe23580cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "576248ab-22f5-45e8-a7a5-c4c38cd398d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5158e6c6-3035-4f1e-a40f-32cf04491c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "807f7dd0-09cc-4d75-89be-bde9369937de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4052f0c5-3fdb-4923-b5cd-6f5efd964dbc",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db4b496f-1b06-4efa-9347-f768949e2579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ec2568b-f203-4ab4-affc-d86dcef5bfef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f6baac-1574-4cbc-ab74-28dc350c12a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "04f930da-23a8-4814-973c-155fcf01dc48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f08d9845-62b1-4704-91b6-b4e352c98b1f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc95740-dc78-4442-b612-e4c403276c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d108833-9133-49d3-bedd-e79ad4c33dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcedcd5f-a512-497b-b48a-52acd03ef066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "033c7cc2-9e16-48dc-ac59-908cfc761316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "509061ae-8399-40d4-9af2-8bdb6114c526",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ccd7a99-4ae2-443f-b6c2-5affd2bef947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a123331-6cf4-4519-9201-0d145b78a075"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e75bb04-bead-4246-80d9-42e2478f9690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b8b4d62-21fc-48d0-abe6-0188fce54bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de20c6e-55b1-4b61-866c-f6fc14f130aa",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8942ab46-4537-49ca-951e-5da9058acd4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9ce6ea1-735d-470b-9b2f-3f35901a0456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a853a150-c438-499b-a836-bd60b478971f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b554ce5-059e-4e3b-a3dc-543059d49305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c286b25f-5515-4a4e-9196-c1b5eeb693cd",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a36cfb9-ce1c-4d42-81ff-7cece69ada53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ad81385-803d-40e8-93ba-9bd0e794c060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f2d72d-48cb-41c8-912f-2ddc6da6590d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d13da93-ad38-47ba-828b-75a595d67929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10334971-4ddf-4fba-89b2-6fbbdd41f604",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ac1e65-dab6-46ee-8d7e-5693ed9a3626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33f7bf48-db5c-46d9-9d03-d9ed20edfd07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3379c7-e1a4-4512-8ed6-c17398e4b8cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1637bf6f-65f4-4ee0-a1d0-546b61180547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7f5118-ba01-4153-97a3-774a98a6888e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ee3cef-53de-4936-a6d7-38b98ba6f515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26321165-0bc9-41af-a382-ca124c8541bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f2724d-82a4-4c80-be10-49f04453facd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c5faf1aa-fdbb-4425-8b84-5dfc1893bb36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965fcfd6-3b04-45be-b497-ba8c757518bf",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1fdc7f-3804-40b2-b0a5-0a5cb89da21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e75cefac-ce91-4646-af72-b107f49af649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e20720d-8b4b-4756-84c8-c68e1594d9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8c8d3b3c-99b1-407e-87a8-acf1c5207603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51aeab57-38bc-4374-ab99-e7fa83ff7787",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86835eaf-5ae9-4a8d-9a4a-5c7a8062f23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c5315e0-904e-44e2-9b2b-442c238d5ff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60261536-ada8-4fd7-97d9-001ac8148ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "81608f1d-5a0b-4001-8ef9-2d80049fed25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ec7232-6161-45d0-831d-c63d486da8b9",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "543e2758-2e09-40f6-b9cf-88897e9008e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6387cd60-4e1b-400f-bd65-e36bc23e6150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "966eec71-dd0f-4f37-ba03-0e7cbdfb29bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7725b128-d238-450f-a369-3759e1257f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c76e430-b575-4b10-bc5b-f73ad00034f7",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79b2c60-53f2-4762-9064-f974f4906282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac3358e7-6dae-4908-90d2-966628762c08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6959c4c-c1f9-431e-a0ba-5dc8e946ba0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc612bf7-cdd2-4a66-9b4e-e376b2b9a36e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0648758-74a7-484f-8e08-621e722d5908",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06bb0e82-667e-4729-8d5d-5ceab43692d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a661efe-ac4c-4dad-8fae-29eba3666f84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4a29c1-da52-4b80-a0dc-f718cf2ed4f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "56dd6605-eaf2-4d41-920b-c028136554e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703f8498-5fa6-4584-981f-d100dd79c3b6",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b3c5b1-f2af-453f-b18a-6f20ac13ffbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17b80014-7629-4802-9158-db16b3040148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ed6406-9dfb-4fd6-aaa8-0a9cda029934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ca7b2c0-644b-482d-9ae3-f65794bf20c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2483277c-7f64-4ad6-a121-88ab0d3fc79d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "390a4abb-a3c9-4ec2-b470-eac02dc82563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec7c4acb-652b-4065-ad04-f62c3753c1ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1fa98b-5105-4182-bbbc-adae44858e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "12df1dba-e3fe-407d-bdc6-efdc7350b646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3fcc73f-8756-4405-9fff-a833a0131705",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d72192d-2c21-4ab6-8289-501cdb4d8362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca31eed3-ab97-4177-a9cc-feb2a14821ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f89b0f6a-ee74-47b9-9d38-8cb1aebe8eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b92d836-1104-4fbf-9265-3bd15eb3f904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14338e1d-c8fd-4ce4-afed-dd52cdfec34a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da5233e-47f9-40b1-89f4-2bf8b23fadc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd245e1c-40f1-4aec-aa52-af4a9eb23c16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c9a11a-3316-4430-a66e-6d755b746331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "db6793f9-4c27-4ee0-bd64-d2a9b9843b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6759e9-3dcc-43ff-a71f-a06c07258faf",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e6b016-8f92-4561-8f14-86679a93416b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08453c39-454e-4fb2-a050-87930bf8d869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ff8393-c734-4fde-b915-d9cc72ec07da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "19039435-6497-4bdf-ae76-e5577752135d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a439e05-b8e3-4a99-9724-e9d593365644",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c5a31d5-b90f-4bf4-abe2-64737d79f9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37a9c0c7-2dec-4a87-932c-284b2653f884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d66f67f-43a9-4b99-bb2c-710f42e44154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c58578f8-fbaa-4b80-b475-161c76748c03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88518320-5394-4f0d-b6e1-cdc93bc1697a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e7888c-7301-4cfc-bab1-44105b9dbf6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76f202d8-ac3c-426d-bf3b-e03d43d5cdcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0ffbef-7b74-4ecd-99bd-7f32f2e3e619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2274b2fd-8f65-447c-b578-1046ab9911b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb9d87e-49f0-4988-a4e7-4936346cad0b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3448c2-961b-40c5-a05d-61fbd5fda853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d2bce72-8883-42fd-95d2-2812848b368c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d6a190b-0db6-46de-901f-98bcd2ccbc88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f767571-4eda-4de7-9329-f0cdc30653ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d16b52-acc0-492c-936c-8b8c32696ce8",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab50f71e-e180-4c6a-b79b-1841874e12df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ce777d0-27bd-4809-a269-53454b961e10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc29bb9e-ab62-4a32-9505-cc5af707d658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "06c5254e-3c64-4425-ad3a-188c49cb2267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1265b0-faaa-462b-aed7-b884d6afd023",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "641463ae-4429-41b7-bd5d-bd6c31638738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa89726f-3c2d-4432-8691-be9c8556a85c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5032f2-ee27-4157-97ed-c3a1a3c0d5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0c58123e-6ff0-42bb-acaf-9e3841466da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e676d7-4ff2-4532-915f-134c9ee42ca6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f803f820-b633-4bfa-963b-8dfcbb15b831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d8f14dc-ba46-462b-80fb-0715bafe8b38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d598a26f-36d2-4962-92de-44e6d03c4f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "9067dfb2-99d4-4950-b683-580fed18d7a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12801ee4-4ed9-4c76-9335-531d889c4ce1",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b818edd7-3877-4125-bf6e-44f7502aba52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fcbf1f0-591f-41f2-843d-c473d4f4cacb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e28624-c3b3-4e9d-8f2f-d9d91881cf57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dd55918-7536-4298-b99b-631f7ab80cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e047c6-6d1a-4a7b-bba8-6425bd2fb850",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09b5fd0-e3d4-4632-b4be-fcb93c50867d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f2963c1-1d0a-4851-8ac5-33289fb3a47e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67807a4-71e4-49dd-a8db-b9092c064aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7181f521-2008-4f0b-9134-5b9a9d16a24e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407dc723-4724-447b-bb37-c388f26a1d73",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9357a65c-bb9c-4d1d-ac5f-a1af59fa2dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b4c369e-f626-417c-849a-8c01aeda2fd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56788dff-ffb9-4ca3-85f0-3c7e8d26ae3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "759e43bc-119e-45f0-9e9c-b7df361e47d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37668ceb-6346-4739-9cfa-0f5dc0e77b80",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f1a7797-8ffe-46c9-b901-ddd3d2e1872a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43da84a4-6afa-4fc7-a555-b47a51ddfda6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0572b7-fe5f-41aa-a742-0a6bfec436dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "339867bb-e040-4286-88a3-a1aafc37591c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf7e0845-2a64-4a1b-b593-6b6bd16ad593",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36cf4811-8a40-424e-acd1-69930d9ac35d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02991efb-44a9-479a-80d4-2c69929ef97b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3bb422f-25f9-4e4f-968e-25132b3b12ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f05e2f0e-882c-40b7-a1fa-7ab2ea1de2b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e376f2-7fa5-4a29-a7a7-f58320a5c1ac",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace8930e-cb05-43d3-b098-330a2da95011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "547d6daa-7647-4595-a451-c427059e0832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69513af-5f5a-4958-9fbf-fa7a03704cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9347ac5-51a2-49f8-8c25-d5f9d11395d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a72d307-2580-4cf3-832d-09f43b1f9fd9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03747bf8-4923-4bd2-bf31-e1e41b1e7f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cdd2dba-d252-4417-a525-040d9f29a00c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b3416a-c216-4e91-8c95-71e189babadc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ddd3c336-90b2-4e31-a879-2f8cf224fe26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9526bf-32e4-4c93-854b-6fa4129d0d0b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f80cc44-2e73-4f1b-9fd0-cb4e860be148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c926079-5073-45ca-b768-e1e0b15d95b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f68afb8e-5f47-408e-97cf-bf495e90b70c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "95b21615-b0a6-4a82-a008-57178a608a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8720e9c-d5cb-407e-91bb-7c0686a9c5af",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f292666-1f50-443a-9195-4a05b60cdf3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4681735b-103e-4295-a1e2-b2aaed51909d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f93564-3df6-494a-b02e-32cd21c844f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2ac5958-2248-42e1-b9a2-dbb499e7668a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f125ac3-f8a2-4699-8995-59ab5293b285",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e455994-8be9-4a19-bb01-caa2229559e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dc08a91-585a-491c-9e5d-9fd8e968b26f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "815b9752-16af-4932-95bb-d2ebd2cd17eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6d0dd86-0531-44ec-8212-5ed40e1e3063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61399bc9-c3f9-454e-9187-f4e68578dbec",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde28798-33be-495e-9b9e-1a551a82b934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3970b7d9-106b-421a-81dd-ef96a8b6ee1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691c83c2-1641-4d63-b842-72d05345cd06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6d097c1-023c-4c8e-a79b-558dc2fd389e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13565674-f591-4f94-b623-59807d7c3e07",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4327de47-60c6-417a-89bc-4d342ab7f741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1d52960-d96c-4c7b-8329-915b279caf26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f28562-ff58-4089-a505-59ce0102a125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "cad742d3-da23-4052-8441-f028f75e3873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79e47ba-940f-474c-9717-a91bcda3881b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "612e290d-ba25-42e3-8cea-478f78b4fe5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ece59602-468b-43fa-8099-2141cdafe853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7979efd1-94fa-4556-8678-22981af6378f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbab7211-6371-47e3-83b0-aa4f5a6c658e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace84e98-43dc-4496-a449-5d3444e5a689",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed59806-6132-4965-9eef-36b27712ca02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a8d6beb-e8d7-49ea-ad6f-4bc22883c26b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4aa793-cd57-4526-9232-215cac2b66c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bed1acc3-4c52-4a1c-a7f5-e32517bf1900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b5aa8a-93ef-4942-a368-6d2f96ffef70",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c816ff-b9d7-4c71-b9d1-9dd3d91e9d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ee836d7-a2b8-43c5-8f53-9e244296d532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0786115c-775a-401a-a4f2-a7cbfaf0565d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "11c34294-0139-4498-87c1-28c54256f32b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4edb9dbc-7401-45ae-8ae2-5dd8e0610341",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00daa8e1-b664-4965-b9de-301f2d74f334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84c84de8-48e1-4f2d-bbd4-efe4bfaedfd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968bc62b-c8a0-4707-bf75-79a98b0813cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e2be9a49-1e7a-4339-b9fd-c0e813b1713a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "298319a6-ecea-4d36-820d-30ef1114a347",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ecf7951-00ab-4b2a-8dd7-eec001e067a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6279e15-41af-4751-b3e6-64b5d86a523c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb6894c-8540-4734-8ced-ecb7ddc1099d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "224f83e1-d4cc-4ca7-8046-49e59efe7e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb66fcf-967b-4ea5-aeeb-ebca7db044a0",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed8a268-6943-4536-bf4a-530e23ea1ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6fbb5c4-3e02-42ed-a6f5-c592ed9d8776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1240149-c09d-4135-991c-ec225f92de07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "eec59984-da85-4c27-bccf-09a49d845e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533337f1-a007-4988-b3d2-c0e321d3e831",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c8caa49-748c-43ea-ae28-9007fb16c201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2490a7d1-faf8-471c-8244-825ed92dde5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d7d5c4c-712e-4a75-90d0-9a5d5dc89dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6af160ba-c39e-42b7-8cc0-6d8843ffbb83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a3eb64-e48c-45a1-9e48-1597c91c1290",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "614c458e-df57-41dd-82cd-198cd878b6fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76bd5a19-5592-4679-b016-19220f1c943c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae7028a-3c8f-4a6d-89a8-9235839f664c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0571a14-8bf1-4aee-bf59-52b709f064ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aeea9b7-e738-4e7e-b4aa-23d1701d6791",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62eb60d-ea6b-4cf2-855f-2ca12ecea241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c88b99b-fba9-47c1-aaa1-7d9fa62ad07e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f866fa06-6a3b-4252-99e9-e776a3793837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb86b94a-2a23-4660-90b0-960dbafd45ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beec892f-0f72-4255-b095-9fdc20e0d57c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5605de6-fe88-4c12-a860-73206adbaa6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f3ef465-c693-4948-929d-1be74df394f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6feb5b6f-5849-4884-8f72-7ba399a0759c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4564930f-f55a-4ce1-b846-df4e0a585de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465d9779-6b10-44e4-8292-cf1757af4d49",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40151e5e-5bec-4b4c-8aab-407f839cbb9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "118cbfb6-5a11-4a93-a16d-da549115cbd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a38793-2441-446c-a4c2-d19e89d1b8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d2b6a98d-1089-47f1-8760-a575ca9b7726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b6b08cb-1567-4c08-bebd-d749e14d61cf",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "093d4ad1-7915-44e4-9eeb-bfeabc869a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db0808b-00c9-4bbe-8129-445cef3a9dd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792ecb05-b108-4fcb-9a0a-9788ecfa3ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d035527-7c84-4710-afa4-dcd2785c0e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "469dc053-2ea6-45a1-a626-8e7e5ba5b582",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3562e490-8505-4d26-a5ce-a5302d21aec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18c2b44a-30f7-41cf-b0dd-1c5122ce40b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063a1df1-b0f0-40a2-9422-d85757252282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbebb4e1-3953-484a-8b91-b8aa14f40a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84041c8-595f-4432-8020-5cd2d68a625b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65dfef2d-773a-4ac4-b2f5-9ed9521cedd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8975ce44-751f-4a2b-aa78-0c1119a3e84c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af59dece-ecbc-4dbd-a0df-d6cec327e6ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec6ebe3b-4148-4d07-90f1-4519135d33f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0dc858a-de85-4438-9e0f-8ba6cd2900ef",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1a2ef2-bb5d-41c1-bd74-fa6b92718455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5587b236-5593-417a-a077-7f4c20c20cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a297a309-c2a1-4a09-b584-ee8555e64915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25a0fc07-0b3a-4f3d-a60f-a5190306f467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ec61f7-6cb5-41fa-ae48-7f93e2a14cf1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a554a40-630c-4aec-8a27-331d1ef3e5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b266598f-50f8-405f-8a7c-e77b3811b642"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5d502e-08df-48a8-a385-deeb815fac96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0bdd8cf1-c7f0-4c07-9fe3-176dfd1d72a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2256912-6dce-42f0-aa66-6b76b2f15748",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a73e3c2-028e-4276-9f65-03e443fd6bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b633a794-8395-4b12-a0d6-3f45c998d5f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356344c8-7dc3-4eca-b4a7-2f623d3ac953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "469896a6-8a74-48c8-9406-c5b4d9431cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a02fd8-d0dc-4267-a253-c690061f5b8b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f6dfcf-7209-45ff-8a14-93ad2d608f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a57a6280-8c93-4cfb-b37b-da20ee1275d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9dedb8c-fcd7-44a3-a291-77f0306ba7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6195773b-9bd6-4d30-8415-e175a2031548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe06755-123c-4a30-8a32-bfa0ff2747a5",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f97e58-7de2-4454-b711-f4c79fcfbfd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06dc7cb4-4087-4efe-8885-f325e6468d09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a49aad-130b-4f41-b72c-b3a716cc47e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "584666db-f36f-431a-bd1f-896c19e49b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f17797-c326-4075-a4d3-67f945751ac7",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e409c3-9b24-4b2b-8d37-b37684656081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aaf20c6-d074-4916-a440-b8b00ab0f0c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84890aa9-e8de-42cc-a9b5-16fc9041c3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "756b3cf6-466f-4597-bae1-3d7ac51844c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b82f8e-57be-42bb-a5ce-cf9e4ffd028b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b65b92f-c321-4a7c-b101-9f7b4cefb486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e050b3cc-df56-4044-833e-f0255a4535b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3cf4dbb-10ef-49a4-a474-a4a319259455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2049fad-06c7-426c-afcf-5b715898ec77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da7f0ebf-bb39-427d-9b6a-fc941c733788",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4675ed6-4160-4d3c-95e1-8033a314faa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53d467fb-60c1-44f9-b568-3589be38971f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627c0010-d0a2-4518-9b7e-c213e973813f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bf36d305-7c45-4ba8-94c1-96d9aeb0e834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "335c9545-1a4c-405c-b04f-6b6b379aadd6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d884914c-edad-4cba-888c-4af261016814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7203c422-5c2b-42f8-9a98-6c09f56a1036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ca5261-65cb-46ea-a909-ee9683aa6917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e2dce1d-ebfb-466e-b9ff-02cb22598f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2e6f39-5c26-4dc9-a53b-fe05eb5647cb",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87b1e82-1410-4138-8877-97a04d1d8950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc78a83b-e8d2-42e8-accc-b0a838756624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f79358b-83ee-4f08-b88f-2811e417ddd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "eca08231-76c7-46d7-989d-8bfd116f3268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5929fbb-3b62-4195-bfd2-918d7c9a2c5f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb04dfab-0b7b-4ddb-8263-0ec3e108e2c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "824a4efa-6edb-4da8-8fc5-f7919a520ddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eac66df-e832-4155-a1db-99fbf12e1ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cdd8272c-fc55-4af5-bafe-00d4e77f13cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2437df46-5807-46bf-a685-7ed36fa446eb",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2962ec17-a42b-45c4-818d-1e84d92a4234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4be51f41-ffe1-4082-a31e-ca284651ef54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3bd5e2-00ea-4863-b597-eba7cfcb38d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb8b12d4-0253-4696-b02d-eb30853f71a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b45ef5e-d6cd-4a3f-a8f9-601ae51e1614",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dbb7490-5264-44f8-aab9-5693cf914f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c49863b-dc23-4f77-b3f3-fbe73f415bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b6b2a2-a045-4770-8c9c-1cbb279f7103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2751a9a3-97a1-45e7-ad6a-f2c6a3bbe65d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66bf9c05-703f-4e46-a781-d605333a6cb2",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd76137-8374-4e3e-bb74-1a8169387d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6626996e-9534-453e-b75a-13b4eecce3cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f71970-cf7a-4550-a488-28a58633c4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "702eee50-0ca0-4862-89e1-8923e8bcd30d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0852b5c-0245-48cf-a874-5532c4dbc2f3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "694ab602-b41c-455a-813c-faf9dd8fba14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "afd5eb01-7384-4fdb-ad3d-33237df9e0e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac984e6e-1940-4ac7-8555-59d492ccc1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb3a3af9-04a6-4c85-b2c7-abe8f03157a0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "61dffa2a-8e12-454f-8721-b7bce77c61a5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d2b5d0a3-8144-43fc-aa10-52593fb45c9e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b00f99-068a-4fe6-a0e5-f38d715d290e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "313c3fd0-fc6a-40d6-9a9e-5b7810c48b23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ec20f1-9aee-4961-864e-d26f974248ad",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b572f949-6eb2-4a1f-b770-f0000f78d9ac"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e05563f3-a15d-4825-bc50-0e30074b87c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "470aacc6-7f9f-41df-9c05-42d8fc145cd5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "24be5e58-e88f-4164-8f44-6e6dfe0d5de4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21597fc7-df3e-447d-9633-a6b9a754c26d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "abbf5b17-169d-4958-8f4a-556c5ca45834",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ae3c6ef9-81f3-412e-b1dc-476ad5d1e704"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ea1f2ade-9ad6-4a15-8641-d669779510a8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "005dc38c-65b6-458b-8cac-190edef7c597"
                }
              }
            ]
          },
          {
            "id": "9ef48a44-073e-42de-b175-37bf73dc3b71",
            "name": "Positive Testing",
            "item": [
              {
                "id": "633088ce-dd36-4f1e-af8c-58ff781c7666",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "cd74e935-edd1-41f8-87df-7115850a667d",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a773e17-5152-4db8-853a-a9a0be015ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c4983080-1c9f-4560-9601-8c8cc86fe2de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c2fa88-eafa-4afb-8e71-c97170596f10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f15ee4a-f9c8-430e-9c3e-037d50b9ecd1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e44af4eb-5737-4ba2-a058-ade12812ec91",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2cfc3ac3-d46e-4e4f-9261-72e16e8b9842",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8f878e65-f5f0-495c-9643-8be52f722446"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a812d97a-9d45-4c51-9fa0-2e3304f8237a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a99ebbcd-3848-43a7-83ca-5791e5cc028b"
                    }
                  }
                ]
              },
              {
                "id": "54ad6bae-e43d-4aef-bdf8-615c671e6be0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "60e7f8ee-da5b-48e5-9fa9-e93ebc0c416a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "14ce822c-1d02-4be4-af3d-1204c6c1a3af"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "120e8a3b-cf37-49d3-b1a3-5a9f50c82be2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a48d3dab-1e58-49b5-8b01-bd83c37c51c1"
                    }
                  }
                ]
              },
              {
                "id": "79122d6e-b99c-4e28-8785-7423ad23116b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5dc33a7-5938-4c0b-97c7-6693f765d05d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2eb5441f-6129-4fea-a668-6893096df416"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f2b11587-b093-41f0-8f4b-a7afa96c3767",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6d11d3b4-ce16-4f41-bd42-bc20221838c0"
                    }
                  }
                ]
              },
              {
                "id": "74c7f20d-df9e-4b8b-af91-a21f8c02117f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "762a6705-f1fc-4991-8a60-32ec809db0d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "990a06e8-7df1-48b5-8eaa-771802a129b4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80bd283e-ce57-41ea-9903-6ae5a515cbf5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "af8618c9-124c-4cf9-a5d6-8548768133ab"
                    }
                  }
                ]
              },
              {
                "id": "1050a65a-873c-44d6-8410-a6eed14c9603",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c45d68f5-4d91-49d0-8fc6-29dd7e9ff978",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b4480690-2f29-45a3-83d6-955cd8abd84c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4eb00902-0d1b-4292-ae7a-ca3c9484ef31",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5cf22baf-a3c5-4bf7-808d-c299c1e29690"
                    }
                  }
                ]
              },
              {
                "id": "d014183a-afb4-4bd7-b5b3-f5317addccc6",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b56808a-ea46-46e6-b8a6-2f3881a236d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5d92e7c7-127b-4f0a-8df0-566aaa4261a4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa5af049-9401-4e25-9c48-40508928dc64",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d1e76dc6-496f-412a-b4b1-a3b8e9a8afbb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c359eb95-bfcf-428d-bff2-737e87beb95a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cff21bce-7207-4164-bca7-21b924dbd200"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1d6bd5aa-cc5e-4d6c-8289-2f77ef83e5c3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "78daa8e9-ebc2-4c2e-b284-29d19672a332"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3aef59c4-b20b-4cfe-be6f-076e3d3256e9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "661fedeb-7c64-4acd-bf17-81091799733f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cbd543ad-86bb-4c9b-8f1f-35dace12f762",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5627b684-3f49-40f0-9d18-d0ee7004bb44"
            }
          }
        ]
      },
      {
        "id": "6f5bb56b-8dac-401a-bb38-91453ae6442d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "27b3d881-a20a-470f-a483-7a92dd4cb4b6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4368e645-9d63-44ab-ac6d-a1d45e5597db",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bddf7e45-8cc4-407e-8327-d2824e28c292",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10395e5-9a0b-4658-9c41-72d524d19d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ec43b2b-c9e0-4c8a-baa5-423b3ddc699d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89998402-8e02-4450-b92f-216f7033a84b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1039e958-6e1f-47ab-8aee-ff34449a3e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be3fba2-33e0-4910-b7c5-137c38066729",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a713023-5243-4ebf-beeb-f8ed61d7272a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e56f11d3-a989-4fc7-9cc1-14481d7816c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f758f9b-882b-4624-8f2e-29e2c2b84176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ef5e91c-c9c5-4ce5-9de6-e49e8d00f81a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be30deb4-3f9f-43a7-829b-d82d69e67f00",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c103ad7-73a1-4411-8e01-2205efb0efb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bcbdd9a-ab58-4f50-8fdc-dabcd5689489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f7b2885-00bb-41ea-89cd-356360060c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "38530061-1fab-4f1f-961b-b04e3df3d4e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0ed27c-3ed8-44ad-9ca3-4db5829d190d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d23745-b079-4e75-a987-fb20f37af5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c359c323-7e6c-4d5d-9aaa-d81534d34ea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a2c491c-73b8-427c-8968-85c87ee04a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aaa5f44c-f5cd-4871-a0b0-287704e640ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9857de4-bc50-4768-9276-5d4d8d2e46d9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0de57b-99cf-437c-b990-9056c5695c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc954b01-803d-4c2d-bffb-ece423717b99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ada978-520f-44d9-b3d3-1ca214db9665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54a980d2-af66-4616-9cf5-284247690e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29daa420-77e1-4371-9a28-e20ef7100b48",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b74b3500-1100-422c-b539-c477f1bbf9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adc4be09-5809-4169-9f91-6a71b17151ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e9fef1-2f30-4ea8-9caa-ff176a5c1d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "516440dc-1aa0-4df4-b24d-c5c62b678889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69bd9018-030a-4acf-9b04-53b62cb2b3f0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a96b564-1fca-48aa-898c-a13346bc86aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42ad5522-df8c-4881-b5be-f918ca835fec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6f5c30-e080-4038-88b6-d8594eac6f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa4b4726-1612-44e6-84c4-bd90c4eb2b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d590b0f0-5df3-4ede-87a0-019a7aed726c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c0b2cf-0503-4a84-ae91-517905cfff79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "309b201b-e0b5-4250-b83d-437cbd9f1ad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "551f2076-3da3-4f28-bce1-00b95cac58be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "737098d6-1b82-4b30-83bb-b018b9f99b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ce9cce-c556-4e89-abf7-9515b83bb9b1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a4a2c8-5ce8-481c-9455-fbf1c86c1b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48156885-b6ea-443d-9cdd-65fdd5524459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd64d8ec-5eff-4416-b6b8-75d9b4865b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cbb03d9-eec0-4b12-82a1-6de35aa0ec72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd393180-5c7d-44a6-a4a7-d7f11973370d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e8cf69-c3e5-48c9-b0f0-80d470482d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "164e4f8d-a66c-4a45-a878-745643648e9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed059d0-d7c9-498e-9783-cc3e3e931e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8c02821-2396-4dd8-83dd-28460bffca21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6488031-20aa-44f7-9680-c31870e9ba62",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "178d6445-efb4-4ea2-815e-eb0062e683c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdac67b5-ed96-4195-b836-48a786a9f853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ccdc4e-0335-4612-9060-4039d945078e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7632fca9-9bd7-4f47-80c0-ef17b4341223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627e3f78-9a41-4c04-aa52-eccedcb12ccd",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a196d1-3999-4ef4-90ee-92ea36821782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4acb8fcf-5d05-49a0-8824-ba11a3def858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87853340-a4a5-474e-a0df-dff65e220b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bced71b8-dd9b-4903-a064-f787b2c360dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f5ed5d-2de2-40d1-bdbd-675b54efce0c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c384ff7-821a-499a-9cf0-e8088e21bb89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17124dea-8417-4aa9-95e0-00ec2edbd0e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253bba95-18b1-4e51-8c08-83c4354b1659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "341231e0-25ec-4ff9-9566-39e2bacbc590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8357b24e-0d2a-4de2-b661-55f89d7111af",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06691d4f-9f88-4dc6-aa1e-5120c50a899b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf5dc9b9-219a-4c1f-9d38-f856eb70319c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c503af-40c0-4d4f-889a-e958cf4fc8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e3bc5a-a2e2-46fb-9746-c7db82d65bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec3f0a2-8966-4aac-b665-19500a4650a0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57ea487-79eb-4cb2-b60d-c0dc624d54d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada4b330-5423-4ab1-9c63-286f4bf0c900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "135588ab-0240-486e-b050-363a36138551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2787d292-b395-47cd-8181-9ce5393215de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f15ceb-03cc-4e9a-b8b7-aa5227046f96",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04dc28b8-9384-495d-990d-d4fad325e494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff3e6cd9-a5db-4e4e-aaba-75f81638a01c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33fd4726-e923-4b84-8f85-7332c599df73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "11347668-7a7c-4c9a-8ba6-115cd5b0012d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e73770-8008-4ca6-8b7c-7e2480a78495",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f13b50-aa61-42c4-ab37-7cafaa8446d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0d9d9f7-16e5-497e-a564-b6ef6fd937cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36581b4b-b710-4b0e-8ac1-938d2ae312ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1920b4f9-fb29-444d-9423-0a995d84176e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf28ff1-a62f-40d3-a921-ead3509e204b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c03bf8-a299-4e7e-ba0e-ce795f2921a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57529283-f41c-4cfe-867d-9e4af32c2ed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0448022-d70a-4cd7-aafb-5a7a11a0fa0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bf06c5a-fe2c-44d7-a174-2bbbe820f989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff89444-b6e2-4ba1-bf73-121f160d4902",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95f4161-3767-43fc-ab8e-d9f0a1dc60a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e14f88b4-326d-4fcc-a4bb-86d4edb688ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a7fe568-7b2e-41d6-bdee-010354dab190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c339204c-e722-4af9-9a97-0348a797f00a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87535fd8-ecff-4e07-a0c8-fb568b9b9b2a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a5a5ac-573d-4640-8ccf-724b4890a873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a12f10b6-03d4-4410-be0f-b3af32f68785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bff5b7d-6d65-4c80-8e91-d06884b34c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57e46580-cb0d-4513-8552-76115221f5a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1794e8-0ead-45eb-8552-1dab17b37145",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a93d982-b88d-439c-b83c-1286e1272f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2690fe2-6879-41ab-b596-4d95f3c65cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a94b74c-7cbd-4aa3-a0b1-c151895ba405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4da71956-400a-4a3b-8b4d-e60d26ebd194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa09029-5efa-494a-a44b-dac5598a025a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2457611c-7b03-4d3b-8a71-916c0fcabf10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53cad0ea-9a64-4a94-be4c-044677487144"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a4d87cc-f3a5-4573-b268-02527238d8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55d2a128-5ab9-4c3f-b9cf-ca4e399d773d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "935783e5-471d-42b9-b45c-a0662c5267f6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0594d68b-699c-4cbf-a4aa-fa0bce2e98fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d88e27c7-3d11-42a8-9d10-73816ad9c5e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca191b20-ce7f-49fb-8c32-8482e7c7d81a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b54844b-d098-4354-8eae-d74f688c2c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3579f6ff-8b28-4051-88c7-4996dc267f21",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8369e174-e040-4a63-aa32-d37af6d5e4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9f3b4b2-f648-488a-8ba8-4010f7e7bb9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b6741a-460e-42b8-9b86-d59b6bd855e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7818c0d-66eb-47ca-a281-3ab3857786a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "658b40ad-4703-474a-a7ce-53d124f3d2bb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff1d543-0526-47b3-a4b6-987ce7960bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1654f13e-480f-4762-b61f-7449d91f5191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035fabc0-9217-4fe9-ae29-9939f1981318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a7fb2bb-d4c6-4c66-ae6f-3f5e913de410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c946fc-7284-4de4-b568-ed3fca70422c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d22a27f-26b7-423f-b3d9-a40a6af558cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f448850-602f-44a6-9abd-8e9a2011c586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed3988f-ae07-4bda-acb9-de3940ce0eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2683f5f3-27a2-4d52-9a70-a05f6aebd5cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2e99b9-e511-4225-a468-9af7c2933d2a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c024e858-e112-4d96-b227-2a0c2e5275c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2b40f95-2a2d-4d7c-b9f2-7f8bad9820ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2dc4f0-6e2d-4458-b181-4442ee87d628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a7bfd24-12f9-4512-bf12-127b8d68ec0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8903f705-9ff0-42e2-89af-7af7a88f4de1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7519d91c-76e3-4458-8f42-4437e5221649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d2bc0b9-dc9a-465c-9365-8e1858da9a4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8877c4b4-c1c1-45f1-88cc-3a4dae8a07f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62b7e16d-fe05-41b1-97dc-048e417b0257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97154b1f-e589-4270-a80c-b2133c181044",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7299f15e-7a7b-4602-9e2e-ff90c04dfcaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a118273f-0b60-421c-a956-e595cd379b15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed7428e-8736-4115-bd60-c9ab84678849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f1b5980-4d44-4398-a5d9-79b9a62336a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07dab37-8ee6-4bbd-9790-82023374dcb8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "743e185f-2f15-4230-a365-f986ddfc917c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "619bc430-de98-454b-a57e-1f8cb4acb901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6316ff-804e-4ad2-9104-18b33c9b23ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fd6ae0c-89d8-4840-973f-6d6a7b9f0b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e7c6a91-4b86-48db-965a-a0d6093a3af8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60fce27f-6805-4713-9f36-b85d06cb1ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d7211e3-54ac-4c1b-ade7-2d9a38b6474d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d9c0108-1cd8-40ca-9a62-4a93c1a888c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "153644de-2327-4129-8390-788f8eb61392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3a546d-9296-4be9-830e-38c50321304c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b79487b3-6926-4806-b06c-46b916ac53b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "992fb248-44d4-4833-a44f-59ca5eac94b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd533e1-c850-4e5b-8eac-c270962010d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc28b789-1073-46f4-b4fa-d9754af24ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d921f7e-1a90-4c57-9137-be0d82cbcba7",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa5ef6a-940b-46ee-923e-af2f48f87023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18bdfd9a-aefe-4b47-ae7b-d9c06d9741a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "299d124f-285b-4368-ad73-4443b75a8948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58158176-ccfc-4799-af34-70ca755140f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca9622a3-b511-478b-9ebd-0f096d3a8b4a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dfcf3e1-7851-4dca-b704-24001408e539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "839278d7-f313-4e36-a2d7-34ac8da77ac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6128b5e5-0acd-4adb-b04c-ec916caeac23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4310ebdc-aac6-421d-a747-73937edacc2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6294b342-dcc1-4d01-a412-bc75e9100cf9",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f07c7a2-0188-4f96-9ea6-f713f24e6903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3efed7c-0ef6-4cc6-a4cc-a7d25093fa62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a25fd8d-6365-44d4-954a-4b8ec2c73df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b43049ef-a88a-4ff4-aff2-993395d44450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "940f3127-5bfa-4dc7-bccd-d52f0507141b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9cf172-6713-4ae2-a219-4639630298db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20ed3c5c-d143-4e41-8a27-2f882c882ed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54293399-abe6-4721-b4ae-ff581f39ad92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bf440b8-97ed-4ab8-a2e4-8ab5ab77ca39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8001d432-a421-4363-bd25-bf1c0d03790f",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2f18c6-ba46-47e5-a063-bf8d967b1d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "031b88a0-b5fe-4f2d-b1a8-685bcbaea00e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9236a45-ad0e-4cf0-9307-961bfcc23853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "776e4a1f-9fbd-4282-a443-64cea2180ef8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6cae12fc-c200-4df0-86c4-ba8690d6a8a8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8fe987ca-c497-48e3-a2ba-1b518f047f82",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f072627-bbcc-4f05-93ee-0f194abbc4fc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2816a5ba-0819-4b4a-a9c0-2230a6ce44da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "965d854f-a0fd-4e75-9985-4a599daa5a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b6d65ae-4ff6-4e21-b884-56df0082d495"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b31e1619-34a2-4669-b146-dc9d8a5f7275",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "970f034a-bc7f-449a-a4d2-67b896b3212e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f724f45-0cc1-4c96-9b0b-74fb6969d8c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad4a49ad-0f4f-41da-96d3-7678b9b0f6a2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c643bb98-cc34-43b4-bc7f-c91d5e360e69",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a20b8483-9b9a-4030-a741-fd5639fd6779"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "93b22712-e3c9-4a49-8c5f-f28e3116052f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e8e1a0e7-fb8f-49a5-974f-b1173d1eaeed"
            }
          }
        ]
      },
      {
        "id": "de95108c-31ca-4f51-8367-c9e2f1aaa9af",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c199b158-52ce-4e56-9d76-35c3d7218cd9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3e5e6a6c-14e7-43d5-9754-c1b5ac3c6646",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ea1fbf42-a236-426b-83dc-13aefa78597f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef74fe81-00f7-4158-abde-7ed18458ad02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fcb65d5-2b90-4f2a-a393-7cbaf423cdb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1a51cb-ba65-463a-9bd6-60cce90a30b0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "881d33d4-4d04-4463-81d8-59a1f6c96323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32ba603f-908c-436b-a081-d1c4483099f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e861c1e9-c672-40de-a2f9-d4f373b3ca07",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c693d6-f667-4752-b78c-7b9d26fc1249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca2a21f6-d927-4740-aa0d-9644613e0189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9a2063-f09b-4b6e-a314-46b9ca1a0055",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd0b5dc-8c04-4376-ac9f-de6bd961c22c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5210c08-3f8d-477a-8f30-4184860f98ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "394114e0-2903-441a-917f-8905b11e111a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc0a4e1e-25d8-41c6-bd60-99da9427f03f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f939caf-cff4-4b77-bcb1-91fb9077a78f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6317837d-1d3a-461a-ab71-83b42265285c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "715e6287-bcf4-4483-8fad-cc3d4c0aea64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dd536e7-5c87-4721-a6e7-28cbeb56b789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac4abef-5ebd-4db8-8521-b1bc1fb50a6b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71191a5c-2570-4080-a22d-f12c36f03298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35818616-6a18-4f6b-9809-aa1371fa52fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7213f14-adfe-491f-9591-e37b96c7db10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e504f852-5d3e-40b6-b297-cb5f3b99548f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b59217-af1b-4f37-9956-93f208753a85",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c55b12-92dc-45e9-9ad6-e0a474046593",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b116f9e-3035-47fd-bbfc-d342e5465671"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10508da-937f-4b80-99c2-677bcc1dc4a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cf38c31-ec7c-41fb-8fde-7e8df3f342c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b697ec2-51f8-4548-a22c-3a70b801eb09",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06fb5a0-639f-4b06-b5e6-ffd8bab0d146",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35a25317-5894-40bf-8fb4-cd475c2e7206"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6905f696-2fa4-4b8c-bb4a-a10b254df6c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78f72295-dba6-44ba-849b-ddb6e7eb0bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e77624-84de-4ec2-8b7b-807b44e66017",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a0c7e8-19f7-4f0b-b233-09315790733b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14152fc4-b1d0-4a97-a116-a10977e85c64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4118cb-0515-448f-a588-64c0b824aab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c99176f3-fd3b-4120-b835-f0011aaa02f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f86e8b2-1c93-47a6-b1c7-798501f47508",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c68e26-432f-48b9-8a8d-25e1f815ee74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8b79040-8839-40ae-9d62-aad82cea89a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9baa5799-43ec-4c85-9f0a-20812544d2df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dff498c-5989-4253-8283-4da326f46a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630fb084-e97f-439e-b962-aecbf572ac4d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f2aeca-0224-42cc-b208-08491699744b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edf474f6-eba3-4a0c-9c8a-c245175476ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3a01a2-1977-4693-8c07-c8edec4b007f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2d963d6-0457-4610-b09e-04346f021f23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "811a7090-5939-457b-bf9a-35acd09be9ff",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acdf24af-84b9-4b99-a064-61836fba4d0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afefe2b2-0d24-4e27-8341-33b288e14215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f3dd29-3766-4957-abde-6e73224e9914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47327a1a-59dc-40ca-af11-9bac444dea94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b72f316-fc66-4fe1-be27-0ec49d3cd39f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2815d9f5-76fe-48ac-a49a-7009bc7d9682",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3a8bc57-4f72-4ce3-8f46-8298a5dce62f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e7c112-f3a1-4df5-a675-98e3a548ca70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ecb6b22-03cd-4285-8776-669de2d26b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158b5edf-e8d3-451a-bd9b-b8f6f58696d5",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe262146-4372-421b-9d51-b18b134322b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbcba17d-526a-480b-b6c9-4057ec65050e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ea6066-1ca8-470e-bff2-bbc3c768661c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de9d44de-21c8-427e-99c8-0eec2cdb06e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989e3265-4b15-4f5b-8ddc-51cca6aff9a7",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0bc7067-060c-4ab2-8a4a-a0d27d43858e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23476c5b-acb7-41a5-9a79-09c9c00c4fd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "535f1943-86fa-4b30-b42f-6f0e00774a7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c4790b3-9651-485c-9b7d-c1441f6af213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8515766-d865-4362-b310-d193bc0fc349",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3194b9-3a27-4d6c-8bb7-475c6a35dd8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe4f51a1-b0d9-4138-a6d2-3ea4747f307b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac9d622-8256-4a4c-992e-7fbf98a06ba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9243d68-eb84-42ef-97a5-5eda83dd5846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3172de56-4cc5-4ceb-badd-7536a32dc568",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a836b7-5c2f-4a21-8408-d60dc72366a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1147437-21af-43cf-bc3c-e58bca728a14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84df0ea-2849-4030-97db-a35fc0d880c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e526a69-e216-4896-a7ea-ff39e834aa25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d9b979-a71f-4651-97be-dd576aae28d7",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3348e3c4-ad2c-4e37-87d6-1fc5ccbc5e2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11093c54-957d-4c05-8dab-fa040632b3b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a094d5-9778-4e3a-b85a-a351241c2079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfbb967d-b3c4-4110-b157-61d47b7b17a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9575b9d1-8ab3-484f-b541-a2b2f26778d6",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d05353-23a7-49ec-b720-17ee6e54c6ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05833373-6cd7-4dee-a908-93ba97afc1d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb936cd-4ba1-4e6e-81a5-576c58ad201d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4611a8a7-9301-4eee-b36f-d276eb6f57da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b11182d-e9a1-4a18-a5f9-8762760724df",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d244de3-ced5-4a7a-9102-2364c4b31dc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7f65338-3bac-41be-8ba2-a638c9afa4aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ced74d9-e5f0-4c29-9532-517446e624a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80ab1cac-9ca1-4583-970f-3ed183477ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "468f633e-e4d5-4192-9cb5-cb539bda8ada",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c75cc37-7ee2-40f5-93d4-ab77530d16b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50c22e91-e2f0-4e43-99c2-8b705160bf66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28f5943-f818-4be3-b947-403dca1d1fe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa7a5884-114d-49a2-97c2-d97e29448ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f405769-2352-4ce0-99fa-9055f5c079bd",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e942c7f-33fb-4bce-acd7-c871d17953fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6471aa23-5b4e-42cb-901f-734e05ee73f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c610e6-68f5-40b2-bed5-e81b8a656cd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60c6a825-5f3a-4957-a2ed-91f19598d310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe1cc27-7efa-486b-b782-6cac276d87f6",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c96796-1917-4b7e-b99a-a280b1f8cee2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "362b8b4b-3c62-470b-a567-ea440e949fa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f894cd41-1b13-44c9-8fb0-aa235e2203f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59a6d782-56f0-4b9f-8028-2b61ffdf697b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c65ac7f-e7ab-403c-a3a0-a3fd1534ac1e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df84a61-0e3c-49ad-8513-0c5250f60a14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a20edc57-ed2b-4aac-b7f8-379998d1a13c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e13742-cc16-4ae8-a901-c023a3bcb806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "907a9da4-b1cf-4250-9a6c-a10ccffd8386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f0b2e5d-95ee-405e-9381-c4b8b299b3c3",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3684c4-9b7b-4810-a8a5-81dbcd5c1b28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2211b22a-ed14-4e4d-9446-3f8363e95be7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69eeadf-b896-4053-b58c-6f0ff14ea421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e199dc89-f626-4c4c-98be-919f1f10e132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66e5d36-058b-48ce-b1cc-0d9c8cfe406f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485fb807-32f0-406b-9f2d-5b5d517e8c26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bafd4cd1-268b-4ba0-8bc4-d56a936d102e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5161fb-37aa-4243-9c28-6017f2f72ad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7333a84-0162-49ee-9b41-c34530188814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c7ea58-8b0e-455f-bf68-aa6ee3c274c6",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a79da6d6-87bf-4bd6-b6d1-3ab339fd99e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39a8f026-8cc8-4f50-9df7-c15480643d6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2990028a-994d-46a4-a7ce-5124733dda5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb6009db-cf86-44c6-ab58-c858b8f839c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403dca45-a8b8-4a6e-898a-4f46a11767b9",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4199c8b5-cbce-4bd5-8bf4-b911f970860a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "028419d5-413a-4962-bf18-716881791ebb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6604fe9-0fb0-4430-aeb4-620576e37e78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "107e57bc-3d24-418c-a3cf-589f5a704312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e277cdcd-f5d4-4508-a4c4-cfc4bcf84409",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072860b7-da1f-4e06-b43a-69cdb907a771",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49fe7ca4-57e5-4710-9e69-fe15b6f94572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cc106d0-1aa7-4d6d-81d6-c1179e581072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afdd6826-9c0c-4b60-9e41-e3b33d3b95a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9c1b08-58c2-4c01-a239-f23fd280ea22",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd77efb-62ee-443a-9599-279fb605b552",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f07c3c28-ef70-41c3-84e3-f1508a93e3f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ff6c82-56ba-4ec7-96ab-0d1179d2245b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8a25520-83ab-436c-8a8d-e19d6864e652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef893de-c13c-4fa5-a203-e1f7fc66d8a4",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ecb2d84-ff67-41b3-9451-ae8777bdc468",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c252126-6ed3-46b0-8dd5-f5124f2d3253"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e608e4b1-6380-4d07-ab31-27ffc90ef93b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f996891b-50bf-4e6c-8dbe-9d57622c5d71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac1dc431-0f76-4603-8bf6-d5c9d0b63f73",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472783b5-8da8-4b04-b5a6-14e1a78ddbd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6ba2036-2052-46ea-9bc0-468b2c8e71d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1432257f-560a-4c99-a429-94e320fd9b28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "440710f5-e043-44c5-96f9-16055b3b1ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340d9640-0f67-4a1d-ab5f-681d0cfcd379",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33df9ffe-4679-4e7b-88e1-1413f492c9ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69c50db4-819b-482a-8742-36aaf5bf08a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aaa4d02-29ab-4b7d-b0fa-5dc41666adeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de47bf16-72e4-4f72-859a-e7c43b219d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27dffd26-561d-4919-acbc-e454aa48daeb",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c232428d-48a0-4f2b-bd52-e606bc74bff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36fb883a-5f1e-4fa1-941d-bf2ec5703fb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c463adac-ff75-47eb-8da6-a7cc576360cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f014c149-cc0c-42ae-9d91-51647efeb46b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881eb34d-5bb2-4854-84c9-150c6768efee",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c72356e-6f5e-4259-95ab-7847699e4953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97068fea-2474-4f4f-bc51-a2c1a9bd83c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16cb515f-793f-498b-bf71-f567a5ddd8c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf015506-a9e2-4822-b1da-d4c82aef5c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d760cb45-daf2-4699-a7da-789817401d25",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7718cf9c-d2bd-4998-9ae6-bd35fbdbeae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1fc7b52-2356-4d0f-b950-414428dcda22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df49dba-2c9e-47ab-83d2-026c1bd3999c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1573c1d3-e60c-4477-9190-26b11b75a3dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "295c7eed-e3a3-4e3c-9ea0-b8d79fa37abd",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23076d19-0f6a-4a17-a3a9-6a1a1d175d5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b695be4-85cd-4889-b541-4a3d6bea17c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7500e51-88cc-4cec-ab2c-b7894bc4e7da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9e1a659-b67a-4ae1-89f8-1ef7b38b85f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f5cf55-6fda-4cfd-8e54-8c97620ac1df",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5d6e6b-733c-4c9b-bcb6-e2f13a8393da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2c34a2b-6730-4e3f-a282-959c38462f8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "595cf6c1-3a81-41ff-999b-bd5a0adb9f0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87955f3e-796a-4bef-a35c-d71f6cf9e093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c76b011-9b66-428d-8bde-75bcad260b37",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f02ea1a-ae42-44e4-8c6e-cd473731e128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dd7a2cf-fa26-41b8-b6c2-16ae064e07c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1d86bc-1e82-4249-b128-a85d3ed93a47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6b0041f-599f-48ac-8f13-cc7ed614e53d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc6e2041-1a90-4996-875c-87806627441d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab71d974-f5b3-478f-a46d-ad44bcbbb78e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "297df0d8-be91-419d-b783-a688025dc5a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55f367b-f72b-44ce-bdbf-c8b7cc3db101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eed027c0-033c-4736-950f-d17d66d69610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08cfa16d-28cc-45fd-8580-1562f748e355",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "362b0104-63d0-4391-a7f5-fb404aa2d6cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5124fb3-a937-4126-b993-b30ae0a0b451"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5c9f88-000d-49c5-a25f-23e570bed442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a02c24-3b79-49e1-b606-fee5b2895a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d23a5b-549a-4007-9f71-f5624f6588b8",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03549225-852d-4527-9f7c-a4a4aac1413e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cada081a-725b-409f-8dd4-c7a3a8723bf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25840e15-e2d2-4026-b2e1-baad36e20996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06721eff-de9e-4a19-8f54-39cf0d3ce7e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c5d8bc-f12d-4202-b269-4bb61e56304b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828e9b39-e164-49c3-9189-1e3bad2a12cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c304daf0-da4a-445d-ba66-ffcca4283bbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3478d0f0-6228-48ef-89f7-bddfaddbc853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c870072-1b0e-4fc9-b0d4-1883bc375b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c449862-aa1b-4ba0-9ea9-7692da3cf7c0",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39025b22-7f7d-40b8-b299-9047559a0f54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2de740f2-243a-4282-b0de-102222368230"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41509c9a-0305-4a6f-b758-82f41201b4e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca2c75e4-0bb4-4591-990a-6ac08995975f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a6c7fa-0fa5-4ccd-8c5d-739dcbe65475",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b79f2f-f883-4ddb-a3b6-4735de494fa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "902222ba-4aa0-4ddc-a9a0-250de860426c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f778c8b-41d8-4bcc-9dc8-22578cc3aae5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abc0fcac-9dd2-4516-a61a-1774ca0a0cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ef3480-6175-4c19-baea-8f5f9bf43287",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750a0a33-2d10-4084-a766-703e0d3e5ccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "777b3acc-2dac-4965-a0a0-9ce89a7f6d2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0407da-9731-4774-a53f-84b80dcd8c58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1085d207-6cd3-45f0-af49-5e3c211bd84c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "865d4cd2-3fb9-4fe2-9c68-669051d02dac",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e6970a-7144-49f0-b940-824e44ffdb48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b82c064b-f8ff-4e7f-acc9-7f4b8e6a4a97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1496141-d1b5-443c-a0d9-cb72d54f7a6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38d0f660-8d0d-4df6-8279-9bb8d834f5e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4fdc83a-de31-4a21-ab85-c7c5e79cdcd0",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491448ad-6423-4c9b-9b7a-6402c6be9504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b8f0159-2f33-449d-93df-2c6293bd05d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9db3527-79be-4ecd-8c1f-5a5070817e9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a4e55c8-c2f7-4ef3-9893-b43e03c78ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "321ff321-3e01-4457-a9f7-210ab0e63fee",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce3eae9-ad5b-45cb-b26e-a3600efc339c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af768103-049b-48bf-955c-7aa0ad21e4a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abda658d-6588-4d81-b090-477c753efb0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b0b2392-f346-4f85-9ed9-bc177faa336c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370ba670-893d-4521-9a5c-3591a51ef13d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443841c4-2002-4a75-85fc-d87a2b88d4cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcd400a1-a884-4a3a-af85-9a0ff4ef62be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1de74f-1ad0-4dc6-987e-cebd090a5e09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5308ff32-cf97-4610-a72f-9c0cf1783446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928d376e-fa24-49ac-a6a5-00bdcbb194ca",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d92c61a-3392-49d9-936c-2e6d0f46d9bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0acdf192-58f0-4ae4-bd4e-c95b2fff9854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a1a711-4e9c-47f0-b441-7f49bc97936d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86824776-7c7b-4434-ba68-6b4e76574e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77fdfe06-5f2d-4b53-b865-172782f44b82",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ceb45d6-556b-43d9-a11f-307f78a7402c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8c7e947-bb9a-4d59-a8b7-7a2134de4c56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb4f100d-9820-42a7-98de-6a19b00f1252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee50cd0e-f768-42e3-a92f-8a4e5a56ce7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311e2a82-47c4-47e3-9ec3-c12a9223a559",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ed0d06-0181-41b5-836e-aa72d75f93db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be37be10-7fcd-44a3-824b-cf7536ea4b80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a44ec6-9b65-457c-b9b1-254efa759951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d5a543e-f33b-487c-9166-3296bd443ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec0ec1d-383b-4fb9-b5b6-028a9635e3ae",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce2474f-af23-4dec-817e-218d1fc2815f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89a3a875-0f73-48be-926c-a45234b64a66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc19aa7-f06e-40fd-b973-114ced0f2c62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ce7e44-9e54-4498-8080-5238ff3f2ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1457db5-2ca9-470a-a6c0-96a8c3d2ae1d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f311c9d-762e-401b-abac-ac84c1d8b442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83225bc0-f8e3-4841-a515-eaa0b7024fcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7c3244-9abc-4c32-9efc-fe03b6325b8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ca0dd7c-e91b-4c99-87ff-fab8475e572d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8004157b-18d5-4176-8e28-0a64668a7534",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d664f981-8070-4a17-8838-1f808d74ec85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "130b021e-2494-4404-9191-5b015161b526"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9676c37f-364b-41ee-b5c4-e164f0167204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4110d3bc-69dd-48e8-8ea7-1559e0c06fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5137a6ca-0b4a-4dc9-a3d1-48490149c8dc",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59162290-8596-4cd6-b899-e32737171fe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a0fb0e7-5e23-4f08-b096-684a4f564e6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed58e740-0c89-480a-b936-6738c6933398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d76a94b1-7216-4d45-b073-60e23177c3cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ad3106-8484-4d10-9927-1e4935e4d755",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be7d93d-0a6d-4a64-bb37-6f1f91a8dce2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "065d03d6-31c2-4398-99fb-5d396fd85532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dabfcfd7-9bb9-417e-8b58-ead586e0a1f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b50f270-3f14-4bf9-8672-cb4fe2c11227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb3c65d7-f2b9-4ebb-bbb8-9ddc91bb63f2",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0010cf3e-ce71-4444-8f90-b448906ea399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f26eef18-3a5c-40d5-9b7c-3a7b80b40219"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d33b4c71-bad2-4c60-bed4-b04745f2afbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f16a042-9177-4524-bad7-cf9fafdfcc3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a08965d-7e44-493b-9772-e67ed6dda658",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0285f88-e358-4277-8c46-a3fc8c462f05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "143a29a9-f15f-4d7f-abdf-f5d859f8ea5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e0f5c0d-bca6-4a33-a3a8-6d229c5398e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eda0664d-ef3e-43b3-9066-aaeb3866f8a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c1793c-2341-405c-b6b3-d2ba0ef5862d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f658904f-79f4-4fc7-b2da-0158be1f2a29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aa289a8-12c4-4845-b2c5-88500ad9a97c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d8ed22-379f-4d05-a3de-da260dea6ff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a268eff-6133-4c02-897b-46832d7fe2f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d120b85-12e0-4dba-ab1d-45b743ab8709",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d3b151-e93b-4369-8094-b472cf2676cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4a581af-5d01-4dc9-91b3-b1403fef7ce8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7506a329-627e-43b3-9e0a-2dd52f2e81f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3abef2d1-ad2e-49d5-9710-f6f6d277a631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c2fd76-5575-433a-9e31-5b7ab2937b4b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2afa0d3b-ce44-4ee7-a1c5-b61707ddd79d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8e72c89-207a-4dab-a06d-27a8b6ec6405"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae794b3-cb86-4ba7-a200-5e236c46e43a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce3b2597-18d5-4ee1-8d6d-d96ebfa15d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbee6b8e-a96b-44e1-8321-37906b5300e0",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b909956-3f84-4c2d-bb01-0aa2bf9da435",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68f65ae2-74f7-46a4-a89d-227026d22fd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba250af3-e712-4db5-8249-966ba7faf436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eea99987-b7cb-4827-9906-23de6db69050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71413ad6-a984-409c-ab91-cf312af692c4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d45d3f3-e9ff-4059-abc0-53c34453f807",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf616851-aaad-4c89-bc19-544b998b86cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a581adb8-5446-4d99-bb2a-7b8bad6ffd5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa9b1de1-1540-433c-8944-97b0b5511cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f8095da-0569-4b7a-ba7a-3f74b29c9ec2",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1eed2ef-63af-49f0-b028-67f33c9ca38f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46931fcd-d8de-4e2c-98c7-a843079621dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5881907-b646-4513-aa45-c2e01a3b2706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "134872cf-553b-4a13-8125-b662be0cac71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca9051d1-879f-47fc-b44a-2bdfe0b0dd20",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428fd84c-f83b-41e6-a4e0-fb3453044241",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "022e62ff-9d63-431c-b0c2-2acc4d7e8403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83dca5e5-7a2a-439d-ae32-f45cd4439634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77b46bfd-c5a9-4d7c-a942-9db8a0bd27f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051ea681-a577-48b2-bd38-68c932948167",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1237258b-b62a-455c-926a-da453d17c808",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42e9a2d7-d824-4edf-9d64-6e52c3b92ffe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e74d057-0715-43bd-841c-4ea381ff7a84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abcfca11-594c-4feb-bbc4-6d8a4b599da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e21bb38-bb2d-4cad-94e5-950519322acb",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc7c27c-93e0-409c-96c1-4d7d77a925df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3185964-481b-4f86-a930-39519ebc3639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a90c25-22d4-4c60-8685-20f0544f361a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c61249e-8c0c-48ed-9383-7af49bda8ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5341180e-137c-4364-9ff5-7231e0aee649",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50090c7e-907e-420d-9f62-298adda87702",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31654c9c-ed40-4054-9107-278bfb95a701"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59cbcb9f-f511-46ec-9afc-1344a10c5d54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97e16ba5-c8b1-4788-a961-20d52808c9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a14e3e1-cfd8-4865-8ae0-9a5b8faa507b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb0a279-cf06-47b8-aee5-31ebb227080a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9bf0c3c-ab2e-4c0f-8ca5-0786f4860a54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42dc359-884b-4950-b5d9-142e46ed4aeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72de9967-3101-4547-9579-15b24889f9d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5409e1-32d4-4e91-8b2f-d2c83534a319",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23dbcb9d-4d12-4b4d-903f-607e4f2eed6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cd6eab0-cf99-4e4c-b883-89c1470d7fdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "655d938e-c191-45f7-9440-9b1b82e707ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ba53a74-f6d7-44bf-8001-6b814c5177c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd1a5ea-206e-4691-bbe7-7ea3a733d985",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f503dc32-17c2-4fb6-88ef-8d2f44794886",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "596ac892-866b-4708-9634-723ecd88860e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1887428f-c1fa-4f76-994d-3e7fcce51b3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecdf0aa7-6d16-4232-aec7-ab8ec6516372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9427bbd1-04f4-43ad-a096-c0e195c32bc9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f8158fc-5e55-44fe-a27c-c8a68a531fa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b66f975e-0e5c-40fe-ac39-e713e4d5b591"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2125c756-b884-4849-a45b-cce40e37b98f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "233e9cc4-a414-43eb-80c9-9129b1380f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640dba81-94d0-4b50-b610-94f68e3cca0e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558116f2-eda9-45b4-a580-fb544a700125",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6ec9bb2-87a9-4bf3-9d00-64edfa957fd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd13c2e4-d02b-4e4a-bb84-5bf049aead4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f5d3790-9b8a-4b74-9416-d0953cc8fb75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925eea1b-2f45-4048-8d71-ff38b4bdeca9",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f77a2d9b-c6db-4b1f-a389-a5247c69a310",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "137ed347-290c-43dc-99a7-befc26f5e651"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a73629b-d310-4655-9b94-92630563fd37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69edf037-1597-4f83-be9f-9b8aa4a38ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c910ed0-d15f-47b0-92aa-37037fbed7b6",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8e4eed-c25b-4ae0-86c8-d9df61c4ad41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40a04cf9-99af-45a2-838a-8e56e87a0394"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9853c5-7b61-45f5-be02-6e02d174fc59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01d85c5d-3d61-4d7f-bd43-e30a4ea3a215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f79999-8fa5-4b4c-8759-31a07df18ac0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57fd608a-6cfd-4750-b43e-f6149bda224e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d874f019-4eb8-40f1-8efd-66819487188d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f123cf-8443-4f8d-b0f7-1ec21c754806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01fb2fe0-0ede-4d79-b2b0-b865a82a452b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81063446-da96-42b0-9918-1721e18cc364",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99429226-3719-4cfd-8ba8-ff20bcc4fe5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a985d1be-cde0-453a-9fb0-621b58b0647c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38938f0-c5cc-476c-8d51-10e13d00f8c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8b930b0-fc8b-4236-9f2c-7c8294b3d07b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62df41c-849b-4f4b-9686-82afcff5834b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c330a7e0-ff8e-42b6-997c-f82dda442d35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4487ec4-6fee-4a2e-b5b6-a081f796b01f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "227a39c5-2098-49ac-b0cc-ec8815c2a60d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3453eacb-1c77-40b4-9717-81c9eb09daed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86410445-efb2-4cbe-9174-b026610e91f6",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4196436a-3b32-494d-85af-eb65e2a12cf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c5fe71e-ff57-4655-bc7d-3c1dd1354af3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "734b3df9-b21f-4177-b4fb-2c171765cc14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f33f925e-c9ce-42a5-bf94-75729ef61cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5bdf7dc-2d81-4050-b430-c44906d4c3b3",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d0e4c1-13bf-4cc2-836c-3edfbbd52bac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f06784c-d6ac-447b-a49f-a907927e9c03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05a6ff0-c500-4945-939f-6fbd584a4734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "505138a3-dd21-44a6-b766-89a65bd09223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e78642-971b-4adc-8b6f-0a70c994da7e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505db095-7ff6-4bcf-8fab-e03031f39b96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "526b0b1c-3d04-4563-90a5-3025faaedc99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca7b975-0c10-4475-9755-6677c4ee26da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c919d108-38f1-4952-81c3-430af3076d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93c8e51-f509-4274-9187-771d0b4798e8",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d526d684-83f3-44b3-97bb-387a8cf70184",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56bb0a64-c031-4148-9b22-801b0e8ccf98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d942b8a8-370b-4ada-9df8-c92c7f0afe55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82d82af3-e327-435f-b90e-fdfae98452fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c9b20f-dd26-4d8b-aabd-243f35fc1941",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b97d172-03d3-4a30-b0a3-b606dd7b89a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fac38726-e637-4ee6-bb51-44927b1cdc6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c95acf-a387-4c17-8a8a-01f5bfd3555a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c85b021-d0b8-4449-b0d8-8cc0e1c4b9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f915ad60-b973-449f-a003-cd6ddeb9f9ba",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a89d5a-5ecb-4e59-abc1-0482d732336f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecc1871b-c135-4172-85c9-b0b3bac66392"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86bb776e-29d4-4b60-8d23-d21b20162102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1ea6c9d-6eda-49c1-aafe-6ea0641ba1e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f77bfd-f217-469f-8db2-aeaa3714de96",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc8f71d-b523-4489-98a4-f49f9a0bbc0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4930d863-0e63-4617-b707-0976e1436d3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7367a456-f1fd-4ad5-a3c3-970996a88405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36365bee-44e1-4108-9c1e-88605468987f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559cdbd7-773c-46a6-a4be-f18b99938c9e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87cc4e1d-c004-4705-9e50-948230dc36a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "745d618e-2882-4df3-8271-e0431007b5d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5ef3f1-1400-4741-a82d-7d0ecb6701e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "336094a4-0f4f-4811-9f91-82655b1a6649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd8685f-e506-4b98-80c3-455694bedc0d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "059be35e-ef5b-433d-b2d3-75a53d418f7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "351c777c-7abe-4b06-8dcd-0587e1a3ed02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a3ad76-2e80-4919-a58b-79367fc75869",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1039a08-279a-4b04-bd2a-7f8662579396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ee02a8-7625-470b-b8cc-abd11d7efd7c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8347d44e-b2d4-4f24-9c2d-34dccb9c2370",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e7632fe-fb85-409b-acbe-b7bd982dbbc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4808aea-fb33-4ba4-9c10-5b22095ff5c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28538389-70f5-498e-9544-32e2412f339b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aafae260-e53a-4fbe-b50e-a1c39e526214",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a1d1d15-3928-4fe5-8810-95b0b5a73f10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e1d293b-228a-4707-bb5b-ec7ffbb2684d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f1656f-e970-4004-8c0a-86ce18c954a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5e46e7a-0281-4bdf-971b-3801021ef823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2461df-bbd7-4b00-bdd5-b0020e9f71d6",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2771e0-a68e-4051-b110-5cf54cbf6125",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3e0d3a4-6481-41ba-936a-ce09b38363de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8283954-61c8-411c-a4c8-dcb5d32ec50c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af056e74-ad7b-4959-aa77-df47e6edad94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4644fa7-ece8-42a0-b1dd-bad16c24e64e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30cdd311-04d0-4869-8cf8-d8b0e213db41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf6814f1-71b5-47f4-9d85-c0098e99e2db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aea40d4-37d1-48ea-afbd-843ff5b24c7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd238735-0fb6-46aa-aa07-36e97f532301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb8e9d2-916c-4d79-b84b-1af9c32975a9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceacc416-cb9e-45a0-8c65-ff07f875acb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00eb10b1-217f-4c24-9160-6c97d44441d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ab5737-e6c2-4dbd-8c49-b3ae975f7749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bea738d-06b2-4b19-9844-3e05895f0156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d28c5cec-c093-42bb-a190-70715b7fe94f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4963791-fddc-4e74-837e-e7bcdc00d856",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0861b143-f690-47a1-bfa0-6ffe1920ce4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "756985cd-a6ba-4d8d-88bf-be6b4c05cf5c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2894237-d001-4b8a-bc95-ffaaf0d4968e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65eca25d-ac5b-4b59-85ff-8602d191013a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abdae400-2b73-48fd-859a-0da74c76f493",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a45cd72f-3a57-4041-98a1-990faf874cad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "994b6554-a35f-49c2-88cd-7a76f336b8fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "590bb28a-4964-40b0-952f-4fad5663f021"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4541f8f-e8bb-41da-a521-5404e1fc76a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83755f3d-0c49-412d-a755-0fd8be97d42a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c92ea8db-6ad0-4985-92a6-3f083155f630",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "281c4175-fde7-49f7-8503-129743e0eb2c"
                    }
                  }
                ]
              },
              {
                "id": "6647bac2-00f2-44c7-8a7e-cba0bdf172fc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7bb020cf-cc2c-4ab9-b8bf-ef04f3a7c428",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab1b385-338c-4b86-a1a0-538fe799ffdb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "241fcc15-abf1-47f6-ae56-0d9bf46baa0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "630cba0b-0d2d-4277-9954-fedfe0557731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "608fbb93-112e-411e-9de1-a41d39ebc65c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0e4ee63-3d1c-4390-b241-1bb6945012c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c953fd0-20d1-4a60-a571-7caf31d789a5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5bd9c83d-ad96-4b5a-b8c8-feed3cb887f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ce8858a-6987-4813-8b26-2fb7484ade5d"
                    }
                  }
                ]
              },
              {
                "id": "0c8ae8ed-70cc-40c5-ab0a-1a2443c1febf",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "65649967-63ee-4491-bedc-0c6eba2b2f86",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad2ac94-c7db-41d0-b484-95e5270b08ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e37d288a-203c-4475-bd58-8f6e2ac26058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821ace60-3037-45c7-95c6-6603eb6a5364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "018d33b1-1273-4406-a33a-cbe55f7aec36"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c536d0bd-aa7f-4291-be79-dc3c2bffca29",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7c5a4d28-7d5d-4ef5-81e9-197e541167c0",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ce4cb48-bd43-4b9d-a28b-6f7a255e42ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cf06ef75-e616-447d-becd-902a4862309a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "414e75c1-eea3-4e0b-81d3-abd877f384c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82149683-e218-4e30-9052-6f00d4a1c1f3"
                    }
                  }
                ]
              },
              {
                "id": "6ed7951b-a5b0-4095-adcd-68764fb047e1",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c372986-bec8-4be6-80f7-34569469de3e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "69358256-985a-447e-a6fb-df26ad4b549e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53f9f0a2-f5db-4555-b73e-fbd82265a6bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7160ba90-bf7e-4729-bb1a-3df9e1d3e614"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fd687ac3-40d9-4bae-a519-4c8901c59acd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a3566fb0-4369-4e70-8abf-b34cd35883c3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fa95aeb0-d70d-457a-882f-f1b8b9275270",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f5dadb9a-4a6a-47f8-853c-c1ea7bafd9f6"
            }
          }
        ]
      },
      {
        "id": "92a82906-50e1-493b-a794-e8977db7dad7",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "271422d4-11f5-4b82-9458-3bb07cae3e7d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8fee634f-e684-42a9-a000-8c717685293a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a03aec35-1806-4377-b11f-53474cc9ca44",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8ef1a3-18e9-4452-970d-7d70e1526658",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "34c8859b-7338-4b65-8e58-7ec584dad93e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00fbda99-561f-4ef2-9c27-3f8da063d528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb4fdfc0-6574-4e13-9ec5-f2afa80c827c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76e39954-ba8a-4d1d-85d4-b8c443aa1d5a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b0a42cd-ba37-46d3-a166-1261556dc500"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "55c65db7-9148-45a0-92d1-6c1dc2cd1790",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fdf5cab6-11e8-4afb-81d5-5320dbc9e15c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "313d2e94-de5c-49b4-94a7-354a0eb7e329",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b52d3391-1275-4958-909d-c688a7e75cdb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "63390fcd-f94a-43a9-83b6-b3c3f153694e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "523bf59a-955d-438b-9b28-cbc672278cc6"
            }
          }
        ]
      },
      {
        "id": "90bdefd4-9fa8-4e07-98a2-05da96ef1b6e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "113b1859-01c0-4a28-8307-8b020d14d511",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3bf60271-aa19-4237-b66a-ea812754df84",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0771edfe-36c4-4b9d-bd96-220951c0ce33",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "171fb1c6-998d-419c-9e52-2a61021d2aa3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e919da9-4dca-4a8f-b31e-63ec3a3b41a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86f8b8d-f6ae-49ec-bb17-ccc7998c2e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31e1d892-8ca8-4b2b-b3a4-cea22bfb8452"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9330bac4-f10a-4aa9-946d-3c766c329042",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27f29556-9509-44b0-8af9-3a24886fb10c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "50bd1f73-f212-48d7-95ce-af596bb8b86b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47ad0840-0b35-4b77-b56d-ad09aece4cff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b65b994-5937-46e5-b183-d1541d521c80",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3cb9286f-88fb-4af0-981d-1a0c990baeb6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6eb2634c-807d-47b0-ac04-2702c803dca4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7f020a06-5da2-4e8b-b551-98d18591c147"
            }
          }
        ]
      },
      {
        "id": "9bda37af-8670-4f71-952e-fcbf80a13e13",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e55dcf7b-bcff-44ca-8b58-f4ed3a958fa0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1e408469-7a69-49e6-8ab2-fce0335b50ad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "59c17de7-237a-4c3d-8072-65bcdcda36d1",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b954a07a-7335-4d85-8ff8-abdd553faeae",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ed4fce7-1a49-41a6-9290-e3ee982fad4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e2555a-c2d3-4d66-b223-f4c604d1ba4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a96126a7-869a-415b-835e-d18bf07179e0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08e9e734-ba53-43c7-94ae-166da4634c95",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a004a083-45da-48b0-b735-9c815d1195c2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b899bb58-cffb-4c92-9b29-107aba483d3f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "780d0140-0bbd-4251-908e-2a8a65a5daf3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "89695777-a63a-4866-a64f-68ca47608ee9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "929d8cf0-7dbd-4a6c-8abb-6d84ca4aeff1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "934d5c77-b88c-48b8-bb80-8c4f41c3aa8b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "79f638c3-f6d8-482d-8b4c-ebfdbe0a1f27"
            }
          }
        ]
      },
      {
        "id": "a7f0630a-c8a2-4f33-8dd9-56df1e9afbfd",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "de507f45-6d2a-41d2-a336-5b7d07991732",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99e7a440-2db7-4227-9389-6db683c5d19b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3c028b80-38a0-455a-b7a2-37dbc44306e6",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0598fa0a-09a1-4ee5-94dd-256cfbb804cf",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c2e2c4a8-0409-4093-9d9e-342246cdaed8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 395.1626984126986,
      "responseMin": 6,
      "responseMax": 13114,
      "responseSd": 1905.1941640930754,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1725151893537,
      "completed": 1725152001517
    },
    "executions": [
      {
        "id": "7ac2d4b3-f032-4ca9-b75e-ec4a108705be",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7441941d-4626-4359-943d-ac95a506596a",
          "httpRequestId": "ae8297ab-e249-47d7-ad3e-7051285f9af3"
        },
        "item": {
          "id": "7ac2d4b3-f032-4ca9-b75e-ec4a108705be",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "dc76f711-0f94-4573-ad5e-c44ed7ada2a2",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 0
        }
      },
      {
        "id": "8e7eb393-924e-4ccf-b0c8-653517fb63b9",
        "cursor": {
          "ref": "a516f294-8cdc-42e8-aea8-873e4beee5d7",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "06ef1c0c-0d9f-4319-9d7c-6a0e9124faed"
        },
        "item": {
          "id": "8e7eb393-924e-4ccf-b0c8-653517fb63b9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "32d874f9-e681-4d1c-90e9-a1b5bef95796",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "93916409-0e41-4911-a8dc-03f67bdfea67",
        "cursor": {
          "ref": "2d5f41bc-ff4a-4d92-b08b-4d779d4694ad",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f6fa08a0-8000-4edc-a3ce-114b484d6e6f"
        },
        "item": {
          "id": "93916409-0e41-4911-a8dc-03f67bdfea67",
          "name": "did_json"
        },
        "response": {
          "id": "b7f88c4b-3071-42ea-be2b-97de4edb24bc",
          "status": "OK",
          "code": 200,
          "responseTime": 167,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ecae74-1771-4389-b730-30b3f1e0b89d",
        "cursor": {
          "ref": "5d58661b-97d5-4121-a57e-0f98c33b37b7",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b856a158-294f-4bef-bc9f-0fff2c77b5d0"
        },
        "item": {
          "id": "14ecae74-1771-4389-b730-30b3f1e0b89d",
          "name": "did:invalid"
        },
        "response": {
          "id": "06652628-613e-4743-a864-f40ce12fd04e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2203,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ecae74-1771-4389-b730-30b3f1e0b89d",
        "cursor": {
          "ref": "5d58661b-97d5-4121-a57e-0f98c33b37b7",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b856a158-294f-4bef-bc9f-0fff2c77b5d0"
        },
        "item": {
          "id": "14ecae74-1771-4389-b730-30b3f1e0b89d",
          "name": "did:invalid"
        },
        "response": {
          "id": "06652628-613e-4743-a864-f40ce12fd04e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2203,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803567b3-c178-4af5-95b1-1583ab5fae5e",
        "cursor": {
          "ref": "be40a03a-ba84-4472-b611-4352c121ebf0",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e91955d1-7993-4837-9aff-bee4b7abaf3b"
        },
        "item": {
          "id": "803567b3-c178-4af5-95b1-1583ab5fae5e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "463adbe6-2981-4db5-8017-4f516f2edc2f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2078,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8efbe19-c17c-4a0c-a61d-da9ebb1c3004",
        "cursor": {
          "ref": "e7320540-20b5-4b7c-9f35-64ce402de42c",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3c1a9637-a3cb-4368-8349-3dea243cbc37"
        },
        "item": {
          "id": "a8efbe19-c17c-4a0c-a61d-da9ebb1c3004",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2f8c22b8-ab57-468a-8e76-f32aeadd3c81",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2270,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f2471a-be7f-4c86-949b-4226be79e770",
        "cursor": {
          "ref": "8eebce94-dee4-4788-92fa-2194c9ffb6e6",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "edd155dd-7c00-4c56-b2fb-7b08549320f3"
        },
        "item": {
          "id": "72f2471a-be7f-4c86-949b-4226be79e770",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3f37269f-8754-4ce9-bd8c-6f45d8708f9c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3460698-9bbf-4ac2-9d2e-faccd9865d02",
        "cursor": {
          "ref": "da1ecef2-61a6-4e13-96fa-386c036b8a83",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "da40d7ef-1720-4ff0-a9c6-0afe730c4de3"
        },
        "item": {
          "id": "e3460698-9bbf-4ac2-9d2e-faccd9865d02",
          "name": "identifiers"
        },
        "response": {
          "id": "d7ff663b-e362-49f5-a97b-a26b123a9b51",
          "status": "OK",
          "code": 200,
          "responseTime": 2498,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9670894f-d429-45a0-8aa3-9d601f84c444",
        "cursor": {
          "ref": "9f02b950-ac5e-4a7e-929e-77427ad9b55e",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f3a29a13-af66-4e82-8c62-319d3f10788d"
        },
        "item": {
          "id": "9670894f-d429-45a0-8aa3-9d601f84c444",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e2050f4b-caf4-49b7-8b42-9f8de0f7254a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bfac917-b784-420c-a087-dea7d4a8ea83",
        "cursor": {
          "ref": "4759fc5c-3690-452d-b6f6-cfb3cfb9f0c0",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "15d33c4f-acc7-43e6-827a-43ab08c58513"
        },
        "item": {
          "id": "0bfac917-b784-420c-a087-dea7d4a8ea83",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "be8a36f1-9f0c-4acc-8846-c4fe086b1068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22ab669-69fb-489d-af2c-ddb403c50b92",
        "cursor": {
          "ref": "3efae7a1-6d9b-4a9f-b881-2ea1c5b9157c",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7e09109e-9d15-405f-8993-c361dbdbc7dd"
        },
        "item": {
          "id": "e22ab669-69fb-489d-af2c-ddb403c50b92",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5a5cc794-867b-4638-a613-bea7c816dcb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf28ecd3-bfab-4500-868d-5453d36f65c9",
        "cursor": {
          "ref": "c10e3486-1502-40a3-809d-92b6942c85c6",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "fe8dd2a4-fcef-403e-a331-3da08abec7c8"
        },
        "item": {
          "id": "bf28ecd3-bfab-4500-868d-5453d36f65c9",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "45d68cc9-8585-4572-8e41-d85e11a908ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bdc8370-9399-4a9d-b511-3a30cb1d682c",
        "cursor": {
          "ref": "2dfb04e2-eb78-4abc-813d-48dc10196ff7",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "05d92b9e-6ff5-4bb3-9fc1-6516669a5e75"
        },
        "item": {
          "id": "0bdc8370-9399-4a9d-b511-3a30cb1d682c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a024403c-a629-4a06-a2ed-fafebca7cfde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6133a4c8-3853-45c6-9cd8-0dd53741cde6",
        "cursor": {
          "ref": "58edf93c-fe57-4b10-9e63-435fb409ef81",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "aaef392d-6414-4d3b-a065-ec36d4adf7e7"
        },
        "item": {
          "id": "6133a4c8-3853-45c6-9cd8-0dd53741cde6",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "317cc3c7-d33f-44ae-aeb0-3dcea67228a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5fefe66-8819-4b87-9d52-b81e303d9f20",
        "cursor": {
          "ref": "393cf191-bc44-4325-8a6c-9bbc58f67355",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9537f0bd-958b-4de6-8588-0ffc60932664"
        },
        "item": {
          "id": "b5fefe66-8819-4b87-9d52-b81e303d9f20",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "35b963fe-11f8-4688-b6c4-8a67f47d54e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e669b583-5713-41d7-a6ae-c9bb9d095f32",
        "cursor": {
          "ref": "c8649797-7ab0-44a4-b796-6a9d02d62266",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "98b0c26b-cb37-4278-973a-c2ddf4900f56"
        },
        "item": {
          "id": "e669b583-5713-41d7-a6ae-c9bb9d095f32",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "79c98444-5007-479d-81db-ad5008c8eb39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0926cb60-841d-47da-8b89-7f53f78581dd",
        "cursor": {
          "ref": "9ae95f3a-7125-4388-95f5-6d6a5aa8dbec",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "dcee0d32-5563-4c32-a078-11ab4a464ad4"
        },
        "item": {
          "id": "0926cb60-841d-47da-8b89-7f53f78581dd",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "88d562f7-8d7e-4c84-ac39-f448b3f3cd3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58765e2e-aeb2-4f40-8567-f32b6bddaa65",
        "cursor": {
          "ref": "77ccffea-5531-49f1-bbd1-f3ba34bfae46",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "98ebbdff-4cb1-4ac5-a7fb-e28bae86e3b3"
        },
        "item": {
          "id": "58765e2e-aeb2-4f40-8567-f32b6bddaa65",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "96fd088e-7c35-418b-ba5f-a8b46d5c2e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c220eb-1a35-48a4-be2b-39c4c7c22fe5",
        "cursor": {
          "ref": "65630e85-65d3-4176-ae77-f83f4dcccb2b",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8d647dc1-25af-45f9-9d4b-5e4649622fb4"
        },
        "item": {
          "id": "d7c220eb-1a35-48a4-be2b-39c4c7c22fe5",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "89ce1da4-f563-4f06-b902-2027ff8625a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716783b4-b06d-4bd8-950f-a738c67bc58b",
        "cursor": {
          "ref": "d2f912d6-6570-4a93-8ca6-a5eabec3f21f",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3680a48c-04d7-44c2-8776-bbbf70d2dcfc"
        },
        "item": {
          "id": "716783b4-b06d-4bd8-950f-a738c67bc58b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "4ff38213-b5ff-4161-a49d-264c9755c98a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad53cff-9866-46c2-bf84-f95cc2bb299c",
        "cursor": {
          "ref": "c6861d09-40b6-41fc-b700-cf365538586e",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "03cd49cc-a479-4966-af2d-9adff81b9a05"
        },
        "item": {
          "id": "7ad53cff-9866-46c2-bf84-f95cc2bb299c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0ec0c0f9-f67d-44fe-8ed7-6b9549b1a688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8aa5f23-75bc-4a9e-acfd-7dcb32764529",
        "cursor": {
          "ref": "c0bebe27-d0e7-478b-ac0a-5ea4476b0eee",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c0cbf5d6-d1ec-4555-ac06-fead4dc96daf"
        },
        "item": {
          "id": "d8aa5f23-75bc-4a9e-acfd-7dcb32764529",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0d83d877-dbd6-47bb-af21-dbf6840a1f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae46311-635c-4a0c-9530-9d029ea03a1e",
        "cursor": {
          "ref": "de515d33-a372-4963-a751-7d300a77cc8b",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1f1b5f5d-98c6-46b6-b76b-c0de0d2fca41"
        },
        "item": {
          "id": "4ae46311-635c-4a0c-9530-9d029ea03a1e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "da2d426c-1499-41a7-827f-ec39bd25a455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd25fd37-6110-4e51-84e5-d56f8abda2c9",
        "cursor": {
          "ref": "24169a25-dc3a-4792-bc52-fd9ef56eba8c",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "189b4872-60b5-4561-8db7-e13c2f590ade"
        },
        "item": {
          "id": "cd25fd37-6110-4e51-84e5-d56f8abda2c9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3beb0ff1-ed56-401a-9bbd-1ba256c200fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "040e642d-29fc-4017-8fd9-d590a57a9684",
        "cursor": {
          "ref": "31f1add6-8e1c-4de3-9192-8cf54385fc01",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9e09312a-16f2-4305-85d0-629ab61877f9"
        },
        "item": {
          "id": "040e642d-29fc-4017-8fd9-d590a57a9684",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e1463a0f-0edb-4b86-9b77-32fa94ff519a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ae8612-80f0-4f30-9bab-e33c0bf0f39b",
        "cursor": {
          "ref": "746c3b0c-ac68-44dc-9b6b-a8be7ccda476",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5ce83b3d-561d-407b-859a-4fd13094409e"
        },
        "item": {
          "id": "f5ae8612-80f0-4f30-9bab-e33c0bf0f39b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2c5aa658-53f3-4430-aa00-1ecb4dbe5347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256bc238-7ffb-4a37-9654-0d2e461ae336",
        "cursor": {
          "ref": "4372482b-7465-4331-9326-3a4044414e3e",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "41966b3e-dce9-4368-bef1-ea5459a9da30"
        },
        "item": {
          "id": "256bc238-7ffb-4a37-9654-0d2e461ae336",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7e79bc5b-861b-4dcd-8e86-6aa24386f58d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec297e2-4881-4816-8410-d7c5feff64d3",
        "cursor": {
          "ref": "d96e28cd-c5dd-4e23-954d-ca3a502cf7b5",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "32ae9be7-64af-40a3-a159-13ff75d11cc8"
        },
        "item": {
          "id": "9ec297e2-4881-4816-8410-d7c5feff64d3",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1c6c3fd2-f4cd-4da0-bc2d-e72011d3f616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9700c552-eeaf-4c4c-b52a-3d19c89e625e",
        "cursor": {
          "ref": "cd839189-0330-431e-81d8-8fbe355665a1",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "50a710cd-c24e-4d3f-a49b-a8b732f1754a"
        },
        "item": {
          "id": "9700c552-eeaf-4c4c-b52a-3d19c89e625e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0a12565e-1b6b-4296-8561-af1591900b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b74c592-c7fc-471d-aae1-7ab3ae395fd6",
        "cursor": {
          "ref": "d34baf94-a0ad-4bb1-ac0d-b4fafe911e1c",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "633aa980-2196-4a66-9827-10e4e5fa2c76"
        },
        "item": {
          "id": "7b74c592-c7fc-471d-aae1-7ab3ae395fd6",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ab485285-b1e6-4fbb-b509-37edaf24f6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff42e387-6b6b-4dc5-bc2d-8659f743c760",
        "cursor": {
          "ref": "80583f80-f18b-4192-9177-12d6c76c5a39",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7e715956-804d-46a6-b35c-fdd3f17e6df8"
        },
        "item": {
          "id": "ff42e387-6b6b-4dc5-bc2d-8659f743c760",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "992bf44d-0966-4f3c-8c13-819e4fb7e190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09bdb0d5-361c-4061-b306-6a38ac745468",
        "cursor": {
          "ref": "709cd5aa-b97a-400a-880e-082324c4b1d2",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9cb1aa70-0919-44d4-ae10-2d98c6299168"
        },
        "item": {
          "id": "09bdb0d5-361c-4061-b306-6a38ac745468",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b3ea6fdf-603d-434a-b1d5-f4647a7ff713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dccc52e2-834b-445b-863e-3cf9731e4e9d",
        "cursor": {
          "ref": "7f0f7c6b-0afe-41c9-a81c-847e90f45ba1",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c918a0da-c9dc-4d8a-8ee1-1d9eaaa70d5c"
        },
        "item": {
          "id": "dccc52e2-834b-445b-863e-3cf9731e4e9d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2bf26565-b861-4b44-bc15-69267089f106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1d8e71-2d9b-4d8d-8189-6498865ff7c2",
        "cursor": {
          "ref": "3ab8d27c-6197-41ae-b6ed-3b8ae3bee82e",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d06898ae-6d19-4760-a65a-9ea11cc9b94d"
        },
        "item": {
          "id": "5a1d8e71-2d9b-4d8d-8189-6498865ff7c2",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a22c14cd-78d6-4c31-8201-580f36a4feb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9ce4fc-9bfa-40b6-8008-b065b821e355",
        "cursor": {
          "ref": "2ec42ce4-46e2-4910-932c-6aa49b683973",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "7185a7fc-bf2f-432e-9569-cab8bdca21da"
        },
        "item": {
          "id": "bf9ce4fc-9bfa-40b6-8008-b065b821e355",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6a27d360-4a05-46c0-a01e-6378c4b10647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6225d498-fc57-4007-a7ed-dfce7f55ce5f",
        "cursor": {
          "ref": "5b21bcba-b3ed-4533-9780-c6ddde98abf7",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "92413d94-741f-43c1-af55-5c9385dd3fca"
        },
        "item": {
          "id": "6225d498-fc57-4007-a7ed-dfce7f55ce5f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "093e25ac-83b4-4005-816f-9d706b4dc1e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4052f0c5-3fdb-4923-b5cd-6f5efd964dbc",
        "cursor": {
          "ref": "9bc9b48e-d7da-4fbd-a16c-5f103975aa49",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "bab0f031-757d-4db8-a876-a3f32ac6a3f8"
        },
        "item": {
          "id": "4052f0c5-3fdb-4923-b5cd-6f5efd964dbc",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7d5550af-19ac-4912-b889-d0866938b3a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f08d9845-62b1-4704-91b6-b4e352c98b1f",
        "cursor": {
          "ref": "fc617136-bfbd-439e-a40b-67438ab8801e",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "88846db0-51b1-4009-85c4-e2079053f97d"
        },
        "item": {
          "id": "f08d9845-62b1-4704-91b6-b4e352c98b1f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "97a06b04-11c5-44a9-b139-b916509fcf22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "509061ae-8399-40d4-9af2-8bdb6114c526",
        "cursor": {
          "ref": "4d41ac71-86f4-4dd8-9a42-daafb5f8c53c",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d2673dad-d0e0-4b49-836b-b3fe6257449e"
        },
        "item": {
          "id": "509061ae-8399-40d4-9af2-8bdb6114c526",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "de33c3a4-148d-442e-a5d4-865d1e571add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de20c6e-55b1-4b61-866c-f6fc14f130aa",
        "cursor": {
          "ref": "f801c543-7790-44ce-a84c-2f3a04fe7482",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "14fd035c-f869-48f7-918e-fd213c5ed5fe"
        },
        "item": {
          "id": "6de20c6e-55b1-4b61-866c-f6fc14f130aa",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "18cfb352-4c6d-401f-8990-93210bda4265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c286b25f-5515-4a4e-9196-c1b5eeb693cd",
        "cursor": {
          "ref": "e6f1a66a-92f6-4080-a425-6eee2e537793",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "48fd60ad-517f-4c87-8e58-46f8719bf41e"
        },
        "item": {
          "id": "c286b25f-5515-4a4e-9196-c1b5eeb693cd",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f6390789-d584-41aa-b67e-86f86c02443c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10334971-4ddf-4fba-89b2-6fbbdd41f604",
        "cursor": {
          "ref": "32caaefe-fe39-40cd-865c-49fcee0986e9",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4413141d-1373-4344-8e27-2cb01c9938c6"
        },
        "item": {
          "id": "10334971-4ddf-4fba-89b2-6fbbdd41f604",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f3433cdd-da99-4242-ae35-c8d402ab4cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7f5118-ba01-4153-97a3-774a98a6888e",
        "cursor": {
          "ref": "a14dc52a-66c3-497f-a6fb-ef70c9b8b949",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f17fc8d4-8ba5-46da-a4f9-94ef5e318cb8"
        },
        "item": {
          "id": "ae7f5118-ba01-4153-97a3-774a98a6888e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "1e24a7ca-2023-43a5-82bc-c5ef8c7f52e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965fcfd6-3b04-45be-b497-ba8c757518bf",
        "cursor": {
          "ref": "485f492a-e8e2-4900-85b6-6492b279787a",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e902bd98-951b-4020-8c2a-288c4f572f3e"
        },
        "item": {
          "id": "965fcfd6-3b04-45be-b497-ba8c757518bf",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f8a84fe2-c4fb-4409-b2fe-e6ed73a25199",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 32,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51aeab57-38bc-4374-ab99-e7fa83ff7787",
        "cursor": {
          "ref": "59f72543-a4f0-499a-8221-f41919eb12e1",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5938a900-2bfd-4dbf-95f8-b8a3c79da109"
        },
        "item": {
          "id": "51aeab57-38bc-4374-ab99-e7fa83ff7787",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6b38d94f-b943-454f-8ab1-9177da0142f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ec7232-6161-45d0-831d-c63d486da8b9",
        "cursor": {
          "ref": "6e3d7542-5525-4b0e-9510-a150cb82f76b",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c3967160-e661-425b-8a2a-a0bd94f72aa4"
        },
        "item": {
          "id": "72ec7232-6161-45d0-831d-c63d486da8b9",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2e8424b3-52d1-48f3-b91a-0a0f11372440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c76e430-b575-4b10-bc5b-f73ad00034f7",
        "cursor": {
          "ref": "9cd29f21-8fd4-40ea-a855-982452105f22",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "202e83a1-5f94-47f9-a45c-9aaa58cbf4bc"
        },
        "item": {
          "id": "5c76e430-b575-4b10-bc5b-f73ad00034f7",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "932f33ed-3b89-4953-b11e-22c9b4f60d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0648758-74a7-484f-8e08-621e722d5908",
        "cursor": {
          "ref": "31717f6f-42ef-49e5-8def-7a0d20fb8967",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5436e068-a50e-4b1d-a471-c3e43b947224"
        },
        "item": {
          "id": "a0648758-74a7-484f-8e08-621e722d5908",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a1743953-333e-4c3f-abe2-f47b4398190b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703f8498-5fa6-4584-981f-d100dd79c3b6",
        "cursor": {
          "ref": "cdff349f-39b8-4d72-985b-dd64b0c9df87",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2563be7d-619b-47ef-a983-141f5104994d"
        },
        "item": {
          "id": "703f8498-5fa6-4584-981f-d100dd79c3b6",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "27965616-09cf-4ebe-b741-515540690217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2483277c-7f64-4ad6-a121-88ab0d3fc79d",
        "cursor": {
          "ref": "86de9164-6c1d-4dac-91a2-ed9feedc4d93",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6f0a016c-6f1b-461d-b52e-f160aeea2a91"
        },
        "item": {
          "id": "2483277c-7f64-4ad6-a121-88ab0d3fc79d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f4680f55-82d3-4518-b59f-3a7df0ed7061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3fcc73f-8756-4405-9fff-a833a0131705",
        "cursor": {
          "ref": "c9df8023-016f-46ab-879e-d38f3190dab3",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "bb639df0-aea0-46db-871a-cd2dc0e7781d"
        },
        "item": {
          "id": "e3fcc73f-8756-4405-9fff-a833a0131705",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7383458f-716d-4879-891d-7fcf27e233ad",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 31,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14338e1d-c8fd-4ce4-afed-dd52cdfec34a",
        "cursor": {
          "ref": "6945283c-1926-4cdb-b80a-1573ff849f7a",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b7592198-4817-48d5-b750-1eeb3fb90531"
        },
        "item": {
          "id": "14338e1d-c8fd-4ce4-afed-dd52cdfec34a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "45f8cb1f-8ac6-4bb8-8164-aa2660f37ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6759e9-3dcc-43ff-a71f-a06c07258faf",
        "cursor": {
          "ref": "2545089b-1684-421b-a495-0e93a7b6b8f1",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "258f29fa-2e1e-40af-b9d4-9b551b9a7ce9"
        },
        "item": {
          "id": "de6759e9-3dcc-43ff-a71f-a06c07258faf",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ac92a2bc-a01f-475c-b8af-3d03f1e6d276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a439e05-b8e3-4a99-9724-e9d593365644",
        "cursor": {
          "ref": "6a55b6a3-6973-48bf-8aac-b8af43670210",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9961d8b5-69cd-44c3-a84e-96feec90fc7a"
        },
        "item": {
          "id": "9a439e05-b8e3-4a99-9724-e9d593365644",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9ee0adf5-c809-417a-98fa-c6c315522a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88518320-5394-4f0d-b6e1-cdc93bc1697a",
        "cursor": {
          "ref": "a887567f-2bb9-4207-8bea-d579b367d3ae",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f00d73df-d33c-463c-a9c4-9d6f7f1bcab0"
        },
        "item": {
          "id": "88518320-5394-4f0d-b6e1-cdc93bc1697a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "75a23c72-447b-4840-98ef-9bcf1a307ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb9d87e-49f0-4988-a4e7-4936346cad0b",
        "cursor": {
          "ref": "0133143e-f09a-436d-ac86-670e65458e3a",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e8a7790f-9fda-482b-9570-581948851920"
        },
        "item": {
          "id": "1eb9d87e-49f0-4988-a4e7-4936346cad0b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "bad03665-cab9-4f35-a69e-2e2df59a768b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d16b52-acc0-492c-936c-8b8c32696ce8",
        "cursor": {
          "ref": "1a4b6063-cb56-418f-878d-a19bdabb1fcc",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d2b121c0-b15d-47f0-97c3-2bf0a6c4e2c2"
        },
        "item": {
          "id": "34d16b52-acc0-492c-936c-8b8c32696ce8",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "91926235-1159-4f84-8450-1e8a28f2e208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1265b0-faaa-462b-aed7-b884d6afd023",
        "cursor": {
          "ref": "8de43e11-8742-4e75-8867-dd964c5318ef",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d72f560d-184c-4637-9bf0-30a7ba043cbb"
        },
        "item": {
          "id": "8a1265b0-faaa-462b-aed7-b884d6afd023",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b8fdd9b6-adf6-4d2c-8aeb-6bee6ae681b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e676d7-4ff2-4532-915f-134c9ee42ca6",
        "cursor": {
          "ref": "35841549-3ee1-4a86-bb29-260c085ce2e1",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "fe046def-700f-4d98-94d1-66b06915de0f"
        },
        "item": {
          "id": "19e676d7-4ff2-4532-915f-134c9ee42ca6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "36385f26-fb52-4db0-96f7-8627e18dd196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12801ee4-4ed9-4c76-9335-531d889c4ce1",
        "cursor": {
          "ref": "9e0b394d-9c03-4117-b903-7f74a78cf946",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f5195849-bd68-4905-a973-ff6470a8da76"
        },
        "item": {
          "id": "12801ee4-4ed9-4c76-9335-531d889c4ce1",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "41d68034-0487-4679-a3eb-5c263d18dcbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e047c6-6d1a-4a7b-bba8-6425bd2fb850",
        "cursor": {
          "ref": "b4bd65cb-28c0-4106-94b8-2caac1d09105",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7af30e95-478d-4cf1-a53b-b77db875f0af"
        },
        "item": {
          "id": "91e047c6-6d1a-4a7b-bba8-6425bd2fb850",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5e701acb-0f70-4d49-a563-ba6b7a40752c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407dc723-4724-447b-bb37-c388f26a1d73",
        "cursor": {
          "ref": "165ffc0c-41e0-4a74-b0c4-2f76a3ad6084",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7803edcf-cc21-4327-bde3-b7abe5d3aa43"
        },
        "item": {
          "id": "407dc723-4724-447b-bb37-c388f26a1d73",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "68e4e452-9373-4de1-b733-41557188e46e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37668ceb-6346-4739-9cfa-0f5dc0e77b80",
        "cursor": {
          "ref": "9309e909-c299-49d4-ae09-ee3c868d0dbd",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e4ca836a-007f-4ddb-944d-cacdef2edb28"
        },
        "item": {
          "id": "37668ceb-6346-4739-9cfa-0f5dc0e77b80",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "783a155d-46c7-4c5d-a624-b81a3313edfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf7e0845-2a64-4a1b-b593-6b6bd16ad593",
        "cursor": {
          "ref": "39729149-515f-4d04-9506-3529bfcb8869",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a0bcb27b-43a4-4f0a-9f83-6bcf29ed4c39"
        },
        "item": {
          "id": "bf7e0845-2a64-4a1b-b593-6b6bd16ad593",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4097f1c6-54fa-4e78-b8de-2544d1c61675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e376f2-7fa5-4a29-a7a7-f58320a5c1ac",
        "cursor": {
          "ref": "fcb1ee00-f736-47fd-abee-89849eaf10c8",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9b05fcd1-0fc1-4303-8d96-ee50ff829097"
        },
        "item": {
          "id": "16e376f2-7fa5-4a29-a7a7-f58320a5c1ac",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "fc788659-3bf7-4a63-bf61-409bd359a046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a72d307-2580-4cf3-832d-09f43b1f9fd9",
        "cursor": {
          "ref": "097cf1d2-f352-4dd0-806e-ef4e512cc14a",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3a8f80e5-334c-4427-8266-fff3d421f018"
        },
        "item": {
          "id": "2a72d307-2580-4cf3-832d-09f43b1f9fd9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d36a9013-7726-4382-9025-a1b7cd1aab05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9526bf-32e4-4c93-854b-6fa4129d0d0b",
        "cursor": {
          "ref": "dfbbb650-75ad-490d-91d8-dc69c4c827cb",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8742d8b3-1225-4b13-a86b-d79b196b9aa3"
        },
        "item": {
          "id": "ed9526bf-32e4-4c93-854b-6fa4129d0d0b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a70e5173-ef8b-43d9-9ef5-75f206e7a5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8720e9c-d5cb-407e-91bb-7c0686a9c5af",
        "cursor": {
          "ref": "63c8cd3d-745d-47f9-bca2-b7299412070b",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "895041aa-6dba-42ad-8d0f-1e96d604ea85"
        },
        "item": {
          "id": "e8720e9c-d5cb-407e-91bb-7c0686a9c5af",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "db916aa7-b1ca-4c4a-a0f0-e54db408a808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f125ac3-f8a2-4699-8995-59ab5293b285",
        "cursor": {
          "ref": "805f8406-9116-4ebe-84be-8c5134eecdfd",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7fa702a3-3b5c-4a31-a6de-7c7264af5117"
        },
        "item": {
          "id": "4f125ac3-f8a2-4699-8995-59ab5293b285",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "25f74a6d-d301-4342-beda-475931135bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61399bc9-c3f9-454e-9187-f4e68578dbec",
        "cursor": {
          "ref": "d86f6901-a36c-4654-9c1d-fd6cad002bc6",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c4a213a1-93af-4030-a3e7-288cacc6dbd4"
        },
        "item": {
          "id": "61399bc9-c3f9-454e-9187-f4e68578dbec",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "29b86e6d-8ff6-4d5b-81d7-a3b62364904b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13565674-f591-4f94-b623-59807d7c3e07",
        "cursor": {
          "ref": "3ed53e2e-8d3a-4166-a6d9-322a547f58cc",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ed8e8bca-1c01-455a-a601-8dca640df4dd"
        },
        "item": {
          "id": "13565674-f591-4f94-b623-59807d7c3e07",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b96df43a-7761-44a5-aceb-a44ff377aa9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79e47ba-940f-474c-9717-a91bcda3881b",
        "cursor": {
          "ref": "272e56a5-91a1-46b7-a4f1-6598dbb3d6d2",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d78afc1a-cea9-413a-ba4d-537ae2e113b1"
        },
        "item": {
          "id": "d79e47ba-940f-474c-9717-a91bcda3881b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "698d24d3-0e16-4719-aca0-905851addc45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace84e98-43dc-4496-a449-5d3444e5a689",
        "cursor": {
          "ref": "96f0f9d5-92e1-4de7-9e2e-c08418978205",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "fafd9d38-4600-4e97-af94-b53c06ad196e"
        },
        "item": {
          "id": "ace84e98-43dc-4496-a449-5d3444e5a689",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "dcb51a7c-4b1d-4fad-b80d-080613b6e70a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b5aa8a-93ef-4942-a368-6d2f96ffef70",
        "cursor": {
          "ref": "501171fe-6a38-4d5b-997e-d16e962973a2",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "52dec0ad-3f05-488a-8d51-36041e549c99"
        },
        "item": {
          "id": "38b5aa8a-93ef-4942-a368-6d2f96ffef70",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4d96f750-218e-4000-9e3e-9bc670dabc35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4edb9dbc-7401-45ae-8ae2-5dd8e0610341",
        "cursor": {
          "ref": "5e19096d-712f-4280-b598-55ae6c40dba1",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "50cc2d20-e55d-4263-9457-41571a40de2d"
        },
        "item": {
          "id": "4edb9dbc-7401-45ae-8ae2-5dd8e0610341",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "23e2e9d8-2a98-4b75-8ed3-21f3b347559b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "298319a6-ecea-4d36-820d-30ef1114a347",
        "cursor": {
          "ref": "eca7cf89-f08a-4192-ade7-b43f4d8bcc70",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "203702f0-c2c0-4cc8-9a0f-ff79c4ebff36"
        },
        "item": {
          "id": "298319a6-ecea-4d36-820d-30ef1114a347",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0ae3bffd-31d1-4ff9-89a2-b3fcf4293056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb66fcf-967b-4ea5-aeeb-ebca7db044a0",
        "cursor": {
          "ref": "1e76a65b-efcc-49c2-911c-d844f229fefa",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "da2586c3-88bc-4829-84fc-b56f782d3bd0"
        },
        "item": {
          "id": "7bb66fcf-967b-4ea5-aeeb-ebca7db044a0",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8d35ef9d-32ce-4097-93ab-d8f81072b442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533337f1-a007-4988-b3d2-c0e321d3e831",
        "cursor": {
          "ref": "991e5ca3-2969-4fd0-a547-cc414c0bb5dd",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "054d66d0-609f-4cd2-acda-7dea16b6b396"
        },
        "item": {
          "id": "533337f1-a007-4988-b3d2-c0e321d3e831",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "3c797626-d91c-4343-993a-43817e62df4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a3eb64-e48c-45a1-9e48-1597c91c1290",
        "cursor": {
          "ref": "8a934bc1-0b08-4479-a645-c672a95377ad",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5704c5ad-0897-4c3b-81ad-427c64d9f7c6"
        },
        "item": {
          "id": "a7a3eb64-e48c-45a1-9e48-1597c91c1290",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9693b4b5-2399-4dd6-97fe-462c7f67ed90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aeea9b7-e738-4e7e-b4aa-23d1701d6791",
        "cursor": {
          "ref": "aec6ca48-c802-468b-8b1e-ed12688601ea",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2a2af7d4-fc42-4f96-bba9-2036047060ff"
        },
        "item": {
          "id": "1aeea9b7-e738-4e7e-b4aa-23d1701d6791",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "3ec794c0-9631-400f-9827-d780ce06105c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beec892f-0f72-4255-b095-9fdc20e0d57c",
        "cursor": {
          "ref": "9323dacf-373c-450e-a23c-73ffdc94c04d",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "4fcbcd28-b3b3-4034-93c1-2c7ba6909c41"
        },
        "item": {
          "id": "beec892f-0f72-4255-b095-9fdc20e0d57c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7daf0d39-938e-4068-9132-30effd5f545a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465d9779-6b10-44e4-8292-cf1757af4d49",
        "cursor": {
          "ref": "34068649-fd1b-4594-85e4-2edebefb7a51",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9463814c-0087-411d-bb00-ccbcf2d17cc6"
        },
        "item": {
          "id": "465d9779-6b10-44e4-8292-cf1757af4d49",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8315411b-e364-4093-8d13-bdf2f23c4e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b6b08cb-1567-4c08-bebd-d749e14d61cf",
        "cursor": {
          "ref": "69c257a0-6e85-44ad-97a0-f8b6c202360f",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0c7582a4-bce1-4342-9632-0c00497712de"
        },
        "item": {
          "id": "7b6b08cb-1567-4c08-bebd-d749e14d61cf",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2c50c927-d3dc-44b9-8ce7-f2516e9bf49d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "469dc053-2ea6-45a1-a626-8e7e5ba5b582",
        "cursor": {
          "ref": "019d6e4b-78d9-41bc-9869-df0d1c2c8ed0",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "44c5aa2c-861f-4392-8935-8cb0ef9fea8c"
        },
        "item": {
          "id": "469dc053-2ea6-45a1-a626-8e7e5ba5b582",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "68886f6f-aa89-413b-859c-b7515a11c9c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84041c8-595f-4432-8020-5cd2d68a625b",
        "cursor": {
          "ref": "cd01252b-c981-46f6-a072-3e819d527caa",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9155152f-3850-4ebc-8c04-1861bb3cd30e"
        },
        "item": {
          "id": "c84041c8-595f-4432-8020-5cd2d68a625b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f1321fe2-3a47-44b2-8d88-baa977325acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0dc858a-de85-4438-9e0f-8ba6cd2900ef",
        "cursor": {
          "ref": "1cdb4bf7-4a9b-4d43-a6c0-a31e6e604f59",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b4a46e50-b74a-4141-8835-34d711048225"
        },
        "item": {
          "id": "d0dc858a-de85-4438-9e0f-8ba6cd2900ef",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b99e64b5-0c34-424c-b646-9876515f37f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ec61f7-6cb5-41fa-ae48-7f93e2a14cf1",
        "cursor": {
          "ref": "ee7ceffa-180f-4ef1-a950-5ede03061370",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "cd1a0f20-d65c-48eb-9941-811da48a9fd0"
        },
        "item": {
          "id": "91ec61f7-6cb5-41fa-ae48-7f93e2a14cf1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "69e5e3cb-7e80-4c8b-9bc6-ac351d8c3604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2256912-6dce-42f0-aa66-6b76b2f15748",
        "cursor": {
          "ref": "6c3245f7-c7ad-4cd2-9d9a-7dcd31456662",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "cbcdb756-3d21-44ad-a15c-68df3a8c2d99"
        },
        "item": {
          "id": "b2256912-6dce-42f0-aa66-6b76b2f15748",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "457393da-d904-4a15-b803-74512fdd1b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a02fd8-d0dc-4267-a253-c690061f5b8b",
        "cursor": {
          "ref": "fc6cdcd8-30a1-41cd-b569-a1c52e729ef7",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b8383edc-3557-4975-9655-5018bdd4a4c9"
        },
        "item": {
          "id": "b8a02fd8-d0dc-4267-a253-c690061f5b8b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "eb3e36f1-730b-4303-81af-c92d7e82a7d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe06755-123c-4a30-8a32-bfa0ff2747a5",
        "cursor": {
          "ref": "88924744-0711-4122-b503-089e821e6725",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "351b17de-96f3-49fc-89c9-1194312dd729"
        },
        "item": {
          "id": "cbe06755-123c-4a30-8a32-bfa0ff2747a5",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3c4f2219-3b73-496c-a446-cad88988aa99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f17797-c326-4075-a4d3-67f945751ac7",
        "cursor": {
          "ref": "94a1a13c-8af6-4e1f-a803-e25177d40c94",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "aa0fd8bc-a91e-4eb2-94db-3b4b89002f39"
        },
        "item": {
          "id": "d1f17797-c326-4075-a4d3-67f945751ac7",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "969d0f27-9a4d-44b7-a172-3c266721bfa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b82f8e-57be-42bb-a5ce-cf9e4ffd028b",
        "cursor": {
          "ref": "f640f477-1ad2-436a-becb-f78373288af8",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "edce84e6-b862-418f-ac2a-ee73687b550e"
        },
        "item": {
          "id": "45b82f8e-57be-42bb-a5ce-cf9e4ffd028b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e2e8bb93-3c6e-4534-9586-0a02640578a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da7f0ebf-bb39-427d-9b6a-fc941c733788",
        "cursor": {
          "ref": "1faa1925-1b53-44c0-bf6f-1b4915d7cc7d",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "eff03c0e-bfea-49a5-ac9d-db55b58c657e"
        },
        "item": {
          "id": "da7f0ebf-bb39-427d-9b6a-fc941c733788",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5862aaa0-3c5c-4ed6-9870-6b44a43ace8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "335c9545-1a4c-405c-b04f-6b6b379aadd6",
        "cursor": {
          "ref": "fa6051bf-5fdb-4e05-bf31-c3db1d0bfaab",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "03bb57f1-07fa-4b34-aad7-5b57a052e9c8"
        },
        "item": {
          "id": "335c9545-1a4c-405c-b04f-6b6b379aadd6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8462d5ba-ff1a-4a9f-b9a9-fd8577eba86d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2e6f39-5c26-4dc9-a53b-fe05eb5647cb",
        "cursor": {
          "ref": "d043daad-a28a-40ad-a70d-7a890ee3a355",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6568dd17-3349-4112-a31c-965f2ef5dbd3"
        },
        "item": {
          "id": "6d2e6f39-5c26-4dc9-a53b-fe05eb5647cb",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "38af8e00-5b45-40ca-8735-6fd0baf395b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5929fbb-3b62-4195-bfd2-918d7c9a2c5f",
        "cursor": {
          "ref": "fcd8e428-c9a2-46d5-affa-d9b160d37963",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c07c555f-6dc5-4ceb-bcac-505f1b1e3bde"
        },
        "item": {
          "id": "e5929fbb-3b62-4195-bfd2-918d7c9a2c5f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "844952fd-37f5-4414-8bf0-85ab65902960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2437df46-5807-46bf-a685-7ed36fa446eb",
        "cursor": {
          "ref": "0b73f833-8d31-4829-a5a3-14e5dd03028b",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "72a5a8f8-26ec-4081-852b-726035a3cc15"
        },
        "item": {
          "id": "2437df46-5807-46bf-a685-7ed36fa446eb",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "0c7b1de1-9c0c-4138-915f-38c30a087f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b45ef5e-d6cd-4a3f-a8f9-601ae51e1614",
        "cursor": {
          "ref": "f0d18ff1-d8d1-4580-9238-0c43c6f4c34b",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f5f0f263-09c6-4a85-a9c2-8db29bf36ddc"
        },
        "item": {
          "id": "9b45ef5e-d6cd-4a3f-a8f9-601ae51e1614",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ada4fc59-ea82-4c91-beb1-19cd3f0d2a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66bf9c05-703f-4e46-a781-d605333a6cb2",
        "cursor": {
          "ref": "cf122c78-1153-4756-a452-b80e410e9193",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "85b20d07-52a6-489d-ac9b-ed497760c6d4"
        },
        "item": {
          "id": "66bf9c05-703f-4e46-a781-d605333a6cb2",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c9e3c4a8-c7b5-489a-8c10-13d265951bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0852b5c-0245-48cf-a874-5532c4dbc2f3",
        "cursor": {
          "ref": "825c2057-803b-45e9-9e68-6cc25c2be7e7",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a19d5d1f-3e8d-4c7a-982c-cadb6aee8ae1"
        },
        "item": {
          "id": "a0852b5c-0245-48cf-a874-5532c4dbc2f3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c5cbbf6c-adbb-4078-8efa-6b11df127c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b5d0a3-8144-43fc-aa10-52593fb45c9e",
        "cursor": {
          "ref": "c2673ee8-2e7b-411b-a0bf-4b42891b682e",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "8270478e-a8b5-4b63-979d-17a1f66e0256"
        },
        "item": {
          "id": "d2b5d0a3-8144-43fc-aa10-52593fb45c9e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4e6b84d6-e012-4e49-8475-c1b6ffccc218",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd74e935-edd1-41f8-87df-7115850a667d",
        "cursor": {
          "ref": "5b36d583-1aa2-474e-9981-79fa5a60bd7d",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d3f5132f-11c5-465a-ac4a-c49a07e16603"
        },
        "item": {
          "id": "cd74e935-edd1-41f8-87df-7115850a667d",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "3c493fb3-1d1e-47b3-a8cc-1878761c8470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "e44af4eb-5737-4ba2-a058-ade12812ec91",
        "cursor": {
          "ref": "3c76106a-7c6d-4a3c-96e8-bc62eb04ac2d",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "2f68e0e4-08ae-4bf3-ba24-da68146406f7"
        },
        "item": {
          "id": "e44af4eb-5737-4ba2-a058-ade12812ec91",
          "name": "credentials_issue"
        },
        "response": {
          "id": "540fe8c6-8f19-465b-8514-295bff57291d",
          "status": "Created",
          "code": 201,
          "responseTime": 13114,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ad6bae-e43d-4aef-bdf8-615c671e6be0",
        "cursor": {
          "ref": "3ccbced3-3497-4b0e-bd25-65e2adcfa51b",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e249f3f5-355c-48ac-bb93-b3ec5fde2b17"
        },
        "item": {
          "id": "54ad6bae-e43d-4aef-bdf8-615c671e6be0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2450fca6-122c-470a-a760-291c14ca231f",
          "status": "Created",
          "code": 201,
          "responseTime": 12022,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "79122d6e-b99c-4e28-8785-7423ad23116b",
        "cursor": {
          "ref": "14d44109-a2f8-4d3b-9d9d-3ec6fb8b2aea",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "70816dad-85c2-4d58-8ea6-21951b9d25cd"
        },
        "item": {
          "id": "79122d6e-b99c-4e28-8785-7423ad23116b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b0870559-b1e6-4720-b7b8-d3f22b822332",
          "status": "Created",
          "code": 201,
          "responseTime": 12382,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c7f20d-df9e-4b8b-af91-a21f8c02117f",
        "cursor": {
          "ref": "9f109f46-056c-4f31-aba8-df58c3004d46",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9166e403-2325-413f-b017-aa7b7d9e229d"
        },
        "item": {
          "id": "74c7f20d-df9e-4b8b-af91-a21f8c02117f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8995c563-49c4-44ec-b7a0-d36859dad6d2",
          "status": "Created",
          "code": 201,
          "responseTime": 12130,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1050a65a-873c-44d6-8410-a6eed14c9603",
        "cursor": {
          "ref": "7b35caff-9be2-4c82-b8c2-e1407a44dc93",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9910005f-b25a-4828-af16-44aac74cf3d8"
        },
        "item": {
          "id": "1050a65a-873c-44d6-8410-a6eed14c9603",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f5694fb9-9942-4686-add2-00a9ab2a508c",
          "status": "Created",
          "code": 201,
          "responseTime": 12016,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-09-01T00:52:51Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-09-01T00:52:51Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "d014183a-afb4-4bd7-b5b3-f5317addccc6",
        "cursor": {
          "ref": "9401ad33-c52a-4aac-8368-bd7415c830cd",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0b7a621b-1381-4c7f-9580-9cc24bfdc9f4"
        },
        "item": {
          "id": "d014183a-afb4-4bd7-b5b3-f5317addccc6",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "12e0225d-c5d9-422d-9c33-25ddbbac53a2",
          "status": "Created",
          "code": 201,
          "responseTime": 12162,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bddf7e45-8cc4-407e-8327-d2824e28c292",
        "cursor": {
          "ref": "9ed3bc6f-7eb4-4d0c-b150-ffd92e082c5e",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ef3ba237-5ee2-45fa-9cbd-5292b7bbbd29"
        },
        "item": {
          "id": "bddf7e45-8cc4-407e-8327-d2824e28c292",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b76a7f07-2284-409f-b939-3af3e83bdac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be3fba2-33e0-4910-b7c5-137c38066729",
        "cursor": {
          "ref": "9a66133b-e093-4e20-88a7-c1c28b6d09de",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d015658c-d781-457a-9029-a52630706dc8"
        },
        "item": {
          "id": "6be3fba2-33e0-4910-b7c5-137c38066729",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b712636f-e6b5-4931-b0db-ea287a630751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be30deb4-3f9f-43a7-829b-d82d69e67f00",
        "cursor": {
          "ref": "ca86a902-bd67-48d4-b5b5-dfd0783d0f0f",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d0cbe4f1-9718-4c3a-ab26-24dfba1f1a05"
        },
        "item": {
          "id": "be30deb4-3f9f-43a7-829b-d82d69e67f00",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "eb339535-a567-4371-b551-faf6ba27d844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0ed27c-3ed8-44ad-9ca3-4db5829d190d",
        "cursor": {
          "ref": "66f0bcbc-3fb5-4af2-95eb-eea62e85a357",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "958e2425-da89-45d5-8332-24ebaff639e5"
        },
        "item": {
          "id": "4f0ed27c-3ed8-44ad-9ca3-4db5829d190d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3f99b8df-d1d6-42b8-a315-bd6f75482ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9857de4-bc50-4768-9276-5d4d8d2e46d9",
        "cursor": {
          "ref": "b996f74b-7e63-434c-823d-54ca88eab003",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5fd2bf19-ae3a-4bb4-9ffc-ac2006ddd228"
        },
        "item": {
          "id": "e9857de4-bc50-4768-9276-5d4d8d2e46d9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9023a967-fbd4-4097-b9bd-3262ac83f944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29daa420-77e1-4371-9a28-e20ef7100b48",
        "cursor": {
          "ref": "036cc3f3-7f2e-4df6-b31f-bf2b47894ca0",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b34559e1-2a77-40a1-a2b9-a8164b090ed6"
        },
        "item": {
          "id": "29daa420-77e1-4371-9a28-e20ef7100b48",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "49b26794-6262-4ced-bec0-ece95b046d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69bd9018-030a-4acf-9b04-53b62cb2b3f0",
        "cursor": {
          "ref": "241081bf-f466-444b-b312-9b2e71965c2e",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "159822b4-cc56-44fa-aa25-674fea07b26e"
        },
        "item": {
          "id": "69bd9018-030a-4acf-9b04-53b62cb2b3f0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8b5360ae-cd4b-4d69-84b1-fc44af439251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d590b0f0-5df3-4ede-87a0-019a7aed726c",
        "cursor": {
          "ref": "92192d2f-6825-4140-b2f6-7a577dce6019",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "73749af3-9011-43fc-a413-3c1a9c7b5b99"
        },
        "item": {
          "id": "d590b0f0-5df3-4ede-87a0-019a7aed726c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2a894152-4924-4b12-8d24-b3fd54e89a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ce9cce-c556-4e89-abf7-9515b83bb9b1",
        "cursor": {
          "ref": "61081f7e-165d-408e-ae66-ab5ec9367827",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1d1b9b85-f7d0-4451-8170-e99b9afa18ea"
        },
        "item": {
          "id": "44ce9cce-c556-4e89-abf7-9515b83bb9b1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e70064ef-bc50-462d-b711-89af9a653678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd393180-5c7d-44a6-a4a7-d7f11973370d",
        "cursor": {
          "ref": "026f399b-594b-48a2-94f3-0936291c9841",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3a0b2bda-e809-4106-84e2-26dd297d2427"
        },
        "item": {
          "id": "fd393180-5c7d-44a6-a4a7-d7f11973370d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2cfffa21-cc83-4007-a730-746312553e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6488031-20aa-44f7-9680-c31870e9ba62",
        "cursor": {
          "ref": "51753fac-e564-4567-851f-5194b457e5c7",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1c67436d-3845-4dbc-9d35-f5bd7f4429b0"
        },
        "item": {
          "id": "c6488031-20aa-44f7-9680-c31870e9ba62",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "efe483f9-0472-4363-94bf-28a1cee3f232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627e3f78-9a41-4c04-aa52-eccedcb12ccd",
        "cursor": {
          "ref": "5e29ddd1-3d4e-4b7f-9e96-19d3726634f9",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "98911802-a410-44e5-aa89-c0df286bbe79"
        },
        "item": {
          "id": "627e3f78-9a41-4c04-aa52-eccedcb12ccd",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "95672f48-359a-46fa-8979-1752f42d7553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f5ed5d-2de2-40d1-bdbd-675b54efce0c",
        "cursor": {
          "ref": "5450a694-fa7b-47ab-8155-7875c105e0eb",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ac093224-34b1-4371-a28d-427ca36088d9"
        },
        "item": {
          "id": "89f5ed5d-2de2-40d1-bdbd-675b54efce0c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "99a0f80c-b995-4e8d-8e97-4950c39e3328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8357b24e-0d2a-4de2-b661-55f89d7111af",
        "cursor": {
          "ref": "1ce84283-7c10-4be9-b503-d46f4ec96acc",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "348c644e-a4ef-4dd9-965a-65842b7a7b15"
        },
        "item": {
          "id": "8357b24e-0d2a-4de2-b661-55f89d7111af",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "444d7ac7-1635-4e44-8c9b-cf7b4ac47e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec3f0a2-8966-4aac-b665-19500a4650a0",
        "cursor": {
          "ref": "ee8ceb45-fcb0-46e7-95fb-7cfd0938c253",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ab5f5f2d-04ac-4706-910d-f53d32811384"
        },
        "item": {
          "id": "1ec3f0a2-8966-4aac-b665-19500a4650a0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0fc7d162-f8db-4947-a24d-24bd578f3b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f15ceb-03cc-4e9a-b8b7-aa5227046f96",
        "cursor": {
          "ref": "4832632e-8433-4460-afb0-b4a99229edf1",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f055c2b0-4962-44ac-8b42-ff670e250fd5"
        },
        "item": {
          "id": "d2f15ceb-03cc-4e9a-b8b7-aa5227046f96",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c7b19c8f-1198-4931-93e7-baa83732b89b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e73770-8008-4ca6-8b7c-7e2480a78495",
        "cursor": {
          "ref": "3828c6c2-028a-4b70-b381-74d410cf2b3e",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ec404043-2e88-4fe0-a7db-d897ddc8d48e"
        },
        "item": {
          "id": "33e73770-8008-4ca6-8b7c-7e2480a78495",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9fae56f0-63f6-4187-89ba-3528cdd26eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf28ff1-a62f-40d3-a921-ead3509e204b",
        "cursor": {
          "ref": "6e55282e-6519-49cd-9612-5cace3b623a3",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "56b6d0b5-ee54-408e-b740-53a3dc5bf45d"
        },
        "item": {
          "id": "9cf28ff1-a62f-40d3-a921-ead3509e204b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ebd8b809-6a42-42c6-9bee-f50b8c21b9b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff89444-b6e2-4ba1-bf73-121f160d4902",
        "cursor": {
          "ref": "95bb4e19-3120-430a-a22d-fcd42ab1aa2f",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "8bcd42de-8630-4c12-9210-9dd31bfb6bea"
        },
        "item": {
          "id": "aff89444-b6e2-4ba1-bf73-121f160d4902",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9ab3be71-8ddc-4b1e-a47e-bc86b5df3e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87535fd8-ecff-4e07-a0c8-fb568b9b9b2a",
        "cursor": {
          "ref": "963bbab9-4a4d-4424-8660-f9f89a63deec",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ab197503-00b7-48ed-90fa-bd95c0d7d517"
        },
        "item": {
          "id": "87535fd8-ecff-4e07-a0c8-fb568b9b9b2a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0091ed68-ced5-41bf-8e9b-fc72eb2c6dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1794e8-0ead-45eb-8552-1dab17b37145",
        "cursor": {
          "ref": "cd23a87e-23c5-40da-b552-5551d62e0730",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "79d03f9d-6fa5-4d3d-9643-6688e071021b"
        },
        "item": {
          "id": "fc1794e8-0ead-45eb-8552-1dab17b37145",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6069333d-5b6e-4a9b-aa21-da2e3e9d7a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa09029-5efa-494a-a44b-dac5598a025a",
        "cursor": {
          "ref": "422c0ee7-f13f-41b5-bef4-6a1ce01bbb7e",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f0d51511-be95-45de-b9c2-1a79680683ab"
        },
        "item": {
          "id": "7fa09029-5efa-494a-a44b-dac5598a025a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "440406d7-dc61-43f0-8a62-7f3ce4b03428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "935783e5-471d-42b9-b45c-a0662c5267f6",
        "cursor": {
          "ref": "e22ea818-e8ad-4209-94ef-fbb2f0d00fc8",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d42af63a-e24f-4ed1-a182-14b75db4d17a"
        },
        "item": {
          "id": "935783e5-471d-42b9-b45c-a0662c5267f6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5564a1f9-b49b-4808-a87f-8561daf96237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3579f6ff-8b28-4051-88c7-4996dc267f21",
        "cursor": {
          "ref": "7e575212-cd52-4f20-a93d-fc47b8cc96f1",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b8194515-4b90-4834-a4a0-f11bbc09bfdf"
        },
        "item": {
          "id": "3579f6ff-8b28-4051-88c7-4996dc267f21",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "23773ec1-7a70-43ed-a7d1-d8fe7f24cf9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658b40ad-4703-474a-a7ce-53d124f3d2bb",
        "cursor": {
          "ref": "54c1070a-11ce-4874-8eb8-ce9bfa327d9c",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "eda95eb2-3f2f-454a-80e4-bc006bab8971"
        },
        "item": {
          "id": "658b40ad-4703-474a-a7ce-53d124f3d2bb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "22dd1ead-7faa-4721-b8c9-765be3e22d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c946fc-7284-4de4-b568-ed3fca70422c",
        "cursor": {
          "ref": "3f351b6f-5964-42bf-91a6-e4d04185ee8a",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5225daae-7c59-4ef8-bdad-e20ef2380b26"
        },
        "item": {
          "id": "f2c946fc-7284-4de4-b568-ed3fca70422c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5e813cbc-62dd-4fe7-95b8-e376dd1a8d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2e99b9-e511-4225-a468-9af7c2933d2a",
        "cursor": {
          "ref": "12f5648c-f0ba-4cdc-b430-f8e7939cca40",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "375ce0a8-df89-41be-961a-a23942b011dc"
        },
        "item": {
          "id": "ad2e99b9-e511-4225-a468-9af7c2933d2a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5dc20d74-52d7-49dc-9a51-0ae6c040842f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8903f705-9ff0-42e2-89af-7af7a88f4de1",
        "cursor": {
          "ref": "59962f0a-34d6-4c58-8429-9e1983dd85c0",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "519b76cf-40dd-48da-a186-5e250eb93086"
        },
        "item": {
          "id": "8903f705-9ff0-42e2-89af-7af7a88f4de1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3aaf7b92-69fd-4cd9-9111-b8eda12586cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97154b1f-e589-4270-a80c-b2133c181044",
        "cursor": {
          "ref": "a12e81a2-703e-448b-896a-c1d91ee10d33",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "bb503541-7cd1-4a1f-89e5-10c3b3789f9d"
        },
        "item": {
          "id": "97154b1f-e589-4270-a80c-b2133c181044",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "61125464-1a7f-4a00-9d25-119ccb9dc6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07dab37-8ee6-4bbd-9790-82023374dcb8",
        "cursor": {
          "ref": "3b520a02-19c8-429c-8229-47db56fdaf31",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "7df5752e-9477-43dd-99ac-6e512622a79a"
        },
        "item": {
          "id": "b07dab37-8ee6-4bbd-9790-82023374dcb8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6d11003d-6d31-4e5a-8901-d20707b5f91b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e7c6a91-4b86-48db-965a-a0d6093a3af8",
        "cursor": {
          "ref": "1f01c015-67bf-483c-a0a5-bd969e061048",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "67215540-3d62-4ab7-b197-c8761ec1d77b"
        },
        "item": {
          "id": "6e7c6a91-4b86-48db-965a-a0d6093a3af8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2624e8c0-af46-41cd-967a-39509597a625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3a546d-9296-4be9-830e-38c50321304c",
        "cursor": {
          "ref": "dac83444-2f2a-4ce2-b6a4-99d153c83dc2",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "66bff88c-352d-4eed-8d04-2fe2308760ce"
        },
        "item": {
          "id": "af3a546d-9296-4be9-830e-38c50321304c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "7252b680-046d-4ae4-af81-e577bd89fbb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d921f7e-1a90-4c57-9137-be0d82cbcba7",
        "cursor": {
          "ref": "540621ff-4e3e-4df4-8eac-fdec2234a10b",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d5c7d35c-80d8-49b7-b19e-b89f6461819c"
        },
        "item": {
          "id": "7d921f7e-1a90-4c57-9137-be0d82cbcba7",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "771ca645-77e8-410c-aa39-a6168392660b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9622a3-b511-478b-9ebd-0f096d3a8b4a",
        "cursor": {
          "ref": "cf9414f6-a2d3-4cde-af0c-d6d6691f267d",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e8636a44-e49f-4d73-af26-50463228a21a"
        },
        "item": {
          "id": "ca9622a3-b511-478b-9ebd-0f096d3a8b4a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "bc778726-306c-407b-ac5d-9f40004069ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6294b342-dcc1-4d01-a412-bc75e9100cf9",
        "cursor": {
          "ref": "d75ad3ae-ede0-492c-9032-854cb10b2ec4",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "81b4d3f4-df04-4a80-95db-9e4781519570"
        },
        "item": {
          "id": "6294b342-dcc1-4d01-a412-bc75e9100cf9",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "be8861b5-7ea5-4415-8a48-875077e1f088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "940f3127-5bfa-4dc7-bccd-d52f0507141b",
        "cursor": {
          "ref": "fe94c169-0a29-412b-9128-a614cd8129fb",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "fa68c5e1-55c5-4899-a748-1e5bac0cee4a"
        },
        "item": {
          "id": "940f3127-5bfa-4dc7-bccd-d52f0507141b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "3ef2f7fd-6c14-423a-ba9e-8ad9083c80a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8001d432-a421-4363-bd25-bf1c0d03790f",
        "cursor": {
          "ref": "7ac43a97-4ffa-41e5-8e99-67b0a7d7c4a9",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "43512cf4-42ad-4825-95ef-d7fab6733023"
        },
        "item": {
          "id": "8001d432-a421-4363-bd25-bf1c0d03790f",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b51dee1e-045d-46b1-982a-2591e45742c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe987ca-c497-48e3-a2ba-1b518f047f82",
        "cursor": {
          "ref": "64260f3c-5d43-402d-9df7-76cf3c5cf0ee",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "44bb448b-0674-4f5a-919d-7fae57849ead"
        },
        "item": {
          "id": "8fe987ca-c497-48e3-a2ba-1b518f047f82",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "24d5f83e-1f64-4f58-89af-e1f08bb43068",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea1fbf42-a236-426b-83dc-13aefa78597f",
        "cursor": {
          "ref": "4158b560-faaa-4fcb-8bdf-ebe37343f30b",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4173414e-8e59-48d4-b0a2-37fe16cdb147"
        },
        "item": {
          "id": "ea1fbf42-a236-426b-83dc-13aefa78597f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "40cf8913-190e-472d-b299-4eae5caf90f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1a51cb-ba65-463a-9bd6-60cce90a30b0",
        "cursor": {
          "ref": "11a6e377-14b2-416a-903f-5b664dbb22a0",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ba68de6f-e2ae-49f9-9f5d-ca30fee306d0"
        },
        "item": {
          "id": "0c1a51cb-ba65-463a-9bd6-60cce90a30b0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8cb58ef3-7e8f-4e75-affe-40d67c6ad56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e861c1e9-c672-40de-a2f9-d4f373b3ca07",
        "cursor": {
          "ref": "75c78863-1c66-4bb8-b89a-614bc0712394",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "58e839c2-ac2a-4184-9af5-58226439d0b8"
        },
        "item": {
          "id": "e861c1e9-c672-40de-a2f9-d4f373b3ca07",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "52cd7390-b8b3-40d2-8bea-eb74d1bbe9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9a2063-f09b-4b6e-a314-46b9ca1a0055",
        "cursor": {
          "ref": "70b90268-c808-412c-b74a-b5a2a7977a03",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6977e2ac-6237-4d01-bcb3-a7b775e8660a"
        },
        "item": {
          "id": "2d9a2063-f09b-4b6e-a314-46b9ca1a0055",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "db4b3add-b0b0-479d-a091-6f77559f7c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "394114e0-2903-441a-917f-8905b11e111a",
        "cursor": {
          "ref": "009b8986-2722-4b2e-949e-8be506debbbd",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e1bd2335-cfba-46d3-a031-1cbae38400c3"
        },
        "item": {
          "id": "394114e0-2903-441a-917f-8905b11e111a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "81caa327-3eef-4b31-8a75-a61b54363095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6317837d-1d3a-461a-ab71-83b42265285c",
        "cursor": {
          "ref": "e070b386-e1b1-4329-9b4e-ebf611f3db70",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5ed2536a-254a-4948-99ea-7831af1e7cbd"
        },
        "item": {
          "id": "6317837d-1d3a-461a-ab71-83b42265285c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "4f36ac6b-19c2-43aa-86bd-eddb91b51415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac4abef-5ebd-4db8-8521-b1bc1fb50a6b",
        "cursor": {
          "ref": "eacb62a1-4eb0-49d2-952e-f91d5766416a",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "11811ac0-36f5-44e6-b10e-99afc3fa561e"
        },
        "item": {
          "id": "cac4abef-5ebd-4db8-8521-b1bc1fb50a6b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "96051803-dc37-4184-acbf-6402e7f269cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b59217-af1b-4f37-9956-93f208753a85",
        "cursor": {
          "ref": "33ae8bb1-4198-4df9-8071-ae3b684d9c96",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0b535f57-0b7e-4db5-b370-11e91b0239e0"
        },
        "item": {
          "id": "99b59217-af1b-4f37-9956-93f208753a85",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ed384680-9380-40cf-af35-83d73757d3b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b697ec2-51f8-4548-a22c-3a70b801eb09",
        "cursor": {
          "ref": "aa966da3-da8c-4154-b14c-6c7916edd260",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3f064cbb-ac0d-45be-9475-2d54449e5857"
        },
        "item": {
          "id": "1b697ec2-51f8-4548-a22c-3a70b801eb09",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "4a0502cf-e7b9-449f-8ced-52d288643948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e77624-84de-4ec2-8b7b-807b44e66017",
        "cursor": {
          "ref": "9603c645-0973-4e22-9fdd-b55955d56de8",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "fc532287-69c7-4938-bb67-fe1d53bb079e"
        },
        "item": {
          "id": "93e77624-84de-4ec2-8b7b-807b44e66017",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "12d72e16-8d23-4b74-8adb-543f0a153988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f86e8b2-1c93-47a6-b1c7-798501f47508",
        "cursor": {
          "ref": "db73d813-ddb4-4e63-bf2f-0e48e9a30fa4",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "72aacbfe-a5c1-4357-a7e0-11ad1a11cf34"
        },
        "item": {
          "id": "7f86e8b2-1c93-47a6-b1c7-798501f47508",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "dda2e555-c971-40cc-a184-52e30d9898d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630fb084-e97f-439e-b962-aecbf572ac4d",
        "cursor": {
          "ref": "c0d0a22d-16e6-41a1-b259-0848674e4773",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8cdb5e8b-45e9-4ce7-9606-1ed33f42d149"
        },
        "item": {
          "id": "630fb084-e97f-439e-b962-aecbf572ac4d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "db6e7d14-7bd6-4139-9999-d2199c818f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "811a7090-5939-457b-bf9a-35acd09be9ff",
        "cursor": {
          "ref": "27709c0b-0926-4750-8761-ebd9ec472dd1",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a948d7fa-936a-4f69-a8d5-b27e1b374926"
        },
        "item": {
          "id": "811a7090-5939-457b-bf9a-35acd09be9ff",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d35c0204-097c-4e69-8132-507fe47e3a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b72f316-fc66-4fe1-be27-0ec49d3cd39f",
        "cursor": {
          "ref": "b97deb82-cfe8-4e22-9bb4-cb1029ffff92",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1b61e94e-1370-43af-b612-003d7d52aafc"
        },
        "item": {
          "id": "5b72f316-fc66-4fe1-be27-0ec49d3cd39f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "850e4c39-d779-4fa2-b64e-6e62e2bc1c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158b5edf-e8d3-451a-bd9b-b8f6f58696d5",
        "cursor": {
          "ref": "f1cf87e8-49dd-4b05-8cb0-900251be7aef",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e6e375d0-ddef-4533-8037-0fed277d6bdd"
        },
        "item": {
          "id": "158b5edf-e8d3-451a-bd9b-b8f6f58696d5",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "81bd9093-3f4d-4b37-9650-a49463495f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989e3265-4b15-4f5b-8ddc-51cca6aff9a7",
        "cursor": {
          "ref": "56b13e2c-a021-423e-a9c3-dca3b5390208",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0197f248-16d2-4661-bc23-be4d255e1fc6"
        },
        "item": {
          "id": "989e3265-4b15-4f5b-8ddc-51cca6aff9a7",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7d9b53e1-b492-44a2-b181-1c2b2c6f2d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8515766-d865-4362-b310-d193bc0fc349",
        "cursor": {
          "ref": "1951934d-9483-4cd6-8066-b4b9f54a6695",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a34518ef-7a04-420c-bda4-b8af155a1913"
        },
        "item": {
          "id": "d8515766-d865-4362-b310-d193bc0fc349",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "fc3aa616-0b19-4025-98ab-9d47539377b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3172de56-4cc5-4ceb-badd-7536a32dc568",
        "cursor": {
          "ref": "aecd109f-2bdf-4e01-b218-aa1e2995cef2",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d1829fc7-f015-42f0-a070-0153de663539"
        },
        "item": {
          "id": "3172de56-4cc5-4ceb-badd-7536a32dc568",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b22d2846-79c1-420c-be74-dd988e101ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d9b979-a71f-4651-97be-dd576aae28d7",
        "cursor": {
          "ref": "0cc01b57-394c-48ca-97ee-1359404d4af9",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6e147287-4b44-494a-8171-faed177b2b23"
        },
        "item": {
          "id": "b2d9b979-a71f-4651-97be-dd576aae28d7",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d65e0b5c-6040-4a48-acf0-96b03e72e744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9575b9d1-8ab3-484f-b541-a2b2f26778d6",
        "cursor": {
          "ref": "6bc554c4-08ec-49a7-a283-dfaf9af8347b",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7f901a50-c7b1-43d5-8569-ecaf517b5afd"
        },
        "item": {
          "id": "9575b9d1-8ab3-484f-b541-a2b2f26778d6",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "229a2506-04b3-4355-9f51-854734c2ea6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b11182d-e9a1-4a18-a5f9-8762760724df",
        "cursor": {
          "ref": "06945c6e-cba9-465a-9983-f35bd6354ae1",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5a077ed7-0dec-4fc5-ae27-84ae77180241"
        },
        "item": {
          "id": "9b11182d-e9a1-4a18-a5f9-8762760724df",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f53156ac-774f-4e1b-87b3-7a61a3cb3dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "468f633e-e4d5-4192-9cb5-cb539bda8ada",
        "cursor": {
          "ref": "a0bf10ea-ede3-4215-91f4-71096a21946d",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "142d13d0-722b-47ef-8a46-5e5de4f953ac"
        },
        "item": {
          "id": "468f633e-e4d5-4192-9cb5-cb539bda8ada",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c9248b0d-dea1-4ea9-910d-0cb3a0c41399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f405769-2352-4ce0-99fa-9055f5c079bd",
        "cursor": {
          "ref": "6a29a484-090e-4289-9985-417140428a4d",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ad9efac6-3b7b-420a-a29e-33e8c5172a69"
        },
        "item": {
          "id": "4f405769-2352-4ce0-99fa-9055f5c079bd",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a66a537a-bfec-46c0-b660-21fc0348f42c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe1cc27-7efa-486b-b782-6cac276d87f6",
        "cursor": {
          "ref": "6056e50a-ec37-484d-8fa4-54e5aa761319",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "18ce9622-3434-4fb8-a76c-fdc64c426d47"
        },
        "item": {
          "id": "afe1cc27-7efa-486b-b782-6cac276d87f6",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c4fe9d20-5025-437a-b0cf-ef239d2433b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c65ac7f-e7ab-403c-a3a0-a3fd1534ac1e",
        "cursor": {
          "ref": "4bfe1ff4-c05e-4a71-b232-6e9200389427",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4a9af81e-4bb2-4e19-8cde-edb3bff212b3"
        },
        "item": {
          "id": "7c65ac7f-e7ab-403c-a3a0-a3fd1534ac1e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6acfd58c-57f0-4560-b134-d16ae83189cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f0b2e5d-95ee-405e-9381-c4b8b299b3c3",
        "cursor": {
          "ref": "334e037b-534f-4309-b5b3-35f26a37f47d",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6308be0a-2ad5-4412-85f0-c175580126df"
        },
        "item": {
          "id": "6f0b2e5d-95ee-405e-9381-c4b8b299b3c3",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "fd7f39d7-bad5-4d2f-9bd1-310967599552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66e5d36-058b-48ce-b1cc-0d9c8cfe406f",
        "cursor": {
          "ref": "6056783a-fa9c-4658-be32-1060e28e3315",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e3cf9ef2-e5d1-4f3a-925e-6047f5960651"
        },
        "item": {
          "id": "f66e5d36-058b-48ce-b1cc-0d9c8cfe406f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "12e97235-9912-4c33-be8e-8441f34c3828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c7ea58-8b0e-455f-bf68-aa6ee3c274c6",
        "cursor": {
          "ref": "a9bb31d3-0956-4e17-a70b-533940eb4066",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "fdcdc191-20de-47aa-8747-7b92c81c3e4f"
        },
        "item": {
          "id": "20c7ea58-8b0e-455f-bf68-aa6ee3c274c6",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "fc272b21-f364-46fe-a79e-50b717876938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403dca45-a8b8-4a6e-898a-4f46a11767b9",
        "cursor": {
          "ref": "ba1026f0-ceda-4f79-b9c4-90133293ab96",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8655c09c-9bfd-43d8-a963-ff3f0096020f"
        },
        "item": {
          "id": "403dca45-a8b8-4a6e-898a-4f46a11767b9",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "cb771d35-68f0-49c6-a8c1-dec17f0b0e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e277cdcd-f5d4-4508-a4c4-cfc4bcf84409",
        "cursor": {
          "ref": "a7d99685-5e79-44a5-9a7c-a04353a1481b",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d7619f06-bbe0-4809-9e71-5d877c9ea811"
        },
        "item": {
          "id": "e277cdcd-f5d4-4508-a4c4-cfc4bcf84409",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8f05a98b-9159-4401-aef0-22ef9103e547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9c1b08-58c2-4c01-a239-f23fd280ea22",
        "cursor": {
          "ref": "94c50072-7cdd-49d1-bba1-cf741ee2feaf",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6a6dd18e-344b-4011-8da9-7479c34c929a"
        },
        "item": {
          "id": "ad9c1b08-58c2-4c01-a239-f23fd280ea22",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "4c882a00-3e00-44d1-be26-a946fc1eeacc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef893de-c13c-4fa5-a203-e1f7fc66d8a4",
        "cursor": {
          "ref": "ba95d557-38ef-4c64-8d16-c590e69839b4",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e71553c5-33c6-4ad5-8181-7ca492df5efe"
        },
        "item": {
          "id": "fef893de-c13c-4fa5-a203-e1f7fc66d8a4",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "aa4792a9-615e-4012-9262-74878e669935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1dc431-0f76-4603-8bf6-d5c9d0b63f73",
        "cursor": {
          "ref": "c4ab3146-d7a6-4a8d-96fe-841135627d34",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8da91d78-4382-48c9-9d73-a26e66045477"
        },
        "item": {
          "id": "ac1dc431-0f76-4603-8bf6-d5c9d0b63f73",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a1f75aec-9b9b-41a3-8cda-bc6c7e64ddb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340d9640-0f67-4a1d-ab5f-681d0cfcd379",
        "cursor": {
          "ref": "012b4be3-5170-4c17-9918-57c51d94b648",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "fa788b51-ae06-46d6-b70f-cbd9fca5e223"
        },
        "item": {
          "id": "340d9640-0f67-4a1d-ab5f-681d0cfcd379",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b0a7fbcc-652a-47c2-9530-e47fa805cccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27dffd26-561d-4919-acbc-e454aa48daeb",
        "cursor": {
          "ref": "68cd9d16-0968-49a4-b583-dec9d48c25a7",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f25e4cb8-ef26-4262-a2ff-65f9d525b00a"
        },
        "item": {
          "id": "27dffd26-561d-4919-acbc-e454aa48daeb",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "aa1975a8-bc39-4cc8-bce0-f591822fe2e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881eb34d-5bb2-4854-84c9-150c6768efee",
        "cursor": {
          "ref": "120a8249-dfdd-4a3f-9f7c-32cc72f0a3dc",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8c1077ee-f8ab-40c3-a78a-1155e5978537"
        },
        "item": {
          "id": "881eb34d-5bb2-4854-84c9-150c6768efee",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e5011efd-1886-44c3-9a77-b972325430ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d760cb45-daf2-4699-a7da-789817401d25",
        "cursor": {
          "ref": "1783e3a8-63e0-420a-ade5-311a5ecd9ae5",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "18775988-55dd-4f2e-bfb4-4e6b50fbbaa5"
        },
        "item": {
          "id": "d760cb45-daf2-4699-a7da-789817401d25",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "36c7f6d8-9a84-4cb2-a20f-c23da5cb4dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295c7eed-e3a3-4e3c-9ea0-b8d79fa37abd",
        "cursor": {
          "ref": "d53c2f60-51ea-49f7-81b5-f809625189e6",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "38672afd-7241-4ecd-9bf3-ba9de0611978"
        },
        "item": {
          "id": "295c7eed-e3a3-4e3c-9ea0-b8d79fa37abd",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4921054b-69e7-4c65-870f-d65ff4de86f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f5cf55-6fda-4cfd-8e54-8c97620ac1df",
        "cursor": {
          "ref": "092ab54a-9ac8-44b6-8b52-960304036327",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "fb83d797-ed1a-40e3-a96a-6a383726b34d"
        },
        "item": {
          "id": "c6f5cf55-6fda-4cfd-8e54-8c97620ac1df",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "3cf7d948-7a51-4e52-85b2-f2cf114ea079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c76b011-9b66-428d-8bde-75bcad260b37",
        "cursor": {
          "ref": "4b5def76-9521-4b20-b5d3-296f0f6f7eda",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "6ee12e43-cc3a-4567-88df-a19bf7ca4e5b"
        },
        "item": {
          "id": "2c76b011-9b66-428d-8bde-75bcad260b37",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "cd7ecf8f-801c-4c5b-a4c4-8445a61f36a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6e2041-1a90-4996-875c-87806627441d",
        "cursor": {
          "ref": "0211e3ab-ff93-4655-837f-6e2c289bb3b6",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "be5410c2-2b73-4a82-a722-4f6bc06a1c7c"
        },
        "item": {
          "id": "bc6e2041-1a90-4996-875c-87806627441d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6ad298af-5c73-40ba-bc2a-00aa9b1e973c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cfa16d-28cc-45fd-8580-1562f748e355",
        "cursor": {
          "ref": "342cf48d-3616-41dd-b8e1-6e6bfe27123c",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9c0c4e14-779e-476a-a6a4-c7ebb2cd097a"
        },
        "item": {
          "id": "08cfa16d-28cc-45fd-8580-1562f748e355",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "5829a9d8-0a66-4ed4-938f-a0f7c99b7ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d23a5b-549a-4007-9f71-f5624f6588b8",
        "cursor": {
          "ref": "8d300e3c-4090-41a3-bfce-a0631f806c9b",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8ca88523-c31d-482d-815a-1a4fe02c3aec"
        },
        "item": {
          "id": "c2d23a5b-549a-4007-9f71-f5624f6588b8",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a750be38-3d14-4fe6-8f10-a3037064fd00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c5d8bc-f12d-4202-b269-4bb61e56304b",
        "cursor": {
          "ref": "5c7c4166-8ff2-4179-96fd-df1512b9a9a0",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1ef3da8b-a924-4285-b570-20e3f2194655"
        },
        "item": {
          "id": "17c5d8bc-f12d-4202-b269-4bb61e56304b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f6f66009-bca0-41a2-8dc0-cafbeb295436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c449862-aa1b-4ba0-9ea9-7692da3cf7c0",
        "cursor": {
          "ref": "7b49851b-2986-483b-8c47-fea269c3d559",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e88a98ac-bcdc-46a2-acad-6390efaee6a9"
        },
        "item": {
          "id": "6c449862-aa1b-4ba0-9ea9-7692da3cf7c0",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f0196d59-71ec-40a7-9502-981e717a89dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a6c7fa-0fa5-4ccd-8c5d-739dcbe65475",
        "cursor": {
          "ref": "8c966c7c-fa9f-4420-8bf6-35ebeb688682",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "70742310-52ce-4be4-84de-52d367f0aecc"
        },
        "item": {
          "id": "50a6c7fa-0fa5-4ccd-8c5d-739dcbe65475",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d59d6e9d-462b-4162-86a9-d2d64f7d44ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ef3480-6175-4c19-baea-8f5f9bf43287",
        "cursor": {
          "ref": "87bcd1c4-e80d-4a6c-a0e3-44c3b4c99bfb",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "229a9b52-f8af-47be-b9fb-f54364f7a9ae"
        },
        "item": {
          "id": "62ef3480-6175-4c19-baea-8f5f9bf43287",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1f43cad4-8ef2-4351-abf2-9a400c4d0544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865d4cd2-3fb9-4fe2-9c68-669051d02dac",
        "cursor": {
          "ref": "1993a9f9-bd38-4619-bd73-f316a6667ee5",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "cbecb549-b368-499c-b003-831bba30cccd"
        },
        "item": {
          "id": "865d4cd2-3fb9-4fe2-9c68-669051d02dac",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2da43407-b94c-4fc4-ac34-3ec1c31b3215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4fdc83a-de31-4a21-ab85-c7c5e79cdcd0",
        "cursor": {
          "ref": "ba7fe8dd-5e86-4b80-92e9-1ee0f854e367",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f29b80d0-eecb-4b48-862c-1bde289f01fb"
        },
        "item": {
          "id": "b4fdc83a-de31-4a21-ab85-c7c5e79cdcd0",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0d7673f5-7576-4ce3-8830-b98001304270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "321ff321-3e01-4457-a9f7-210ab0e63fee",
        "cursor": {
          "ref": "a059ee78-0116-4f9c-866e-8b17130486fd",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "73b6d9a3-4350-4044-98c5-e36b27af201e"
        },
        "item": {
          "id": "321ff321-3e01-4457-a9f7-210ab0e63fee",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b6e51a64-0096-43e4-998f-f16b1ac7e8f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370ba670-893d-4521-9a5c-3591a51ef13d",
        "cursor": {
          "ref": "5a48e0dd-2541-4f5c-be82-684e4be47c9b",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "323d811c-e229-4888-a156-72883b47107c"
        },
        "item": {
          "id": "370ba670-893d-4521-9a5c-3591a51ef13d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c9af535d-3840-4e13-862a-8d09345a5d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928d376e-fa24-49ac-a6a5-00bdcbb194ca",
        "cursor": {
          "ref": "d57c36f1-f751-40ea-9fcb-14a8bdf5b88c",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e31aee70-79b7-4097-8bd3-9cf0a55683a0"
        },
        "item": {
          "id": "928d376e-fa24-49ac-a6a5-00bdcbb194ca",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "804e0af7-bb95-4655-8cc0-0915a77cdc5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77fdfe06-5f2d-4b53-b865-172782f44b82",
        "cursor": {
          "ref": "de3abdb3-8a81-4481-b783-9492f8ae2c86",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d1709a5b-a729-4e39-a275-0d250d23960e"
        },
        "item": {
          "id": "77fdfe06-5f2d-4b53-b865-172782f44b82",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a6a61762-c1ad-4428-b01e-ec3279c585b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311e2a82-47c4-47e3-9ec3-c12a9223a559",
        "cursor": {
          "ref": "19838d34-5108-4d3c-b6bb-30b0043fb477",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c0880e57-8f5f-47e3-9934-f22520c72777"
        },
        "item": {
          "id": "311e2a82-47c4-47e3-9ec3-c12a9223a559",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4d92b559-21fc-4f70-8891-aca889c9a40c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec0ec1d-383b-4fb9-b5b6-028a9635e3ae",
        "cursor": {
          "ref": "dacaa4ca-6379-4177-bb64-dad5fcf7eed2",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "db92f4a5-3ec7-44b6-98ae-a7f082e5df42"
        },
        "item": {
          "id": "2ec0ec1d-383b-4fb9-b5b6-028a9635e3ae",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ae189d00-9b95-44ac-8388-36822aec742b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1457db5-2ca9-470a-a6c0-96a8c3d2ae1d",
        "cursor": {
          "ref": "61a1385c-4d53-4682-a3e0-39ee04396cef",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d3d4b867-1ed3-41ba-a4af-4dff7fa8616f"
        },
        "item": {
          "id": "d1457db5-2ca9-470a-a6c0-96a8c3d2ae1d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "8313d07b-bf59-407f-8bce-2e8e7253c62b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8004157b-18d5-4176-8e28-0a64668a7534",
        "cursor": {
          "ref": "34525807-38e5-43b9-b010-d4ce7129b856",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "70cb26d8-cf92-4b3d-b882-491894d66f4b"
        },
        "item": {
          "id": "8004157b-18d5-4176-8e28-0a64668a7534",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "60c572bc-1c87-42ed-a6b7-428fa1b890b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5137a6ca-0b4a-4dc9-a3d1-48490149c8dc",
        "cursor": {
          "ref": "75782247-146a-4e17-83c5-cf2ec330f5ee",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f408c416-ecf3-42fe-a0f6-909021652622"
        },
        "item": {
          "id": "5137a6ca-0b4a-4dc9-a3d1-48490149c8dc",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f89f07fe-be5b-4249-99e3-fa5a3f8a8c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ad3106-8484-4d10-9927-1e4935e4d755",
        "cursor": {
          "ref": "869500c8-1110-4f3b-90d4-581b78e34931",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ca3bbcc3-cac2-4fc9-bf6b-2a35aa14544e"
        },
        "item": {
          "id": "64ad3106-8484-4d10-9927-1e4935e4d755",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "07041012-78e6-45e6-95f6-b3fb75f53ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3c65d7-f2b9-4ebb-bbb8-9ddc91bb63f2",
        "cursor": {
          "ref": "fe0fa3cd-3732-4768-bf4d-59c7d30ec6b8",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d25f9fa8-2684-4ad0-af0b-eb4b033aab63"
        },
        "item": {
          "id": "bb3c65d7-f2b9-4ebb-bbb8-9ddc91bb63f2",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "50f7f922-0bf7-4772-8dcb-4f1a9a57b708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a08965d-7e44-493b-9772-e67ed6dda658",
        "cursor": {
          "ref": "2a101541-6539-44ab-9ce4-003e81c43a29",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "aaef5559-f598-4291-a05a-61a2aec45161"
        },
        "item": {
          "id": "1a08965d-7e44-493b-9772-e67ed6dda658",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "5d5393d6-50b0-4858-9de7-b1e2227a5b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c1793c-2341-405c-b6b3-d2ba0ef5862d",
        "cursor": {
          "ref": "36b2cbc5-3456-4ba4-a5ce-d9a4cca78624",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8bb77bc8-e093-4671-bed6-6a0a2a80a9e0"
        },
        "item": {
          "id": "98c1793c-2341-405c-b6b3-d2ba0ef5862d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c9bc7310-d692-4b14-9ed6-6c866733047a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d120b85-12e0-4dba-ab1d-45b743ab8709",
        "cursor": {
          "ref": "6b9ab6aa-2b47-466e-ad4a-1516c7ac9c5e",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "596fb4a3-4760-40f6-b91f-d7d716340b5f"
        },
        "item": {
          "id": "4d120b85-12e0-4dba-ab1d-45b743ab8709",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d0364cd9-d690-4e78-9a42-c596ca1d2670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c2fd76-5575-433a-9e31-5b7ab2937b4b",
        "cursor": {
          "ref": "17e80d6a-6ca3-4f15-900b-ff424ef85bba",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e29083d6-acc3-4dd7-a918-2d8f88247fc3"
        },
        "item": {
          "id": "56c2fd76-5575-433a-9e31-5b7ab2937b4b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "18c820f7-6ca1-472e-be34-ff844f2e004c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbee6b8e-a96b-44e1-8321-37906b5300e0",
        "cursor": {
          "ref": "0426e812-45e5-42a8-8adf-e82c94061a40",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "168324f9-83d5-4ebc-8960-dfae895d12ad"
        },
        "item": {
          "id": "bbee6b8e-a96b-44e1-8321-37906b5300e0",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "574379f4-1937-4623-beb3-079ce3299fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71413ad6-a984-409c-ab91-cf312af692c4",
        "cursor": {
          "ref": "0f896532-c514-4124-aded-aa4de1d6c31c",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "55a0e4b7-f1f8-45f1-b668-e6fa33acfd1b"
        },
        "item": {
          "id": "71413ad6-a984-409c-ab91-cf312af692c4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7657d04b-57e1-456c-bf32-4838d0b81c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f8095da-0569-4b7a-ba7a-3f74b29c9ec2",
        "cursor": {
          "ref": "2dbbc2b0-eda4-41c1-a58e-38d8b4f2abd0",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f26968f7-8273-4abd-81b2-12e87b6b56c2"
        },
        "item": {
          "id": "3f8095da-0569-4b7a-ba7a-3f74b29c9ec2",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5ed0f6e9-11b3-4698-95b1-3309a454edf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9051d1-879f-47fc-b44a-2bdfe0b0dd20",
        "cursor": {
          "ref": "c0872804-a300-4067-ac0a-329ded47944f",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "63791821-1188-4684-9fd1-78a9e57de001"
        },
        "item": {
          "id": "ca9051d1-879f-47fc-b44a-2bdfe0b0dd20",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "aee0e17c-7810-4549-8a71-48e75264cf8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051ea681-a577-48b2-bd38-68c932948167",
        "cursor": {
          "ref": "5a6e1ae6-2c2f-4c1e-adac-e77a748d5f5f",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "43d2ea63-f63c-4f29-a143-f6b4e13dc1b0"
        },
        "item": {
          "id": "051ea681-a577-48b2-bd38-68c932948167",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d8e6acea-8267-403a-9718-5edc0b4abd66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e21bb38-bb2d-4cad-94e5-950519322acb",
        "cursor": {
          "ref": "d5db0f06-89ce-414e-ae22-fe6b5deec658",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ef964f0c-38dc-4457-8933-56cc213fc783"
        },
        "item": {
          "id": "2e21bb38-bb2d-4cad-94e5-950519322acb",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b2a3a74a-a153-4765-bd6d-6fb7b60a19fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5341180e-137c-4364-9ff5-7231e0aee649",
        "cursor": {
          "ref": "20357d01-e882-49f7-88c1-006b6f085cec",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8d11e328-b009-4766-b5a6-ea539b5b369d"
        },
        "item": {
          "id": "5341180e-137c-4364-9ff5-7231e0aee649",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5468805d-989a-4aa3-8d19-8e0d1db90eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a14e3e1-cfd8-4865-8ae0-9a5b8faa507b",
        "cursor": {
          "ref": "4c22cee4-bc1c-42d9-9b43-931072647891",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f2397cc8-e451-46f8-a532-ef5f65b9d58f"
        },
        "item": {
          "id": "7a14e3e1-cfd8-4865-8ae0-9a5b8faa507b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "65688545-540b-4357-bb2c-3c9a6ee2cc50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5409e1-32d4-4e91-8b2f-d2c83534a319",
        "cursor": {
          "ref": "c61fb1f9-2fc0-44c9-8b19-531484d76877",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a7bced70-d41b-4aa0-bb2d-59d6d0133ebe"
        },
        "item": {
          "id": "3d5409e1-32d4-4e91-8b2f-d2c83534a319",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ba300276-deec-4b8c-adb0-e13485347dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd1a5ea-206e-4691-bbe7-7ea3a733d985",
        "cursor": {
          "ref": "37430e43-1b97-472b-8ce8-1972869d505f",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5fc705ee-293d-4c1c-b186-842d05e275f7"
        },
        "item": {
          "id": "afd1a5ea-206e-4691-bbe7-7ea3a733d985",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "424b56b5-526c-4d80-b004-a70a2908ae99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9427bbd1-04f4-43ad-a096-c0e195c32bc9",
        "cursor": {
          "ref": "399b0563-91fa-453b-9781-d656ec4b627a",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "44090a1d-05a6-4803-9922-a8080f95ca25"
        },
        "item": {
          "id": "9427bbd1-04f4-43ad-a096-c0e195c32bc9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "fa0833c1-dc5b-4fd1-b908-c6183049d224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640dba81-94d0-4b50-b610-94f68e3cca0e",
        "cursor": {
          "ref": "454a6577-5b6c-4662-a6af-d973834ade4e",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b484b06f-6486-4327-a5a1-39cc71c22707"
        },
        "item": {
          "id": "640dba81-94d0-4b50-b610-94f68e3cca0e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5f7456d2-980a-4bf2-bf2d-fd35909e946e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925eea1b-2f45-4048-8d71-ff38b4bdeca9",
        "cursor": {
          "ref": "86b18e08-5639-4d54-969b-9a4c4671dc4f",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "86cd0bdd-9b63-4f48-a60b-3bb64cb90bdf"
        },
        "item": {
          "id": "925eea1b-2f45-4048-8d71-ff38b4bdeca9",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7f95269f-b186-4f86-92d5-11a9a3452dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c910ed0-d15f-47b0-92aa-37037fbed7b6",
        "cursor": {
          "ref": "1c0f0c23-305c-4d80-bf91-ed25ad388b1a",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0401ab2b-019e-4da3-840e-eef14127b43b"
        },
        "item": {
          "id": "5c910ed0-d15f-47b0-92aa-37037fbed7b6",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0ab1689e-4b66-40f0-bbf4-6ad01ed77704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f79999-8fa5-4b4c-8759-31a07df18ac0",
        "cursor": {
          "ref": "a9bd2b77-fbd8-4fe0-aa42-a2a117c441ad",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "3fd9492b-3b5d-42a8-95eb-c4a834a432fa"
        },
        "item": {
          "id": "73f79999-8fa5-4b4c-8759-31a07df18ac0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "de7bd907-d42f-4491-8f68-c2002cf7b8be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81063446-da96-42b0-9918-1721e18cc364",
        "cursor": {
          "ref": "54c2bc62-b7e9-45e0-ad60-76184c31c7a2",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4ded25d4-b786-43ac-bc50-71fb628e7446"
        },
        "item": {
          "id": "81063446-da96-42b0-9918-1721e18cc364",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "019fe120-83a2-40b4-8970-6e6531e53505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62df41c-849b-4f4b-9686-82afcff5834b",
        "cursor": {
          "ref": "3d2da071-f2e8-462d-a197-28f7e50956f7",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7fc80a18-9d97-4506-ab5d-51f627f89f97"
        },
        "item": {
          "id": "d62df41c-849b-4f4b-9686-82afcff5834b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "8977c93a-3650-4f50-adee-74605fcc3471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86410445-efb2-4cbe-9174-b026610e91f6",
        "cursor": {
          "ref": "b3d94fed-9410-4d37-a8e1-0fc54ebd76ec",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "33a0266f-4bf1-4cac-8a34-f90e53f4e09c"
        },
        "item": {
          "id": "86410445-efb2-4cbe-9174-b026610e91f6",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "029008c4-9184-4e80-bcd0-7e96fe348856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5bdf7dc-2d81-4050-b430-c44906d4c3b3",
        "cursor": {
          "ref": "8c199c8d-d47a-4274-9751-d89b5c36d3b6",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "afb45617-9dba-47c1-808d-127c1a8ff7d1"
        },
        "item": {
          "id": "e5bdf7dc-2d81-4050-b430-c44906d4c3b3",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "94e00a4e-dadd-4836-a94d-e6a137c34f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e78642-971b-4adc-8b6f-0a70c994da7e",
        "cursor": {
          "ref": "f3a932f7-8010-43cc-aa27-257130d694bb",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3028a2e3-3de3-4653-94c4-100eec925c91"
        },
        "item": {
          "id": "44e78642-971b-4adc-8b6f-0a70c994da7e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3f3201f8-7356-44e3-9543-9a74876eb5ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93c8e51-f509-4274-9187-771d0b4798e8",
        "cursor": {
          "ref": "86034772-6f9c-480a-9ac0-f05d54628e55",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "fb4c3b26-ffb4-4e9d-b1cc-5ae691d822f8"
        },
        "item": {
          "id": "b93c8e51-f509-4274-9187-771d0b4798e8",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "dd7c4fe3-f24c-4c3d-95f5-08a9f9a657c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c9b20f-dd26-4d8b-aabd-243f35fc1941",
        "cursor": {
          "ref": "29ef3877-37e3-4ca1-bbd5-b1ef30e92dbc",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7dfb138e-b025-448b-bf59-50338b1fe6bd"
        },
        "item": {
          "id": "62c9b20f-dd26-4d8b-aabd-243f35fc1941",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1f5d5781-b956-401b-bab3-54379327701b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f915ad60-b973-449f-a003-cd6ddeb9f9ba",
        "cursor": {
          "ref": "432a6f5a-d982-427c-9dea-6083f0cfaf00",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "927e4a9b-d7dd-4b15-a230-a0b8ec6580ca"
        },
        "item": {
          "id": "f915ad60-b973-449f-a003-cd6ddeb9f9ba",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "97a088e8-8475-42b3-80eb-fc7d09fbff4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f77bfd-f217-469f-8db2-aeaa3714de96",
        "cursor": {
          "ref": "d0f3530a-925d-47e8-ae58-21e1462a7a0a",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d8b2acd2-3f49-4820-9ccf-8f5da7c3d27e"
        },
        "item": {
          "id": "a7f77bfd-f217-469f-8db2-aeaa3714de96",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2ce96304-ce14-4565-bb94-e95bf2a86248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559cdbd7-773c-46a6-a4be-f18b99938c9e",
        "cursor": {
          "ref": "ea666588-3b63-48c5-bbc6-a3f17bea7c40",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6a73d9fd-0e65-4d55-9ee8-0d8fa9aa885f"
        },
        "item": {
          "id": "559cdbd7-773c-46a6-a4be-f18b99938c9e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "07363731-aedc-4094-9f53-2354219b4de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd8685f-e506-4b98-80c3-455694bedc0d",
        "cursor": {
          "ref": "f22907b1-3f7d-4a78-bb2e-1bc1f54fbaf0",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "050c844a-20f0-4f83-8131-96fb05db918f"
        },
        "item": {
          "id": "dcd8685f-e506-4b98-80c3-455694bedc0d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "da0e2e1a-247c-4b49-a5d5-b9dc2ae3a9d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ee02a8-7625-470b-b8cc-abd11d7efd7c",
        "cursor": {
          "ref": "50cc15e2-9e83-4952-8407-36f328e44f3d",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "0604c20c-c57e-4b45-9f6b-8deb493ecca4"
        },
        "item": {
          "id": "38ee02a8-7625-470b-b8cc-abd11d7efd7c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "97da9672-bfa5-4753-8cbf-01a1f794b6b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aafae260-e53a-4fbe-b50e-a1c39e526214",
        "cursor": {
          "ref": "6d200a09-125e-4511-80f1-23b4d84d5493",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b7846327-c5ac-463e-919e-154bd51ad652"
        },
        "item": {
          "id": "aafae260-e53a-4fbe-b50e-a1c39e526214",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "12347959-6da5-47a6-94a3-b736c63b5aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2461df-bbd7-4b00-bdd5-b0020e9f71d6",
        "cursor": {
          "ref": "1fbbdbf7-2f4e-4897-9969-3cd2b63c8de4",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "cf0eb23e-01cf-47c2-b8a1-e0de35fa944c"
        },
        "item": {
          "id": "8e2461df-bbd7-4b00-bdd5-b0020e9f71d6",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "5c0b3f7b-4628-426a-9e59-3a3955d4f6a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4644fa7-ece8-42a0-b1dd-bad16c24e64e",
        "cursor": {
          "ref": "4138200a-3a62-4274-badd-b65288d4c429",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d7889d9b-cb30-4e3c-ab99-da0667c8906a"
        },
        "item": {
          "id": "c4644fa7-ece8-42a0-b1dd-bad16c24e64e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "74f55e85-7ee2-4cfa-88b7-e6f8d547302a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb8e9d2-916c-4d79-b84b-1af9c32975a9",
        "cursor": {
          "ref": "e2377e14-1f00-4b48-bbfc-b9a66f7d9332",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "06836cab-a9a3-44d7-ae64-85ecd6e3bcdd"
        },
        "item": {
          "id": "6cb8e9d2-916c-4d79-b84b-1af9c32975a9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e27a1ea9-e6ff-438f-9bb2-64d3ef377bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d28c5cec-c093-42bb-a190-70715b7fe94f",
        "cursor": {
          "ref": "eb252c63-1029-445e-ab18-e15abdea8407",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "15c9a786-5824-4d78-b6eb-a9615752bd99"
        },
        "item": {
          "id": "d28c5cec-c093-42bb-a190-70715b7fe94f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b23c24d2-dbd2-45b4-a583-c4a4f0b4012f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65eca25d-ac5b-4b59-85ff-8602d191013a",
        "cursor": {
          "ref": "ac8622dc-88f8-47da-9d87-f67ec0788205",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c686095a-d62f-4307-a271-dbd840bdf042"
        },
        "item": {
          "id": "65eca25d-ac5b-4b59-85ff-8602d191013a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1682e2b8-da4b-4c69-87ce-ac592238ef39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb020cf-cc2c-4ab9-b8bf-ef04f3a7c428",
        "cursor": {
          "ref": "4c34e501-82d2-41ad-8da1-10c24b08229e",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "50a9b1ff-f58d-4a4c-8155-ea9d9a05c5fc"
        },
        "item": {
          "id": "7bb020cf-cc2c-4ab9-b8bf-ef04f3a7c428",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "dafee78c-071f-4f80-8390-6d6ef628dbbc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65649967-63ee-4491-bedc-0c6eba2b2f86",
        "cursor": {
          "ref": "52b13d40-cfc3-4846-b234-9bc787ae2997",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "eb8a7ec2-0230-469e-a2c3-065e6670788c"
        },
        "item": {
          "id": "65649967-63ee-4491-bedc-0c6eba2b2f86",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b810dfc9-711c-4d32-99a0-74e626ee0319",
          "status": "OK",
          "code": 200,
          "responseTime": 2221,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5a4d28-7d5d-4ef5-81e9-197e541167c0",
        "cursor": {
          "ref": "46f36167-d9d9-4866-8a6f-41d0e75801d5",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8716f5e5-36d4-4793-ab85-12a6316cb9eb"
        },
        "item": {
          "id": "7c5a4d28-7d5d-4ef5-81e9-197e541167c0",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c71b4d65-7709-425d-82bf-bf60ea4999c0",
          "status": "OK",
          "code": 200,
          "responseTime": 3083,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed7951b-a5b0-4095-adcd-68764fb047e1",
        "cursor": {
          "ref": "1601780a-adda-4779-b53c-a78b1f7df6d8",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "18a4002a-3dc3-4e5d-837e-4928e893bb41"
        },
        "item": {
          "id": "6ed7951b-a5b0-4095-adcd-68764fb047e1",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f3e46bcc-9943-4e64-a6b8-3e74be0faec0",
          "status": "OK",
          "code": 200,
          "responseTime": 3078,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a03aec35-1806-4377-b11f-53474cc9ca44",
        "cursor": {
          "ref": "3767e647-b2ef-43f0-8d83-b6252f014c51",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "362495e5-e57a-4dd5-bff9-012db15be506"
        },
        "item": {
          "id": "a03aec35-1806-4377-b11f-53474cc9ca44",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ce7c73a3-38fe-4340-817a-52a7605504fe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a03aec35-1806-4377-b11f-53474cc9ca44",
        "cursor": {
          "ref": "3767e647-b2ef-43f0-8d83-b6252f014c51",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "362495e5-e57a-4dd5-bff9-012db15be506"
        },
        "item": {
          "id": "a03aec35-1806-4377-b11f-53474cc9ca44",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ce7c73a3-38fe-4340-817a-52a7605504fe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0771edfe-36c4-4b9d-bd96-220951c0ce33",
        "cursor": {
          "ref": "83943e20-099d-4d06-aed1-84ccd2c0ac31",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a41e13cb-5629-4d66-add1-917ca88ed5df"
        },
        "item": {
          "id": "0771edfe-36c4-4b9d-bd96-220951c0ce33",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7bd2c327-b952-4360-b5f6-532b6bdd9f65",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c17de7-237a-4c3d-8072-65bcdcda36d1",
        "cursor": {
          "ref": "8b5a9f5f-a449-432e-8b7e-7cdb4fb8d7f9",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b0a665c9-0a4b-4395-ab58-9bd81ea52b1f"
        },
        "item": {
          "id": "59c17de7-237a-4c3d-8072-65bcdcda36d1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "983e5b8a-35aa-4367-a105-5329bf9e2910",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}