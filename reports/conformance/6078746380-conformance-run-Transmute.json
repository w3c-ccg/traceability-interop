{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6db49780-b6ef-43ba-a158-31aaf8865266",
        "name": "Clear Cache",
        "item": [
          {
            "id": "22619d45-5104-4511-ab75-308947a0e990",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "11babccb-8d5d-42a7-95f5-7c23bda5b172",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bbf990f8-ef85-4bca-a0bc-77171dd3227c"
                }
              }
            ]
          },
          {
            "id": "5dd149ac-4eb6-4417-ad80-8f8313a1d59d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3b35bffc-28cc-40da-ad98-97bb427e65fe",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0ace2258-69a8-45c6-90f1-f1a4c56589b7"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "43997a8b-43c3-4b0d-bab0-dd3014fcc1a7",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "31ce11e2-ab36-4354-95d1-8b8e24c98f99",
            "name": "Positive Testing",
            "item": [
              {
                "id": "47b54778-2988-4c6c-bf8e-2853385007de",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "31a1be7f-4e8e-44a3-85a3-d48434b382a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fe43e363-c95b-4e78-946f-551361b00753"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7aa0cd4b-4d3f-43fa-9b1f-7d38d87b4984",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "16329baa-a370-425a-b95d-89773c7ab964"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5e53b004-d802-488b-9bd8-7f7ef778a06e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f4a419f6-c78c-4a8a-9252-d75bd69ded0a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c72f061a-46ec-452d-b725-4646bc566633",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "64b0033a-1061-4228-af86-7a337590be36"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "56345096-ff74-4d74-bc51-3a9dfcf95051",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "51e8fe8c-f1ff-407a-baa2-1c8488777ffb"
            }
          }
        ]
      },
      {
        "id": "ce41dfb5-fcb1-43c5-bb06-6ddc7ad81ce1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f0776252-b835-4a31-a818-6e8fa3bb876d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e82b15b5-c4bc-4944-bcc5-c73a4b3980f4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1a3bf635-201a-4115-9807-4502e2316c13",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31bb2cc5-56fb-471f-af28-440ec340f86e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e2faf8d2-7935-446b-b1b5-51afa901a9d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c417dd-25c2-4c4b-b4ac-300b3c0e4498",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6201e07-e495-4c51-bfc9-e13898d05319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a6290e4-d93c-4ae1-9559-8607a7d39f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "facb0ab9-651f-48fc-b84c-34df197ba3b8",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2a2ea9-93fe-40c9-a0bc-f3597c030010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a9b6a1ac-a3a2-4e2d-a2c7-75e8e2ec36d8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "727d37b5-e0c9-449e-9293-c83626caffe4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0a0ca65d-bbc5-47a0-a652-54efb63ff940",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c46a224d-ff00-49c2-9e63-67d46483fbb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "295e94e3-abbb-4d15-97c8-f51540bb3986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a75a9f-1400-4e34-bef5-e86fd9ab67db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70e98ee4-8af9-45e3-b050-26fb53033dff"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b1f9f112-06ab-484b-ac54-72564d685ce3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "72a0a54f-8b5d-4636-a9d4-f5a6860582c1",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eaf67078-7e18-445e-9760-44760f672bbb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "0cb431cc-defc-4817-8cf3-93737e2b9eeb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "37127690-d8ee-4d4a-8b9e-d108b80838e7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "a6ad2e8d-3e09-4d43-9fc0-65ad641bff90"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "006e3843-0b69-4663-84c8-eab39938cbc1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0e9db8af-a444-491f-9aff-aa3e8729e327"
            }
          }
        ]
      },
      {
        "id": "69be4d07-5724-4c88-8b2a-f4ed8dcd411b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "bc2b4157-0a7b-493d-be3b-b24b3d4281aa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ac205742-4ee8-408c-a977-5549afc45d30",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0177e44e-fd89-402e-a1c5-7661c632d95a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f071930f-3a80-46ed-a288-618f01a9ec52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf6464ba-8ccc-4d52-8a87-95632a9885dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a3ded4-5858-4f71-bb51-61183870ea9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a877be96-0ad0-4a21-a554-a7fa0f19738a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818037a2-1e59-4b03-81e4-1d8d45f77cc9",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1873b59-9d81-422a-96c3-50425cab53dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "496eb8dd-2609-46e6-988d-8670952904c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ef18cb-f59c-46e7-87ec-385f4382ae21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef4177f6-3f81-4dc3-b3d4-419329ab4661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b797cf-0311-4c14-9f6a-bb1c6ef5aca1",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cdb6c35-5e09-4f54-a942-f4b5db3bf94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28fd42a3-a54b-4157-981e-c388045785fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a898d82-61ec-4e35-bbdc-d86215b92054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c21bffe4-d346-4bb3-bd5f-807b238f9882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94105304-dfd3-4744-846d-f4e867e542be",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25636b5-c750-4f4d-b02e-f219b4e39ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6adaebac-02e5-4fdb-b395-66da63f45d7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ab3dae-c431-48ba-93dc-30065e514a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ee8260f-4986-4680-a9ac-d0fd55439260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab6e01a-dbff-4891-93e7-f99480e12fd7",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1046d6-cedf-4d0a-b3e3-65657dc2821a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb82f42-b70e-43f0-94af-b5b2b693ba53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f528a8a2-f8ad-44e6-93bb-9f61206bba8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d66d05a-60d0-4f5a-b2b8-406e941ecf64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559d4ba7-6189-4561-843d-c16d717c7a77",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e7ff664-c9e3-4ddb-ba62-6c0fab8a9199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8126a9b-4af1-4419-9ab3-c2a1d30cd357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3cdd31-ded9-4734-be7e-b7d44d45306d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "baa6e8a7-a61f-4ed3-b0eb-464b0e405ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde51b74-563a-4f87-818c-6280d549f844",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "061e7720-b16a-47ae-a278-fb5638dcbd6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "413fc439-c20d-4963-be11-3b0078ff8635"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ccd2d6-94eb-4f8f-8a3d-b6d293fea78f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68f1dfc0-ebc8-47f8-90b2-1dc9ec04767c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20605deb-51b9-487b-8e86-37b871046f20",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88f7ad2-922f-499e-bc66-32b5df6c65bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f01091d-d1eb-4f41-a55b-6da48bfe641c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d47e48-8c40-433a-9704-ba11839c25cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6a8e714-de1a-48b7-a422-b928c7013da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a76cac-11af-4193-98ff-f748ced6223c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2604270a-c217-479f-a9f5-2b7e9f3fb130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4050e97-fad4-4c19-ba15-7b6196dd4fcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a539e807-7219-4097-8885-8967f0336881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e53e1f7-7a48-4bd4-bb1a-6511594b7882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067bdd92-5b16-47db-8ac4-bb9c1849a0fb",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64bd2b14-dc05-4522-ab3b-a6914beeef5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41c742e7-8134-4935-93c4-0d5d3c3327bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12500826-a9e4-45d6-a328-97b80a5f4757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9182c5c-74ae-4bc3-bb39-1f1643ff181d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add3f20e-edd7-48d1-82ff-86f1cd9ee3ac",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f23ba9-6eb8-4647-a3b9-adb2f07bd185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a86e0fa-292c-4818-b0b2-4c7f2696917d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ebed05-cb0e-4937-b647-48f0a42941f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "344df17d-6dfc-4335-bb58-4987b3deb4e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff1e1f1-5562-408a-8f42-88c81a7e766d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "347d4941-eee4-4df4-87c4-e67cfd23d687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5f348e1-1f89-4dc6-9c14-5e5462c19266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52359921-0c30-4bae-8857-767d66d1a8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfdef785-27fa-4d59-b761-7b30a8385a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813fd6fc-d32f-4dd0-a8ad-e698c51f895e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2539d10-7ef7-4127-9f82-0d5a9ce09c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d37c9dda-5252-4b31-b436-59615a083f58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18247f54-0405-4bc9-9de4-da74ae90aa50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "336fa209-0347-444b-b0d7-e4e0ffbd7338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cbb45e9-9fd9-4871-8b87-3ecd63ea2031",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f28e408-1ca7-4e3d-9b37-90180fa458c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b3a67dc-b1c7-4211-975f-1fe829fa42f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef179f1-94c7-4044-a937-15175164a6db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77ce2cdb-0967-461e-93fd-292876f79fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4993806d-63d6-40b9-9154-cdaf2bbb298a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d472527-d99e-44b3-a7e3-610f2195b946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68279eb9-f114-408b-aa60-475a2edc7ce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa9ecb2-6f95-42bc-aa64-4f2cd82946aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "500acc37-101f-4a6c-8b72-894052898804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03509fa-5d15-4315-b4b9-68a646af6b73",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c73ffe-77b9-4be0-b9ce-702eae7c4b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aada878-a07f-42f0-bbc2-a852e5bd5da3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1df20d4-b78d-486a-ab45-ddf6da0bc0cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d4b42ee-5088-4be2-87be-94a580041d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4368d245-9b20-49a2-9891-897ad0f45ea3",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b262564-9b62-4fc9-8e86-f734420c1e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "174934e3-56c2-4757-a68c-124b5e69ea17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b7262a-dc99-49f5-b7c5-166793e209c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8d08e9d-3524-4783-8ec5-6bfd2bb73ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7fea1cb-66e7-4a59-9e0d-0580fcf2ff74",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81824a8d-0d97-4cf7-9878-7572719662a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b004c0-4dba-4a4b-8717-c51bd48a6848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d74eb0-a97b-4d2a-ad96-ffa97db72ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7780d6f3-36f0-4218-8446-a477b520674b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d31e1b5-38fb-47db-9cda-c917c97a4631",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02036aa1-78a5-4531-b21a-e83781edec08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48ad1be0-a75a-45d2-a557-bce768576594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e22c6a3-679c-44d9-8914-717f1f0b5f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "91a2c562-4987-41f9-9c44-7645d5801f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00d79be-88e6-419c-868f-9faa67fa4511",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c77b8ac5-48b2-4332-b9f4-a29e7740dae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0206d78c-b9a9-4f69-8158-9491c60dc1a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1af6e4d-fe9e-49dd-8893-293873ec1002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8ee095c-9ec3-458c-ad8c-cf4374e0f770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9896ad14-170b-4c2e-a049-bf0b6e81aeb1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ecb26d6-0376-40ef-a3b5-6719a7b1022c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "139039fa-5eb3-44c0-8828-4095c1105be0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed49ff6-f1a7-4011-ad0c-4acb67156845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee4697f2-3fe9-47f3-af97-ea454856987a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40028fb5-be94-4578-8eb2-d4be689f6fac",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c02401e-a6c4-4951-9870-40cdbebb7551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b13533f2-60cf-4d25-a7a8-bd2b57831fd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7255495-c8c3-450b-a150-531c3b9cb329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a344b7de-1664-4511-b1ff-da9c3255332f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95947cab-a424-473d-b67e-4b939f9266f9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc55ddd-8d85-4515-b86d-f874a9059aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9d7a846-bc2d-44a9-a86b-22ad1fda632a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0dff7b6-d0c3-4ae8-8ae5-8d0667331cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "02ea0d9c-a2dc-438b-93d5-4ca25ec03fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c334974-d5c7-4018-ab48-19912a1e536b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89cf9e38-e710-4581-bb88-f17fbce481aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a651c0d-b12b-47ed-8c64-b60576845ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ad5027-ada1-4503-bfe2-83c964791feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6251c700-7f5c-458c-941b-44df1b93f12f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4689729-09c1-412d-92b1-3e3f5b630323",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81550bac-da94-4c09-b43d-893c37eeba40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffa554c0-e20a-4793-993c-73cf2c05b90f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddfabc53-f28f-4745-9d6b-a172f9237c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "213d92b4-f4d5-4ec4-9370-8c7d7db9e691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "642ea502-20d2-4bcc-be3c-7a0a3d03e80a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7444e1f6-5774-4fa3-9ecc-e0834c7f2b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f801da2e-9158-419c-be03-cf1a8857261d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ce51a1-6f5d-4945-8e10-23a526296054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "44e3d145-bae9-44bd-8f1b-32e889324bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a883445-100c-44d3-bc90-0f6c13c92bf7",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91c7620-7188-4c66-a8a2-b38fc3e0935d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79953517-9239-463c-bac1-d0585a9b7644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a59d77-b5f0-4235-ba99-9fd468f92047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb6782c7-d7db-49b5-90ad-edbbcbdb241d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7deaf32-a15c-45b9-8399-4b577348008b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bdba3fd-5cde-4f6b-82fb-903da1580fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9140cb34-0b1c-499e-a23d-91d64f82506e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b3a0bd-5079-42f5-b9f8-56ed73185a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc928180-2e52-4ca9-8814-a66b7708c4cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f3c1cff-9b08-42d7-aa95-f1f413f6a7b5",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d285732e-600f-4ee4-ba75-12b9c67568ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13491b40-8367-45b8-8b82-c7f7395a17d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a010f9-cc75-445b-8270-dc0072a1b0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f425dcb1-ff39-45ff-bd4a-cd2ce520294e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb159028-a064-47a8-9ebd-894ae6017491",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac8d343-651b-4341-84b7-97480e28dd9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71ca237f-fe11-4025-abca-e7859fbd8a65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16e4013-03e6-495a-962f-4b2bd7e56d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "92cc453f-d77c-476d-ab51-a4dbcf8f83cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c665c455-121e-4c00-a7ec-6751e6c51ecf",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6758c166-827e-49fb-8b36-b721a82174d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aba4718b-dde2-4084-a227-966ce721274b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff83a859-094d-4d62-b3d5-e47abc12ae54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac184e98-2523-4928-b696-a02f60486731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60bd969b-69c8-4df2-af4c-351a9f87b553",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea76b26c-09eb-40cc-a705-d4c57d052c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9061c504-67b4-40f8-bf4c-808f34550ced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce407be4-120b-4368-9b89-023ec63588f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9304910-2072-4d72-8775-00165e18ad1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a7ebb4-9315-4f93-8e64-888e1a573df4",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fedd0fd-7ae3-4699-86ef-aee6b6602094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5df6d4e-7e63-430d-b4a0-b540f6b2e206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f16b27a-ffc8-406f-b99f-bba06c27774a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74d59251-2e18-46cd-a86a-92078d8d975e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "722f4a54-9d48-47e0-b04f-a26103dccf02",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfaa9024-5350-40b1-b3f6-46deb760a327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59ebfec7-0a0e-4608-a114-51044c0a36b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e319a6-1f9b-41bc-8f29-bbdddefe179f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b7454e3-23e1-4d39-a7b3-3f7d3c581d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43b038a-2985-48dc-88e1-9b1e0affba8b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a76838-71de-4ee9-a3da-93a9547768af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47a88c44-6964-492f-83c1-ab364303198f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf89a5de-9270-4594-be43-0431584a50a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "07b55c3c-15b3-4532-8286-8b7b00a9455e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a453d60f-58f5-4649-b5c5-e288331f6ef1",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "415ebae9-d492-4cf7-8711-79e015ba3655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6525f08d-815a-4459-8c41-73d3aa8a7302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa62d50-4375-4625-a0ce-2e88039319ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d2a0c2fa-8622-47e5-9f7c-38505f6de9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc9ccf9-d1c7-442a-87cc-f0e59be08fa1",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "077a6cbd-a62b-4813-9abb-cf5ff92469fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "542fab04-e9c3-4b1f-9bd0-977506440195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41e214f-746f-461c-8a75-ddb6c5ab9506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "574cf5ef-f19d-439e-a531-43fa1be0af4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c96e2d8-3973-474a-9698-2330bc718618",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d76a75-0d1f-4062-8a04-27d16489d638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35a1d341-6738-4f92-bff9-ec989338dbdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9779781a-c6e2-40b8-ac48-269360b30cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c09ed49-7a7b-4f01-a827-6670ded0fb64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37715f34-2c89-4e52-a758-6c12323e1805",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "397ef571-92ed-48e6-ad76-276c05d3515b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46e75407-92d2-417f-9277-9bf335e6a74f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e913042d-baf4-4f13-894a-1f49b2f5ae84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "381b2f12-1b4a-4506-a81e-65091e5e54e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51842e0-a88c-4d79-ba0d-d7fa9fd22188",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e66438-7adf-4b18-b2d7-b7962e62fde2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2964d1cc-d5f2-4d1c-ac61-a5d6b06203a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1c43ad-0798-4803-8c64-dfb05ef45f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba53975a-721d-43c4-a6fe-a8aa1fd9b312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abfe4149-1454-4d24-8022-704fb7ff8230",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e89ba4a-36b1-4353-9eb6-16ca9231fc25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "019a0b3f-d7bf-4ec4-b528-ea54cc845a02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01fc87b2-a3fd-45ee-bf2c-9a716636018b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ad36015-f25c-4f89-b19b-556904f97b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e75e25-ea44-4e44-90c8-d3e3670a01ca",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f03b451-2dfe-479f-a0bc-b7732d705c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4f62976-cbfd-4222-8780-12a4c40182fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de17a74-88cb-40db-9d1a-b8067f56c432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "17d6f5b8-40f7-4f7d-844b-f44adcfc2ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f7809e-4cda-4076-a43d-705bb5bc70c9",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb2d862-9f74-48f6-8687-1b55d1b9eb1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ad33868-0c83-45fc-93f5-f13ee37dc179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bdbd97e-a111-4fdd-88a0-b0b52e7074a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "17297a12-76eb-41ea-91b5-93769b05a850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32355a9a-4762-42f4-b820-5926379bee30",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2eec9d9-86d7-4b6a-a0a6-94f5b6ee76b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "164ccf21-60bc-4f0e-821a-da3f89e43edc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9abfd0-61d0-46c2-b741-16b2b5d8f814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1c074a9-a61a-4aed-9cde-1e7bec100977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f4e480-6183-4e71-bf89-8365fe7842bd",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc811ef1-d7bb-468a-8ef0-75417701a34d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "077d291f-912e-481b-b014-65bdc61c5ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb99053-cc4c-4c6d-b6dc-56e9456f0f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ada1406f-883f-4e42-913a-0d43ae97d924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "154225d1-bf38-4eee-9579-65507029ad83",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49bc108-a4cc-4654-88cb-39bdd010186a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcf81437-3a73-4587-992e-9be829b64c67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd973bf5-a2e0-499f-a4af-a3d623bde3d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "03db59ff-18c0-427d-893e-97032aa8d8e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc0fc88-628b-4dbd-8590-28ec42ace4ac",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94fc7c2-e73b-4e3c-9e54-88be64de9b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdb4e26d-4f3d-490f-9c6f-76b789f7f7b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2efc576-d3d4-4b22-9876-7b08224088e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f3f0f2d-83d2-4ef7-b8fa-a38334e83586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64983220-d0a1-4080-9c5f-25549d07f72e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2def6b-63ca-44b5-9588-2f43dfc32c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad3e9984-e4e6-4e0f-a18e-45b40e1bbdb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523988a1-477f-4d9e-9316-199f5642399c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "af59b79e-96c7-42b3-a1d2-d132503fc377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e11dea-27b1-46e2-a682-fbf81aeb52bf",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f9ac40e-7996-4d20-9267-0b7a30908ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80acaf13-af6f-4a77-a26d-a1b30959b172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b345d4-ce06-47fd-94cb-cb5846e41843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb88bdf7-d327-418c-96d5-0bb3655a4060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa30dab9-f56c-41f6-884c-f6d6a6570e4f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a139fb8b-a2bd-490e-8666-043790c48117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "399f786a-2f83-4e24-bff1-8fd2ae4a6cd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c12ce4a-e356-4fee-9e52-ba7651e7a728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fa3a4abf-3916-400d-856c-848a8d7f1519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4419ad7f-9914-4c2d-8cf7-09f5bd436cca",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9742fb-c58e-4b54-aa2c-e37aefb26a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cbfe739-a628-46ea-bdfa-abbbb21af854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc511791-7300-4c6e-a48e-d3ecbd82de1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c0937b9-68c5-4b5f-bb38-638136095b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56769733-bccd-4cf7-92db-993c5cd86afa",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a1e2fc-067c-4b8a-bc0a-68655d9368eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12dadf99-140b-4bd9-b686-3012bf51f1fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b8951f-6d24-45cb-a03a-806e120849b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f18db2f-5f41-4fb9-a91d-baa5c8e6cd50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5bc5624-a021-4ad3-9702-b54d13e0d6bc",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c61ce947-7c88-411a-995a-cc119f89a973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d4f71ce-b8f2-44c2-9cd7-992cd7647b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c954709-337d-47a5-9a2b-cda710eb4fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "15e425e6-291a-4673-834b-1fefe55346ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "930f4b95-45eb-4150-b6ba-b576e85dd42b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12333e1f-16db-4ddc-9720-eb2c257bdb29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ae3110-a834-412b-bff6-efb7b2253bf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f2bfd2-edec-424a-bc54-95e17fde0892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4217c792-3185-4ba5-a0cf-80296fb347d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec08812-954b-4aa6-9f19-0e941f6471da",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b3aa13-4b77-4b41-9777-1da549169690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e71456f9-5b24-4349-b04f-fa4ad4bc996a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a140e07-bc94-4c80-8de3-d513eea4716f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9fd87c7-dcb1-4b8d-9db0-d7aaadc2e9c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f3d61df-c1c4-456c-9279-50b5757290da",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5344cf2-3ea4-4251-bbe5-f3e958b00660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82f9977c-0e41-44a4-8a2a-92626c526bba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8be3bfd-814b-4397-b4bb-dda11024afc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "bf046050-3a68-43ef-8a9a-853cb97becb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784dc7ef-66f0-4ca3-bef8-77d0288bc4df",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf4b258-1e8b-4c30-a7aa-7a923c7dd1c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d242f938-0bbd-4ef5-b94f-5fbb57b0dc29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e2c9fbf-b417-4c65-a362-e0d116de4ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c142918-73cd-46c7-b609-ce90a03c4ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69df8961-195d-46a3-be38-5ece1b1312bd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6b7cb0-2f65-40cf-a458-f4b795220cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "287f5a70-fef9-4cd3-a6c0-765bb40aa89d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3afafc55-ca3f-4b05-aae2-285b310c79ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "374e62f8-3c8f-4cca-98ba-10575d13be0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb61cca-3e7c-4fc4-addc-7daa46aa7aaf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f1b2bd-e384-4b53-9a03-f95ae7f73561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e245f34-8449-4081-a261-b41a18f3b4bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f7bf0e-c69d-405b-b326-982ab4316e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "65478c7f-1e36-4aaa-a74e-25cf7ce8bf9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd10e965-5ac6-474c-822a-de53a963c6aa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece07f90-53b3-42a7-ac16-1976a53fec18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e331fc74-b754-4185-9422-16d87d313377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b02d52-94e5-4e8d-b633-e0396c565492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "aeb6a750-ab2a-44f7-9cad-960059609594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee07ee8-8ab0-40df-9987-7c53677a4af8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb270074-341d-4215-bea5-86bc3041b2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa45524b-07c6-415e-9292-4095cdbce83d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8b95d1-6add-479c-bffa-6f71a0f081c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6fa74037-1414-4c86-a404-dc9dee0deec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d2610c-c6a6-4e72-875f-f146dc32bb9f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e7107b-9a2d-468a-9ac5-a5070c4af270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d94f0cd5-a8ca-45f2-8f9b-035ffa83c6c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5cdb579-80aa-4f1e-a31d-b04cac6b6363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "404acf46-921c-4054-a708-5c526f1c0a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a6d4670-1842-4ff6-8226-f9a98a3e778b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "579e2ed0-4e1a-4754-af94-edd9b928135e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3462310-8143-4345-ab7e-7290edaad48c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21972726-2a9e-4089-aabd-d608cfa09fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a8f65f6-6c01-44c7-99f0-018388c24280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c23c3d-d066-48c8-b658-2cfd96d2ba90",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f543e31-b75e-4b76-a970-4585baf2bcbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c55a9542-9b50-4f4c-bdd6-62091748e9ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2497b222-67e5-4f58-bd50-2da82dff4a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "48d81b72-655e-4a82-94cb-b33176c8a85a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd1bca9a-a2fc-499d-a119-e1ed09a2ad9b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09cd18bd-8a41-4118-886e-c27197245abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c613561-aab4-4073-b9f0-7fdfbeb8c10b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f0722d-096a-4969-9beb-6725f5a0adcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e231ca2-aca4-436f-bb65-8e6e1b4eeb5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ea9e45-5c9a-48ba-b63b-481853055375",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4374b9f0-9b07-42c1-a267-a2858a34ecbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58ac8bab-f032-47ea-b511-5b55a627d86a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5fbca82-7311-42a9-9017-5ce6fa012946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e68cef86-c888-435a-b650-dd67bcd2f65f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b76a853-8e11-4270-8ab1-a75e7c767d43",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5ddc17-e841-4a81-9e50-d24b851d2190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ccde712-f052-466a-9326-b5f6b290d659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a32ffd43-781b-4166-a470-3274a202fbd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "78543ffb-d4fd-48c4-975c-c1d84216902f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb77f1a4-cea9-4b3c-b31a-c7209ca2e530",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d014f5-8753-49b3-81d7-7424e132408d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14e53038-daa8-4032-a564-5e9da41c653c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "069930e2-d065-423d-a810-a31d62a267da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "19cce4dc-664d-4a39-aacc-9a6441400adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24bded75-03b6-4f3e-ba9a-491fda43e28c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a061b90c-581e-41af-9e2a-f37f5aa07a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25cfdf80-42e7-43d2-9bb9-b4c802c89e74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c3118b-449b-4d2a-8d9b-20079bf4df2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "91bb7612-c82f-49bb-b41b-87797d162f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d1124ba-1938-4227-889c-54ca6f220e85",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da7e0eca-bb75-406e-b922-f60e9049ad93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8345284-93df-4226-838c-dc601f18d8ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee934682-0140-41db-90ad-b217a46d03a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e812df0-b026-4bb2-8f33-4887cd2f74d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b2dd2b-39d2-41ea-90c0-72b1373328b7",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b22e01f-3696-4d82-a1d1-3f3d8c0aff12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9fac57c-be46-4fa4-b122-2af4178c208f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709ec905-2080-4689-9e2d-32215b0adac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f7ea3a9-aa53-4000-a1d2-623f7fbaac8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148600f8-75e9-43b5-bd32-1561e0d17d15",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0306cd95-8f8f-472f-9b54-f7203d7a19be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2e0e986-dae5-46ae-8eed-31592a0689c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0137584-e9d3-404d-b1ac-11365f10179a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a2a28e7-a163-41fd-a31a-70ef9527a742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723ab2eb-b1d5-4e8f-a38f-61ee899f3425",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c0aedf-5594-4cd6-b99e-e7828e1c5008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aea5b72-7d98-4765-b410-9509e7554fec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74933da9-17b6-4d50-be19-74c21263cdd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "65968b6c-94e5-47d4-bad3-80c57c0567b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c829c7b-a805-4d5e-94b9-e9d16213469d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "551178b3-6a3f-4fd6-af78-b14c60906951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03d16746-1cab-4048-ac3b-7aa5ef47c286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c8e99db-f2c5-4e97-bb3e-7a01a5fbe7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "110fb23b-fc97-4d90-a5bd-e1046358d956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c75937-1818-4072-bdba-3fc90897644f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01305ec3-c2d2-408b-a6b4-8d8b0b911c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a45a2cc7-1be8-4695-b779-4d5a8f2fb0d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "983bd672-2b37-485a-a91f-739c72c335c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5d85aad-f8ef-4ee4-b3c1-a0adcd6e4d15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eed8c11-c129-4592-9f06-63fdcf2c64a2",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e6e370-357d-4a7b-8b07-69dcb89c60d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa2a0e07-e167-4bc3-a3a3-7ad72d30ac15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0adf2585-d3c2-44f2-b3c4-966662854d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "42c88592-c51a-44c7-a546-0f3526c8848b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aee2cba-de45-4153-877a-4ec832aba479",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b8e53d-225f-4112-8398-b8be3b88779f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbaf9399-04b1-4eab-969c-e8db5c1dac07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880eeb25-2729-456f-9d28-d87c5774be49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a4df64c-8679-47f3-bf0c-a952083fac66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e001db-ffba-4144-8257-0476262fade3",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "260cdcc7-9a99-4c81-99f7-0444ae3d6be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74799ae6-3b8c-4815-a060-3d9d40d7269f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a30636-d041-4401-9c62-c76eb4b0324b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fc059af-82ae-4be9-a95f-1fd41d2e5323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51034cb5-0a51-490f-9333-0382aa1cc382",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9654150b-4017-4d55-b014-02f578e4c186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9149014-cfbc-4153-8fdf-4bcf588a5ede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2df62ad-0833-4ece-98f3-e0e719d57427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a4ea68e-f3a8-4d0d-b089-58a0173d674b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca51526-ba77-4577-ae0c-db2dd5cdc9d1",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e0b03d-88fd-440b-a00b-f2abf6795f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "384e1afa-8a8c-49cb-a6cb-fdc2249a9382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f14f15-8270-42d1-b52e-c7a690f25f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bfc727bb-d07b-488e-a6dc-0031104ef28b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a25497e4-49e8-42c9-b08d-34c624104014",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08be574-a6be-471b-a9c9-7fd698e2dab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34449098-3e17-47e7-acfc-606dd848eaf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8bf24d-fac4-469b-89db-59bb42333056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e04165df-d445-4311-82bc-d56ca23f32f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "757650fb-b79f-4b83-a401-0d7342bdb0a5",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ccc723-d155-47f1-8fae-03beef58ef0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b33b380-66bf-42d8-b0e9-68332149dc5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7261bb80-70d5-41d7-ac9d-9b1632a9e3fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c6c90fc-81ee-41dd-a4e9-92fe4fc84d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b64ad34-9fe0-4649-bdf2-d51b89083a1d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4921c209-5bf8-4194-8bbc-8646e6f30929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33f3a0c1-01f2-4d3f-bb29-0bee408dc9e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de6a80ae-fb68-4a04-8945-21d1ed018603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae5b6cf5-d566-443e-9bd1-06597678b567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2606113b-4a82-4242-aa64-9d1aa8c35208",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5defe3e9-14b5-447f-acac-23f561dc0a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52b08817-5e20-452e-855e-30a3cfe1794c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0981bd64-b842-43ad-b03c-7de5cb61b807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a0a7ea4-f442-4a9b-8957-fd1efb98abd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee91823-cb2d-439a-ae11-a74045eb57f9",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5776b26-09cc-4189-9882-9d06d4c87bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "327404ea-014e-4673-82fb-1ffb2128fe31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b8f1e5c-d29b-4b22-b090-26b3da44d0bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "228386cd-04a3-4298-b940-8aa406bb2975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1476a508-463f-40e3-9e7c-a5778b876049",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb757f2-beaa-47a8-ad5a-980b18d48ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88f72a4c-7bd3-4637-839d-8d62555a1926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05705afe-7fb5-4a01-9143-01503383f88e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa0766c2-80ff-45dd-b602-82e2d33999a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0186963d-2ec7-48c8-8090-cd64df116f3a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea4ee3c5-7fe4-4fda-962a-168a46327305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c88bde7-2743-42fd-bae5-809a4d96366e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85283d1-c9b4-429d-8087-b5c93a4336bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "988ca66c-fca3-4bfa-9b37-df79019ba152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f922ee-2ee0-4616-8644-765018f1e514",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "924a2aec-220f-4faa-b1b6-862a09ccfb43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c3ae348-d7e9-48e5-87f8-bdef82448982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a350e7-980b-4b0d-ac55-9f5c2fed82ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "66605dc4-2d23-4e11-8bea-70e9bd8eca75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4073dfe-d845-4fc8-a575-d694c8321053",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f19ff82-80cc-4e89-b4ec-df74be6ef5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3bfc69c-9503-4122-b9b7-3305f9cee7ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb193785-3a63-447e-96bf-0a2ddbe4718a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4dcba9a-50da-4f28-a089-f6857f1c8ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60dcdad0-ad7f-460a-b7cd-ed29071d63d0",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8fba73-7f55-437e-aa69-2e48ea61aa5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c491f5f0-f101-43b8-b800-57d6ab83de41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d989ff44-9aa8-4ac3-9a07-6e5b216fc3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dfb7e94d-cca1-487f-a1ea-2604b2de9ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b81ddf2-2361-48a3-b379-ce590125956b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f232d7d3-95dd-4a38-860a-944585467682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbbee47e-c758-4087-8b7e-14ecc597172d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95882e4-8426-4831-a440-8395fa3713e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "20cf5453-ee61-42fd-9890-66a083f9720f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2609fb-0b89-4138-bd20-20b72c8811ba",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b95ee2-8eec-48a2-abad-6b6379d47615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "23af7737-adb0-4d7a-bd91-2df516dc1026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57aabea1-270a-44e5-a51a-6ea0a7c5e778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "535c4110-7e78-4401-a00c-5c4678b09514"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "19c93a7d-91e0-4c6a-8161-a475da1f45cc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "94c0745a-06a8-47c0-8ee7-c102d5680259",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c03bb66-71f3-45d5-814b-7a01d8e8918b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0da9a1b1-0dca-4e39-bf02-f403df440fad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "003e62b0-73c6-4a23-8904-8323db9575c3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41843ad4-f322-4a9c-b538-defbcab5459f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07ae4b0d-b7e4-4c47-bedc-606959de7cdd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae3d9603-1604-4b2f-a96f-51540b197111"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3262bf1d-43ba-46dd-9520-5091e41c1d16",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ec579cf-a641-469d-b59f-6f3ba922a61f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7cd81a70-7cfd-4c9b-b923-d19e1def398e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "96f0c1ce-5e91-4869-acbb-270a01a5a5b9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7a5739ec-19c0-4464-813c-f11edf931d14",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fb9ed9f9-86ed-46c2-adb3-b95ed422920a"
                }
              }
            ]
          },
          {
            "id": "43e406d1-7f9a-4d43-abb7-746075fee169",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4582521e-fad8-4727-8c64-d04b7f462510",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "172dc969-4bc8-45b4-b12f-94febc37ee87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c1b1c823-65cd-40c5-a504-ffd9db24738d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "44e9ae62-0ff2-4338-977d-2bd8d2f9679f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "87eb8949-65c4-4f08-abbd-ab3cf3878f98"
                    }
                  }
                ]
              },
              {
                "id": "49c90448-f92d-4463-be09-20a7fbbf384e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "75d9dc90-2830-45fe-be83-669f0465b245",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cd088db5-0e28-4010-8731-b7b4180de9f8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df0a5432-b68a-42ba-8888-31231d6c5afd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "317bf935-1a2d-4f15-8964-c61928a7e437"
                    }
                  }
                ]
              },
              {
                "id": "c9a44bce-b45a-47af-9e98-3a7b594f3fd7",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7797f4a5-8340-416c-a601-c354a474d018",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "51dd505f-c249-4fc0-9f0d-b20a09a3770d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "957ba809-cba9-49fa-8dca-9feead31e53c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f6231f24-ee45-4d98-8d79-8337849719d0"
                    }
                  }
                ]
              },
              {
                "id": "99fec9f1-5b19-4318-8703-57763cfd0357",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "03167444-01ae-46f6-9f89-8bc062d96484",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9bdf3da2-c1fe-4fcd-8123-c6c33044fb71"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86ab7228-0d7e-423b-bace-8be901005977",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7c09b12a-763f-405d-bf94-4e7d38a8c26e"
                    }
                  }
                ]
              },
              {
                "id": "ce283d59-7d41-4082-9fe6-650c9b4c292e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a28b451c-9273-41f6-b6ed-125e04ae3540",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ee09cc04-6a3a-45ad-b4da-32bd074e103a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62aacb4c-2243-438b-91fc-01c31efe3e80",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b6794855-0bdb-4f67-a74e-9bab27efb78d"
                    }
                  }
                ]
              },
              {
                "id": "eb12facf-5d31-48a4-b598-b07c2e6d135b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6b74668-a2b2-47df-b94b-a1c08ea98816",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d44756f6-237e-42e8-9104-fb52e49f098c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8381caf-eea4-4dd9-b621-06eab8116965",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d3da1eb3-48d0-4dee-9060-55bb53476ca2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b9dfb988-04aa-4877-b70c-60d23ec4d5fc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "673d8861-9447-4a0b-9b01-1f10ec48b016"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8ed388cf-8fec-4a0a-9b88-4c4579b52549",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "702a33ab-29ce-4b27-bc97-543722697446"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e60b4352-6029-4802-aac9-f41074dbda0c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b4ad0df7-6638-4c09-a65b-7d3a4c0db490"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f87a8d49-6295-4807-b449-8ddb24f4e2d7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f4f6b5b2-d5e5-4545-b09b-6b052e6f020d"
            }
          }
        ]
      },
      {
        "id": "5b492202-176b-4b0e-8356-ad8fb79dd5a3",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "54948992-0b9c-4c18-84ad-d81ba49e4bfa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7825cd51-6a30-42bf-bf0d-8d189d4c3de4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4e58751f-7b9f-456b-a7ca-f651557a82d7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5608623f-a46c-49d3-9dab-88a0b27052fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95c80614-cca8-4e74-a3a9-cf8ba9a39ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1566bd-f050-4415-b9da-49858981f139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "846476c8-46b4-4a40-ae60-ead9736944f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ba4bfd-3f52-4fe2-9f39-b337b4197268",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "850d454d-c39f-49db-a4a9-1b7f7a71bc87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "393a16aa-072f-4df1-b77f-3a65db4ba773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f119bf1-2870-4058-b4f7-42c460b3d0dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e3e1def-8893-4026-98e6-b28125ba97ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "793825a3-73c9-4195-8b55-4e1905537c49",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38040eb4-0384-4802-b953-c7a952daac09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2ef5090-600d-49f5-9c73-50ceece0b82c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6ad488-d342-4d16-9fa4-11b60632f319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "83de237d-4c32-4780-ba86-2e7213d17a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4062e5-23d2-4ebf-89f4-5858cd6585fa",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e1f199-cfbc-459a-ba73-54b13e496404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41d2175f-698c-4c39-945e-2c3218d5467a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696141ff-8bdc-429b-a666-4f639834f032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbb615b6-c0d4-4fec-9131-5b7d9ec07b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2296220-ffff-4806-9b69-918c000eb309",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "903c83a6-9769-42d2-9032-5c23a2cc053e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c80b16d0-89a1-4716-973c-78d4fbeb45e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3857e425-c921-4879-acdc-ba6950bab80c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "28811180-b4b5-4c92-a4ee-cdcdbf315a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb73319-2879-4402-a1bd-ce17bdb19c73",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1189d1-74c5-433b-a962-41eb8e542ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c213d3ba-2aaa-4437-852b-0dc083e2bab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa1f3b44-d210-4b28-869a-71e7c9837570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c1067b0-ae9b-4955-be9a-86b52634a6a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8055e5-d67e-4b6d-a7d9-b7baba6a9560",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc055780-94d7-4c02-a176-449644335bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de7f2cca-92e9-4b0d-a5b0-e3780602e638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26840f4a-8269-4605-bc1c-9cf90a2d49f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d36ea7ff-b4a8-4d06-a4b0-0c0ab1266227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69344335-8b90-4fad-a5d2-3d44e6733075",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9d15b4-11fc-44df-bf68-6c14ff4de1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5469c67-acc9-4c19-bbcc-6a440e64258a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec0fdac-25a2-4215-862e-87d9694ca82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "94286903-05e1-4618-b0b2-398f31adca6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02de5f1b-2386-40cc-9144-585f8f6189c5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58ba94c-b158-4592-a8d2-94bdd4609ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fc723e3-3f87-438f-9fae-c8eecf623b81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b28590e2-df4b-4ca1-9408-228f0dd42bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "20a2b516-cd0a-4a4e-a5e6-fffbc5bb9790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fbbdd5a-3150-479d-82c4-c81d3a7f8147",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56069ea8-c289-4644-b1da-d89fb1c74aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4008af7-66fb-4cd5-bd9d-c672ab5154b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d28b30-37bf-417b-b918-f7f0b0439df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80d02637-5808-413c-bf1b-413399d82ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c59bc183-9dc2-4bcb-b797-232f1fad0655",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c168c7-a613-47c1-9b76-0aacb7158b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b35976cc-8c95-4364-873b-a42189c35fbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d00f837-ac3a-4660-bab0-8dd65e920d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "318ef245-dbdb-489a-8cb4-e4c0c18f4b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "068dfdcd-9736-4ddb-83a5-9000acad2f11",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3cded24-e997-4338-9dce-c045cb65ac30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3690570-9e87-4f06-b402-9cbd10a4015b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "210f30b6-327c-4781-9061-c14a94efc220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ab17f865-3b11-4fab-a61f-54041a76776d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29aa06e1-b384-42db-b107-99a26b8be262",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "094bde3e-dd2f-4e8e-b7fb-c6ce4e0ffb59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d4f8e74-fb5f-4373-b75c-d0f939f6fc76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f2c5768-99a0-4742-8aaa-a129b439a08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fe59a79-1e7d-4fa3-831f-3c94d14786ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36bcf6ce-676e-429f-b334-f4fb3e683e1a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa049107-b094-4967-8874-d227d2ad4eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "325a235b-ac92-4f92-bfce-43be8cf280a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1320e102-8693-4d6e-ad08-e4cc91fae4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4b29bcc-175a-4310-a52c-e673b34dff22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b55cabec-e116-4710-9d80-916c8bb831ad",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7411a2-5f78-4b5d-9454-c208bb7cf4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "262c9733-3972-4d8f-ad5c-678accb07055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb2f959e-2f7e-4fba-94d4-322b5b0e6d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2a47ba2-99ce-49be-8cec-ea5b0bd7b197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c33c90-e755-40c5-87e1-41850a43aecd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d5127b-8e76-4b98-afe0-f2935d69e35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd9c595f-a386-4c3e-8799-deade07f0cd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28cf7d67-c66c-43c5-84fb-99b3469d6d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "75301069-f4ba-46b8-a98b-4119315c5ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b50dd11-6b10-4207-a830-dc8388e2c401",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb02a75f-34cb-44ff-af2e-53d05218f129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d1e6f5f-06d2-4f2a-bc5e-d7ee87155486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a4b665a-a758-4f33-88fe-27cf6bad2f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7afc35e6-d169-44ae-9a42-1b6ca3cf84f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8453bcf3-feff-42d4-9eb9-f0ee5c8b87a7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2769b0c-0cfa-4e9d-bf82-28770b4b63fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0e6c3d7-cbd2-4f74-9f6f-d31f6f34f706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc8db5b-bcd9-471d-9f02-ac08760ec11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8df34f1f-d04b-4518-b196-43717d7d60d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5bf4ba-32c8-4fc6-af0c-49f6073b29ec",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "655e23ef-c790-49c8-83bb-92759255d3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75c0053c-827b-45a0-a3ed-00dc4c394864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf84238-6312-4ebd-9f71-9705838f2789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d4f4972-fa69-44c2-81f7-568a8bee8192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b3aa21-6896-44e6-96d1-d1fd37011b8e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d201fd1-3055-4442-a146-7732dd93c070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b075eec-54eb-4b08-8abc-73f2657f2d7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30fabf67-1375-4f7c-b173-a2f4d1f26e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5acb6990-bdf1-4d8f-9dd7-f35b20b94670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe0921e-e9be-4ae8-966a-209989c640bf",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7346aa74-3bd1-4ee2-a79d-8a2413cfb438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f975e710-b93a-4412-bd60-f613d308e2d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7b1b1b-eb49-45ef-9b02-e0df4974ff93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3986023e-8318-4a70-89d7-39c0419f367f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d242237b-d097-4b3a-a500-513a5093da57",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "796e79d5-3ed1-4a23-9f1c-702ca2083d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e5d9356-fad9-4903-bbee-4426c3c9dbbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c19aebf-f1a5-4d9e-8f10-9602176f790f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a7f9c06-17b4-4bfc-87c4-17087ea1aa72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f73d15b-811b-4802-b6bf-c7c4e52edc18",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1225a2-44cd-40e0-be91-1c59a678419c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6939dde8-9e46-42a3-ab50-5142779f3c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6930f0f-2325-4c22-b49c-0b861a8738fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c7e8f28-7a2c-434c-badc-2c542c438d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2f86f5-2422-4d10-9c42-28b2f19b21da",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "499b974f-d72f-4b03-8841-6cd27ff85e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a28aa57d-46de-4053-aacc-f32cc4c1e184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5dd2216-a812-4109-8d4b-c5d02625adbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "393d8895-7550-4172-8af5-8fe8d8802530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86cce0cb-43bc-4f94-bc96-f4230c25e64a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9818836-0061-4af3-ab97-0a2f482edde0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac083b74-3f4b-421e-96d4-1316ca64cfa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3c4143-54ae-4ce9-85e6-854781aafe90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "442660c5-f1de-4b58-97d5-0744b8322d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291c86a4-a0d1-452a-976f-3436e0f6039b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e4a0a80-07b3-4921-890e-0f689c6ef8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e93bfba-e622-4501-ab02-a7a16e07098c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467ddf0c-d360-40f1-a6c2-b00f4e8e67c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f85c5c70-7054-410e-ba14-ba18a1cc4197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3826c116-1e89-4349-bd57-d28074c152c5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9ab408-8b8e-4181-aee1-c7725d872b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4311faf-6097-4955-847d-09e17822cf44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a8477b5-5c08-478c-9cbc-3add9de90391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d2eeced-059a-4eac-920b-dc78f4e4fed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbee7140-a367-46e4-a4ec-76b3a3badbaa",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b2b2b7-438c-459f-8bc5-19c85e5a74f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e25e4f64-4b4a-4d8c-a12f-1fde97dcdaea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7502dae-5808-43b4-9809-67c7e610f40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8915dac-1ffd-47fa-96ba-1e0b96070548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92513433-1db1-4df0-ae29-95c639c59c57",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "114a30da-3f15-423c-8042-00da67ec80ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef595b21-90b8-41ec-8098-a80921aaea6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da86ac04-ec9b-411d-840d-1a73f62c8f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7a3500d-0cb3-4a8c-841c-9a5dc1204f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd62e73-22de-4a10-8dd4-96f8eeed74a7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd738ed-b0db-425e-87be-09c6d09d8e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9745b84-5708-4ee9-a460-40ce43aa2505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ddf423-9264-4e47-bbe1-8b8df024a195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2d13031-21dd-4ad1-86c2-65de5f68eaee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a901d8e6-1643-4d22-943b-b7137f5ec589",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "483f2d46-d330-4e28-b762-88f39b005955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f309435-c744-4737-ab21-bf992853896e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc51a8a7-5e63-415a-b6ac-cfd4fca6c6c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf9a817e-938f-486f-8b59-44d47c12c36e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c2011c3-109d-43b6-8cda-716a0ee91761",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc19a13-f6e8-48e6-b427-97855b9890a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef70903-c971-4774-a024-4488e1c31700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f1c5f3-04a3-4a04-b48c-1ee29e0600cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e72167e2-1b94-4e94-9b97-1f1e8be3c232"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "49083951-7fd7-4c94-967f-db6e626b3552",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c980196d-7865-456a-80ed-fff58d75f0b7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3830d9de-0a31-42d5-b4ee-b72558c67b3c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bdae5386-5ab2-433a-9411-2cbe563f61d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b5f5094-b061-4049-b3d4-bb759588a1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35a9ef74-c6e9-4c1b-af83-cd0543c313d6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d59b0d9a-c5c3-4bcd-b651-eb8785fbec8e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c42e83f-2156-4113-b780-49f5901865da"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f767104-427d-40dc-95dd-f5dbb12b1304",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd076325-6284-4ee5-a42a-d3d8b8fc9169"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "db8f9a1b-1fb6-4608-9056-63e02ba4825e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d797e043-444d-444d-81d9-9a5aa09fd756"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "42bb0272-a651-4a1f-ab56-e356f85fe892",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dad63367-bbd9-4cac-ba61-9311233d6a70"
            }
          }
        ]
      },
      {
        "id": "5df9e4ff-c071-47f4-90c5-920753c6591c",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "cf40c8d6-2c61-4720-9166-521e6fd50e4e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8849eb69-2b24-4266-a9f5-a6236fafe7e8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c1a239d8-96da-458c-81c0-46cf79ebc15d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe6162f-c446-42ae-8f89-8f31707872a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc34b3e9-8d43-4704-9fd3-8a0768a5759c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e5adee-6f2c-4138-a5a9-b0b233a92f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5e62554-d477-42c0-9838-9c53574a3ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "548d260f-1af8-432f-9b12-a9b58af28b70",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e300457d-89ac-4e67-ab90-37a703f25904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d18c5b-8769-48e7-9f07-262f7e15157a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a581313-f800-48fd-8e39-951b33244765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "28b63af9-20d9-41d6-8562-466786579c3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9e7e62-3645-4c10-bb9f-1231fb0c0cda",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5127532-eaee-43b9-a395-f7b1aa8079f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0491cf1-6683-4351-bd72-419e447aff2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06b9a38-d410-46f7-ba38-163df17bb66f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "362c7587-1a75-48e0-bc70-2ef233f0c16d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7bc4ce3-f9a7-438a-8ab6-68717cff408a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c0bcf07-9ff4-415e-a5e1-6154a950d15d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "720116db-5f5f-4b34-a159-01ea3f5ce983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44a7610-28ae-4da6-9596-9f8d6849458a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48bb3e7b-b0ed-4d31-9ed0-2a8e05e2b881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac15ff3-4e64-4884-82ed-3cda55ce8fa2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e20130-5ea0-482a-bbee-1bd511ff9386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6268f4f7-653a-480a-b4d4-15ac4c6009b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b834749-aea1-4775-b0de-6b3f35c38a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "687243ba-0c1c-425b-aaef-9809ce60f9bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd01dc0-908e-4179-8a0a-194a12a262e6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa64dbb6-a059-4b83-bf23-0c373c3d5406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00a95e95-e863-4d00-95df-17317cd5629b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb313543-4a03-49ed-abc1-7e6a34ad215d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b4114e-4188-4727-80ae-fa7928d672b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a26a1af-657a-43e1-baaa-af3c13f9b77b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24a014e-7046-47ee-81b4-6761439b41a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc839ad2-bc6d-4d88-8e57-fb7f484c5a9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0077d105-a973-4c74-8e00-8fc0c5d84aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "678ab2e8-3cba-4447-8765-432957944539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a1ecee-55f1-4ebb-8369-9ff8a28faa9e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c9cc560-7cfc-4ea2-996e-814b70d2a1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20721a65-cc97-41d4-8c1d-06e53391f46a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51adc004-7d0b-4665-b0ab-c633b42cacdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5238d16-5e4a-4921-b45a-ae0e8be25fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e98650-0c4e-422a-b791-b270b0757dd4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "105ea6b1-1bed-42d6-a64a-c2264b1f05b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfe3842c-c79b-4980-af57-6ec84380ec68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6205b0bb-fcd3-432a-bb96-c0004ef0701d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b3acde1-7810-4755-b92b-3b9c66703742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1751d3a0-e8e4-41aa-aae8-3b1c75669e13",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3883734-ed8d-4ea3-b68f-2729aacda1a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d816a95-c1bf-45a5-bd2d-1dc0f7fda0d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376d54c3-210d-46d0-a7d0-1fbcc74b0cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e412c72-bf32-40a9-a65a-d4fe2ab3d240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "323bb31e-8279-48c9-a149-d6601287d0f8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3302c8-74c4-4038-af32-1daef26aa170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "125aa3b8-5941-449b-a4cb-3381f33b0898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b118fea3-37a8-4ca1-9c01-e5327614c615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0564a679-74a5-4659-a90c-e0036a5efd26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a5388a-ef95-490d-9d05-044a47a0d80d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1f5a14-134c-4867-b91a-f491108e81ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "161e8cb3-7ad4-497b-858c-30c715e67610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555dd15b-370d-4fd4-a1d1-6e74c86230bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a2953c7b-7374-4bc2-b3d2-4dd8af292f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61afc385-3ca8-4156-8223-1754ac72f7a9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a49878-1677-41d6-b0bc-9ebbabc5175d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc3f4560-133b-47c3-a71f-4717071573bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a2dd28-3e14-42b4-8a9e-e5c39971d7fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b68a65b-3032-47c5-888a-f579a3d847f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a1c58e-bfde-4f5b-a505-af6cf12fedcd",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c08b02f-3af2-4d37-af28-35fdd51398c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05d4586c-cbde-41ed-8c3d-f120f3fff35a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "649e4854-6793-4d6a-a974-d0ce8f5607e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "10665035-31bc-4a67-923b-6e7b0f642fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a4981f-387f-4962-bded-dcc178d5f013",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ce3a9b-c15e-4e83-9fc8-8a7fc064ce4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eab4164-75b3-4dda-a104-961dd69796d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e87d42-6f80-4248-a9c4-6eea3f8b7cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7f49a18-d37d-4780-9d7f-8e71a6db50ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f770992-7e87-4dac-a503-386da45bfe39",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb151c4-a9e8-41e7-afe0-6d6fb1bd5be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "280e604f-8c0b-4bf4-b85a-67f713f33ecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39fa7584-fddd-480c-bbf1-57a678b70d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "059098d6-f6c0-4724-8fec-c0f89c191891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34c16f9-6a7d-4603-a3a5-5f920d1f62c0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e80c9dcf-7ad1-439a-bf56-484e36dc7420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1e68c27-7c33-40de-8773-164d67f4eead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59aeca92-0e42-43d6-a645-d13a54e1703b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "128b6422-ec59-4d91-aa4e-3e09c81c0982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede097fb-13b5-495b-81c0-d2af6d0ad3d7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f42c62-7d7b-4508-8b47-99ded4755c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21122851-d121-431b-a884-3ec671dd3b9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222d96c3-1524-49b2-9691-98fecdef21d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f400d15c-b1a4-418a-a3d4-af3d41fa2250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1318c7d8-0708-4636-be1e-0e55224ee4f0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d39e3c7d-036b-4c5e-b274-a0d7143952f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9939a304-1c74-4c82-93c8-e4f9ad3f25f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d62952d-84bf-43b2-9b9e-ed5c0953fc5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0e94a73-8c29-4134-86f7-5be1f41004d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d88395-1147-408b-b315-936289f9a64c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff8d19f-95f5-4d9c-be59-1e29e5d879af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81be8630-bcf2-40f9-822d-7f49d2ea9f33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62994c15-2a04-4462-855e-3ce1f484ec80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fae433df-a918-486e-9a67-363b3be2c5d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d98a11-6901-456b-bc94-280a03b8345c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb38392-9eab-480e-92e6-f133c190c601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "336976b0-16bf-43e6-961d-77159fae8c63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ffce283-16ed-41b4-b5ba-f8289d936228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e50d3810-e4c1-4dec-b489-c91e6ac087e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a526cb7b-fbae-48ce-a544-6d9c45a34e57",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e0dfaf8-ddc2-48df-bafc-1cfe8f3ac730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "659a63d3-9396-478f-be19-1e260153ca0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7fd780a-72f4-49dd-857a-5101387c5881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "252fed9c-792f-465d-9593-a3b88c1ec52d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba3b104-3ac6-41a6-a791-3ddff7db3d77",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc97e38-99b7-4662-bdd2-7290a6faa4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83837c74-6a48-45cf-8c6e-d05e50291955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413a0fd0-3329-442e-9239-7b7d03a9e63c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90ae4910-1f40-4850-9503-48767bd9e52c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9632b5e-7c6e-42d5-88af-9fb96f7f9af3",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6226c07-2e72-4660-98b4-7cd2d7d2d429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "106c8894-4b28-435a-8c60-c57dd4b112f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64baea47-2563-44d4-b216-0640de3bd381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e574ad0c-4dc8-40c5-bb01-6835a254a121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad77ffd-c600-4639-9ca3-89a69fb451b8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6168d02a-d4c5-403a-b5b7-0fa5348b48ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c20e003e-3364-412c-a67e-01e5b066daca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c9bb49-d138-4d22-a0c9-638cb474b0db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "159512da-ad48-472f-83af-1dd060c55234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c942f5-8823-46cb-bf69-fdb519cb08c1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77f53ec-b311-4eb1-9dc1-b9c9879ea099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4e7ad2b-c98a-48ff-ab77-67488e70a6ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a7bd41-5b18-4700-9da0-202ef2623875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca620064-2d1d-4cfa-b233-90da0b2f13d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c7aebaa-aefc-4842-8ca3-01f8d6859dd8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c91d67-e6c8-4550-9900-55d76ac1f4a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ddab1ca-d129-4818-abd7-30bf82a98df4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce5b18d-d35e-4d48-8aec-050f0f6dd280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c543b36-272d-4fb6-9cab-0b275c580a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3cf75c6-ccb6-4797-80dd-ab67d8c7d2c5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11461d9a-cd56-4be4-b533-4ab365e9fc6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cdb9cf4-2adc-4395-b141-9a0b65e3bc92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891a7988-fdb4-4bf6-92da-479bf430ad29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f1c1eeb-44b5-4fb6-9339-67df4b0bfd5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563672e2-8778-47a3-bf2c-ffeb84138101",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ea00d5-5852-44a8-8df3-2ad1efc2ec80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca4cbffe-d426-4322-9d50-faca9f74375a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f71b64-3e48-4704-a4cb-a9c012631e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ad0ceff-b8dc-4ba0-8cb9-10381606ea5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dacf565-628b-4ff2-9637-4904d8057e4f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dbc761d-9b99-42a2-932e-09dd3cc4b875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "875b1224-12af-4efb-a286-1b80edefe7a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df24e851-2716-4591-b108-413669888626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1a3e822-9bcf-4c56-bb00-73cd4832a640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89448206-6b79-4021-96bf-9ecfd0a1eee9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53194560-d255-4223-abbd-6943755d55c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "090b7d3e-9ba3-4ea8-911b-7c0604000266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c77206d-56dd-43e0-8ca4-8893c32db4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c09f3619-f567-41b4-8065-6cec498f6b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5a8870-d7b5-47ae-b165-7935b5a2e4bb",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10660a88-d6ef-4343-825a-27beaade7c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "472368f3-6924-4452-9b3b-5ea156362b5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12eac6b1-f34e-4e8f-adaa-fee6c8276b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c56b3e93-e1e4-40b3-beb1-e1823d846524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bce6b83-0cc1-4c60-9690-3ad74665b29a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c979a9e-cb83-4218-ac0f-e5b43329d7f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfe6f5f4-caad-49c0-91bf-fa1377e5580b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523bfec8-8c44-4c5e-8fb5-83d0289d2e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b0ab423-4894-4800-bd18-e7246b58959f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35897fcf-e492-401b-89b7-c0a0988c04ba",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e41c2b-4ed7-4597-b8f3-140bd29e47bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aa342c7-95f2-45e8-b63b-7c6c585c14ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "522a6906-4565-46f5-8c58-522a1d23b223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d8a46fe-7f33-4c63-a9d2-2d92188e3a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46181742-1e92-48e7-b182-b40374b8cfe5",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af76307-0819-4e94-9ba9-4c7505311393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ef0a0ac-3429-4fde-8464-2eb6e5f29150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c20ba4-afe5-4d4b-8593-04bf13c23f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2288d0ff-2443-46bd-af1e-838e8a5431ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ad0ee4-459a-4c5c-93f0-e649085e5fae",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bac69df-ae53-4c34-b380-98596408bfd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6b2ce01-21a2-41ec-820a-eeb68177d7c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff53979-98c9-4661-b547-4e09c87ef7a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fdebbb5-e92d-4d43-8ba5-690c9e68d948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acbef7fb-1534-41d2-ba6b-6730df9de04d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c465e9-28dd-4d06-87c3-74210c031e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bed953e6-b875-4e1a-8010-38e76500f371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89dad54d-db8c-45bb-bdab-e1a9eccd4284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8bc1888-28f5-43a9-a3ac-3f05248e7504"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c8b40a61-48cc-4d40-a437-ef9906ec2f26",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3a9dedd8-015f-440d-8d20-1976cefe6b15",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296636f2-5823-47a7-8cac-292dd5287adf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ad37aab7-45d0-49ec-b875-26860bb84d2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c8142d9-2b50-4560-9a38-8fce8c633083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "98303e2b-e36b-4200-b9ee-0783002a73b5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e8e71b9-cc3c-4697-90a2-309ee41ee487",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7089c6e-0efa-42e5-9b10-7a4028e273a2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ecd85895-26a1-40a9-bef7-1d35e7221fcc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "010ce7b0-292a-4ea8-9d2e-ff3eb0c4c7aa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f874c1ff-c36f-45c7-88eb-9fd364b4b7a6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "88cad865-9be7-455b-a7bd-c1061ba89da5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d2b23c9f-cdae-4a59-af83-c6af6fa3cf87",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "632c5e3f-5060-4357-87cb-edf09c187797"
            }
          }
        ]
      },
      {
        "id": "b6618d9d-70c0-4a7a-8db4-37ab0665e2c7",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "649cbda8-37bc-419d-b0e1-57d630279fcf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "898e3c3a-cc5b-4ffe-bb21-a8d07d26b85f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6350ff06-f55d-4455-84d7-aea4112a6e4f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a40c3e-2c9d-4bfc-9884-d5a886fef738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ba25204-4794-4f0e-bdde-d04469810e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34a8653-140f-4be6-b419-d76e7c10c548",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4e5357-f669-40d3-b1a8-f7e1a5acd5c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f5cf5a-3a55-46ee-a7b1-1083d84749b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17e21e7-5f64-4dd6-a1cf-3efc1df782f8",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed3254c-04a3-449c-8875-409da61868be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "651461e7-b3fa-482b-ad06-9910f0bfb064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ead07a1-1868-44a9-b4af-6a7988e7a4b2",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47bb1c73-de65-4bef-bec5-fd3b318435b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49bd0422-ba21-44fb-a4c3-7eb693783784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f72158c-c67f-418a-96da-6b8e8b87070e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "311f9729-035b-4105-9c8b-d8b9be0a74a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ca1e6c5-2dd6-4ecf-8472-e110d9149ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f4b44f-5633-4bec-b359-2cc2d69e33db",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f46c2f6-7f5f-421d-93b6-c8fe4f0d85fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76385721-d46e-4393-9c3b-bce78debff5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2dfcf23-231a-4697-b78d-2338620b1ab2",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e2c445f-aebf-426c-8a95-ce8efbaeb77f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aea42b62-1325-417e-a359-864c1c884959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea138a8-88c5-4aef-9abd-a0aaaa82e594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd134e6c-e83f-4db7-98ba-8b53840c3f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff460c4-c3c8-43c4-95fc-4c6848a6ccfd",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7925d1d-1945-4018-b122-632cd087558a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5d57c6a-5704-44f2-8025-a794def830b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e8ea83-76f2-4eba-9290-4edfb868525e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b537a828-e394-4c37-9405-f051d6590dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44aeadc5-3ec5-4898-b0f5-67321f449246",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5fc95e4-0c7a-4220-873c-b13d49357b0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e84f512e-4298-464c-8f93-deb7406b9aba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f79b4bc-ffb5-4549-9ee4-91b4be757bf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8733233d-0d23-419e-8ec4-624a39cd4b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a152fd-2ee7-4153-a8fc-919debd29047",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ad01f9-90b7-4c28-8a6b-5bc1f87e70d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "597b5fe6-47c1-4b88-b316-20412659cecc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "582399d5-3757-41d4-ae16-1dab7defeba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42425854-95c8-4874-b911-260bfc78a0ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739109c6-0bb4-4304-84ae-0c761ad87539",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8464c340-d137-4f22-b0f9-d50194b7e78b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e11e8518-63e4-4e08-b883-96d15a33d693"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14060ad6-828e-4a0d-9474-3d168efa9a8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eb35a9a-b94b-4e0f-bc05-2c6f97d621b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0526a735-a31b-48b4-abb0-af6d4e2b70bb",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5557ed38-3665-4c5e-848a-becb10b76304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7500c4f-046e-42fd-9eed-fa5d61042a7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a766dcc-d9b4-4401-85f7-2d8a85580b52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74d52e17-4a4e-466a-94f6-669d65afb3e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31630d0b-45be-432b-a2d4-71125af4e82f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f098e718-8057-46e0-b27b-4d40a7689074",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d55a5f81-3f2d-4db5-8c90-24827e7b1a96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6cc617-c29f-4718-8c2d-8b40ac0e25b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dcc73f8-5a07-41a1-8847-5a18711afa81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1980dd0-e461-4b1d-b439-7aa974e97d41",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "572d8b99-93d4-4846-8156-f70e8a7f308a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d2ac0b0-76c3-493b-b31b-f546189f7ec9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5604e2a4-15c5-482f-ba21-74835a26de99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84512701-b627-4022-bffc-ec36d7fc98c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121fb1d7-aa98-4701-8af3-aef3c3079f13",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f01d86-f8ff-4434-a95b-f89b8ad82c85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "940edc35-ac77-43fc-9772-336a904b2739"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42b7185-5d9c-4dc2-a2ea-f5639856d306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e026309e-90f4-4b70-995a-c6c69f4d0c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f982fd78-c296-4708-8164-3012ed2f072c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "316d6105-81d9-4f16-b93e-d2b17a5ebc32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75a4c856-af74-487b-adb6-31be0bfe0797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c25ea6-92ef-4d55-9463-7afe6fbe2516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26401872-8325-49cf-a31b-0434646c950e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2849ca6-4adb-4302-bb70-483c53c72736",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4b0530-d95c-4ac2-ba30-50c4c163a76e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "758e4bfb-763d-4035-81e4-511288287721"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7972dae-3715-48fe-b4bc-2608e9b3289d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b4462d8-68e6-4570-9d38-0ef9f277f83d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a61c562d-6820-44e3-899e-b412530bf982",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a3531c-7271-4871-a5ae-f45c6980fdaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21ce9b87-ed4d-4b71-948e-4029c42efaa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5851ad7a-503d-4720-bef8-403f7c6419ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65683805-4800-454c-9168-466d999bdeec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd268213-633d-4a1e-8bfa-1c91e8e0d0ba",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ceb875-35e4-4c86-9fa8-441fad96b985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a220e1f5-79e7-4cdf-b4c2-cca5ce876cc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d610104-3732-4fe9-8f10-c2717e0fbe1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66e687f7-4326-43d1-b435-0380ca8beb28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc32dfb-da4a-464f-aa71-df8e38b15ccc",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e13bac6-18f5-48fc-9bc4-3246bab1dcff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22bfa1a9-a8fd-41f6-aa3b-8d73cea3f565"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4df0093-ad35-4e32-a3cd-d4422103c4d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10c98a59-b791-491d-a28d-ff5dd4d536fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfbc1f8a-500c-434c-b316-7d20b231687f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0a4987-6d3d-463e-9eac-4b4acb61dc0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58bcedde-9ec7-4c9d-9cf9-2ce4024a14dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59df5e9d-b8e3-479c-9a86-2c5a5725f053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfb107ad-c589-4c81-8659-142c3b001ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31dcd326-d55e-4e4d-8a71-a045671f5023",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7db8e95-c841-467b-b454-92ec2e383353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "306afef9-d88b-4bd7-869e-94e94732b5c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd4d867-cddf-48f3-ace6-12f9f8f329f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b8d8f57-ea72-4184-93a8-6191fc91ef79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e8e24ec-34b9-4608-a26e-b172bacb1249",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0025f05b-3e65-480c-b3ea-589668ca7ccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfc41352-e6ae-4b41-ac38-62254a9ef138"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d079e0b4-b200-4d55-8ce4-3fa9f98b211f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97160f7d-3362-48b6-864a-f7d69d048c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cce8f89-3b93-497e-a6ca-feeed8586927",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dad7c6b-5860-4349-8268-bc06fac3359a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5141c9e7-9c1d-447d-952e-3c00a08a4fcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1a0a7c-934f-4389-ac23-cfa77424651b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5501e4d7-23b1-466e-b635-4a53f4bfcfd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7004dc44-833e-4293-92ac-3668e8a15171",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a7a0035-ac37-49f7-a5f9-b91ef485e15b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a772019c-6bcb-4b23-9659-5a490182ff69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e8ee38b-c75b-4863-b17c-4d74af87449f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45c47d7e-338c-4ef7-b8fa-aed213a46b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14353ba2-77a8-46ce-bd42-915560c3cdc3",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b76731a4-8e19-4446-aee2-821a5dd96fb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bdf1a5e-3a67-497e-8ce0-9af8b2d17e3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0511b314-a864-48b3-b515-872fdfeec510",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6ea4395-bb9e-43fe-80fe-b4e360edaa28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bacc5c7-08a0-4050-a6bd-8a27252e2113",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41499039-8fb7-4f0f-87dc-068c9e7237c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09567e55-d4e3-43c4-a5b0-e93502d80bac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b017dbf-f12d-479e-8cc3-cc1e22b1db7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fe3ee0d-2205-4f44-851c-08f5956e6a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8724e80e-03be-49da-b409-0c29d8f913d1",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "407f2e1a-6f7d-4d8a-8e9b-3d0573858b38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "899a79ca-afc0-4648-92a8-df787677982d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd65ec36-8c19-40da-8093-2456075df092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cee9ba85-57aa-46cb-83e1-51db64f3b7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65eeab90-f6ce-49fc-ba62-d67200cab5bb",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f78b1c1-94c6-49e5-bd45-347e3e7c0dd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3085a178-ae39-47b5-a7bc-e4fb50a7752b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42bcdd6-cc83-4554-9ab4-e66ad3b7e58b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26bd4e78-27cb-4fb3-a972-b36fbb550c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71500bfc-6e35-4e8f-afb6-a6db46672901",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ac0805-dec4-49eb-a6dc-ceb8fd4e3bbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39aec9d5-2708-47ec-afcd-d89df5094351"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "657cac3f-aa1f-43f5-a3e2-382f49212373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8e41388-f2d0-4751-87f4-586159fbdf10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81669ed-9c0b-47de-bfdf-7356fa5a8f51",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5575a848-8f2c-409a-a450-1e58620a307f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35b96079-d335-4884-b3f0-42c4c43765ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ad0997-2324-4990-9f56-7f2f4417086a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "add4576b-aaca-433d-9f99-666efdb87198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e3e923f-53ca-4edb-9589-2e23f355fb07",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e21f98-d257-406e-8b32-6d191e7ce7f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cf93b6a-a96b-4fd8-bea6-e6f847593735"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f05a696-3461-4628-9d58-be2601845a09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea66f3c0-7020-435f-963a-acfefc7a9cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5362418e-77e0-4008-84a8-065f83216e40",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "011cb51c-f308-41f3-bbcc-0a0cb6b66c8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "676328b2-69dc-47e5-a1a4-f880d9497c40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c117079-abd8-4d90-a857-88de2aff7137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48856175-708c-45f9-b156-4435060962f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3331c508-bc12-4433-af09-67c5ddd3ea01",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b88aa4c-db12-4b8d-8ef7-3c12bf90e34e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25a6e38c-df63-4215-9221-2d49876b45c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6796c96a-f232-4ac0-928f-d3b6d6c00c0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e034efc7-42d1-4eec-901c-77b31b0c200c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a987ee51-a221-4e3a-af53-c99ac60714b3",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d7a5f3-b697-494e-8e77-f8ef038cf027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a435fa65-16b1-406e-bcf5-52e4d93a14bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5dd2488-e107-48aa-b38b-eb51955cbdc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03c4d0fe-b182-46ea-93ac-2a5e4271461e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aeee572-ae8d-4c15-8904-4c55e2812b7a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db87f9c-222e-4fd5-a10f-ef0312948a35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22adfbb7-62fe-4b30-ae1a-04f59da3a575"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2ad007-62ba-48a4-a994-296205b325c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98022715-a4e6-4acd-8d6c-a84942618572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b60f2a-b8f6-41e0-9310-ed0401c7c81d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ee08fd-d48d-452a-bf93-dc43a0ec808a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97be2f6f-665b-4bcd-a04d-5d394e4b7627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1d0d9c-a902-4926-8e94-f8f4ac44bddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6b1ea94-14ab-449d-a80a-b3c64d024660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d749dc-4820-4792-af57-b79318516fab",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af83e94b-49ad-49d2-b3a8-5beaff8090e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd560e8d-47b2-4477-9873-cc6e4a00d4fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62923d2e-6409-412e-88ff-389aaa3efc13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5f02dbc-c797-4d91-8fef-d5071e1724cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e85bbac-77e3-4c73-8d2d-1f6cd28f3cfe",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9d72f4-c527-4653-8ec8-1c48b77e746e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b30da16-cf77-4af8-a3da-3611be54ea38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23190ff6-7062-4a01-9f77-95e2d8b51c10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e95091e0-d07c-4ab2-9a76-fcd824f48618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8e124b-95b0-4e6d-960d-84c58a79ce72",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a168aa6c-de5f-48f9-b3e4-40e44bbf7e33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3d52264-e081-46d2-9d2f-c8e6198770e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b2be7e3-8e10-4700-b3d4-146a6735b7be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb29c157-8d0f-4b64-b6e6-d7a4ce5d6002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "608b7fd5-4f47-4735-afb6-d27f3ede061b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e51d211-bef0-434d-a8bd-c73e21a85c94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "295bc6f2-0dc0-41d0-806f-1d1d4b43d1a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9074e3a3-7c3f-4d4b-9096-e50ab83f7451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62c9bd10-80bb-406e-ab69-65bfe78687d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "661534e9-84a6-4085-b00c-c30c5e93bb80",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5aa89f9-2b7e-40c1-8e03-1d398f99af38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5ee306a-5489-45dc-b2f1-f380b8b0e4a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3776454-3442-488d-bbab-e03885e2f050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71c1e840-a426-4dc7-a451-0d595c0b00a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4638a487-0b13-4d34-a80b-feff9952f8ca",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff94c4d-3bda-40d3-b7a4-8fc62326ed03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e50baee-da83-487a-aa34-aa51241062d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4294c3f9-93cd-4b23-877f-395655d55441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca19466c-5c0b-46cf-8148-f890c0f43efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9913ee2-8bcd-4c87-b930-ee3edad6599e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c82c7c-633e-4d5b-9700-00134e0be382",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "500749f8-400c-41f9-a22b-dfebc5b5a3a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81afdf2f-11c4-4724-aaa8-c6bd4002535e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "783238bd-3e82-4531-b9c4-94c0589d3ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a7bc98-b520-4c99-a6c3-357af4a6b5db",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa30ae9-4f97-4a6c-af2d-6b92a38a78ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43788747-4a36-44dd-9cf4-3cdc096057b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf55f5ea-9d12-471a-8944-9d361a2cc784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dfa783b-9d88-4b8b-8edd-834afb7fb786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff007628-29df-4cd7-8eaf-a92f0f72e9e2",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc3fb9c-ea50-45de-93dc-39c62e63f5b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3bfc466-a65c-4bfa-b2c0-f31a3e0a6ee7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e78adbf0-0cdc-45cf-b7ff-7d63e15001f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1decd447-dd58-4799-ae6c-730480cc1796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e731a4-3b34-4c70-a191-487494b26790",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02450304-37cd-452d-a9eb-b60d6e9e90f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d4b677-e341-42a7-a3fe-27e064e5cb7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b8b27e-6130-4a80-8460-11d659766c56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96545765-c8a1-479c-90c8-7d3b09ec6fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec8fbcb6-278d-4a6b-8b02-d6098110bc3d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd6c340-335f-48e0-ba7a-c91f819443b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bb6e37f-4739-430b-8b3d-e0c033e012a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f728c2-0108-49d0-8c81-871029fecabb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91cb2fb5-4a49-42e7-86f0-e84332eb3dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba4bc07-51d4-41c6-af94-2a1b4a27276c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53bb1726-f3a4-4f54-9beb-2fa0b68ad3e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f0e82af-4b75-483a-9927-98beb0c2abfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bdc62bf-f17e-4eaf-9927-addd086b5fc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee9f74ea-9046-44e6-b908-43b62caeec43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4319e2c-d4ea-46aa-81c3-edaa921e3e14",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b08d5810-f032-47c4-855f-b2b3201af1ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b13e28db-460a-4355-957b-d80c110ea547"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e918d319-5585-411f-a8b1-7316456844f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91c799b7-b979-4684-b580-3a43e13aacf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "832a1cf4-b4f0-485e-91c3-fd974ebf0795",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8badcb4b-6e30-4a50-8313-2ac612c69fff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a8d2e20-14a3-4c62-a84b-6d5b027526d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00fa6ce-d764-4774-8955-e52b171be16e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4845ebf8-b86c-4145-812a-6b7bca004c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5febbb54-49bb-49e5-8348-910f2e6adba6",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eefc9f51-2ee5-424e-bf23-d61ba20839c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26fc89f0-a9d6-499b-99b7-1016e6db697b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "783dcdaa-4b7a-4168-8764-7ca7ace69da7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "755a4535-99bf-4ec8-a605-a0bd7a1d2764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a537dc-e1d7-4350-894b-97607edad8a7",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb03880-8ce0-48a6-b31d-33454812b011",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c556645f-dc43-4d15-ab68-fa4151537495"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1140a0-8036-43c8-9eb8-3e1f1b484b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "338ab373-8285-4e6d-afc5-ac1c05d777bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f9a9dd-9060-43dd-ab33-700153ec516a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6bfeeb-cdf7-4e82-a60f-7ff58c5a12bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b48e86c0-7e6c-459e-9eae-778f181a3db0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cec9e58-7181-4ab0-8d55-6f767d6e927c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2d1065c-edf3-4d34-b802-8814de7b3ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "211ef0ea-d9ed-4df6-8ca9-532ea66d57f2",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae6a1130-1ad6-486b-aa16-aa1014a3a51e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6796c1a1-6ffe-423b-9223-7b7ec3cc738f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d4ab74-ab2a-4adf-9060-a15b73aa7264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9de36428-559c-4579-ae6f-d2b004c26255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0c08d0-ebb1-4738-bb75-cb4f047297e3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8d2e41-7a8a-47a9-b7ba-5bb36530a412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc08159f-716d-493d-b37a-b925680460e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81929493-2d06-4245-a9dc-c440769d9718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe35d38e-92a5-4bbd-b1b1-a14c8b5938ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad7d1f0-af06-4348-8acd-2783b0d64305",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d849b47-2e45-4d51-b591-33de94389f57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5839322d-8dc8-4619-ab1d-8c349ee10ebf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ec5d53-9ac6-4ea7-b1cf-4d238135ddf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "788ad0e3-77b6-4f7b-9dc0-b7ed47487d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2857f826-239e-49b0-a6fd-00ef7ba3de75",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d64737-88e0-4562-b314-274d7b4135ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a3e33b1-eb66-4c74-8dd9-28187cd7755e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df998e03-7d64-46bf-b0fb-2d47771737a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aed9ba5f-ebff-474a-bc26-2e99dcac5230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b87ebe8-c2ff-4a4f-935f-0aa1508cce60",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d893b801-bad4-44f9-af2b-6319f32ee7e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81b7a466-bd2a-491e-9073-ef8cb824dfff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92b1216-b2b0-4c4d-9e31-4943f8585c25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adc2d342-05a2-4738-a745-72ddb300e9e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37535a41-cc1a-497f-b9e5-3b8840e30932",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304a505e-bc89-4fdf-bc6a-ab3f72f5080e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79f73f81-7d9d-4b75-ad43-222854796130"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e87c23-e9bd-471e-b10e-a91d9f21a0cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19215730-4d7d-4d3d-b8a9-c653a568ecaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c964bd7-c0a5-4164-b352-0cf3b1bc244a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "270ff1b4-5f17-4fbf-a86a-f914a3dcf3d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95024cf5-f6ff-4cff-890a-dbc2263b1567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3dc41a-2f5c-43c7-940a-358dae2ad366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c27e2859-8853-48c3-802d-78abd15b21fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c147f0-c3d9-4cf4-8cf7-c029d519e6a4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1326273c-7ee0-437d-97ff-32e19fcd4ff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09986fc6-7d9c-49e5-941b-15b8adf5a840"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7f663d-f968-45bc-b241-4101bf0c701c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86501a8f-89e7-4081-9d3d-911307100f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e6578e-901c-49f8-807d-a7090dd14ada",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6efdc3fe-953b-430b-a941-95efbeed6ebf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1b8c306-babc-4936-8efe-c24114947744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b0390d-6f94-4b8d-a2f8-252f87b93b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e7df8d8-4be5-40bb-9f38-2639424fa58b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe20c20-632a-481f-85ec-5bd78a3fe4eb",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02060b99-1231-4e7e-81d5-0c1df9cb4665",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d32c085-fa98-47ad-b1d8-02d62c4faebf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b360cb5-febf-4663-aa8d-15cb2bf4a52c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da90cf92-462d-434b-88d2-12f67e242526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d17a812-9483-4d63-91b3-6556f248c247",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab1506d-0334-4dc1-a309-22ac431c6826",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edcf4c3c-32b6-4613-8a1c-6ddc5d1c53c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "024891d3-c9bf-40a6-b791-7153093fb700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d64cc910-5774-4987-b241-df80eac222ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156abfd5-e5ab-42dc-a027-f7b0dc042a08",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d615921-43e4-43dd-9805-70d14cc1d83a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3ca7623-6623-4f32-9c8a-921ae261e878"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb5b9f44-71da-4a1e-aaa3-5b0c42e31e60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6cbffdf-14b3-4309-9ea4-78cdc3a01739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2831ea1e-370e-4864-af72-0dad55244c3a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c127582-5d64-4dae-8c4c-5d940ee09965",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08cdeba4-7c30-49d4-a9e6-a3bf90e8e9a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c07fb00-04f0-4a65-b354-1901d7a2db4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72987300-55b2-49d4-a5d1-3617432d4a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df074e00-4ec7-485e-b6cc-4c9e08ee575e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "171798b4-b456-4419-81bf-416561469562",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f0f9496-f413-4a58-98d4-5682aa3cae0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "956709bb-0866-4361-a22e-5a0eaacce91f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f61c34d2-4689-4d3a-ae81-e0612bd06dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "305c3e6b-88b1-4a6d-bece-039ed846bfc6",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd07589-ab54-4f6f-8ec3-beca2240f6b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3d067bc-ded5-458d-a5d8-0ba69a0b9838"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d55c704-d8e1-4a65-9c2e-deef3b5cba42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a793b27-1c4c-425c-b6b6-8fc996258f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67024f2b-3f69-458a-9000-6d57d7c71e46",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c4426f6-c4ac-4d5b-a697-93b1f9de5337",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3e356cd-14b0-47fb-9011-fd2beb967682"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e036f42b-1894-452d-8d66-d465d0ee2306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce9d0160-2b73-4f46-8fa4-c25432d8dbca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e481699-ba50-4249-b9fa-a75b0969c9d6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8efa5fd-72ba-4e6a-9d5c-f095061ccae0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c00aefb8-1d4a-47a3-9bba-bc853c0f82f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41dd3f8b-139a-4a81-93a0-2b0de4f6e74c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e0fe38d-37c3-4deb-8399-3418bccc932d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ebf2abb-c39c-466e-86e5-d33562656617",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a607a688-074c-41f5-8d10-dc0a38b51f19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6d82145-6dc8-4398-a4f3-998655326770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c9523e0-5072-4a80-b151-98622376fa1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c27f4f10-7dae-4c1e-9b99-872801ff32ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4108ea1-5a89-4155-ad85-ed9b55717b26",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d15b46ee-4f82-402d-b33b-7514a64b14dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdb37866-0a7b-45c8-ba28-66ffab507e19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e347ae10-e2a4-454f-b71f-32f862bb3eea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97e12f6e-98e4-4744-a672-4b48dde312f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494e9d27-00cd-4e00-93a0-1c39d2cf24fe",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b6c7fe5-fc61-4c5b-a62e-2cf63c6acbe1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92f222a4-aa5f-4aea-8d1b-fb0ff608d81c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90039b90-a745-4a1c-8fda-33fca4593161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12ee9b34-6483-4199-ab60-059e3aa64586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7322942e-71a7-40da-9c54-0bf02cc34b9b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7976280-64a1-4df6-b86e-30e63b07882f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1a9a1b8-94b3-4d68-85df-96e0454e24b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db63a0c-8da2-4a90-9b44-109874f35dc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7863da53-53a2-4cf4-84da-e5cd616bd597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d20a7b1-b750-4592-b344-0bdf5c01118a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe0f4793-7714-4f18-949c-8e50a7c17764",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e068661-7894-4502-9dbb-a1fd1812d99f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "329573cf-3baf-4367-91ae-3cf6b817c679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9748dff-6be9-4aee-bf5e-1c20a50adaa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ec5e4d-6d7a-4ed3-a4f2-8fab0522d2ea",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b07bb5c2-f6bb-42c1-a5a2-01daa802c3e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0eb164ff-65b3-4299-8c49-a1d06a3f96e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50c2bd2-c9ae-48af-bdf0-c3bc04ab362e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8ce95e3-0749-4ee3-831b-3be7903a513c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c343dadd-7dd6-4a16-8b01-6d5d33db0134",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910ad19c-358f-4701-864c-fa30442d81aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bb07157-184f-4153-9d7a-2e3c53051a9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "182ab944-d456-4fb1-8bcd-cc585809a96b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd904f70-18a3-4225-b3cd-4d79171bf3d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23922574-c798-4bbf-b1ac-95de307424c9",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e84c7e-b9e5-46ba-a05d-36d72462fd58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5a65e59-5415-4619-9406-6d9d513ee407"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7bef7c-20ee-43e1-85aa-0d52dd23991e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "776ec1c1-9983-437c-bba1-c00e56cb5c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "226cf4c7-547a-4f44-b9af-b15974663912",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a55e155-3a8e-4113-a9d1-bfc4b152bfce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c64faf93-47c4-4087-a959-79dd72743e71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "227bf3cd-5aae-4b3c-8e7c-f7e32fa8b818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b489398e-97aa-406d-8a4b-926eef4c5be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e7da8b-4421-4a8f-83c4-9b46825aee97",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e74467-f59d-4305-b6b1-53560376f532",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf4e45ab-facf-4c37-a681-50952fccb744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae62ee09-2636-47a8-902f-3166e1a94bdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97dc2d43-8772-4b1e-abab-5be66b35d409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6651da6-ae63-45a8-a111-ce9237d5f9be",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39cc6af6-a9e3-447c-9676-9e84f6dab549",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "603a3124-8fa9-402f-8151-9809966cd2d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb27fdb2-66db-492a-937d-e51c5f0ba2af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe291c9d-908c-4f2c-abfa-0dab97baf437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b3976ff-386c-40e0-9f6f-4249722500af",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9648e0-64c7-43db-91ef-8db7157b4674",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad93de6a-bcec-4ea1-b526-911796be057c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65377cea-3803-4228-b79a-f575f8ba8186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "849368b6-546e-4a2c-afd3-9bb3cfc27fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6553e1-9409-4c43-bb2b-4d538a771a2a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3658eb-de72-4365-8ef5-e043228257fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cc52a3f-9cd6-4c58-92d5-4088cccda19b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1148dd-c3f0-4a80-a92f-ab02a02d89d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "face9031-91a9-4ea9-abb1-27ccda2ba963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a45f6bc-ca7e-4786-9008-9175fcf62a16",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c94e9854-cfe4-44f4-ad11-7be63eb272f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c35528d9-3660-4978-b09a-9c23f8e4fc32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62353550-9b88-4a1a-abe4-082412dd95c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1816bb15-8096-4715-8ba6-9eda44e46206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe8fef9-3a9f-4e58-a441-c058a431be41",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a228d3d1-edc3-4477-8759-9ce07184ca21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d23ce28f-5413-429e-8926-3aa0404d7b74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e585c04a-97d7-42ca-94e7-2ead01f0b7ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8734b806-3452-455a-bdde-c345f137872a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe81e27e-2a5b-4167-88e1-a15ad3b3aac3",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69ceff6-5884-4586-b53c-645bed92a1dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a4eef76-cafc-442f-9d3e-ff3ccfb63abd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d5c23bd-bb1f-4e4d-bade-bb55636803dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "205e81f2-febf-4230-8cec-b8605c1bf571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23c4a28-8650-486c-b07c-d6245eba9280",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe1dedb-10cd-4755-97f8-ca9fc5a9d176",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca67ff85-d1a6-422a-8771-74035e18ae4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c98d2a-91da-4c73-9c80-62d7db4c3485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef244a16-9c02-4ebe-9251-56638ace85f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98814ba2-f2f6-4ed7-ad6c-bacf2ec97df0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c827cf-0bc5-49e1-aaae-8395e502bec2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51e0621c-7087-454b-9f1a-f7546dc9d8e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aaa89fe-5ebe-46db-b2ae-3b47a6df36cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad5f566c-7819-4f1e-8780-26d3098e919e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed12295c-bea4-4121-8226-7428602e546a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f76440-48e1-4614-86d5-f04beb6e7b1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf97b4fc-53fe-495a-a88e-37303123c822"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85813f9f-e9a1-4c43-884a-46bd1d7206d5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "656bef89-cd61-42cb-ad67-22bc2b545b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c03681b-1069-4fb7-9e8e-ff9d0a2ee7a3",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f1342ab-d615-4385-b110-cbf6b2bcb1f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cba9b45-04a9-4460-9b4b-fc10dfe41f18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bac409b-e6c9-4e95-a0ef-d422185b8aa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e0aebd8-86a3-424d-9e95-c99687829937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7724e7a8-35fe-4ac9-a142-e2deeae6b1f1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25aceb91-887b-4540-96fb-36181f9cc57d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "373ee22b-76b3-40f9-8b31-3836fe8cd916"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04fe2a5-46fb-4cdb-b005-417e6f48af7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f685c8cb-a2e8-40a5-bcef-012838cb08ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d68df49-ccb6-4c47-87e1-e9f414d9639d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db6b0bb-faca-4f0f-a5ff-c8535f610382",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efd57513-52a7-4189-a9b3-5a126ffbac5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85b9292-1680-41a5-a217-16e86913ccd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31679049-b7a5-488a-a9e0-733cc3bca41e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74739c0-8cb7-483a-a167-b94c844789bd",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef6a6f9-b5ad-4442-8dfc-34401105eeb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f8688c4-95ee-48bc-a936-362f0e6ee227"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f53e99c-d910-4b50-8687-b723ba11dd6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dab91f42-d605-4371-ae6c-76068bb58550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326613aa-135e-4d2b-b8d0-4803cee14459",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a497cf9f-9183-46fa-a410-2677358c9fb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d914207-9789-4af3-a703-8af9c297b086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7e98c9-0ddd-4233-9da6-6b2158afd94e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78229dc4-0304-4f82-9eb3-cbe475da28f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5c9781-6814-4048-97ed-682115d01a4f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d6bb894-9350-4e63-bde0-36beb0fc1bc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b76b6660-f845-49ad-95b8-ef594aef39cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2a99b7-7a31-458d-8e9b-10271dd59d20",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69451021-b663-45f8-ac9a-3b1afbc8c9a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c337eea1-c2b5-4594-b01b-0dce07240e9c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cdf89b5-7063-4ebf-9576-1f291b2b3c5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaeed1a3-fbaa-4ea9-89fe-9de9ffc26642"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4210204-93fa-4543-85f8-e887e3990365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9294ee34-1fe8-4ca5-9d32-8b4ae35de6d3"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d95d3c4-85dd-4d0a-82d3-35b2c4e1bdcb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64c945dc-1a96-47d9-b586-f6e9fc67fade"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eda289fd-f0dc-4c74-9644-6e5a87097e0f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bac21058-ecf7-4c19-a2f3-c6deacb1e348"
                    }
                  }
                ]
              },
              {
                "id": "d4b9a85c-78a5-4f4b-95b1-d94daf000ea2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0404e82e-7503-4ea4-887c-9006d55a23ed",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df11060-6998-4ac5-957e-ecc6c4f793a1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f2cda947-0bf7-4897-ab28-f3925d754574"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "451f3df7-089e-4333-a35a-b9ba0019e962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "80a15e23-a54a-4c17-85b4-e7ab2310d9b6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a10336c3-c900-4b25-857c-265c18e6d8e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22354642-fb73-43af-a874-3fec0860b419"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae4b395d-f0f3-4173-9aa4-f232cdca3fcb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4e7b7ed-3638-4554-ac0b-a01b89b7073d"
                    }
                  }
                ]
              },
              {
                "id": "d8fd5169-94c5-4b0f-8c29-ace0e1a0ecc7",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0f77fe96-b077-4750-a4d1-d8105f87eee7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2154cf44-bb09-4369-9379-a50bb634e88e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b6c50610-f3a7-4688-aed6-01d085fb1a05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "369f8e97-fa47-4b92-8136-4b1acf95f5ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a482764-bd98-48dc-a829-b9a3bea90108"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c0529b13-d97f-4731-9c1c-a4cc5ce1facd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8b84b0b3-12fd-41f0-bd47-a9203d3bf8e5",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "407183e8-4f88-4f8a-823e-ab5e970d7b19",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6c2eab6e-f5c3-4bb8-9ef9-9612498e6cbf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9f4b300-b50a-41e9-9ca3-1794d29e872f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b74a4cb-2d8e-43d3-9515-c4fb5c7466c8"
                    }
                  }
                ]
              },
              {
                "id": "00cc21cd-d61f-4edf-b4c0-fcd20953136e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "89dcf067-8967-4452-92b0-7568bf345a23",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "85a2ef90-503a-4e73-ba35-46b80ad370cd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae7c7e34-1ae5-4555-acf2-2d06ebd60899",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "baeaa7fd-42c9-47ce-9449-6fcd3cce56a2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad7ea087-7de8-4c56-90a4-1665a8bf6e76",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f5cf494b-d842-4c48-b76c-d7336db7d061"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ae148a97-6178-4362-8350-86ad909ca001",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ca8a9747-2fd1-4bc0-ba39-cdcbad627df9"
            }
          }
        ]
      },
      {
        "id": "23231268-9f18-43bb-84d2-389268ca2aef",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0afd16ef-cdd6-43d4-a7f3-030269c6ac98",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0e2e554d-a5c7-4c8e-8819-683dd5300dcf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a97e739c-4476-49ad-ab4b-0ab6ba5367e1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3038f68b-6196-409f-971d-e1f6759a4cee",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d0b6ed0e-484a-4cdf-ab17-ba79f397163f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "545bbaa4-821c-443a-83b1-2b3e0d5a45af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f57eab1-ad4b-4400-96be-8a436f016c51"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f6ded02-2d71-42a0-a7b6-8ab4af627c09",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32d819a7-69de-4cad-a64f-2f8df915c22e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8438fa5e-9a39-481b-807a-6973c88f3ad4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5710c2d3-2c80-4dea-89c0-f9bca04949d2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bbc4a947-0507-4384-a4d0-6e1d5e942f81",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "93fdf3ad-5f82-417e-96be-a7c16311c39e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ded8ce71-0f97-457b-81ad-1449aec5485d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "596c475b-62ec-4754-a900-3424318d558e"
            }
          }
        ]
      },
      {
        "id": "8be9fe7d-d46d-4d81-aebd-0170e53d6c5a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a8287c8d-2eb6-4f18-abab-02e5e7f1426a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7ab82a4e-1594-4565-a702-338232f5e9ea",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0ef1562d-944c-4a4e-95a1-d7bcb6e1cacc",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93cd4a8f-ba40-49be-b90f-2c3aa1d9ba3c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa1e42e4-27d9-4d9b-98fd-bba0a06c70ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff80bcbd-a843-43ee-a3f4-e3c1a06d054e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b56348bb-3913-40d1-a9d6-9ba0b75d046d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "445bf1ef-6b37-478f-8dee-515029891e9b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "973450a1-edb6-4b0d-9d9b-05f290ad5fc0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "007dd292-c38f-45db-a43d-e748b12ad9bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd439f35-62c9-4d3b-9863-48f40d405bd1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6fd09088-95e0-4bc1-aa4d-f5983a8888f8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "65711eba-6c91-4e89-8068-cbb8aeaae22e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "628bb8f3-a80e-4d6f-be6a-b9a0ae636684",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ab45c6a0-cafb-42b3-9373-e34128031c73"
            }
          }
        ]
      },
      {
        "id": "74a1d2b8-dbe0-48dd-b76f-2d4890f69b96",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3fbdb7df-8bb9-4ec6-a156-d3c68391bb1a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d1d029f9-1f06-4649-9cf7-20a668761735",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "242c35c8-3007-46e7-9252-e3b22c8569a8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ece68f2-57d5-4be8-b6d9-1ab94e4a6c3d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8c9ac79-0f7d-4065-808f-65750da5f68f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b051e7b4-d387-4d7c-970a-a8a6ccac4d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5f06bca-7855-41f9-a99a-9f73545c077d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2035f19-c3ed-4efa-89a5-3f7213ab9a6b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "10d5a564-86b8-4cd2-b723-e4de6da13267"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8df3c39b-ac32-43dd-9da0-4166a0335246",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae3d8d59-7625-4664-867e-5e170827358a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "923e695f-2fd0-41b1-84dd-9ede6b41fea8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ac17b3bb-0cdc-42bd-99ab-4f3043b73d58"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "582d7cd7-f869-4f3c-9f55-713bed1c3f29",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "df3c8146-bd9a-4924-873c-cabbe169879f"
            }
          }
        ]
      },
      {
        "id": "4603764e-441c-4fb5-9ed9-52b934a055e0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b62601a-fa30-464a-b0bb-be1d80518b47",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bca5eeff-d20e-48ad-8278-513553ab8b5f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6b84db91-fc4f-4863-ae15-8c258c932386",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3077258d-f490-4a92-910c-784af9c48ac2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d98c2048-5aab-4680-b4eb-24493fa3e297",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 324.0563380281689,
      "responseMin": 19,
      "responseMax": 7101,
      "responseSd": 870.8323181896094,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1693873924154,
      "completed": 1693874028674
    },
    "executions": [
      {
        "id": "22619d45-5104-4511-ab75-308947a0e990",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "707e13f2-a472-456f-8a81-fd322f1a986f",
          "httpRequestId": "c8a51858-4d37-452a-9026-f33b8450c21f"
        },
        "item": {
          "id": "22619d45-5104-4511-ab75-308947a0e990",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "4798c05e-6022-441d-9966-a747b6f38145",
          "status": "OK",
          "code": 200,
          "responseTime": 116,
          "responseSize": 0
        }
      },
      {
        "id": "5dd149ac-4eb6-4417-ad80-8f8313a1d59d",
        "cursor": {
          "ref": "3a5bb938-7f72-4aa2-b6e5-09cfb84b0c10",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "73d8cb4a-e247-4ded-9c0b-851270e41377"
        },
        "item": {
          "id": "5dd149ac-4eb6-4417-ad80-8f8313a1d59d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ec086475-6a75-410b-8e6a-61595bab50f5",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "47b54778-2988-4c6c-bf8e-2853385007de",
        "cursor": {
          "ref": "839c3180-8eaa-4a81-82e1-83684b3f0a51",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a2d91a4e-e2b1-437d-8b76-7a245b23eb47"
        },
        "item": {
          "id": "47b54778-2988-4c6c-bf8e-2853385007de",
          "name": "did_json"
        },
        "response": {
          "id": "7b90c0a2-f2c5-4b78-a8ba-9cd183409380",
          "status": "OK",
          "code": 200,
          "responseTime": 1387,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3bf635-201a-4115-9807-4502e2316c13",
        "cursor": {
          "ref": "e01f334f-d6da-4092-8446-faecc065f955",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ce06aa27-3906-4886-9815-8ddfa30ffabd"
        },
        "item": {
          "id": "1a3bf635-201a-4115-9807-4502e2316c13",
          "name": "did:invalid"
        },
        "response": {
          "id": "1ba171e8-b9ed-4a73-9018-59afeb6e0a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3bf635-201a-4115-9807-4502e2316c13",
        "cursor": {
          "ref": "e01f334f-d6da-4092-8446-faecc065f955",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ce06aa27-3906-4886-9815-8ddfa30ffabd"
        },
        "item": {
          "id": "1a3bf635-201a-4115-9807-4502e2316c13",
          "name": "did:invalid"
        },
        "response": {
          "id": "1ba171e8-b9ed-4a73-9018-59afeb6e0a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c417dd-25c2-4c4b-b4ac-300b3c0e4498",
        "cursor": {
          "ref": "3cac80b6-4320-47eb-9729-33bdc11bf75f",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "66497e00-58eb-4a25-ad39-5f638e0668fc"
        },
        "item": {
          "id": "46c417dd-25c2-4c4b-b4ac-300b3c0e4498",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "324e40c2-85c3-4e5d-a9a1-56e67ca2a4d4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 341,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "facb0ab9-651f-48fc-b84c-34df197ba3b8",
        "cursor": {
          "ref": "819d83a6-ca24-4cf7-a091-716e2d98545a",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "953b373a-5360-46fb-a944-4b50bcf73896"
        },
        "item": {
          "id": "facb0ab9-651f-48fc-b84c-34df197ba3b8",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f23c9153-822c-44fc-89ee-36a3206504d0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 264,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0ca65d-bbc5-47a0-a652-54efb63ff940",
        "cursor": {
          "ref": "41a75dbf-b6d9-4fdc-acfb-cf53f7bbbdb2",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "965e8b1a-e3df-4ba2-9955-84cbe9824aa1"
        },
        "item": {
          "id": "0a0ca65d-bbc5-47a0-a652-54efb63ff940",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "785c14fa-c6b9-42e7-a39c-0fdf31da6897",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a0a54f-8b5d-4636-a9d4-f5a6860582c1",
        "cursor": {
          "ref": "e6f4a5a8-62bb-439f-93a7-dfcc920ffafa",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "cca93676-484b-4843-9d28-24af6681a537"
        },
        "item": {
          "id": "72a0a54f-8b5d-4636-a9d4-f5a6860582c1",
          "name": "identifiers"
        },
        "response": {
          "id": "6f36da88-94a5-4cad-b266-947d6719d090",
          "status": "OK",
          "code": 200,
          "responseTime": 1285,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0177e44e-fd89-402e-a1c5-7661c632d95a",
        "cursor": {
          "ref": "872e2000-d28e-4166-b89f-88d2d6491e64",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f13d6884-d0d4-4f94-a16b-d9e33efb2575"
        },
        "item": {
          "id": "0177e44e-fd89-402e-a1c5-7661c632d95a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4dbb6c61-2f77-4157-9f42-701fb9feac9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818037a2-1e59-4b03-81e4-1d8d45f77cc9",
        "cursor": {
          "ref": "c28b03c2-7663-411b-a37f-4dc8ab390cd2",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a8f3c261-6be8-4d08-b2c8-9265ac2e6f65"
        },
        "item": {
          "id": "818037a2-1e59-4b03-81e4-1d8d45f77cc9",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "81297d06-3e79-4271-8cad-4e9b8a18fe07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b797cf-0311-4c14-9f6a-bb1c6ef5aca1",
        "cursor": {
          "ref": "7d819fef-5efb-4313-b685-a086c8bdf1dc",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a9f57d4c-a6bc-427c-9658-68b2dc9a8eda"
        },
        "item": {
          "id": "a2b797cf-0311-4c14-9f6a-bb1c6ef5aca1",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b4151c87-297b-4857-9964-4a6bfc209101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94105304-dfd3-4744-846d-f4e867e542be",
        "cursor": {
          "ref": "94bc8625-d9c1-4fb3-8a85-f83de924a374",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6ba4aa36-3b5c-4e01-8ce5-7905594de5d5"
        },
        "item": {
          "id": "94105304-dfd3-4744-846d-f4e867e542be",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8bd361fa-de09-4775-a6cc-e67d7facbaf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab6e01a-dbff-4891-93e7-f99480e12fd7",
        "cursor": {
          "ref": "879cfb47-1fdb-427c-92f8-4f3f57cfb91d",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7eaa7bf5-939a-4aab-b04a-52e509df323d"
        },
        "item": {
          "id": "dab6e01a-dbff-4891-93e7-f99480e12fd7",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "bdf417d8-477a-4145-a2cc-4f61d8ac33bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559d4ba7-6189-4561-843d-c16d717c7a77",
        "cursor": {
          "ref": "b5fa4a00-671e-4284-abc5-50c9ada6bd27",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "49784d00-ed6c-43c1-ad6b-d0d7bd913f00"
        },
        "item": {
          "id": "559d4ba7-6189-4561-843d-c16d717c7a77",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0f9b1c9c-fdc1-42db-9594-160181b85183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde51b74-563a-4f87-818c-6280d549f844",
        "cursor": {
          "ref": "3b84935d-dc18-45a6-b5eb-4745bfe65115",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "78974268-8eb2-4a81-95ce-b3692bb1b30a"
        },
        "item": {
          "id": "cde51b74-563a-4f87-818c-6280d549f844",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "809a83e5-a3f3-4148-8ba8-ad2ccc2c5a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20605deb-51b9-487b-8e86-37b871046f20",
        "cursor": {
          "ref": "efa800c5-940e-4b98-baa0-89a6342f5edf",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "add404fe-6dcf-4a5e-a83c-0b66fdda33bf"
        },
        "item": {
          "id": "20605deb-51b9-487b-8e86-37b871046f20",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2c722790-c5db-4c45-a3ab-056b45446c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a76cac-11af-4193-98ff-f748ced6223c",
        "cursor": {
          "ref": "8c0a406f-3e56-4cd3-b162-0f1b8a222e99",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "be527991-2388-4376-97e4-bed7c08c6049"
        },
        "item": {
          "id": "b3a76cac-11af-4193-98ff-f748ced6223c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b6f8cc51-aa3d-4fd1-9dfd-6c512c8aded5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067bdd92-5b16-47db-8ac4-bb9c1849a0fb",
        "cursor": {
          "ref": "d5db56c6-a782-4a34-8725-5bb58f9136df",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "11782afd-ccf8-4fa6-8cd4-33c3e604a37a"
        },
        "item": {
          "id": "067bdd92-5b16-47db-8ac4-bb9c1849a0fb",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8094e282-25e9-440e-b3b2-4f12fe9b1ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add3f20e-edd7-48d1-82ff-86f1cd9ee3ac",
        "cursor": {
          "ref": "038cb31f-ded2-43ac-874e-d283b99c6335",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b2339b7d-7a28-43aa-8c5f-d782360792b2"
        },
        "item": {
          "id": "add3f20e-edd7-48d1-82ff-86f1cd9ee3ac",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "cbe78aca-ef41-40d6-9fa2-300e597a483c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff1e1f1-5562-408a-8f42-88c81a7e766d",
        "cursor": {
          "ref": "04ef8145-38d2-4389-b7db-f2d3e674ecee",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "87f6aff9-9ca4-4cd8-a686-857a546ace63"
        },
        "item": {
          "id": "eff1e1f1-5562-408a-8f42-88c81a7e766d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b8820bad-0979-4bf8-b133-e683bbd6c0b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813fd6fc-d32f-4dd0-a8ad-e698c51f895e",
        "cursor": {
          "ref": "55e520f2-9536-42bd-b9b4-2d2f51bb7f15",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "565ca22e-772a-4e04-97a8-21f48d50f866"
        },
        "item": {
          "id": "813fd6fc-d32f-4dd0-a8ad-e698c51f895e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "74135fb4-f473-4beb-8a48-b7364f73ae93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cbb45e9-9fd9-4871-8b87-3ecd63ea2031",
        "cursor": {
          "ref": "a8cf6df8-d482-4316-9981-171174b45953",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "72b5a7bc-5877-4acc-8028-0630b20557c0"
        },
        "item": {
          "id": "4cbb45e9-9fd9-4871-8b87-3ecd63ea2031",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "702f75de-bb8a-4dfd-b9bb-eeb808cb7c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4993806d-63d6-40b9-9154-cdaf2bbb298a",
        "cursor": {
          "ref": "912e142e-db49-49c9-8d1f-df1c32bec205",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "98963df6-e58c-4106-a14a-0896a59565ee"
        },
        "item": {
          "id": "4993806d-63d6-40b9-9154-cdaf2bbb298a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "791cf103-32bc-4dfa-9499-e541d1fc0863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03509fa-5d15-4315-b4b9-68a646af6b73",
        "cursor": {
          "ref": "5e2ff6f8-406b-4827-aac1-b0ff323c0996",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "149c4054-1bdb-457b-a92e-ba4dd06c1073"
        },
        "item": {
          "id": "f03509fa-5d15-4315-b4b9-68a646af6b73",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "993622e4-0381-4d28-b328-82c0c26308d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4368d245-9b20-49a2-9891-897ad0f45ea3",
        "cursor": {
          "ref": "7296dd4a-de83-4f0e-a606-511d40eb683b",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "26cf4298-0ff5-4603-9c8c-85dd2fd5747a"
        },
        "item": {
          "id": "4368d245-9b20-49a2-9891-897ad0f45ea3",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a2698b3a-151f-4d26-a4e9-b4f2becc7848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7fea1cb-66e7-4a59-9e0d-0580fcf2ff74",
        "cursor": {
          "ref": "f5e8697f-76ee-4738-a4a8-e620e532e180",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "561eba14-535d-4fcf-a373-9c8662bff8bc"
        },
        "item": {
          "id": "d7fea1cb-66e7-4a59-9e0d-0580fcf2ff74",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b5066422-3134-4fc4-b271-e79fdf6d1760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d31e1b5-38fb-47db-9cda-c917c97a4631",
        "cursor": {
          "ref": "c773d358-5aef-4e2b-9e16-d9113e4939bf",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8a3391ab-ee9f-4ea3-80fc-a30fc50e1802"
        },
        "item": {
          "id": "3d31e1b5-38fb-47db-9cda-c917c97a4631",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "09b4a455-d65b-4c03-b4e6-577f135b5710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00d79be-88e6-419c-868f-9faa67fa4511",
        "cursor": {
          "ref": "df90e329-3eaf-4cac-832a-2d8c0afc572f",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9eeefa9e-2d60-4bf8-9f82-eca13fa6baaa"
        },
        "item": {
          "id": "e00d79be-88e6-419c-868f-9faa67fa4511",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e27f9b45-affb-4be4-a51a-d3b9c78253f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9896ad14-170b-4c2e-a049-bf0b6e81aeb1",
        "cursor": {
          "ref": "cb8d586a-d368-4c34-a54a-f801ffcb53df",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6683f6e3-ade2-4748-84c4-aa6a8cd3d71c"
        },
        "item": {
          "id": "9896ad14-170b-4c2e-a049-bf0b6e81aeb1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b588b223-508f-4290-9547-ee7fad760981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40028fb5-be94-4578-8eb2-d4be689f6fac",
        "cursor": {
          "ref": "b8d63c5d-ff06-4198-a058-d7316c901f68",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5249eef2-ae7d-49b5-b11e-e67cc683987d"
        },
        "item": {
          "id": "40028fb5-be94-4578-8eb2-d4be689f6fac",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "de995dab-564b-4fa7-b843-a75e97f4c6b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95947cab-a424-473d-b67e-4b939f9266f9",
        "cursor": {
          "ref": "f318fc8c-fae9-4ea3-a7af-bcc8d6559e21",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d975c913-7fe8-4915-a7f8-ed623eceb83f"
        },
        "item": {
          "id": "95947cab-a424-473d-b67e-4b939f9266f9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ebb734d5-5fa4-463a-89ea-b4ed8ac79b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c334974-d5c7-4018-ab48-19912a1e536b",
        "cursor": {
          "ref": "566b0959-6801-4759-8256-0056db9d871d",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "882040fe-fdd4-4193-9a4b-b221abf408a4"
        },
        "item": {
          "id": "9c334974-d5c7-4018-ab48-19912a1e536b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "03e6707a-6cad-4014-b74f-a63810d2b040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4689729-09c1-412d-92b1-3e3f5b630323",
        "cursor": {
          "ref": "33ee659c-c4a7-41d0-8211-db067659b231",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "bf0f0ef2-c980-4610-897a-07ca15205580"
        },
        "item": {
          "id": "d4689729-09c1-412d-92b1-3e3f5b630323",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "dd5199d3-578f-4d67-811e-928ec2b4a75a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642ea502-20d2-4bcc-be3c-7a0a3d03e80a",
        "cursor": {
          "ref": "8f391264-4ab6-4fb2-9684-0dcedcd5cbd7",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "48b03d79-7034-485e-bfc0-27c51580acef"
        },
        "item": {
          "id": "642ea502-20d2-4bcc-be3c-7a0a3d03e80a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0a874915-8b9b-4fd5-9872-2dbf943d3c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a883445-100c-44d3-bc90-0f6c13c92bf7",
        "cursor": {
          "ref": "9bb50e74-d4e1-47f8-9ac0-a67ff4d43540",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "cc485355-7575-4a83-806b-c3c90a439488"
        },
        "item": {
          "id": "1a883445-100c-44d3-bc90-0f6c13c92bf7",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7b1292e8-93f1-4e60-b89a-4587ffa9e390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7deaf32-a15c-45b9-8399-4b577348008b",
        "cursor": {
          "ref": "f0c70d76-35d3-4c3e-9302-3a3007d658ad",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a7ee7999-b4c1-4371-9825-7e7d221ae2ca"
        },
        "item": {
          "id": "f7deaf32-a15c-45b9-8399-4b577348008b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0aea7db6-f24f-47f9-801c-54db69086694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3c1cff-9b08-42d7-aa95-f1f413f6a7b5",
        "cursor": {
          "ref": "415b20fb-8266-47c1-a0fe-d5d3977ea717",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "0f7b54b9-3a04-4c1f-bed5-75f1bde78168"
        },
        "item": {
          "id": "3f3c1cff-9b08-42d7-aa95-f1f413f6a7b5",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c8df9216-17da-4642-9a9a-082ef960562b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb159028-a064-47a8-9ebd-894ae6017491",
        "cursor": {
          "ref": "0bbe4b80-3dc8-4739-bb1c-b3098aa415f1",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "041c7980-b512-4325-9a4d-de50b87901e7"
        },
        "item": {
          "id": "fb159028-a064-47a8-9ebd-894ae6017491",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "574f1a83-8759-4954-ad18-e551a53fd54e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c665c455-121e-4c00-a7ec-6751e6c51ecf",
        "cursor": {
          "ref": "51b0b077-65fa-421a-8560-242868094ea1",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7869e2ca-1dfb-408d-b9fb-f20242d974ea"
        },
        "item": {
          "id": "c665c455-121e-4c00-a7ec-6751e6c51ecf",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c4d41301-0316-451c-907b-96cc72f31ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60bd969b-69c8-4df2-af4c-351a9f87b553",
        "cursor": {
          "ref": "614c20dc-a8df-4af3-aae9-a0fe93279bf6",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2b1087cc-5756-4271-992f-3f6f55b3b6ca"
        },
        "item": {
          "id": "60bd969b-69c8-4df2-af4c-351a9f87b553",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3bcdbb89-487c-4081-a244-027ecc92679a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a7ebb4-9315-4f93-8e64-888e1a573df4",
        "cursor": {
          "ref": "94f76b89-1c1b-4005-ad90-9a4f1bedfcd7",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b6f04f63-55dd-42c5-af9a-e73a5b0ab0e6"
        },
        "item": {
          "id": "c4a7ebb4-9315-4f93-8e64-888e1a573df4",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f7b17b99-b707-4cb7-9e33-0f32c13a9bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "722f4a54-9d48-47e0-b04f-a26103dccf02",
        "cursor": {
          "ref": "14fb2fc8-3336-450e-a190-b187f4b01c17",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "9e9312d7-c403-46c6-af7e-9d692afc2add"
        },
        "item": {
          "id": "722f4a54-9d48-47e0-b04f-a26103dccf02",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6121e4a3-03c4-4a59-9180-f96d753c75a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43b038a-2985-48dc-88e1-9b1e0affba8b",
        "cursor": {
          "ref": "ac8ccc56-a06b-4daf-84c2-26412631c238",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9bcdd235-dc61-414a-adee-72238900b110"
        },
        "item": {
          "id": "b43b038a-2985-48dc-88e1-9b1e0affba8b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3c803b42-0d8a-45b8-9fc6-d916c45f4819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a453d60f-58f5-4649-b5c5-e288331f6ef1",
        "cursor": {
          "ref": "f75b96b0-0fb3-4ab1-bc89-e4e8d4541ef1",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "bd4dce38-23bc-4e4e-a448-75aa530ea1fc"
        },
        "item": {
          "id": "a453d60f-58f5-4649-b5c5-e288331f6ef1",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c950b4a2-24b6-4991-af90-7712d92ccd05",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 638,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc9ccf9-d1c7-442a-87cc-f0e59be08fa1",
        "cursor": {
          "ref": "e2191baf-a182-4a55-b9fa-5ddeb372ec5e",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "09166c7d-7b60-4f83-8225-a63747727ff7"
        },
        "item": {
          "id": "dcc9ccf9-d1c7-442a-87cc-f0e59be08fa1",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "51e71bb9-7f3f-4864-8afa-ffb6a747bb42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c96e2d8-3973-474a-9698-2330bc718618",
        "cursor": {
          "ref": "3e8ad220-ed70-4b5a-96b6-2e1e3b6aa064",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1e7c2c3b-c2ff-4a05-bccc-64c0eff6be45"
        },
        "item": {
          "id": "2c96e2d8-3973-474a-9698-2330bc718618",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b9ac29cd-4b49-48a9-9575-9cf4c9f96fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37715f34-2c89-4e52-a758-6c12323e1805",
        "cursor": {
          "ref": "e5e5fb66-661e-48c0-abb3-0e71084def36",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "df2076ef-7a89-414c-86a2-1deb5886e617"
        },
        "item": {
          "id": "37715f34-2c89-4e52-a758-6c12323e1805",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c161f284-ae8f-4818-8a5f-c95908e0b04a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51842e0-a88c-4d79-ba0d-d7fa9fd22188",
        "cursor": {
          "ref": "693aace2-09e4-47f8-ad69-8674a2ccd144",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "08db69d3-2cee-4f76-8b99-7d27d3f7dd88"
        },
        "item": {
          "id": "a51842e0-a88c-4d79-ba0d-d7fa9fd22188",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5a1a21f9-2d6c-4b5d-ab1c-4fc5c255b71d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abfe4149-1454-4d24-8022-704fb7ff8230",
        "cursor": {
          "ref": "4ee22f59-b5d8-4e9c-a1a3-50bce45487e2",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "34a2c24c-5343-428d-833f-52c11ab2d2da"
        },
        "item": {
          "id": "abfe4149-1454-4d24-8022-704fb7ff8230",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "99fc5444-b682-4a8d-9936-ac763be3aa97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e75e25-ea44-4e44-90c8-d3e3670a01ca",
        "cursor": {
          "ref": "d872efb6-b355-41aa-a093-571fd7b356ff",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "cdf40ed3-bf64-44f6-96fb-56e21c08d129"
        },
        "item": {
          "id": "91e75e25-ea44-4e44-90c8-d3e3670a01ca",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ad356e26-61fb-495a-adc4-5ed13bdfb07f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f7809e-4cda-4076-a43d-705bb5bc70c9",
        "cursor": {
          "ref": "f5cce445-ff1c-4420-9641-acc21358a2a7",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b4f0b2a1-88c4-4c06-80ef-f16fbece07a5"
        },
        "item": {
          "id": "54f7809e-4cda-4076-a43d-705bb5bc70c9",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8c6ca0de-e0ec-4269-89cb-b8f5a359d3f2",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 612,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32355a9a-4762-42f4-b820-5926379bee30",
        "cursor": {
          "ref": "1347997d-b8ab-4924-8839-521182b2545e",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "408f1bd7-2f68-4a38-b28d-339b7f32aee3"
        },
        "item": {
          "id": "32355a9a-4762-42f4-b820-5926379bee30",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "158ece67-2a4d-419c-9ae2-491a1f4c7442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f4e480-6183-4e71-bf89-8365fe7842bd",
        "cursor": {
          "ref": "57f8c48c-9ec5-4c0e-b99e-be37ffe10441",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c432da51-8cd1-4ef8-a298-24ac15b47c1f"
        },
        "item": {
          "id": "85f4e480-6183-4e71-bf89-8365fe7842bd",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "fe2c00d4-fc44-4977-9bb0-11d847328830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "154225d1-bf38-4eee-9579-65507029ad83",
        "cursor": {
          "ref": "f3b02eb0-2d1f-49cb-8314-8ee12462f5bf",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "dd9ae12f-e071-49a5-96cc-704dc55daec6"
        },
        "item": {
          "id": "154225d1-bf38-4eee-9579-65507029ad83",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0680461c-fc2b-4909-8378-bccb13ba64c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc0fc88-628b-4dbd-8590-28ec42ace4ac",
        "cursor": {
          "ref": "7b2ab129-74a8-4976-bacc-64c1f3188fa6",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d37b78f4-af4e-4b23-861a-26ab916d0eda"
        },
        "item": {
          "id": "ccc0fc88-628b-4dbd-8590-28ec42ace4ac",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6c731fff-7e76-459a-96a5-60c59111f728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64983220-d0a1-4080-9c5f-25549d07f72e",
        "cursor": {
          "ref": "0fc06bce-2d91-4f11-9f61-12ac9c40adcd",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "af437ded-cd4e-4f0a-ab18-e850372d6785"
        },
        "item": {
          "id": "64983220-d0a1-4080-9c5f-25549d07f72e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "de1c7f89-1f90-4155-838a-e6c2b98ccd52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e11dea-27b1-46e2-a682-fbf81aeb52bf",
        "cursor": {
          "ref": "aac39fe1-d202-431a-9f46-91e7e8a58217",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1ec29280-f66a-4feb-b889-8420dbb3499e"
        },
        "item": {
          "id": "89e11dea-27b1-46e2-a682-fbf81aeb52bf",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d1411900-e04c-439b-b837-bad8f89ee4ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa30dab9-f56c-41f6-884c-f6d6a6570e4f",
        "cursor": {
          "ref": "023e2f67-ffb1-43a3-a5ed-47f249c7d691",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "539a0074-0013-469e-8579-27c41e6d587b"
        },
        "item": {
          "id": "fa30dab9-f56c-41f6-884c-f6d6a6570e4f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9ee48ae2-a60e-4e3a-9607-d453b1db04b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4419ad7f-9914-4c2d-8cf7-09f5bd436cca",
        "cursor": {
          "ref": "4f616693-e8bd-436d-8b59-73d2e3bb2426",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0bcac09a-e7fd-4f9b-9d53-f68bfe8da716"
        },
        "item": {
          "id": "4419ad7f-9914-4c2d-8cf7-09f5bd436cca",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2bb1ce02-8582-4c38-8618-3895ba8a89d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56769733-bccd-4cf7-92db-993c5cd86afa",
        "cursor": {
          "ref": "dbc4ed02-94fd-4fc4-b491-5f2d01c490f2",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "edc4cba3-37a7-442e-8c6c-2e59bd708f5e"
        },
        "item": {
          "id": "56769733-bccd-4cf7-92db-993c5cd86afa",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "96f374a1-aca1-4b77-a3df-21f7d143e770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5bc5624-a021-4ad3-9702-b54d13e0d6bc",
        "cursor": {
          "ref": "d3b774f2-175a-4ecc-b58a-0be27fd88033",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "dd670c9d-0218-4456-9cad-17afdf3182c3"
        },
        "item": {
          "id": "a5bc5624-a021-4ad3-9702-b54d13e0d6bc",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d2254a8a-5430-4f9d-9806-28cd0166488b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930f4b95-45eb-4150-b6ba-b576e85dd42b",
        "cursor": {
          "ref": "0d5848f0-67fa-489d-a7bf-645659ab4835",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "59236f3f-749b-40ff-b451-cf2d82dc54d1"
        },
        "item": {
          "id": "930f4b95-45eb-4150-b6ba-b576e85dd42b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d37837d3-146c-44a8-80dc-be1838977330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec08812-954b-4aa6-9f19-0e941f6471da",
        "cursor": {
          "ref": "fe14065b-1f7e-4e4d-8f50-35807ef58e56",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3dd9570f-55b9-4480-8f02-e12167808224"
        },
        "item": {
          "id": "4ec08812-954b-4aa6-9f19-0e941f6471da",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a234b026-d679-4954-988c-872a60809733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3d61df-c1c4-456c-9279-50b5757290da",
        "cursor": {
          "ref": "e99f6fba-c20c-4b88-9d98-1bf08c012166",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "11f3ec2c-795b-4812-97ce-b0367abeb039"
        },
        "item": {
          "id": "3f3d61df-c1c4-456c-9279-50b5757290da",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5d0c4efa-f27e-4e1f-acec-d97e852dcfcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784dc7ef-66f0-4ca3-bef8-77d0288bc4df",
        "cursor": {
          "ref": "f6187e30-a09f-4931-8057-e5f190c3a80d",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f0418526-d8cd-4881-847e-7222f2cc50ff"
        },
        "item": {
          "id": "784dc7ef-66f0-4ca3-bef8-77d0288bc4df",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9ef4c6eb-c07a-413f-9811-4ea72c688aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69df8961-195d-46a3-be38-5ece1b1312bd",
        "cursor": {
          "ref": "215f9d11-c666-4b1a-8938-17767ea216eb",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "db650b18-d940-40bb-957f-cadb81bd30b7"
        },
        "item": {
          "id": "69df8961-195d-46a3-be38-5ece1b1312bd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9c90978d-9781-4180-82a0-42e22de8c7c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb61cca-3e7c-4fc4-addc-7daa46aa7aaf",
        "cursor": {
          "ref": "30857095-b9f3-4489-a589-e7b72c33f66b",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "dc4eea69-ba41-4d50-b49c-4e9787f5315d"
        },
        "item": {
          "id": "3eb61cca-3e7c-4fc4-addc-7daa46aa7aaf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2d725a5d-0365-40c1-8335-8b57c018ef7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd10e965-5ac6-474c-822a-de53a963c6aa",
        "cursor": {
          "ref": "830d69eb-577e-4583-96f1-786c9a20fa4f",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9e884cfd-cc0e-4c78-b92f-d92c69a645aa"
        },
        "item": {
          "id": "fd10e965-5ac6-474c-822a-de53a963c6aa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "de6995bf-4d70-4a3f-b2d1-5416e2f5147b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee07ee8-8ab0-40df-9987-7c53677a4af8",
        "cursor": {
          "ref": "e5e92b27-b3dc-4f07-8ade-3fa9f4eab475",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "65de94e8-6619-45f0-8b37-0f92187e65c8"
        },
        "item": {
          "id": "7ee07ee8-8ab0-40df-9987-7c53677a4af8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "79761fef-ac85-4408-a56a-23e7d8a1f7c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d2610c-c6a6-4e72-875f-f146dc32bb9f",
        "cursor": {
          "ref": "19fe35ed-3713-497c-b206-03af9c534b00",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a3a9550b-c080-4c64-91ce-d95aa6685dd5"
        },
        "item": {
          "id": "49d2610c-c6a6-4e72-875f-f146dc32bb9f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6c805442-d56c-41bf-a3ba-78d870ed2061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6d4670-1842-4ff6-8226-f9a98a3e778b",
        "cursor": {
          "ref": "6387a707-59d1-4b99-ae16-405f28c97c39",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f0a4ecd8-ef22-4423-90f5-ce4e19f3176d"
        },
        "item": {
          "id": "3a6d4670-1842-4ff6-8226-f9a98a3e778b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b81c7fa3-f534-4283-913b-f10294ea6fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c23c3d-d066-48c8-b658-2cfd96d2ba90",
        "cursor": {
          "ref": "5c45e3f6-7a5c-42a1-a73d-c92cb72d97f0",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3af61e2f-6572-4dd3-8e28-5a3960d02cbf"
        },
        "item": {
          "id": "45c23c3d-d066-48c8-b658-2cfd96d2ba90",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "eab11cb6-f5ea-44c2-870b-72a6f9348fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1bca9a-a2fc-499d-a119-e1ed09a2ad9b",
        "cursor": {
          "ref": "cb574de2-de02-466e-9304-65388a6f3189",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f23446cc-cc19-48fa-be1a-38efec6c1f7d"
        },
        "item": {
          "id": "dd1bca9a-a2fc-499d-a119-e1ed09a2ad9b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "888e32f2-dfc5-4a01-94e7-7c7267260f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ea9e45-5c9a-48ba-b63b-481853055375",
        "cursor": {
          "ref": "e0c82d41-12bc-4e33-914a-42390381cbf4",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a4c76e71-d36c-436a-ac9b-27abdc3835f7"
        },
        "item": {
          "id": "18ea9e45-5c9a-48ba-b63b-481853055375",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5c9ee47e-4f30-45bb-9c1d-8c55306c2749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b76a853-8e11-4270-8ab1-a75e7c767d43",
        "cursor": {
          "ref": "88301b3c-9c9b-4ccc-8c61-926d6c3f669a",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a07d5921-4272-4fb9-beb5-cbb6e14526ae"
        },
        "item": {
          "id": "2b76a853-8e11-4270-8ab1-a75e7c767d43",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4c9fcc7c-5917-4c0a-9452-88c939a2014f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb77f1a4-cea9-4b3c-b31a-c7209ca2e530",
        "cursor": {
          "ref": "7b780064-f64c-4f71-9df7-d97367ccd8a3",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b391eeed-adf4-43b9-978c-c025b496dbb4"
        },
        "item": {
          "id": "eb77f1a4-cea9-4b3c-b31a-c7209ca2e530",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f32f5fef-dea2-4af3-8367-c86ea48d5b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24bded75-03b6-4f3e-ba9a-491fda43e28c",
        "cursor": {
          "ref": "2e991813-6e73-4116-bf57-e5d3699df02a",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a487ece3-3b94-4221-8207-7336ef80f85f"
        },
        "item": {
          "id": "24bded75-03b6-4f3e-ba9a-491fda43e28c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c0914142-5fbd-43dd-b516-66c05c4da3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1124ba-1938-4227-889c-54ca6f220e85",
        "cursor": {
          "ref": "390d7eb7-6e56-4a30-8fcb-fc162e500618",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "099387a0-0e66-430e-aadd-65e7f0ebc225"
        },
        "item": {
          "id": "1d1124ba-1938-4227-889c-54ca6f220e85",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "3137d955-cf79-4fec-968e-74cfa373d13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b2dd2b-39d2-41ea-90c0-72b1373328b7",
        "cursor": {
          "ref": "aa92bec9-43b7-4ce0-8a8a-d34d9d4e0f8d",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "929e196e-8f87-4656-8fc5-4bda6b49f483"
        },
        "item": {
          "id": "06b2dd2b-39d2-41ea-90c0-72b1373328b7",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "edb35451-4b71-4c63-8376-5e5f4de850f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148600f8-75e9-43b5-bd32-1561e0d17d15",
        "cursor": {
          "ref": "a812aae4-ceca-41b1-9634-8a3b882fd3a8",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "058792ef-9829-43ad-9031-06eb961db69c"
        },
        "item": {
          "id": "148600f8-75e9-43b5-bd32-1561e0d17d15",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "18a3a9b9-d01e-4fed-a025-56ed9c437903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723ab2eb-b1d5-4e8f-a38f-61ee899f3425",
        "cursor": {
          "ref": "41e41e44-9e1b-43c0-88ab-70bdf3939004",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5789545d-33aa-4265-8d9e-4a01b74947ab"
        },
        "item": {
          "id": "723ab2eb-b1d5-4e8f-a38f-61ee899f3425",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "af004b34-dc69-4445-a783-c1dd5c7c374a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c829c7b-a805-4d5e-94b9-e9d16213469d",
        "cursor": {
          "ref": "d9ead604-a30c-40aa-939c-513f20149cba",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "320bffaf-9600-4f97-81b6-d12864712d68"
        },
        "item": {
          "id": "3c829c7b-a805-4d5e-94b9-e9d16213469d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "91eec543-4840-4a87-99fe-6ec54afd8ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c75937-1818-4072-bdba-3fc90897644f",
        "cursor": {
          "ref": "fb1d9f8f-87ab-4659-b809-9330f359e372",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "cad4954d-2b45-494b-89d0-0735a1b77ae6"
        },
        "item": {
          "id": "05c75937-1818-4072-bdba-3fc90897644f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2282ce9b-7f56-48de-abaa-5cc32f89f121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eed8c11-c129-4592-9f06-63fdcf2c64a2",
        "cursor": {
          "ref": "b56bcfe3-6a3b-4750-b1a4-db73eda84233",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6020f202-a099-4790-831f-349aac8ed221"
        },
        "item": {
          "id": "3eed8c11-c129-4592-9f06-63fdcf2c64a2",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "cc5e3f23-9d02-4763-a66f-53141ccce393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aee2cba-de45-4153-877a-4ec832aba479",
        "cursor": {
          "ref": "267b09c0-48c8-4da5-8499-e28b988afcac",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b3a113dc-bf35-459f-8828-70857e71f748"
        },
        "item": {
          "id": "9aee2cba-de45-4153-877a-4ec832aba479",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f93a77b7-5734-411b-8547-7090ddc63708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e001db-ffba-4144-8257-0476262fade3",
        "cursor": {
          "ref": "b21bb461-4b81-4ee9-9698-fd6811cc3c75",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "627c86f1-f648-4b0b-b126-5ffdfd099d42"
        },
        "item": {
          "id": "60e001db-ffba-4144-8257-0476262fade3",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3ad2ae16-653c-437f-967b-3729f1daaec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51034cb5-0a51-490f-9333-0382aa1cc382",
        "cursor": {
          "ref": "f0ab4884-8332-4814-b600-6488ee3baf0d",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "db97a788-513a-4561-9fc4-a1cf77bfdaf7"
        },
        "item": {
          "id": "51034cb5-0a51-490f-9333-0382aa1cc382",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "262348f9-0fda-423a-bcf7-7caf37105ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca51526-ba77-4577-ae0c-db2dd5cdc9d1",
        "cursor": {
          "ref": "27282b3b-4c87-47fe-bd3f-4e706604a3ff",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "835ee3e2-8469-48c8-882d-90b3c52b7029"
        },
        "item": {
          "id": "eca51526-ba77-4577-ae0c-db2dd5cdc9d1",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f242c25b-236d-4764-9742-a783fa458602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a25497e4-49e8-42c9-b08d-34c624104014",
        "cursor": {
          "ref": "05df4280-e6f1-4aae-95bd-75c8ac2dd04b",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "bd42b63e-21a1-432a-b67e-f62153be3105"
        },
        "item": {
          "id": "a25497e4-49e8-42c9-b08d-34c624104014",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d9ad7836-18cf-4be3-a9fe-25cc0fc7c75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "757650fb-b79f-4b83-a401-0d7342bdb0a5",
        "cursor": {
          "ref": "0bca938b-5b97-4844-9fe5-88338c3e2019",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d1c5259f-1fc3-410f-91cc-3a0352a32873"
        },
        "item": {
          "id": "757650fb-b79f-4b83-a401-0d7342bdb0a5",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7c10ed8f-d19b-44fe-ade7-158b1ecc7de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b64ad34-9fe0-4649-bdf2-d51b89083a1d",
        "cursor": {
          "ref": "d0790a96-7221-4a91-97a1-3ca6d61efe96",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6cc8856b-26ae-4f1a-aa0e-89d1f4014cd1"
        },
        "item": {
          "id": "6b64ad34-9fe0-4649-bdf2-d51b89083a1d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "23639aa2-1e87-40c2-9819-33830fb663c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2606113b-4a82-4242-aa64-9d1aa8c35208",
        "cursor": {
          "ref": "78f020fb-e338-4302-9255-cef5db871cbd",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "9355c737-d28f-46d3-b487-9d4d6613f623"
        },
        "item": {
          "id": "2606113b-4a82-4242-aa64-9d1aa8c35208",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3b5fecac-1df5-478f-b4e9-01395da39921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee91823-cb2d-439a-ae11-a74045eb57f9",
        "cursor": {
          "ref": "00af1fa0-1072-4e8e-90b4-93b6de72432a",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5ee1c5d5-7db2-4927-bebb-a7aac0a1894f"
        },
        "item": {
          "id": "6ee91823-cb2d-439a-ae11-a74045eb57f9",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "41e984a8-4490-4d2b-bdf1-ab8e74ba285b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1476a508-463f-40e3-9e7c-a5778b876049",
        "cursor": {
          "ref": "c78d8baa-112f-46be-b2fe-6e5a44131b9a",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7d020e4b-212c-4c79-ae94-28302cca9fca"
        },
        "item": {
          "id": "1476a508-463f-40e3-9e7c-a5778b876049",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "25ffb78a-4ad6-4d2e-8138-175cb500ea1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0186963d-2ec7-48c8-8090-cd64df116f3a",
        "cursor": {
          "ref": "e88cc340-f723-46fd-8d03-e26f17dd1fee",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "731fc15d-224d-4ba0-bf73-cfe265733e20"
        },
        "item": {
          "id": "0186963d-2ec7-48c8-8090-cd64df116f3a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4b2b3f2e-6073-40ae-a20d-0c4a17654de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f922ee-2ee0-4616-8644-765018f1e514",
        "cursor": {
          "ref": "8bc270d4-bfe8-4af5-bd88-f1112a5aad3e",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e5c3f124-f141-4a0a-b0aa-c3a3422e8aad"
        },
        "item": {
          "id": "b5f922ee-2ee0-4616-8644-765018f1e514",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3ec4c652-e201-41fb-8db3-1cff749d8238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4073dfe-d845-4fc8-a575-d694c8321053",
        "cursor": {
          "ref": "c47253c2-7046-4052-a82d-6234d0f90c5a",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "78faa947-f903-4723-afe2-3effb810d7b0"
        },
        "item": {
          "id": "e4073dfe-d845-4fc8-a575-d694c8321053",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d7a44889-8acc-4012-ba8b-2ab1c03ca793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60dcdad0-ad7f-460a-b7cd-ed29071d63d0",
        "cursor": {
          "ref": "c312d70f-94a5-4a8c-a60b-d0b932dd9e92",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d33a13df-7bd1-4e63-92a4-a1f418f5f2b3"
        },
        "item": {
          "id": "60dcdad0-ad7f-460a-b7cd-ed29071d63d0",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e2dadce9-426d-451c-bc82-192e60e8509b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b81ddf2-2361-48a3-b379-ce590125956b",
        "cursor": {
          "ref": "768147ad-f122-4f73-873d-a06062b0c3bc",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b33b3b3c-637d-475f-a5ec-329a5d0ec0d0"
        },
        "item": {
          "id": "0b81ddf2-2361-48a3-b379-ce590125956b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b3fcb772-ce6d-4317-8df8-8209bd10ef09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2609fb-0b89-4138-bd20-20b72c8811ba",
        "cursor": {
          "ref": "3f02bcaf-b5ca-4355-9625-0b5ee986f318",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "49c833a0-66ea-4dbd-9067-3a16eb67e232"
        },
        "item": {
          "id": "0c2609fb-0b89-4138-bd20-20b72c8811ba",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "fec7ac02-409b-484b-9402-a63871b96ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c0745a-06a8-47c0-8ee7-c102d5680259",
        "cursor": {
          "ref": "3e30eff1-65a4-4cc9-99a6-1662d3e81399",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b2b3946b-a7c2-47ca-b1d7-fedef7a76e81"
        },
        "item": {
          "id": "94c0745a-06a8-47c0-8ee7-c102d5680259",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "df5b47ef-60fd-4409-addc-7c79ba4d62b1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4582521e-fad8-4727-8c64-d04b7f462510",
        "cursor": {
          "ref": "b287db65-6fc4-4373-a4c9-60c2775d47d8",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "24819029-bf60-4b04-8ff4-3d69e62b2e3b"
        },
        "item": {
          "id": "4582521e-fad8-4727-8c64-d04b7f462510",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6e43aeda-1d6d-4d4d-8562-ea1b03909096",
          "status": "Created",
          "code": 201,
          "responseTime": 6929,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c90448-f92d-4463-be09-20a7fbbf384e",
        "cursor": {
          "ref": "d594f642-0c3e-4a9c-b506-8ace685b30a9",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d251e628-61a9-4aec-9938-f0ab2d448669"
        },
        "item": {
          "id": "49c90448-f92d-4463-be09-20a7fbbf384e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "02bd4d8f-133a-466b-b2e4-7abdb5300b92",
          "status": "Created",
          "code": 201,
          "responseTime": 5974,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a44bce-b45a-47af-9e98-3a7b594f3fd7",
        "cursor": {
          "ref": "4bcac8da-4a4e-4978-a3a4-ca9f66a06686",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9ea5ce17-5ef1-4424-b17a-8524b9affc73"
        },
        "item": {
          "id": "c9a44bce-b45a-47af-9e98-3a7b594f3fd7",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "91189af2-c3f7-4ba0-a421-316003132c86",
          "status": "Created",
          "code": 201,
          "responseTime": 6758,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "99fec9f1-5b19-4318-8703-57763cfd0357",
        "cursor": {
          "ref": "53c38bb3-37ba-42a7-8b8d-4899e04bcda0",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "16bc9236-3857-42ff-9fa6-5dd3d01b5733"
        },
        "item": {
          "id": "99fec9f1-5b19-4318-8703-57763cfd0357",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "266221d7-f4d5-4eaf-95d3-26c39e474f5d",
          "status": "Created",
          "code": 201,
          "responseTime": 7101,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce283d59-7d41-4082-9fe6-650c9b4c292e",
        "cursor": {
          "ref": "3da680f6-9ff3-466b-a537-277f0ccdc250",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "97b9b65d-f997-4d8b-91af-b43987e16277"
        },
        "item": {
          "id": "ce283d59-7d41-4082-9fe6-650c9b4c292e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "7d8b3946-1f78-4ec2-bb8f-62448b035b83",
          "status": "Created",
          "code": 201,
          "responseTime": 6540,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb12facf-5d31-48a4-b598-b07c2e6d135b",
        "cursor": {
          "ref": "d4d7eaf4-6d1b-46fd-9523-65aa61d8d254",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f365d6ad-6b74-4a13-8d05-b8db8984019b"
        },
        "item": {
          "id": "eb12facf-5d31-48a4-b598-b07c2e6d135b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "1450fa4c-48be-424b-acaf-2dd800027d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "4e58751f-7b9f-456b-a7ca-f651557a82d7",
        "cursor": {
          "ref": "df51bbe1-5a58-431c-b210-fcdf0b9c1855",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0c85a8a6-b651-4c84-880c-1054116ed165"
        },
        "item": {
          "id": "4e58751f-7b9f-456b-a7ca-f651557a82d7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b9aa121a-8ed2-40cb-98e2-12cb03a85c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ba4bfd-3f52-4fe2-9f39-b337b4197268",
        "cursor": {
          "ref": "67262696-4329-457c-8e33-2a4d7e2ebc2f",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "92f5f5f7-efb1-4ec2-acde-6fba870f2d7d"
        },
        "item": {
          "id": "62ba4bfd-3f52-4fe2-9f39-b337b4197268",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1491ecee-4eb2-42f7-9399-641967df70b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "793825a3-73c9-4195-8b55-4e1905537c49",
        "cursor": {
          "ref": "5cd7fa47-c961-4755-82ff-603f7f1ec1ee",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3b67cc2d-1dcf-4643-9637-cd8407a07671"
        },
        "item": {
          "id": "793825a3-73c9-4195-8b55-4e1905537c49",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "65862548-004a-4197-9488-9b00406986a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4062e5-23d2-4ebf-89f4-5858cd6585fa",
        "cursor": {
          "ref": "77153ee8-ab08-4334-9c6c-cde9c528798a",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "327594af-f94a-40ee-9ef0-8edfe30ffafd"
        },
        "item": {
          "id": "db4062e5-23d2-4ebf-89f4-5858cd6585fa",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "586012ab-704f-46c8-ad2e-c046a1009954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2296220-ffff-4806-9b69-918c000eb309",
        "cursor": {
          "ref": "3108a27a-fd80-42cb-a1e5-c3cfe8c11e80",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "78d20681-9d3e-4575-8178-2b035c636881"
        },
        "item": {
          "id": "a2296220-ffff-4806-9b69-918c000eb309",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c6a443f0-24a1-4755-a813-6188ffa100f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb73319-2879-4402-a1bd-ce17bdb19c73",
        "cursor": {
          "ref": "7bbd7f65-1e99-4e9c-956d-45d8e65ac56d",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "db8c3ebe-49a9-4780-aba5-b66538d71621"
        },
        "item": {
          "id": "beb73319-2879-4402-a1bd-ce17bdb19c73",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e572505a-3a5e-4ee3-87a7-592a6472c886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8055e5-d67e-4b6d-a7d9-b7baba6a9560",
        "cursor": {
          "ref": "914c73d2-0302-4d40-b819-2027c3c15af9",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "666e74af-0b78-40aa-b11f-d7821b5f5622"
        },
        "item": {
          "id": "0f8055e5-d67e-4b6d-a7d9-b7baba6a9560",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9f03244f-63a3-4997-b72d-207cb129dd41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69344335-8b90-4fad-a5d2-3d44e6733075",
        "cursor": {
          "ref": "a3e71640-789d-45b0-96c9-9ec9367dd78a",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9b560433-8d17-482d-903d-c8eb0091c59b"
        },
        "item": {
          "id": "69344335-8b90-4fad-a5d2-3d44e6733075",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6cabd9a4-76cd-41f7-894b-43a0618b8090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02de5f1b-2386-40cc-9144-585f8f6189c5",
        "cursor": {
          "ref": "9bbcf88d-6ddc-499f-82bf-8e2a87550421",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "009b0219-67f2-4bb2-b860-79ddde33355a"
        },
        "item": {
          "id": "02de5f1b-2386-40cc-9144-585f8f6189c5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4bdff5b3-60e9-4bcc-88b5-d0784a1c94e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fbbdd5a-3150-479d-82c4-c81d3a7f8147",
        "cursor": {
          "ref": "843a18b2-aa20-44c1-8864-72dd93b7f4eb",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ee9ea05e-f671-456d-8eba-b6c21cf70a54"
        },
        "item": {
          "id": "3fbbdd5a-3150-479d-82c4-c81d3a7f8147",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "30d7abed-9607-4b85-8492-0bf4b60df77a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59bc183-9dc2-4bcb-b797-232f1fad0655",
        "cursor": {
          "ref": "6667f32d-ea8f-4d97-b0b8-993fff2665f1",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "dbbcddb9-5195-476c-8707-d0a191c7c119"
        },
        "item": {
          "id": "c59bc183-9dc2-4bcb-b797-232f1fad0655",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c900ce3e-e0fb-405c-b504-0586e49c6416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068dfdcd-9736-4ddb-83a5-9000acad2f11",
        "cursor": {
          "ref": "9a5838da-cc9e-40b0-bb3c-976e9a886800",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "feada6d4-4bba-463a-bd42-769a183b2cd5"
        },
        "item": {
          "id": "068dfdcd-9736-4ddb-83a5-9000acad2f11",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "fce46ae2-20c6-4ba5-855e-41cfcc167c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29aa06e1-b384-42db-b107-99a26b8be262",
        "cursor": {
          "ref": "b81d27d2-1f27-4d59-90d0-f1d14bedd62c",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3d287a00-9cc5-49f9-962b-72ba325ec8ea"
        },
        "item": {
          "id": "29aa06e1-b384-42db-b107-99a26b8be262",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0e05c6ec-dfa0-4e4d-a314-e17d9d2498ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36bcf6ce-676e-429f-b334-f4fb3e683e1a",
        "cursor": {
          "ref": "4a7048c5-8507-4be5-91d5-b8934c290066",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "64b8dc27-5dce-4c5c-bdbe-91b7426917d2"
        },
        "item": {
          "id": "36bcf6ce-676e-429f-b334-f4fb3e683e1a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5b30463b-e8e2-4c1b-b94b-ace63c001942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55cabec-e116-4710-9d80-916c8bb831ad",
        "cursor": {
          "ref": "0e34d201-f0fc-4dd5-bf14-e8efcdd789a8",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "1792a5f5-2907-4ed3-a557-ee6dfac68c61"
        },
        "item": {
          "id": "b55cabec-e116-4710-9d80-916c8bb831ad",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6f313e74-f063-4947-a856-1ca4bfac8d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c33c90-e755-40c5-87e1-41850a43aecd",
        "cursor": {
          "ref": "b807f060-ecc4-497f-a225-239552e22172",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c0fd149d-9424-4994-8f64-ec3e0072db7a"
        },
        "item": {
          "id": "25c33c90-e755-40c5-87e1-41850a43aecd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c8641a6e-4904-4100-8e6c-6aae1e6cfcc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b50dd11-6b10-4207-a830-dc8388e2c401",
        "cursor": {
          "ref": "ed282b11-5d3a-48d0-8db9-770de072a1a0",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5bb849f9-d159-4c9b-af3e-4c9fa2e249a4"
        },
        "item": {
          "id": "6b50dd11-6b10-4207-a830-dc8388e2c401",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6d386277-f087-4815-aa8e-d5f68a61c5a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8453bcf3-feff-42d4-9eb9-f0ee5c8b87a7",
        "cursor": {
          "ref": "63a4c8c4-f803-4db0-8a72-8d2f12de99a4",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b5b19b1d-0a9d-457e-89f8-824cd687e8aa"
        },
        "item": {
          "id": "8453bcf3-feff-42d4-9eb9-f0ee5c8b87a7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "75d78717-6ba5-4cb3-9985-d92982d3db79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5bf4ba-32c8-4fc6-af0c-49f6073b29ec",
        "cursor": {
          "ref": "3a0f1634-b64b-4562-ba7d-9d5824757a74",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4b62383e-5572-429e-ae27-fc25f1b61a38"
        },
        "item": {
          "id": "7e5bf4ba-32c8-4fc6-af0c-49f6073b29ec",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "93740fe3-d75c-419e-b4b7-4bac324e439c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b3aa21-6896-44e6-96d1-d1fd37011b8e",
        "cursor": {
          "ref": "c310329f-963d-42d3-afbc-500bedc1046b",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "07ac4bf5-01e2-41ae-95f4-5cf4c9a62da5"
        },
        "item": {
          "id": "78b3aa21-6896-44e6-96d1-d1fd37011b8e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "59535237-2aff-4f05-ad25-2df1a8c82806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe0921e-e9be-4ae8-966a-209989c640bf",
        "cursor": {
          "ref": "1c6f57da-7fb0-4ad4-86c1-f96c7292b73d",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "97fb2452-4ea6-49e8-9e01-6f6763d4bc47"
        },
        "item": {
          "id": "bfe0921e-e9be-4ae8-966a-209989c640bf",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7a9abad2-44fd-459a-b203-bb3ed61238ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d242237b-d097-4b3a-a500-513a5093da57",
        "cursor": {
          "ref": "248d6f9f-4f3b-4c1c-8266-5d6cbefbacb0",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7e185b07-ba60-4d69-9006-1ce50c2b91c9"
        },
        "item": {
          "id": "d242237b-d097-4b3a-a500-513a5093da57",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "541b22f0-3c3c-494b-ae21-e9127eb74c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f73d15b-811b-4802-b6bf-c7c4e52edc18",
        "cursor": {
          "ref": "a0b8a195-b93a-41a5-aca9-c0357b0e22ad",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "771c334d-150b-4632-9f8c-4dd32ffae0e6"
        },
        "item": {
          "id": "6f73d15b-811b-4802-b6bf-c7c4e52edc18",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ddcf6a82-acda-4737-90f6-ccd82e46b29a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2f86f5-2422-4d10-9c42-28b2f19b21da",
        "cursor": {
          "ref": "d7afaee6-c9a6-48cd-99be-6de5c01eb9e3",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "32b8d386-3f58-4089-ba1f-7d411d888278"
        },
        "item": {
          "id": "2c2f86f5-2422-4d10-9c42-28b2f19b21da",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3d76197b-4164-408e-84a6-74ef9479371b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86cce0cb-43bc-4f94-bc96-f4230c25e64a",
        "cursor": {
          "ref": "1f55f9fa-20eb-41e8-8114-660af7e413b7",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ce524fa3-1231-4a7a-b9bb-0c8556c864f0"
        },
        "item": {
          "id": "86cce0cb-43bc-4f94-bc96-f4230c25e64a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "56dde3f4-42c1-44c6-a896-de0fb057e75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291c86a4-a0d1-452a-976f-3436e0f6039b",
        "cursor": {
          "ref": "4c5d960e-d9fa-4d83-9cdc-dc2debdfcb89",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d9ce3df1-b43f-45d1-998f-db0e93caf353"
        },
        "item": {
          "id": "291c86a4-a0d1-452a-976f-3436e0f6039b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "75f66361-43a3-46da-be42-77cd6608af53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3826c116-1e89-4349-bd57-d28074c152c5",
        "cursor": {
          "ref": "76a4159c-e292-4f52-9c0d-846c57071744",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4355ba44-be84-45ea-a7a7-b86dff6931f0"
        },
        "item": {
          "id": "3826c116-1e89-4349-bd57-d28074c152c5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "83dfc9d3-6326-4b01-a4bd-a514edbc1108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbee7140-a367-46e4-a4ec-76b3a3badbaa",
        "cursor": {
          "ref": "e834b62f-403c-4ad3-8a38-c11b13ec4156",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7f6bb7f0-e24c-4d20-ba9d-5de8324b6823"
        },
        "item": {
          "id": "bbee7140-a367-46e4-a4ec-76b3a3badbaa",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2c81c6b4-7ddd-4514-aae3-4545495e38cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92513433-1db1-4df0-ae29-95c639c59c57",
        "cursor": {
          "ref": "505c15da-a1a0-4251-8efe-0a38f038ae0c",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3b4bea7a-3278-4d9a-a57b-3a4f1f3b2b63"
        },
        "item": {
          "id": "92513433-1db1-4df0-ae29-95c639c59c57",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4d577bfb-f057-4114-ad73-7723dbc95870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd62e73-22de-4a10-8dd4-96f8eeed74a7",
        "cursor": {
          "ref": "1b527e9f-ff82-4cb2-bd1b-0211b2373275",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3c985302-7163-47a8-a11f-2b7c79f401a3"
        },
        "item": {
          "id": "efd62e73-22de-4a10-8dd4-96f8eeed74a7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "18c36d7d-203f-45db-98bb-0ebf3c6c7a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a901d8e6-1643-4d22-943b-b7137f5ec589",
        "cursor": {
          "ref": "41739427-c78f-49a5-96e0-86481ebfd59d",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "81089b5a-2101-4983-a33e-57e5b1cf8d8d"
        },
        "item": {
          "id": "a901d8e6-1643-4d22-943b-b7137f5ec589",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "547dff89-38db-4335-9963-48387691b445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c2011c3-109d-43b6-8cda-716a0ee91761",
        "cursor": {
          "ref": "1235e293-fb3a-49ba-930e-d39aa7b95aed",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7d950ce5-c8b1-4dbd-803a-a782b0500b00"
        },
        "item": {
          "id": "6c2011c3-109d-43b6-8cda-716a0ee91761",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c2c44d84-3a12-4675-9d46-30e4fabcbb9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c980196d-7865-456a-80ed-fff58d75f0b7",
        "cursor": {
          "ref": "3bbd8dfc-9354-4211-972e-40e526dd91bd",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e79d7f53-1488-42d2-af87-b9d7985bf19d"
        },
        "item": {
          "id": "c980196d-7865-456a-80ed-fff58d75f0b7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e8ea4fc7-91ff-4c57-8dfa-6cec91c45028",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a239d8-96da-458c-81c0-46cf79ebc15d",
        "cursor": {
          "ref": "dfd33df2-0f1e-4568-9d00-7262682ee8de",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4de16ffc-9006-43e2-bd86-bac25af85e64"
        },
        "item": {
          "id": "c1a239d8-96da-458c-81c0-46cf79ebc15d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9e80037c-7578-40b6-98ce-ac0add417f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "548d260f-1af8-432f-9b12-a9b58af28b70",
        "cursor": {
          "ref": "534a7533-dbee-4542-9a06-fa928db54108",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "fd7b6c9f-3f83-4f43-b5b2-5cb1e49c6d64"
        },
        "item": {
          "id": "548d260f-1af8-432f-9b12-a9b58af28b70",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d7532de1-149e-4306-aef7-7549b83bd0a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9e7e62-3645-4c10-bb9f-1231fb0c0cda",
        "cursor": {
          "ref": "2d2572f3-c3e2-4c26-90eb-77a9cd444cb5",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "dfc5b851-e9f5-4024-8b64-4cbe32bdea48"
        },
        "item": {
          "id": "7e9e7e62-3645-4c10-bb9f-1231fb0c0cda",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "484fce92-9c0b-45c5-89e7-10604159467c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7bc4ce3-f9a7-438a-8ab6-68717cff408a",
        "cursor": {
          "ref": "e31c9322-f3e3-4c9d-8901-dedcc8e3ba03",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "16b3aa9c-2c5e-48e0-8f68-87102ef79b29"
        },
        "item": {
          "id": "b7bc4ce3-f9a7-438a-8ab6-68717cff408a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c9f778ff-547c-465c-9aae-2f0d5ee136b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac15ff3-4e64-4884-82ed-3cda55ce8fa2",
        "cursor": {
          "ref": "c42ea4a7-9937-4bba-be65-2421460ab203",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "69c84789-8f4b-4ad3-8e88-9a5b1faf6ea0"
        },
        "item": {
          "id": "cac15ff3-4e64-4884-82ed-3cda55ce8fa2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "96a0f9e5-15fd-414e-aae8-5b295a98171e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd01dc0-908e-4179-8a0a-194a12a262e6",
        "cursor": {
          "ref": "93c55d58-aae6-4e14-9327-f8ca63ba5ee8",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9f718b70-11a5-47fe-9621-824523c42170"
        },
        "item": {
          "id": "5fd01dc0-908e-4179-8a0a-194a12a262e6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c11399e6-7e00-458e-b781-75ba2d4a9b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a26a1af-657a-43e1-baaa-af3c13f9b77b",
        "cursor": {
          "ref": "ea2fb951-e39b-4160-85bf-85ad034d9eed",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "02bdd110-698e-4764-ae1f-6fd630cbc69b"
        },
        "item": {
          "id": "1a26a1af-657a-43e1-baaa-af3c13f9b77b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3d2f2bab-505e-4079-9b65-bce9f642dad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a1ecee-55f1-4ebb-8369-9ff8a28faa9e",
        "cursor": {
          "ref": "7189a87b-840c-4aba-a475-b8fe67d6d3d8",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7bdd7be0-2540-464f-a73d-d98245220424"
        },
        "item": {
          "id": "e8a1ecee-55f1-4ebb-8369-9ff8a28faa9e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a5df287a-d0d3-475a-809e-8c10d786a299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e98650-0c4e-422a-b791-b270b0757dd4",
        "cursor": {
          "ref": "c1543194-3cf2-415b-8a96-0157afa7d092",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "55cf8c29-39e9-4a4c-af8d-3cb5cbeb4cfc"
        },
        "item": {
          "id": "31e98650-0c4e-422a-b791-b270b0757dd4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9dad77d9-fa25-43b9-9435-106bea6d2722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1751d3a0-e8e4-41aa-aae8-3b1c75669e13",
        "cursor": {
          "ref": "425687ca-6195-483a-8df3-9525565dfcb2",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "867cb882-46ee-4f7e-b935-0e79bcd39fa1"
        },
        "item": {
          "id": "1751d3a0-e8e4-41aa-aae8-3b1c75669e13",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0d8f0d3c-1dc2-42f3-8c21-d81efad44f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "323bb31e-8279-48c9-a149-d6601287d0f8",
        "cursor": {
          "ref": "a6a6f58a-7e40-4175-84e5-a7e67605e235",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0521d514-3c07-4ad5-be5c-aa5f1c1ae99f"
        },
        "item": {
          "id": "323bb31e-8279-48c9-a149-d6601287d0f8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "cb9061d4-1dc8-43e4-950e-af8bc9979f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a5388a-ef95-490d-9d05-044a47a0d80d",
        "cursor": {
          "ref": "b6348589-c828-4a99-80c4-65eb31a90291",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "91edb70e-64c3-4c8c-9581-aaaee72e49da"
        },
        "item": {
          "id": "85a5388a-ef95-490d-9d05-044a47a0d80d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6f881d0a-9130-458b-8b91-99bd7aafb46a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61afc385-3ca8-4156-8223-1754ac72f7a9",
        "cursor": {
          "ref": "e04f3699-91d9-4d53-9052-fe4a47f2a85f",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "aa5bf522-d4d6-4c6c-ae5e-fdd58181a2da"
        },
        "item": {
          "id": "61afc385-3ca8-4156-8223-1754ac72f7a9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e50f6154-d71c-4de7-89e2-6287180bb238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a1c58e-bfde-4f5b-a505-af6cf12fedcd",
        "cursor": {
          "ref": "3e3890a1-1804-4296-a959-2c1781c125e3",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "60609e9f-918b-4a50-9484-d4fd7d748870"
        },
        "item": {
          "id": "03a1c58e-bfde-4f5b-a505-af6cf12fedcd",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bc4273c4-5b2e-4b23-b2cd-ad029bdf8249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a4981f-387f-4962-bded-dcc178d5f013",
        "cursor": {
          "ref": "dc0b4c36-601d-43b7-8af0-eaef9ac2a9a9",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "abf04b0c-53e9-4084-9456-031f53099e6e"
        },
        "item": {
          "id": "e0a4981f-387f-4962-bded-dcc178d5f013",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b0a10385-8e6a-4fb1-a3a4-b6085e9f019c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f770992-7e87-4dac-a503-386da45bfe39",
        "cursor": {
          "ref": "e226fe70-e6ea-4dc2-a553-3df4916c5839",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ad201240-d88b-435b-b8e6-5bc6e755399b"
        },
        "item": {
          "id": "0f770992-7e87-4dac-a503-386da45bfe39",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "063e5724-0384-48e2-9cf1-c987f864cd76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34c16f9-6a7d-4603-a3a5-5f920d1f62c0",
        "cursor": {
          "ref": "a06bfa84-05d1-467b-8c96-7dc6be3c1a61",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8b2c8efe-2d58-4a10-bdf0-4ff3b2cf0444"
        },
        "item": {
          "id": "a34c16f9-6a7d-4603-a3a5-5f920d1f62c0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "bfb13706-1921-4185-8916-fe4baac7c780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede097fb-13b5-495b-81c0-d2af6d0ad3d7",
        "cursor": {
          "ref": "17782439-af31-493a-b337-0ff28604a835",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f424dc48-ff4a-4388-a5ab-55da9522c33f"
        },
        "item": {
          "id": "ede097fb-13b5-495b-81c0-d2af6d0ad3d7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8e4a68f5-c715-4f21-9618-5899a5afb0eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1318c7d8-0708-4636-be1e-0e55224ee4f0",
        "cursor": {
          "ref": "8f95e7d8-0e19-4485-b587-a72d09070d6f",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7db92b2a-2470-4b54-b4a6-bacc6238a1fd"
        },
        "item": {
          "id": "1318c7d8-0708-4636-be1e-0e55224ee4f0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "00285dfd-8c31-4068-90b6-385ccadcbd90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1010,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d88395-1147-408b-b315-936289f9a64c",
        "cursor": {
          "ref": "a236455e-0c1d-478e-b06c-255e512851ad",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "944932a4-6739-443b-8d9a-36d0d10dc852"
        },
        "item": {
          "id": "19d88395-1147-408b-b315-936289f9a64c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4777326e-a313-4168-a338-17d5975f5ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d98a11-6901-456b-bc94-280a03b8345c",
        "cursor": {
          "ref": "312c7ba6-5042-4868-8d7b-70f82c03dd24",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2d48f5fb-4cf3-4cdc-bdb2-a83b242cd000"
        },
        "item": {
          "id": "c8d98a11-6901-456b-bc94-280a03b8345c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "01c352e2-a2d8-41b8-ac79-236d07f570eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a526cb7b-fbae-48ce-a544-6d9c45a34e57",
        "cursor": {
          "ref": "307b5dcf-ba39-480e-9064-a4ee5334a382",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "70133faf-d239-4f5e-959b-da32d42388ed"
        },
        "item": {
          "id": "a526cb7b-fbae-48ce-a544-6d9c45a34e57",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f72a017c-24b7-4736-8525-1528a686be8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba3b104-3ac6-41a6-a791-3ddff7db3d77",
        "cursor": {
          "ref": "0480099d-e521-432b-a934-c2dc7081c0e5",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0856b944-5f04-45a5-8396-90a5fcc8dba9"
        },
        "item": {
          "id": "cba3b104-3ac6-41a6-a791-3ddff7db3d77",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "42e64515-5e60-41b9-a7e9-6ab6162adf2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9632b5e-7c6e-42d5-88af-9fb96f7f9af3",
        "cursor": {
          "ref": "0d13392f-faa1-4ff5-a62c-2edd986f9123",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "67eb8a7b-aad8-4b5b-876c-4e9b9bba91f8"
        },
        "item": {
          "id": "a9632b5e-7c6e-42d5-88af-9fb96f7f9af3",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c21ab3d6-2a96-4f57-b3b4-e3a6bbe732a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad77ffd-c600-4639-9ca3-89a69fb451b8",
        "cursor": {
          "ref": "754bcda1-6186-4889-b5d7-61f1c06e2900",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "47e81f4d-c641-4dfb-9fea-7178f878967a"
        },
        "item": {
          "id": "3ad77ffd-c600-4639-9ca3-89a69fb451b8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b203a326-bb0e-4a8c-8d7e-f5c80219355f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c942f5-8823-46cb-bf69-fdb519cb08c1",
        "cursor": {
          "ref": "f7d968f5-6b03-4c6c-9664-7de3208ec73e",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "bd2d89ef-2e89-4677-8c23-94799fdf3057"
        },
        "item": {
          "id": "c5c942f5-8823-46cb-bf69-fdb519cb08c1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "20cfcdef-327b-4992-8e4f-c56fe335de11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7aebaa-aefc-4842-8ca3-01f8d6859dd8",
        "cursor": {
          "ref": "8c1aad59-b377-4fa1-8ac6-99703526b8fc",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5031e6e0-3774-4654-bc7b-1ef86f5b48ba"
        },
        "item": {
          "id": "6c7aebaa-aefc-4842-8ca3-01f8d6859dd8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "56ca595c-514e-49d8-9613-abea0eab2a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3cf75c6-ccb6-4797-80dd-ab67d8c7d2c5",
        "cursor": {
          "ref": "5680477b-bd3c-4234-83c1-7e8c96cdbe14",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ff9a2155-b852-460f-accb-a70db660fb71"
        },
        "item": {
          "id": "b3cf75c6-ccb6-4797-80dd-ab67d8c7d2c5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "36a0264d-2361-421e-9094-8f99a961606c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563672e2-8778-47a3-bf2c-ffeb84138101",
        "cursor": {
          "ref": "b173f9d0-6b8d-4d51-902c-4046d5839a03",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "bf9a0c5d-83b5-401a-b605-47e15a910f31"
        },
        "item": {
          "id": "563672e2-8778-47a3-bf2c-ffeb84138101",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "618dba31-e9ac-428e-81cd-1e14b6259f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dacf565-628b-4ff2-9637-4904d8057e4f",
        "cursor": {
          "ref": "39f60b8e-3cfc-4087-be91-6cc2e7e04231",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "461ee53b-6008-43de-b246-e760b6fe544b"
        },
        "item": {
          "id": "4dacf565-628b-4ff2-9637-4904d8057e4f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e29cc22c-a209-4c31-a8b2-4ceb63fe481a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89448206-6b79-4021-96bf-9ecfd0a1eee9",
        "cursor": {
          "ref": "17ffb437-b0d3-4c5f-8669-eeee1e8736ca",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b31443bc-b740-44d7-8894-41eaa7bbc222"
        },
        "item": {
          "id": "89448206-6b79-4021-96bf-9ecfd0a1eee9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "402b06a8-0d12-4045-b47d-056c48cc5ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5a8870-d7b5-47ae-b165-7935b5a2e4bb",
        "cursor": {
          "ref": "9ee5d484-4735-4878-bec8-1cb207845d2a",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2e25d3f8-4213-4fba-9946-dac34c6c4bc7"
        },
        "item": {
          "id": "5e5a8870-d7b5-47ae-b165-7935b5a2e4bb",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "83f0b129-55f0-4577-b7fb-edde04addbe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bce6b83-0cc1-4c60-9690-3ad74665b29a",
        "cursor": {
          "ref": "3da4a64a-b6a1-43b7-abf8-b171ed385dfa",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "364f3bfb-0ead-40ce-8a91-43cf372c099e"
        },
        "item": {
          "id": "0bce6b83-0cc1-4c60-9690-3ad74665b29a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "3ada1aff-6325-4666-939a-9e50b02a19ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35897fcf-e492-401b-89b7-c0a0988c04ba",
        "cursor": {
          "ref": "ddb526bf-88a4-4b44-808d-f4ee9d8fe635",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1e8fd422-afd8-45a1-a53a-5f249e9c34d8"
        },
        "item": {
          "id": "35897fcf-e492-401b-89b7-c0a0988c04ba",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "808e55b0-ba8a-4061-86d0-5b61b7e8dc1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46181742-1e92-48e7-b182-b40374b8cfe5",
        "cursor": {
          "ref": "65dd1a24-d487-4e79-bd80-88efbf2ae8b8",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "27921e8a-a468-4683-a75b-df38e877c492"
        },
        "item": {
          "id": "46181742-1e92-48e7-b182-b40374b8cfe5",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "7361a158-8e92-4eba-8497-151e680109f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ad0ee4-459a-4c5c-93f0-e649085e5fae",
        "cursor": {
          "ref": "1179c31a-c84c-45b3-a126-a433f1f471ae",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "30d54824-d391-4852-857a-c1a3583b9bbd"
        },
        "item": {
          "id": "b8ad0ee4-459a-4c5c-93f0-e649085e5fae",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "a237461a-61b7-4ffa-a4e4-1c1b2b1ca53f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbef7fb-1534-41d2-ba6b-6730df9de04d",
        "cursor": {
          "ref": "2277db39-5760-40b8-bded-5b61a1d81fb5",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "dbc58044-eb17-4e56-969a-439bf83c94cc"
        },
        "item": {
          "id": "acbef7fb-1534-41d2-ba6b-6730df9de04d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9a923e17-492a-4aec-95ff-47e6a2293183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9dedd8-015f-440d-8d20-1976cefe6b15",
        "cursor": {
          "ref": "643b6ff3-8fc1-4b1a-8f48-ba3cd4b37a09",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a84122ab-1e2b-4b5a-8b6c-1bd530d7c70b"
        },
        "item": {
          "id": "3a9dedd8-015f-440d-8d20-1976cefe6b15",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b71e1c1b-d705-4219-a218-ae7ec5438518",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6350ff06-f55d-4455-84d7-aea4112a6e4f",
        "cursor": {
          "ref": "0457f4ec-2ee0-4c0e-a069-c59b9862fb05",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "28c968a1-cb1d-4761-8dac-1a4629b54a41"
        },
        "item": {
          "id": "6350ff06-f55d-4455-84d7-aea4112a6e4f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "1be4fff6-fa1a-415f-a862-afc26b0b5f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34a8653-140f-4be6-b419-d76e7c10c548",
        "cursor": {
          "ref": "2ae009b3-fe70-4f68-9544-bddacbca7d51",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "fec58157-f53a-4b47-a9d4-93ed3c135f5b"
        },
        "item": {
          "id": "a34a8653-140f-4be6-b419-d76e7c10c548",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4bec1caf-9999-4832-9744-003f1554a437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17e21e7-5f64-4dd6-a1cf-3efc1df782f8",
        "cursor": {
          "ref": "b4585983-195f-4099-8c5e-1727ae58d7a2",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d8cac3a8-23a4-4839-822c-0ffb760f3be5"
        },
        "item": {
          "id": "c17e21e7-5f64-4dd6-a1cf-3efc1df782f8",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9db1f939-f6e6-4ba4-b0a6-41c040ab2415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ead07a1-1868-44a9-b4af-6a7988e7a4b2",
        "cursor": {
          "ref": "58394a9e-c644-4c6f-8140-2bf637810ab7",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "380d6157-ce2d-4bd7-9295-f9049edbb26a"
        },
        "item": {
          "id": "5ead07a1-1868-44a9-b4af-6a7988e7a4b2",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "17af1e05-8629-4a11-b879-685e6524d202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f72158c-c67f-418a-96da-6b8e8b87070e",
        "cursor": {
          "ref": "8a4a9775-b9c4-43c2-bded-1b957a1b60f0",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9f9c5ef3-d225-4497-8991-f9a4d7cc7782"
        },
        "item": {
          "id": "5f72158c-c67f-418a-96da-6b8e8b87070e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "84ddb587-be20-4a71-82a0-11a5fa5a7978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f4b44f-5633-4bec-b359-2cc2d69e33db",
        "cursor": {
          "ref": "f1056233-e6ab-42ca-882c-71b574214857",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e49a8c2e-83fb-4a4e-910e-d9a2a3ec14ea"
        },
        "item": {
          "id": "99f4b44f-5633-4bec-b359-2cc2d69e33db",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "fc1bbc1d-ace8-4027-9e8a-09cc92bef494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2dfcf23-231a-4697-b78d-2338620b1ab2",
        "cursor": {
          "ref": "5769db90-2f57-43f1-952e-7c87c3804a44",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "3235f4c3-a083-432d-a1e7-c651c9b8f0a1"
        },
        "item": {
          "id": "f2dfcf23-231a-4697-b78d-2338620b1ab2",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0a1aaaa9-f10c-41b9-93f7-51dad99c9da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff460c4-c3c8-43c4-95fc-4c6848a6ccfd",
        "cursor": {
          "ref": "789d553c-cbc0-4ad7-adfe-d1650ba46e2c",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ac2fabf5-0012-42c8-8aaf-e8e7c8ddc40f"
        },
        "item": {
          "id": "6ff460c4-c3c8-43c4-95fc-4c6848a6ccfd",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "de0023a8-091b-446e-8e3b-de44e1b14d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44aeadc5-3ec5-4898-b0f5-67321f449246",
        "cursor": {
          "ref": "bc2fa11a-f582-47ba-930d-1756ef8f6a0e",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "bdf6f93e-71b4-466f-9f8e-155ccc87e65d"
        },
        "item": {
          "id": "44aeadc5-3ec5-4898-b0f5-67321f449246",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "cf9a71dd-4761-4207-93d0-6f717f555342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a152fd-2ee7-4153-a8fc-919debd29047",
        "cursor": {
          "ref": "b8b272a4-4850-4ff2-bebc-4e8748812abb",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "abedc820-ddb0-4b09-9f36-fac00a756f7f"
        },
        "item": {
          "id": "c4a152fd-2ee7-4153-a8fc-919debd29047",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "72e43c5b-a333-4496-8cbd-5cd67e3902ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739109c6-0bb4-4304-84ae-0c761ad87539",
        "cursor": {
          "ref": "45bc39e5-914d-4b22-8a4c-8ae28b30ddd2",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8783c815-2adf-4fb4-bfdc-2b0d00dc7d6e"
        },
        "item": {
          "id": "739109c6-0bb4-4304-84ae-0c761ad87539",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f952eab1-8342-4e04-a2a6-07764a36f587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0526a735-a31b-48b4-abb0-af6d4e2b70bb",
        "cursor": {
          "ref": "ceb80625-fcce-4dbc-9349-2e609598b1e1",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c8d026e8-3b95-437e-bf9c-7118006bb327"
        },
        "item": {
          "id": "0526a735-a31b-48b4-abb0-af6d4e2b70bb",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "edb1d8b4-f129-41df-b77f-47511403e88c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31630d0b-45be-432b-a2d4-71125af4e82f",
        "cursor": {
          "ref": "6dfdb9c9-9a85-482d-888b-cfd86f8e9e5b",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "2960a427-1a28-49c2-b733-cefd020208d5"
        },
        "item": {
          "id": "31630d0b-45be-432b-a2d4-71125af4e82f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6674302a-2d86-4c19-a194-48ab1c08bcf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1980dd0-e461-4b1d-b439-7aa974e97d41",
        "cursor": {
          "ref": "07b3c3e4-5395-4fe9-ae08-60acdc21b5c2",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9847da11-b08b-4ee0-916f-6d11daa0faec"
        },
        "item": {
          "id": "f1980dd0-e461-4b1d-b439-7aa974e97d41",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "88fbb1b1-a50b-44b7-ab87-8e82ef9e50b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121fb1d7-aa98-4701-8af3-aef3c3079f13",
        "cursor": {
          "ref": "7fe9f793-ae38-42d6-85f6-11d82c3139a4",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a4371750-367b-4ed3-b18e-1da9f3c589cb"
        },
        "item": {
          "id": "121fb1d7-aa98-4701-8af3-aef3c3079f13",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "05d74b27-18a4-4332-93d1-7be7072d10b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f982fd78-c296-4708-8164-3012ed2f072c",
        "cursor": {
          "ref": "657a5b9a-eda8-4110-8594-abedade5cf77",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e8c31e8b-5195-4b32-a914-65cd7e2c4768"
        },
        "item": {
          "id": "f982fd78-c296-4708-8164-3012ed2f072c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "0e10f06b-1827-4aac-bfe5-62d494730575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2849ca6-4adb-4302-bb70-483c53c72736",
        "cursor": {
          "ref": "2b32580d-f1d0-41fc-9557-04458debc004",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "bf79a3b9-cd97-405b-8d1e-d843d3f6c4ae"
        },
        "item": {
          "id": "c2849ca6-4adb-4302-bb70-483c53c72736",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "36e72ca3-196a-4115-b9b4-8939bb4fa684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a61c562d-6820-44e3-899e-b412530bf982",
        "cursor": {
          "ref": "d468764a-f355-4b2b-8e35-bac90621f838",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3ec7f940-5307-4a38-8d95-e5055493e41b"
        },
        "item": {
          "id": "a61c562d-6820-44e3-899e-b412530bf982",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6d0126e8-c9a7-4646-abe5-e01a040bf3e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd268213-633d-4a1e-8bfa-1c91e8e0d0ba",
        "cursor": {
          "ref": "c2279540-8ac5-40ff-adaa-e140852fed48",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f8b5f600-986b-44f5-bca8-c246c3fe0cc7"
        },
        "item": {
          "id": "bd268213-633d-4a1e-8bfa-1c91e8e0d0ba",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "512a4167-8b38-4bc2-8fa4-dd87c3ba4466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc32dfb-da4a-464f-aa71-df8e38b15ccc",
        "cursor": {
          "ref": "72b4a5d4-5030-4d6b-b035-a801e7c61c88",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f137d8d4-799e-44fd-b3ed-358e998a8aa9"
        },
        "item": {
          "id": "dfc32dfb-da4a-464f-aa71-df8e38b15ccc",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "6df9a440-eae4-4309-bfa0-3025f0c7fe3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfbc1f8a-500c-434c-b316-7d20b231687f",
        "cursor": {
          "ref": "8591542e-3da2-412b-b6af-18e15fe41211",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "723f220d-92c4-4ee8-930b-a53eed85b44d"
        },
        "item": {
          "id": "bfbc1f8a-500c-434c-b316-7d20b231687f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "10f93264-1ba0-4f93-9c74-5916ac41c3a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31dcd326-d55e-4e4d-8a71-a045671f5023",
        "cursor": {
          "ref": "c2e7dd99-942d-4f8c-9dc8-4b0462503cc9",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f7b6f911-9b4f-4a5f-a30f-5bcb4653e762"
        },
        "item": {
          "id": "31dcd326-d55e-4e4d-8a71-a045671f5023",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a28496a6-3d95-4154-91ea-0edc99ee50b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8e24ec-34b9-4608-a26e-b172bacb1249",
        "cursor": {
          "ref": "9050203d-8522-42da-b49f-eee29a165dd9",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "45b3f026-d7b7-44be-882b-e0062852afa8"
        },
        "item": {
          "id": "7e8e24ec-34b9-4608-a26e-b172bacb1249",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7031c62a-da3d-4195-9e50-7ce9f7d5b9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cce8f89-3b93-497e-a6ca-feeed8586927",
        "cursor": {
          "ref": "89c23da1-dcf5-450d-955e-69b573ef2d5d",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5e133769-6b48-4a93-9b8d-c05230ac8b48"
        },
        "item": {
          "id": "9cce8f89-3b93-497e-a6ca-feeed8586927",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "33c22ac7-d2c2-430d-82d7-13920c197a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7004dc44-833e-4293-92ac-3668e8a15171",
        "cursor": {
          "ref": "2086eb08-5964-47cf-8d68-05129bcaf2cd",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8faeec02-03ec-4fc3-b6ab-b4add43e5883"
        },
        "item": {
          "id": "7004dc44-833e-4293-92ac-3668e8a15171",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "04968ac0-2c3c-420f-aebc-6483ee8b32d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14353ba2-77a8-46ce-bd42-915560c3cdc3",
        "cursor": {
          "ref": "5f2a281f-d33e-4138-8356-a045b06dd3a7",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b5b8d85e-b8d4-4a3a-b662-54ce328b1a5e"
        },
        "item": {
          "id": "14353ba2-77a8-46ce-bd42-915560c3cdc3",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "0afb9ccd-8b16-4517-8f8e-39444cf19f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bacc5c7-08a0-4050-a6bd-8a27252e2113",
        "cursor": {
          "ref": "cfb39457-c54b-4550-a3af-5592d69f83ae",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d64c9bcc-b7a3-4f31-90ee-b3605a47ab9e"
        },
        "item": {
          "id": "2bacc5c7-08a0-4050-a6bd-8a27252e2113",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "577033b2-487c-4322-8e1f-4d41497feb4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8724e80e-03be-49da-b409-0c29d8f913d1",
        "cursor": {
          "ref": "4f80919e-f19b-4a8a-986a-382075cffd37",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d8e73442-d7d0-415a-991a-f9a990c2bfd3"
        },
        "item": {
          "id": "8724e80e-03be-49da-b409-0c29d8f913d1",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e1c1ef7e-b655-4f40-b0d0-2bf8a84f8bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65eeab90-f6ce-49fc-ba62-d67200cab5bb",
        "cursor": {
          "ref": "adb949b6-2c0a-4b57-9ff7-7986a4752ac7",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d6f3094e-07d1-46fe-83d0-8329aacbfebc"
        },
        "item": {
          "id": "65eeab90-f6ce-49fc-ba62-d67200cab5bb",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "57f0bebc-9824-4649-9918-6cfded05401e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71500bfc-6e35-4e8f-afb6-a6db46672901",
        "cursor": {
          "ref": "48638bc3-7984-4cf8-a986-d600a7ca70c3",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f19801d6-7626-4586-8d93-e67eecb54e31"
        },
        "item": {
          "id": "71500bfc-6e35-4e8f-afb6-a6db46672901",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "aa840700-f5d4-452c-aa09-c762a101c8b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81669ed-9c0b-47de-bfdf-7356fa5a8f51",
        "cursor": {
          "ref": "5539b70e-d93d-4b0e-b70e-e03ac4992912",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d4ecb8dc-d3f5-497d-a863-646843bc01a9"
        },
        "item": {
          "id": "d81669ed-9c0b-47de-bfdf-7356fa5a8f51",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "43ee0352-0fab-4c62-b3fd-f673177c6725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e3e923f-53ca-4edb-9589-2e23f355fb07",
        "cursor": {
          "ref": "bab4c9ee-4474-4b3d-b6b5-4392841c3c1f",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "742ac5ed-ac4c-4e36-8615-7010094a0519"
        },
        "item": {
          "id": "2e3e923f-53ca-4edb-9589-2e23f355fb07",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "284773d1-e3eb-4e67-8efe-d5d575a977fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5362418e-77e0-4008-84a8-065f83216e40",
        "cursor": {
          "ref": "c45e2e65-b129-457b-911e-84d79d55d9e3",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e57c33e3-28b2-45ca-94a3-f1f8101f112c"
        },
        "item": {
          "id": "5362418e-77e0-4008-84a8-065f83216e40",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "82909a3a-9f29-46a8-b820-ed40b609bf4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3331c508-bc12-4433-af09-67c5ddd3ea01",
        "cursor": {
          "ref": "3b7dc369-b86a-4c62-bbeb-4a9dabcc8d61",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "df09e411-a3b2-44a9-bb83-1a44f5aceac2"
        },
        "item": {
          "id": "3331c508-bc12-4433-af09-67c5ddd3ea01",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5f419472-6514-463b-80df-a455a0509949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a987ee51-a221-4e3a-af53-c99ac60714b3",
        "cursor": {
          "ref": "b475e785-f5a1-46cb-9a89-8501da7efd45",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "9cf338cd-78ac-455b-baaf-2b37b9c7a5e1"
        },
        "item": {
          "id": "a987ee51-a221-4e3a-af53-c99ac60714b3",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e5a27da7-088c-4fef-97a0-cebde71044ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aeee572-ae8d-4c15-8904-4c55e2812b7a",
        "cursor": {
          "ref": "ef7fdc2b-c591-4f95-9ae7-395cbf5fad6a",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "1a721ef0-9ddc-46c0-ad2e-bde3c3cdf183"
        },
        "item": {
          "id": "3aeee572-ae8d-4c15-8904-4c55e2812b7a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1af24b39-da6a-48f8-83da-ef233439d7a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b60f2a-b8f6-41e0-9310-ed0401c7c81d",
        "cursor": {
          "ref": "fed4c9c6-6e6b-412f-ab70-e2ffaec2f42b",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ee71a1c9-e7eb-419f-a65e-8b56d47cd666"
        },
        "item": {
          "id": "08b60f2a-b8f6-41e0-9310-ed0401c7c81d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "eba7b41c-d1b0-46ad-a997-517585af1ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d749dc-4820-4792-af57-b79318516fab",
        "cursor": {
          "ref": "b63735e5-6643-4bde-871b-dec73785fa34",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "711f9bce-ac36-4bbe-95b4-01fb98a57c96"
        },
        "item": {
          "id": "02d749dc-4820-4792-af57-b79318516fab",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0de15937-a453-46a5-b66b-0fa5e5bdbd22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e85bbac-77e3-4c73-8d2d-1f6cd28f3cfe",
        "cursor": {
          "ref": "3f5efbd4-5ee7-4b68-9197-351396b7fe30",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "57cbf0db-bb1c-4959-adda-22e63d188adf"
        },
        "item": {
          "id": "5e85bbac-77e3-4c73-8d2d-1f6cd28f3cfe",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "89f6a76d-c30d-440b-8543-bf1208253877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8e124b-95b0-4e6d-960d-84c58a79ce72",
        "cursor": {
          "ref": "ee5c4aba-bbed-4dcf-bccc-6ddc37c10616",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f6dacdcc-3866-4173-9351-065f98f73bba"
        },
        "item": {
          "id": "ba8e124b-95b0-4e6d-960d-84c58a79ce72",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "57e2d4e5-c2eb-4d67-a094-2c2e610f844d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608b7fd5-4f47-4735-afb6-d27f3ede061b",
        "cursor": {
          "ref": "b673896e-6544-4078-ba2e-2e1d082f95c0",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7096c482-4077-454c-a3a4-8e9dbaddf048"
        },
        "item": {
          "id": "608b7fd5-4f47-4735-afb6-d27f3ede061b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7c4d528e-e419-4e09-b608-3484228947fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661534e9-84a6-4085-b00c-c30c5e93bb80",
        "cursor": {
          "ref": "ff3055fe-111c-4317-a924-681dbebbad8f",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4f2948e2-778d-4f68-9af5-0faed014c16e"
        },
        "item": {
          "id": "661534e9-84a6-4085-b00c-c30c5e93bb80",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b35e6ac2-5c83-48d1-baf4-b2b77f8aa755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4638a487-0b13-4d34-a80b-feff9952f8ca",
        "cursor": {
          "ref": "dcc262a4-c98e-4942-9eb3-ce436b2fafb5",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "273a5389-2680-440b-8a86-2810d2d8c475"
        },
        "item": {
          "id": "4638a487-0b13-4d34-a80b-feff9952f8ca",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5c59c484-629b-4550-bef5-45fb33470152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9913ee2-8bcd-4c87-b930-ee3edad6599e",
        "cursor": {
          "ref": "21c6ca91-5b6d-4c01-97a1-69449a9f1fd0",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c7da885c-8704-4a7a-968b-a8382ed2df31"
        },
        "item": {
          "id": "e9913ee2-8bcd-4c87-b930-ee3edad6599e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f62d8f2b-731c-44d6-a16a-e1ee30aae30f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a7bc98-b520-4c99-a6c3-357af4a6b5db",
        "cursor": {
          "ref": "2ecd8b1e-1157-4a25-90e7-ed79488a6988",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "5b5d791b-f141-4d3d-b4a5-00cc210d731c"
        },
        "item": {
          "id": "40a7bc98-b520-4c99-a6c3-357af4a6b5db",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5dcbe92f-bbc2-4178-b7ed-64c59fea8aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff007628-29df-4cd7-8eaf-a92f0f72e9e2",
        "cursor": {
          "ref": "d12a0b93-02e4-442b-98ed-a0a548196ea2",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "92f48b74-8542-4d17-a63a-17e8ae5032a9"
        },
        "item": {
          "id": "ff007628-29df-4cd7-8eaf-a92f0f72e9e2",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2515c39a-8117-470c-a096-f8fc497cf6d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e731a4-3b34-4c70-a191-487494b26790",
        "cursor": {
          "ref": "8a7c5f0a-0f21-49dd-8268-4a0a97fcd177",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e931e7c6-0e48-460f-8001-8c92b90c6e9b"
        },
        "item": {
          "id": "d2e731a4-3b34-4c70-a191-487494b26790",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f8cafd1d-7e7d-463a-9b6c-03460f54cf1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec8fbcb6-278d-4a6b-8b02-d6098110bc3d",
        "cursor": {
          "ref": "a4c4f484-cea7-4028-9276-8136f4555a94",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ffdc3200-7d70-4caa-b4d9-bf590867882e"
        },
        "item": {
          "id": "ec8fbcb6-278d-4a6b-8b02-d6098110bc3d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2a7e2b21-3802-4c8b-8280-9e64913bc3ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba4bc07-51d4-41c6-af94-2a1b4a27276c",
        "cursor": {
          "ref": "771ac54c-c77c-483a-8270-fcd0b19551e0",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "3134bc72-b47c-4dc8-b697-c86330c379e3"
        },
        "item": {
          "id": "7ba4bc07-51d4-41c6-af94-2a1b4a27276c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "9196c53b-1666-43de-b13f-1f44cb0ecc62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4319e2c-d4ea-46aa-81c3-edaa921e3e14",
        "cursor": {
          "ref": "f064aba5-90d0-408f-9f13-d78c0f0c0119",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "3cc3396a-83b7-4536-b6d2-ff98ee4ea21d"
        },
        "item": {
          "id": "b4319e2c-d4ea-46aa-81c3-edaa921e3e14",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "657cbf8a-76f7-4549-848a-957003375066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "832a1cf4-b4f0-485e-91c3-fd974ebf0795",
        "cursor": {
          "ref": "311064c2-9160-459c-803b-57c0c3192312",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3f7a5b3c-d5b7-4209-bd3d-b9c4189e7896"
        },
        "item": {
          "id": "832a1cf4-b4f0-485e-91c3-fd974ebf0795",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8b75b310-24d0-48b5-813c-df3bcaddb031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5febbb54-49bb-49e5-8348-910f2e6adba6",
        "cursor": {
          "ref": "3484fa56-47e7-45a1-9712-9f6a3ac09493",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "04075f93-0261-4e81-a8cd-838c18951808"
        },
        "item": {
          "id": "5febbb54-49bb-49e5-8348-910f2e6adba6",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e6f24326-e345-4d72-8a85-28d81805e5e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a537dc-e1d7-4350-894b-97607edad8a7",
        "cursor": {
          "ref": "b41a1f0f-0327-4712-a2d9-c2c043b5900c",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ab8dbad5-2839-43ea-b1d7-3008fd34f7ae"
        },
        "item": {
          "id": "74a537dc-e1d7-4350-894b-97607edad8a7",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "21cf1785-948e-4c63-a370-8aff4d769405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f9a9dd-9060-43dd-ab33-700153ec516a",
        "cursor": {
          "ref": "b1d9f50d-3c22-471c-82fe-062e5401da92",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "24ab19f0-e2db-44a0-b8d0-6939581d2128"
        },
        "item": {
          "id": "11f9a9dd-9060-43dd-ab33-700153ec516a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ca592bc9-b20c-4359-b7b0-5384d23e6e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "211ef0ea-d9ed-4df6-8ca9-532ea66d57f2",
        "cursor": {
          "ref": "7d828699-f0c5-4f9d-b7b2-5b50f24dc07d",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c6a956f1-05d0-409e-a59f-336a28bf8573"
        },
        "item": {
          "id": "211ef0ea-d9ed-4df6-8ca9-532ea66d57f2",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3920ee56-8964-4c64-b0be-3701e2610722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0c08d0-ebb1-4738-bb75-cb4f047297e3",
        "cursor": {
          "ref": "4ddba615-cd73-48f8-9c78-937a9ca02c62",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9c49849b-5117-4694-b31c-4bf122b3dbf2"
        },
        "item": {
          "id": "8e0c08d0-ebb1-4738-bb75-cb4f047297e3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5a315085-30f5-4c22-8a47-350dd2c61867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad7d1f0-af06-4348-8acd-2783b0d64305",
        "cursor": {
          "ref": "0630b210-6d8c-43a0-b541-788439998d10",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a026b5db-a3cb-484a-9923-c5d7014cd51e"
        },
        "item": {
          "id": "cad7d1f0-af06-4348-8acd-2783b0d64305",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "db9ce662-ef91-4371-8829-44208e05bf55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2857f826-239e-49b0-a6fd-00ef7ba3de75",
        "cursor": {
          "ref": "8cb49775-c3b9-4375-add5-c336b6102448",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6063c7b6-a75b-4206-a67c-a58c3c2efb0a"
        },
        "item": {
          "id": "2857f826-239e-49b0-a6fd-00ef7ba3de75",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f9d86fb8-cdf1-404c-b19f-ea81dd9a7bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b87ebe8-c2ff-4a4f-935f-0aa1508cce60",
        "cursor": {
          "ref": "cd86ea76-d547-4648-874d-6fd50947ee16",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "703d99b6-d219-477a-ab7e-1eed168e0b0b"
        },
        "item": {
          "id": "2b87ebe8-c2ff-4a4f-935f-0aa1508cce60",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f5b0d971-6879-41b6-b9d4-acb1dee119cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37535a41-cc1a-497f-b9e5-3b8840e30932",
        "cursor": {
          "ref": "585394a5-2006-445a-a749-df0db9bb8a7b",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "19a3aa18-539e-42d6-998f-54b67a0a3bf4"
        },
        "item": {
          "id": "37535a41-cc1a-497f-b9e5-3b8840e30932",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d9c6881c-b47a-4041-b90c-e2e9bce07439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c964bd7-c0a5-4164-b352-0cf3b1bc244a",
        "cursor": {
          "ref": "2597a4bd-d10c-4396-88ef-1b2267986323",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "9f94aa76-922e-4b82-bdd2-056622bd979e"
        },
        "item": {
          "id": "4c964bd7-c0a5-4164-b352-0cf3b1bc244a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "50f9eb1c-0194-442e-aef4-53c1a1395b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c147f0-c3d9-4cf4-8cf7-c029d519e6a4",
        "cursor": {
          "ref": "4b233bcf-0ae5-4550-ab29-2f8a09632a8f",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4391f3eb-7f7d-42b5-93a4-cbf25d65b074"
        },
        "item": {
          "id": "d2c147f0-c3d9-4cf4-8cf7-c029d519e6a4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "bd2b54a3-2c9d-4118-b05b-f0bf0ffec097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e6578e-901c-49f8-807d-a7090dd14ada",
        "cursor": {
          "ref": "f08f9c6c-ab7a-4021-b50d-9564903f12aa",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4baf125b-643a-4920-89cf-5d7a4a1f89ff"
        },
        "item": {
          "id": "f4e6578e-901c-49f8-807d-a7090dd14ada",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "6c1d5054-6ab7-4294-ba47-7ab2c3dd8863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe20c20-632a-481f-85ec-5bd78a3fe4eb",
        "cursor": {
          "ref": "c73f1b61-68b2-47a8-9923-27e5ac918d7b",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "af6c8b48-e95e-4396-85de-366a5a6c6203"
        },
        "item": {
          "id": "dbe20c20-632a-481f-85ec-5bd78a3fe4eb",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "30d0cbd8-354f-4432-b556-ddde01391900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d17a812-9483-4d63-91b3-6556f248c247",
        "cursor": {
          "ref": "ee06dcda-9e03-47c6-8406-13a8e4b00b7a",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "41430c18-d3c9-4c67-8671-25ac4a5512ab"
        },
        "item": {
          "id": "1d17a812-9483-4d63-91b3-6556f248c247",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "680b7245-4125-48b5-9c49-75cc8ed84c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156abfd5-e5ab-42dc-a027-f7b0dc042a08",
        "cursor": {
          "ref": "cb8151a0-384a-41a0-9f0a-7691768873ee",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b7d549e6-f8c8-4ee6-8476-083501c43f81"
        },
        "item": {
          "id": "156abfd5-e5ab-42dc-a027-f7b0dc042a08",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f2613dba-dee4-45b5-b53f-72e42b401bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2831ea1e-370e-4864-af72-0dad55244c3a",
        "cursor": {
          "ref": "6ef96ce2-794c-4174-bb68-48bd961a2df2",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "52e8f79d-3fc5-4ceb-ae21-717523c46a40"
        },
        "item": {
          "id": "2831ea1e-370e-4864-af72-0dad55244c3a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f5663199-9a53-4649-a356-56c988342d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df074e00-4ec7-485e-b6cc-4c9e08ee575e",
        "cursor": {
          "ref": "c951cb12-94aa-4c68-aa37-e4bd804f163b",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8ba0a596-7241-4533-817b-80a15c423966"
        },
        "item": {
          "id": "df074e00-4ec7-485e-b6cc-4c9e08ee575e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "5a6b3626-904b-477b-be6e-db86e13daec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "305c3e6b-88b1-4a6d-bece-039ed846bfc6",
        "cursor": {
          "ref": "148be472-7c5f-4a1e-bef7-f6ddeb63b326",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "eef8da59-5416-44cf-b48b-a6de89acca9d"
        },
        "item": {
          "id": "305c3e6b-88b1-4a6d-bece-039ed846bfc6",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4fb0eeb6-1c3e-46cb-9829-895b2584b9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67024f2b-3f69-458a-9000-6d57d7c71e46",
        "cursor": {
          "ref": "24e6c0e0-0805-4c5e-bcab-e02f885e093f",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "29977a83-d04a-4147-9b45-b703d05a70e1"
        },
        "item": {
          "id": "67024f2b-3f69-458a-9000-6d57d7c71e46",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "82ff9d61-838b-4581-bcea-412fc293238b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e481699-ba50-4249-b9fa-a75b0969c9d6",
        "cursor": {
          "ref": "0a8c97ea-549f-447d-9f93-e04aca5daa1d",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c092f685-d057-422e-bc77-9840a67d331b"
        },
        "item": {
          "id": "9e481699-ba50-4249-b9fa-a75b0969c9d6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "fd03593f-2c1a-444d-913b-f24b70cc7d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ebf2abb-c39c-466e-86e5-d33562656617",
        "cursor": {
          "ref": "fe74ac32-dace-4ec6-85a7-7712bb9e8e2a",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d1485be4-a94d-437f-bda5-160cb5b0dd78"
        },
        "item": {
          "id": "2ebf2abb-c39c-466e-86e5-d33562656617",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9f8c8ed6-4a70-4a77-8202-99a919841a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4108ea1-5a89-4155-ad85-ed9b55717b26",
        "cursor": {
          "ref": "0ada4cfd-718d-4cd3-a017-91d35a632b95",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "056fba22-2f5c-433a-a76a-f41b0e6b9a14"
        },
        "item": {
          "id": "c4108ea1-5a89-4155-ad85-ed9b55717b26",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "cbf46a87-15ab-4574-a41f-50ea771795c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494e9d27-00cd-4e00-93a0-1c39d2cf24fe",
        "cursor": {
          "ref": "9347e2f8-c021-4239-b3e3-d63c788f6f66",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "0e53eb21-6d67-4427-ab6f-80e8891eb75f"
        },
        "item": {
          "id": "494e9d27-00cd-4e00-93a0-1c39d2cf24fe",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e3985f04-886e-4582-bb6d-7368fc9b52b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7322942e-71a7-40da-9c54-0bf02cc34b9b",
        "cursor": {
          "ref": "6ab5611a-9c76-4da9-932d-57a06514172a",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "0642606d-ffc2-44ae-bfce-baa47e9daf47"
        },
        "item": {
          "id": "7322942e-71a7-40da-9c54-0bf02cc34b9b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "09c76590-f09c-4082-9d1f-be996a5c6596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d20a7b1-b750-4592-b344-0bdf5c01118a",
        "cursor": {
          "ref": "30167adc-a1a2-4f56-b276-2bae18d44edf",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "e4885429-21b9-41e1-8e45-23adc29ba6cc"
        },
        "item": {
          "id": "2d20a7b1-b750-4592-b344-0bdf5c01118a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7dabd7ab-d06e-48a6-bc65-d093495f8279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ec5e4d-6d7a-4ed3-a4f2-8fab0522d2ea",
        "cursor": {
          "ref": "fa767ba6-61f5-4c3c-a210-939e860eeb99",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "e1be26cf-80ac-4461-8288-84c59ab68e34"
        },
        "item": {
          "id": "06ec5e4d-6d7a-4ed3-a4f2-8fab0522d2ea",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "fd90d51d-9485-48d9-9c4a-bec07b070d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c343dadd-7dd6-4a16-8b01-6d5d33db0134",
        "cursor": {
          "ref": "89a79d6e-7780-4024-bdb3-eaf4b4023860",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "1690e7df-f3dd-49fa-b986-846bdafb6d6e"
        },
        "item": {
          "id": "c343dadd-7dd6-4a16-8b01-6d5d33db0134",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3c0a81d5-7fe6-45a6-872a-13850031a097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23922574-c798-4bbf-b1ac-95de307424c9",
        "cursor": {
          "ref": "79e917a6-b0c6-4066-91e5-431ab18d6bda",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "e5c60498-351c-4d42-99dc-934929e204c5"
        },
        "item": {
          "id": "23922574-c798-4bbf-b1ac-95de307424c9",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "75437096-2d26-46ef-bd03-558321cb740b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "226cf4c7-547a-4f44-b9af-b15974663912",
        "cursor": {
          "ref": "34f26971-498e-44ee-9faa-1622c0b0ed15",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "92bb8b4d-b9f9-46a7-a59d-96c45cdfd5eb"
        },
        "item": {
          "id": "226cf4c7-547a-4f44-b9af-b15974663912",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "86df92e6-3b3d-4f1d-a18a-c5f315f1ac6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e7da8b-4421-4a8f-83c4-9b46825aee97",
        "cursor": {
          "ref": "3f8641e2-17bf-45c1-88e5-879f8ee692b6",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "46c100cc-feea-4a79-a5b1-b62912fce6c1"
        },
        "item": {
          "id": "e0e7da8b-4421-4a8f-83c4-9b46825aee97",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7637590f-3dba-4070-be93-a41c8a2f0eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6651da6-ae63-45a8-a111-ce9237d5f9be",
        "cursor": {
          "ref": "c0e84c68-7ef9-42eb-9530-4bfe29215ca3",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "5b32c679-baa3-45ce-aafa-96ca32ca4f01"
        },
        "item": {
          "id": "b6651da6-ae63-45a8-a111-ce9237d5f9be",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c91a7057-b556-48a3-9da1-262c19aaa250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b3976ff-386c-40e0-9f6f-4249722500af",
        "cursor": {
          "ref": "890f018f-d009-4644-8570-dff5b6d2a4cf",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "6182b5bb-50c9-44d1-97a2-39ed5a0ca7c9"
        },
        "item": {
          "id": "9b3976ff-386c-40e0-9f6f-4249722500af",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b52465b8-0946-4956-9c1c-6e9ce1387c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6553e1-9409-4c43-bb2b-4d538a771a2a",
        "cursor": {
          "ref": "a0428014-981b-4d80-97f4-1a1ab9232fa1",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "899da8ab-d9a7-4a43-b07f-42b9e46e9b9b"
        },
        "item": {
          "id": "0d6553e1-9409-4c43-bb2b-4d538a771a2a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d3544d03-dd1a-4e82-a72d-9d2616d57e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a45f6bc-ca7e-4786-9008-9175fcf62a16",
        "cursor": {
          "ref": "813d251f-9e7b-48c4-980e-c142b25f8cae",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "1ae86f9a-535e-4dc4-b4bd-a24c2a76e908"
        },
        "item": {
          "id": "5a45f6bc-ca7e-4786-9008-9175fcf62a16",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d2bd195c-39cb-4c06-bbb5-9a42097140cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe8fef9-3a9f-4e58-a441-c058a431be41",
        "cursor": {
          "ref": "90e11f59-5fb1-4d35-9586-a8cc1ad1ca8b",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "00c8ba32-be84-4b3b-9d45-a1ee0b84bde4"
        },
        "item": {
          "id": "0fe8fef9-3a9f-4e58-a441-c058a431be41",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a8e6e507-3ea5-4be0-923f-dabada1e5f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe81e27e-2a5b-4167-88e1-a15ad3b3aac3",
        "cursor": {
          "ref": "cfb7f264-e567-4542-ab51-579eaddbed5e",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "d901cda6-9130-4dc3-8ee5-62c4e1806bbb"
        },
        "item": {
          "id": "fe81e27e-2a5b-4167-88e1-a15ad3b3aac3",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "234466fa-f5aa-4701-b75a-13dd5fb08032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23c4a28-8650-486c-b07c-d6245eba9280",
        "cursor": {
          "ref": "02dcdeb9-55ce-430f-929b-f27f463040e9",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "ed37f29b-6ab2-4544-929f-9ac6959b38d9"
        },
        "item": {
          "id": "c23c4a28-8650-486c-b07c-d6245eba9280",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ff4b7e46-dd80-4e49-9541-8d0920fff413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98814ba2-f2f6-4ed7-ad6c-bacf2ec97df0",
        "cursor": {
          "ref": "21e0e751-716b-4a44-8328-dbd73b294409",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "545a3702-c8a7-43a4-9810-50ef538e4ab8"
        },
        "item": {
          "id": "98814ba2-f2f6-4ed7-ad6c-bacf2ec97df0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b2c74e3e-99ce-44cc-9b98-bdea331b5068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed12295c-bea4-4121-8226-7428602e546a",
        "cursor": {
          "ref": "35eee584-464f-470b-bed2-b53666c47047",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "f0dcde7f-8f19-477b-bbd2-6cc5fbc88de0"
        },
        "item": {
          "id": "ed12295c-bea4-4121-8226-7428602e546a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "32577380-c5cf-4ea7-91aa-037e790c93ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c03681b-1069-4fb7-9e8e-ff9d0a2ee7a3",
        "cursor": {
          "ref": "47ab7ccb-2c39-4882-b5e4-e13be2693baf",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "3e163fca-6e7d-430b-b8ad-3c3406c5b509"
        },
        "item": {
          "id": "0c03681b-1069-4fb7-9e8e-ff9d0a2ee7a3",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e73f962b-f173-4027-b77f-02c277f3cbfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7724e7a8-35fe-4ac9-a142-e2deeae6b1f1",
        "cursor": {
          "ref": "44f4f35a-e880-49ae-ab65-2f6cdb51fd8d",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "29a7b66f-996e-4b4a-aea0-9b75978a731a"
        },
        "item": {
          "id": "7724e7a8-35fe-4ac9-a142-e2deeae6b1f1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "56b48509-485f-434e-9808-a2b1791311ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d68df49-ccb6-4c47-87e1-e9f414d9639d",
        "cursor": {
          "ref": "39488a70-b007-4471-b37c-0f15ddd92fa7",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "021ef31e-7fc9-4042-9b68-2beff92c68c0"
        },
        "item": {
          "id": "1d68df49-ccb6-4c47-87e1-e9f414d9639d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "135df684-360a-4cd8-9e9e-18736ca34b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74739c0-8cb7-483a-a167-b94c844789bd",
        "cursor": {
          "ref": "ea2e9af9-a2f8-4709-b2b9-24dbe67629a6",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "626c8850-3b5c-4e6b-acf5-e0e6f4158242"
        },
        "item": {
          "id": "f74739c0-8cb7-483a-a167-b94c844789bd",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "67bc6bd5-c0c3-4dab-8376-2e506534759e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326613aa-135e-4d2b-b8d0-4803cee14459",
        "cursor": {
          "ref": "aa1df819-baad-4d50-af6c-014962f62b15",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "19c719d3-365f-4924-82bd-9fd81dc7714d"
        },
        "item": {
          "id": "326613aa-135e-4d2b-b8d0-4803cee14459",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f277ab28-ddd5-4031-8a35-fe154f6d3564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5c9781-6814-4048-97ed-682115d01a4f",
        "cursor": {
          "ref": "9d2688f4-6f08-4b8a-b660-6e07021ed1b1",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "5b4a363b-50c6-4601-8d5c-63fce3a4b7fd"
        },
        "item": {
          "id": "2c5c9781-6814-4048-97ed-682115d01a4f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "68afc83d-7eaf-4c2b-9a74-68152585f8f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c337eea1-c2b5-4594-b01b-0dce07240e9c",
        "cursor": {
          "ref": "a52c4c41-d207-4a4c-b173-440bcce26ff3",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "796fc99e-1729-414a-b752-f0bdbaf70ce8"
        },
        "item": {
          "id": "c337eea1-c2b5-4594-b01b-0dce07240e9c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6d94b91d-52f0-4c98-b286-b0132a32adac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0404e82e-7503-4ea4-887c-9006d55a23ed",
        "cursor": {
          "ref": "5ca782f0-19ef-45e3-9e46-af8f2fff3f59",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "09b3d2db-417d-4a2a-b51a-2529da907601"
        },
        "item": {
          "id": "0404e82e-7503-4ea4-887c-9006d55a23ed",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ceb7d78f-e349-460c-a77b-86a13fb71d57",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f77fe96-b077-4750-a4d1-d8105f87eee7",
        "cursor": {
          "ref": "35534cd1-2c64-4c5e-aff5-1918e994e97f",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "7884cdca-6e84-4019-87c9-a9e9caa7b9d6"
        },
        "item": {
          "id": "0f77fe96-b077-4750-a4d1-d8105f87eee7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "aae71d21-8307-4ca0-a8f1-9c835f8c132f",
          "status": "OK",
          "code": 200,
          "responseTime": 109,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b84b0b3-12fd-41f0-bd47-a9203d3bf8e5",
        "cursor": {
          "ref": "2365d5de-aee7-4631-93f4-342c1713ff18",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "6a26d2d8-c9d1-41e5-ab0e-8f02f5b511fa"
        },
        "item": {
          "id": "8b84b0b3-12fd-41f0-bd47-a9203d3bf8e5",
          "name": "credentials_verify"
        },
        "response": {
          "id": "0daeac7c-ff8e-41f5-86fd-9081f1d0e8d5",
          "status": "OK",
          "code": 200,
          "responseTime": 1460,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "00cc21cd-d61f-4edf-b4c0-fcd20953136e",
        "cursor": {
          "ref": "935692f6-991f-4914-924b-e7523ce9c420",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "8eb33696-29a7-4f9b-8071-366772003f04"
        },
        "item": {
          "id": "00cc21cd-d61f-4edf-b4c0-fcd20953136e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e9974875-5eba-4aae-928b-5530aa926744",
          "status": "OK",
          "code": 200,
          "responseTime": 1439,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97e739c-4476-49ad-ab4b-0ab6ba5367e1",
        "cursor": {
          "ref": "653b5649-6045-450d-9011-d48704b9fa52",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "08cf8d53-2f13-4e65-a1e2-ef09dd08202f"
        },
        "item": {
          "id": "a97e739c-4476-49ad-ab4b-0ab6ba5367e1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "28df2626-9284-4b13-b810-1339cd2cb954",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97e739c-4476-49ad-ab4b-0ab6ba5367e1",
        "cursor": {
          "ref": "653b5649-6045-450d-9011-d48704b9fa52",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "08cf8d53-2f13-4e65-a1e2-ef09dd08202f"
        },
        "item": {
          "id": "a97e739c-4476-49ad-ab4b-0ab6ba5367e1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "28df2626-9284-4b13-b810-1339cd2cb954",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef1562d-944c-4a4e-95a1-d7bcb6e1cacc",
        "cursor": {
          "ref": "4c369ff7-c88c-4c39-bbd4-ec60a0eb1670",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "47f9d54d-d328-4b5c-bf6f-ec8b4d3e4bca"
        },
        "item": {
          "id": "0ef1562d-944c-4a4e-95a1-d7bcb6e1cacc",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "47570908-aa97-46ac-94f9-a00eedd48c0c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "242c35c8-3007-46e7-9252-e3b22c8569a8",
        "cursor": {
          "ref": "744944e2-8586-4d9d-aa9f-905d78e3808f",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "ff8fd429-af18-40a9-85be-8f3377fedca5"
        },
        "item": {
          "id": "242c35c8-3007-46e7-9252-e3b22c8569a8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8226b7c4-1fc6-4402-8bcc-bc195e838174",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}