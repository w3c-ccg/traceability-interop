{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "23c18cbd-d680-44dc-b85a-31f844b0885e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "84e15745-3c23-4656-9804-d06872eac936",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1ac18c0c-2ecd-47dd-a6af-3279833a1bb0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ff8b7b99-c2f9-472c-9a64-e00f62cc7638"
                }
              }
            ]
          },
          {
            "id": "def5459e-b9bd-463f-969f-bb4391945e1e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2cbb41d6-11dd-44c6-a010-d1bb04d90097",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "129d071f-8dd5-4c15-b4a1-0c21c842c9a3"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "230d8681-7e00-4b03-b9a4-744d49db6424",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "46b115ea-f846-4b46-991d-8ffa9ae2476b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "144a430b-fcbf-442e-955f-8a3225491aae",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "88d8383a-aa7b-4237-bef5-9346cb8cac46",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ebe7f635-ac8a-407e-ba9c-a432c923478d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6e5837d1-f743-45f4-b774-1f04da2da44a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "54cab334-bddb-4491-956c-9f71f2aaa2a8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0d5bfaba-4b2f-4ce3-acce-9eaa5cd1bcb8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e7610604-5f62-4e46-9256-a9e37637ff68"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d43e7f3d-c699-488f-9eb5-94f35c1f8465",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9854b62a-3135-4892-944f-2429deff2b10"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "39fba212-3f4a-478e-88e7-874909dd0675",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "30be268b-e2fd-463a-b176-beb2df4ae205"
            }
          }
        ]
      },
      {
        "id": "af13ac53-81d6-40a6-bdce-81be10b359b3",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d974905b-0c50-4681-8bfa-c7636fc53a64",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b3de687c-1a08-4d9b-b6a1-7462d0112904",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d6c3aad4-68c0-430e-851a-ad2bb828fcdc",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7780d8-5b0e-4553-a96f-47bf82bd5887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "193cdc88-4ee5-4002-a4d6-b9d68fa6025b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b17d23e-4c52-4d07-9dc2-0ab756c5ae0d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "489050bf-0146-43d2-b958-6fe79a1f9751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7a5a82d-ed6b-4296-a533-0782b30f5aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1589c9e-156d-4722-ae10-3a5f0f87aab1",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b3c2ebf-a6d7-4e08-94b0-3b388ddeec48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90b80508-c02b-4196-bf4d-6b0d1b74a4b3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "406fe862-f73a-4f90-b62c-a5baf7da3038",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ea9fd29d-fdd8-4ea3-b1b7-77693447d767",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6e1084-a316-4b92-b8bd-ff3d1aa32928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0061f64-4827-4195-878c-102b3b3b35b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dced712d-140d-4391-ad25-6e228450db41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef05cb99-e94f-49a0-bc20-2e442c7818d3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3dcaf4a5-5ad2-41a9-bb22-61e9d226ae80",
            "name": "Positive Testing",
            "item": [
              {
                "id": "52151395-4439-4715-8a33-0a3a18d284de",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "38ebea5c-7114-482d-a170-dca1b121a5bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b3c5b098-4593-47fd-b24b-6bfe932f1415"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a06a1f53-4743-418e-af1a-f754113272f4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "75238a20-bdd5-4259-abfa-d20214114280"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7d410ea7-7a7b-4296-9615-8e51949655c6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "51a957e8-1d40-492c-bb16-90c1989c6463"
            }
          }
        ]
      },
      {
        "id": "e6ed0fad-df21-4680-a821-e3d62c0ea021",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "040508b8-6906-475e-9a21-6e3890781d5d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1335b921-26a5-4642-92ad-b1706826b42a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9f50cd10-ba2e-4b0e-93e1-5d2afa783383",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f3b9f4-81ff-40ca-acc1-b7cef08d1cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e1c6c58-9c12-4be1-b955-9786d0055a79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0683dff2-23e4-4e47-a2a1-1f5071924938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47b488c1-219c-4dcf-aab6-030754fd2084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f567400d-863b-40a2-8196-4a2fef12fd5b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62bff6e-6d7c-4056-b709-865fa04e8eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a774333-154e-4232-acd2-b618843055df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be25099-3d78-44f5-ac5d-e769f4562c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bde55ce4-7365-45ab-b36a-674fab245180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f4d7c0-3cad-430e-8df2-21217644fe35",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d967a7ae-d8c1-4b01-b346-347bc8ff8489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7428870a-27dc-4c4d-b956-e6258b4ff9a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0b721a-e2e5-45c5-a449-c1fa3eaef673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd51cfc2-da67-4ea2-be74-c6efb0fdfffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0847964d-de4e-4301-9403-942fab1b25f2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1aee5d-9c28-4b2c-903d-d067a257518c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1ff7cf7-1470-4472-a619-c66a540a3456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f3516e-f9c3-434f-8ab3-8d8a13249b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ee98c52-a6ea-4291-aabe-4fcc27607cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12d73c4-0199-4c21-97ef-5cde081fec51",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2897bd-13ac-4ff6-a3f1-dd421c80f6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66a5d3d3-42be-4e9c-95bc-0d51f984027d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6e7e3c-7951-41ef-92d9-16153aca78cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9617681a-f597-41be-9140-8a4717090b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10bb7d5a-472d-42a0-867e-420b3e27892e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92652b08-52bb-4396-9e64-e264358a9190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edb3d592-1341-4d0b-b9a7-442d309d83a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a64496d5-be96-4e24-9c7d-29f1be76d102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc1ef958-85bc-4348-9ec7-8f213fb8f9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ecb39fa-529d-4420-b387-438e7662c9f4",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b923e9-7e92-4cc6-96c6-a34b11a8afde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b1863e1-2e29-40e2-9971-b23e44693ca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23490646-08ec-4e77-b4b1-22529d55dec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9273e2a8-41aa-45db-ab2c-50d6ec16c966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d1db1c1-f153-4d68-b058-82f1d469801e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4dc2933-0a23-489f-9523-d999600eb9cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8a79b23-0242-4bd3-a6a8-f11ca568f908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b091c8a-323b-46b3-9cbd-5abac940ff76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbb477af-65a5-4177-8b20-d107390491ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e42179-42c6-4197-b46d-f5ff45fe9752",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d7d324-90cf-413b-a625-90c0ac2775af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b46db23e-67a4-46e3-8543-54b456d5fccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2467c76a-99e5-4943-9621-f8293dd19faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23b3afb4-20fb-4ecd-bba9-6368230f348e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3596a792-c0d5-413f-9945-c04064ca38f0",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d0830d-2fa8-46e5-9949-38b4572dd9c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31e0c7ea-a303-4982-85be-7e26f3873f63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "270382c6-0f9d-420e-96c6-901cba05b935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e06a8944-b0f3-4af6-9738-66193d117f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3904175-adc2-441b-9854-4456ad0975fa",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b730649-6f00-4b4d-a892-5f17c95958fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab1470ca-351b-4e3c-ad33-429a781a781b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2508b86e-e042-4674-a6fd-2d1e6fa8fea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a6370ff-96f9-4064-80b8-cdcfd2df17a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0dbf0a9-419a-4343-9e6b-1a822df44042",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cfaf691-284a-41a1-beb7-ab5adf7166f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9ba3b31-fd04-4d54-95bf-ce9406f45eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca4c1c23-e771-4f79-ae4a-5a4d42004131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13eec0a5-8138-43ee-96cd-f96291b3aaa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e464c7-daa8-433a-a117-b62751843c89",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20f999c-cba6-400e-8e09-1a257f07b68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f245abde-9eaa-49e0-bb5f-cf6e20ba0b61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576bff02-0a1e-4550-80a4-c684989bf2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a234a22-c1e1-4377-905f-993af6655265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fecc8d5b-e2fa-4132-90c3-2ea66db31b4c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e377b92-27d6-4423-8295-939f3f6d5997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7928d5f-4bff-4dce-9e3a-834bcbe0228a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a36ddb9d-e006-48d7-9dd2-c15a9190e083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6bf404c3-e423-4ab9-b2e5-487df12f1eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f42599f-601d-453d-849b-2c1ae59ccfab",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d42f678-7ae3-43a5-84f5-560b8d50e9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54c7feb4-c83a-404b-bcac-3e2c4dbafae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f3eea3-0ffe-42df-8c67-2c986fa7a694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1cd228c5-fecf-4529-8877-dc535b218938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae2fbe4-beb4-4820-a293-9a6781f29b0f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aea037a-3af4-4e3c-b7d4-0081e82ee062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5413990-6fee-4522-8361-83a65a87ea23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f0b3ef8-aaa4-499f-96c1-0b61fac0f38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea1e3d9e-a508-40c6-85c5-18ed23978767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38747f10-6f12-4e6b-9e6b-91f97ecaaaca",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "161ddad3-43e2-44fe-8928-97b12c5388eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "276ad1d1-5bef-433f-b5e3-6b87862106c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d26e221-9e54-4fea-89b1-0de9a0902c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57927167-108b-4e4a-b184-4c6364ab49df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d66b98-ab29-48b4-a0d3-c47e6d531294",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e238b15-4ae1-4a47-ba4f-1d406247b981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd79ceec-553b-4d84-8964-79db4e98c534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb2db02-5c0c-4042-b2b0-b6a44256a5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f192cf9b-8409-4b93-8b34-ab5f9356046f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3526453f-d2a4-4f5b-afd4-e06fce2f13c7",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eed027c-aed0-4c0f-9ece-50e011c4c88d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8246d288-8fd8-40ed-bd89-ebb1195cc06f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0174d8cf-31e1-4fbb-98e6-c9dfd4deb6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "10aec853-ed70-425d-9467-baec710d7a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05bdb5e2-d68d-4d07-b87a-184dff01dbba",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae9de2e-ab31-446b-8110-a15a1d9f57ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0aacc7b-15c8-4d78-8223-a19b87b34dba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b546afe7-5763-4807-a234-dece29ae7fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7245311a-d118-4c0a-a401-39bd05c62347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17d9094-a964-4f93-bc78-dd4c01635233",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eff62ff-5630-4db7-a7c8-8da3f1f1bec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c7eda78-9821-4f4b-b852-80751a009f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722bcf59-8473-461c-b523-f8cf0ecb19f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e8ed716-c92e-4fe5-ba9f-932ed8b6c6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566af8e4-3db3-4b72-b689-5fa2e573a13c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e0f6fd-9e39-4238-aee0-83bfc50fe433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "257fb6db-ba01-4dc9-97b2-5f746f7c1aba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e5a34e-824a-4f46-806d-0a6b58882672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee8c49dc-3559-4b8c-adb0-36c22cb22168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdddced5-255e-4882-b4c2-0d1c056fdd2e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a10439-b9b3-44c9-aa1d-78069eec62de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78ecd9b1-15bf-41dc-83e7-673125c0fb36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00760dce-ce1e-444b-9890-128098e6e998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "29ef57c7-96bb-4e98-9f60-9ab4207dce1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8545ee5a-e59f-4d05-9664-7bf131512a59",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f6c6898-d904-4ed4-a800-ea5fc1fa0207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdb2dbd3-580c-4ec9-a8d5-7bbcab957594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c436fbfa-053a-4d3a-aa7e-b867f8b86b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a4757b5-157a-4830-b131-09dd9b3c4d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31b4680-5632-40f4-9297-297305e86196",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff93547-a72c-44c3-86fc-3a1c8efbecb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "778e4a39-0669-4270-acd9-6e547e92d40f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5740bc87-dff9-4571-97dc-d1e947ddc64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5996a67-0a72-488e-8a7e-f2f70dbdf283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af870b55-3efe-475b-9d83-d205a42578cc",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a5f900-183d-45ce-83a4-ad0f471d579e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22d5a864-af86-4e19-8cbe-58e1e7f5ea21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d3ba89-f747-4da1-b555-debaac8bb5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "764d6e15-3bb9-46bc-9e49-bbd20a65e826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64872e0c-56ed-4b92-bf43-d3b96c50d759",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa914be-b622-4057-9300-25653fd7a0c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22cd3d54-9004-41e7-8917-4ce16ef93c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a57b945-d2eb-4559-84d8-b8c9c1824343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2513d58f-f9c2-40e3-bd3d-014885a57505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db33f202-928f-493e-993b-f620baf0bb20",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87998782-614f-4da7-b63a-a2b3e232f4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9a04b15-a1a7-47d0-9155-e7b423a2a4e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41353373-9b8a-4551-9afe-8d7316021eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c003bed5-e2f8-4f6e-99e7-f7789653ad92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2ffd88-9b2f-4d31-9dd6-49691d6b38c2",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d47191-9f26-46db-91c7-3921653d943e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa40a946-c98f-4f46-8db2-0c88a9ceeb5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18321917-04ec-48af-a470-e3a6fc619b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1911dea6-91a0-4b6c-be3f-ad2917a00b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a71a22-23fa-40cb-a6fe-df1eb3fe5a32",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c088bf-2724-4379-b5f1-bfc8a2dd9912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "199b479f-ec85-4ab7-b1a2-2a891283091b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046816b6-045c-4627-858b-bd011813e752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa1559f0-a6b1-4bd4-a30c-dd810a793561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145ec318-627c-43e2-a403-a71ad9a69303",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "782ff75e-386d-4b8a-b27a-4fc6d65bab72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "722bccf8-acf4-46d0-ad02-b50559d25d80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82995e82-f428-40c7-ad97-00de96624087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "777cafe8-8a63-4902-a56d-6b29ea84bcbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8445cfb-0b0f-47d3-9e54-e82ab28c2fb8",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f1b04d-5b36-4cef-b894-9dfa947476ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eea376e3-25f7-42ac-9a6b-f2a453a9712a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd70cbd1-bc15-4721-b709-8096361ddada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d25176c2-90c4-4f80-b41c-2adad0756d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a860d32a-3d05-48a0-8a49-92ad182d487c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ac3356-0cee-4214-85a1-51f87189f049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "469af6d8-3cbb-485b-858c-cd8ddb28018d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43976db8-3298-45ae-9f8b-de692101d585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5601bf2d-1c76-4b15-b7a9-b83235d2f4da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e1ee4a7-5bde-4d8d-987e-ef3f023a1d9c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3348dd4e-4efc-4c0c-9247-e0d19df288b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41bbdc4a-b858-4b24-a24b-4fe41df21f76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db9bbad-8ec1-4c20-803f-e6e19db9d97e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f90cbae4-47ba-44a4-b76e-ee0b5c5b27dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc68338-d813-4aef-9e5d-9a942ddb5731",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99460177-3580-45ac-90ea-072085c40c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd7a70fc-0489-4ecd-b422-9e855cf0e89c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19bf600-74ca-4108-99eb-1160c317179e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0de9628c-93f1-4cf4-a370-c75619ef511b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163d8f2b-5dad-4b39-a967-d8f176735737",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d4d44c-45a9-4f94-aaa1-5760b0cef18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "144216d7-029b-4999-ab3e-5ddc03d37473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5817edef-f10b-4863-af1c-809455c57b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3a209f3b-ddb6-4f63-b0f7-eeffdb472159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867ae680-3bd0-41e2-ba9e-759a1cda2171",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "807f6fde-74ef-4ea3-9d8a-7da42b0bec76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f682976f-243f-42b5-85c8-234c52c4771a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8e5320-4b45-496e-ba33-e8970956c1cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0110f230-f1d5-4104-a469-5d3481aae22b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55080fa5-0dd1-40b4-8760-9994b606c60e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8abd109-3bd8-47de-b194-869b7b4247ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f56ddf9f-9fb7-43d9-9da8-6e8fdc441ebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9fa99e1-7595-46c4-bef3-85f635d73a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b091f671-3817-4f00-9378-6c44d555355a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17a1728-3ebf-4b19-b45c-5a0f9cfa52a9",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a3ab4fd-1298-4dc4-a9e7-135a1a07b6b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7d07edc-61c0-4dbf-b016-2f47de45d5b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acad64ca-c67e-40b4-ba06-1432748cfe40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb11dd41-82c5-4498-981f-0fad4ba81e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c6f9e4-ef5a-44fe-9949-fa41c309f82f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63128534-22df-42a8-9fda-fbbccdad11ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0744e481-bf11-4838-a16b-550fb937dd13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bfed874-e872-4833-972e-126a80227a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5535d17-3904-4d3b-bd98-aba0f44b0d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118b7b18-5bed-4b34-b61b-4c0479c808c5",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f0c9e6-f61c-420e-9eed-1c7f09db2aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03bb1ac5-3724-47d3-bee9-c79affd8fd25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81c301c-01f3-4de4-8fcf-d191538b39d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "72c6175d-fbd4-4b2a-bc7c-06bf197080a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a138db0-8d02-4104-8859-71f2f4666137",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15653340-3fc8-4479-a37e-8540582a71b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cc56800-1ad4-47bf-9382-6e7a29747363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efced928-fea6-4172-8823-7f0843b1d0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "8224860a-2c59-4843-9a90-a25c2065bdfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a823c28-bdad-4f2f-80e1-c0cc7fac4f66",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f7262be-4474-4a39-835c-6315a92c816b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "480dff0a-5c9d-42c0-9b08-be7e35e65470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3415a0-bceb-4ac3-9c71-c0e14f1a14a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "230dfd56-dea8-4b62-acf9-4c95687f9c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794266c4-e2e0-4708-a2dc-4b7d9117d9f4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07acf8f0-e0b8-4caa-970a-b956a55517b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef1073e-1012-40e0-b756-f48e4a525063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de8d3bb-eef1-442d-8513-1271abbe3813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f6d88f1-f9a2-4d50-8592-58cacbd27185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ca542f-728a-46a4-857a-93ce4e059f8a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1369dcf-6e82-492d-b9fe-ecfe78482f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9367096-a57c-4b45-95a1-ae343d3f1047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792cdbb8-314c-46c0-90d3-aaad81f2f9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "75c4c92b-6ff8-4f68-a55f-170d7bf04b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d903ec3c-735e-4acd-a494-cd1532a0b84f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f360f044-b6ca-45be-bfea-58e70a4443c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2a6afa4-77d6-4a87-bc3f-3e2aed2fe005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e93c441-5c39-4cc8-84e4-fe217a73411e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4400422-4c38-4cb3-824c-37356e89fb8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e091201b-d36a-478a-9f64-8c5fb70037eb",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ab505a-b8cd-4be9-a0ea-e7602ec1b383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4ad73f3-ccd6-4c82-9467-58256003bbed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7f399a-c728-42df-b035-9aadb79bce78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8bdfd1e-40ee-481d-9660-61b57e1d9720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65784117-c122-41c7-9d58-011570b620ec",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0255769b-ca51-4246-b8ce-0428a6041058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d378fdc-6546-4ba1-82c1-db5df8a12407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "881805bd-a393-403a-8c10-4051ce28caec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f11de83-bc35-4225-8172-069ee7708851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82043b18-3e22-4bc7-b7a2-99c09d650ebc",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03775b9-f515-4e03-b9ea-af5ef44cad78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae3c407-4d4e-43da-9d96-efed206335b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790db033-32ee-436a-959d-e2f8e89f049d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "19f7e794-5fa2-4256-8b7a-182c75b265d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0cdbd9-4e86-4f0a-8c0b-a41818d5bda9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a8d376-8c79-45f4-bbee-05a19183ae5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54aff413-9ed6-4bd3-a55b-8656a378718d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c5aeda-4a2f-4167-b045-da805f282a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b533c4c0-138c-4a5d-b2ed-2baf1da2e91e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e60afa4-9319-4db8-a1a2-dd7ddc5c991a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae4b011-2d8a-4c3a-ba0e-7df1447a0654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f515bdb7-8403-4f4d-b0d7-9afd041cde8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4cc4afe-068a-4eae-9f81-588801f425e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "001524da-232a-4ac3-8619-31331c25ed01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c799aaf-6637-44f9-937c-f4df3313fe71",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ef91e6-0873-48df-8705-a73f9901d5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a04d0d7-27c2-47cd-8cef-1e891be3729e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de8d50c0-fda1-4192-970a-74ab33492150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "234e87e3-3e6a-42b9-9030-b213c97a9e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0abf8922-a835-4788-b42a-e08a8c3ff732",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e49ff25-387e-4179-b099-81fbccf01c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eb9b739-4092-44ab-bf27-4c817e63b9f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae6c51c4-200e-417f-8767-37f4a9d88609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93edac62-4231-464b-829a-87cd3e5b5ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4ac54d-0cca-4e9a-9461-ea4cd6b92425",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "288a95ca-a8c3-48ae-a8ba-29841b0dcdee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5194937-dcdc-4d67-9da8-523c4fedf252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92346408-262c-4a00-8740-e17559e513f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "05a40e7b-3d3e-4ef7-93ed-e1081651a80a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed35030e-ed50-4401-b08b-d3b7937bea45",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d504e61-3c66-4c31-b20c-a48663c85054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66eb7e35-c025-4924-9706-644b01b9b9af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f02c2625-3312-4641-8c3c-05859790b3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "28b1d90d-b146-46aa-8b96-0fb23b071d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91112a7b-7229-4cda-8a96-4b0fe79fc84f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d259d169-88e4-4702-aec4-89a21b72308a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "708d15eb-aeea-4185-8a6a-42387b62b914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d3f08f8-f03a-4f50-bf5e-e892b3101d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ba817335-772a-4ff2-b707-028a1e8b6e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d6a16a-a257-4669-b8e9-08e66c5cf533",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75bdf3e-4e3b-4e89-a18b-1e2d7c7931b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "599612c6-f25e-400d-9735-a9139b7e72f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7864d66b-fd81-43bc-a129-7c4ad5540eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "212a1c22-fbb1-45df-9298-b1fa04910a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43aa06e6-6bf5-44d7-9f3b-bc171afa855d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c766c98-a967-4aa7-99f5-92cc637d7e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df8d911e-8781-4700-93c3-4c4a967a688e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9fb4143-9fb1-4a98-a320-8276809d6a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1ba2eae-8e30-425a-b6d7-9e61854b777c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81fb5105-ef50-4357-9adb-3f271753268b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ac872b-221e-48c4-93ff-8006c4bbe0c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4402ec7-7278-40a3-88af-629a0dd93cae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c055e11-8f32-4405-88e5-52de63298e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "745faf52-62c2-42fa-977e-be05dfcce3b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d6beb6-51e2-4280-aebb-d73671dc6595",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98548b2c-3284-4599-af93-67ad9b0befa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c9aa41f-8f98-422b-b6f7-5b3ad998fa22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2181fb7f-26d9-4fee-b277-a997887b2a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b380171-d84b-4317-9e44-d220d4a6d93d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d60cc14-646f-4883-bd43-d77b7eba6fba",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23701189-907e-4c30-9f5b-96dd12d0fa19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea12f893-9be3-49ef-9199-7eaa57f446b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc4a94b-03d8-405c-8fcc-0cb613233c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "114e9f90-d5ff-48b3-b764-9a83ee9a134f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8d8c11-5453-48b0-8a5a-8fc9f7bbcbec",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08d6730-7255-49ca-9f41-396faebfc6f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6f14de7-9d44-493a-b859-c53b7a655c7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "995beeb3-3ac5-4e53-95a8-3284dfd6ec11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "eff7eb17-87f4-430a-a17a-65e7b48f6a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27bd1cb2-b3fc-4da7-9b0c-ca95c95f5d4e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b00844-212c-4ef3-a9b3-3ea31c684653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "992cc179-822a-4bed-962b-6ba1ff5dcdb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96aa4805-538e-4ca6-b6e7-b110ca2b95c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "be75d978-d2d1-4b16-b0a1-87e72526d2c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe809fdc-f7b4-4da3-b44f-6f4b1bd10629",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a4e17e-bcda-4585-a862-2810f78976ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45bb75ba-97df-46f4-a7b4-79df55229323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1396dd94-af75-4d6e-9434-c0f2a5deb7fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c3fbb5e-dc5a-45c7-84eb-8dd0a0d7e79d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2010be-5f4e-4781-9271-819a8f9167b2",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8355c12-d083-4e29-bc89-d0fb1f0f3d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ff74b15-5697-4f05-864c-405676510153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314ecd2f-7273-4dea-8586-06c51544674f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0ee472f-67ff-4943-a412-d7626610ba96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c246cc-651d-4407-a945-c78cf010b30d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a8794d-25c6-4a1f-b81b-3d363acfe216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83159531-1742-40ba-9951-34bdd7a8b180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd4734c-a5e4-46ca-8643-f51a98e37064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "41d75a42-c949-4b6a-a1a1-4776a920f3d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c504e258-ff7a-43fd-bede-82a416977aad",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6303b383-e7cb-47dc-b612-2d1a15e35a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad8bc41d-9d0f-4d12-9531-94906702f1a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0124c983-d296-4cb6-9867-b49cfb121edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4d9197a1-48c1-4462-a730-30ad401dea12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370944e2-ad63-44d3-abc0-64f989177c78",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d5149c-dfe9-48b8-b34a-e1a369ae0b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9df18633-708c-4386-b735-2420aaa630e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1899893-6229-4d17-99c7-8bfe564431a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "52d768b6-3564-4168-b189-43efca05c5f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b307989-1be4-4df4-b784-33f62d5799ef",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec041355-ce1e-40ee-8a98-e9a9ea5c6102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4734b5b6-09de-4ffc-ae31-84c9373d48a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349c04d6-3461-4521-a221-57cff0350e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb4edf83-bd3f-45e1-84a0-b5fb6fd59781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4889a282-6d73-4f42-a916-9426dc43dc20",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74392110-9c1e-45d3-8b25-a10b35fe8847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caabdcbb-6896-42aa-a1a1-f119c873abd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c98a9d-fc2e-4187-8721-f00d96ba10ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f548f7cb-1731-4bc2-abcc-4a6d207c20cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9135aa02-2dae-4259-8132-00127adf0048",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4c0288-3cf9-432d-99c4-10be1a61cd0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbb70009-034c-43cf-8b40-f22fe45d5f12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "742c347e-7a3e-47eb-96df-e49320abdbba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1daf09eb-3bef-46ce-8ae0-1978563c3e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3198eae6-dbbd-49ae-88f0-318c67216f12",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "404dc3fc-0265-4c24-bc53-bad673575372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42d3f935-7232-434f-95a8-b5a86ae04a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458d6caa-0ea3-42f2-ada3-fc93b84de312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "529c0f28-cf63-402f-be34-ac3abb8f00c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c428ff-6530-4730-a4f5-0eef45a862cb",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb481d46-368f-49bc-af20-1b6f32d64b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a260fef-29d2-4cc0-94c6-5686dbf9ba90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc711b37-deda-47c9-a0cf-f6cd231488f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a4ab2cb-6083-4dce-b635-6c9151d2222a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2381cd0e-46b9-40f7-9838-f8a7c57feea4",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1a79c2-094d-4a3f-a3cc-19486966ebff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e96df09-098a-4935-8031-09776c7a04ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1063f49a-ad94-41cd-a1c9-d5516381e133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d59d48ef-2231-4e64-9593-60c7796f9e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2dad28b-69e6-4eb3-bff7-591191f7e4a0",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d94eb40-a1b6-4c6b-ab54-f54b5e61cd59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f11971de-36e5-49c7-ad55-d1e81962f823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c97bc8-71b0-41ca-9cc7-052b65157cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "51dcf517-8bb3-4529-bf14-669b9d7dad34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "715e1366-6672-4e57-99f7-7e868734380e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e076d910-80d9-4d8e-b36b-27dd7abbc0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "377fbb70-4926-4c3e-bfe1-36979d11e4a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20258e1-7741-40fb-9cbd-fc987a60668a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0993463a-256a-4e85-8837-7960f3174d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc19e72-dcef-4f31-9899-823fb385502c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebeabfb0-fbe8-4071-876f-4645b47f2f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f225b8c8-b22e-4d1b-a771-e3dde17923bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d696b874-48da-45fe-a2ab-668db504a3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddc68e6f-cca2-4666-ae93-e2936da0882e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c84b4f-b295-44cb-8d0b-c2f13e888bd1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33019c12-92b8-40d5-9497-76469ddc1a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a5b08d6-25ee-4c48-903c-119eab2fe6e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95d3b0b-e4cd-43b0-bb61-911ffbf53dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc2084f7-1ef5-42e7-8f59-ac36cfe66041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa84d48-0e36-4432-a932-34694e1cc02a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1ce421-896c-424c-a984-b39397650264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "635a9dbd-220d-49b5-8ca1-1ad3046fc11c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab049fc-44fe-4528-bd0f-af6dd05e4567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e66af50-f208-42a9-b3d4-20551b48fca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955a4bb7-233a-41f0-9d11-cc5c0f7b2496",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c192139-e664-4ee8-bd9e-bd1df48d19a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1798aa51-c39c-415a-9818-7c94cf2b09ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f6d2cd-aea5-4a54-8c81-cd591b54022c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f40f2f8e-8078-413f-bef9-9e0803570650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fdc7023-fc6b-4d3f-a438-d487346ced70",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "875de9ec-0adc-429c-b50f-234daee380b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fa277d9-7b5a-432b-9a84-f3236008f09a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4edfab3e-57dd-4fbe-b9bb-409d66d0c121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bb357be-df36-4df8-81b9-31c736253cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f157c0-bef1-4ea1-817a-b5f28f0d4a9b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2dc623a-61b4-4587-a421-5c82a27e068f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "642cc883-3d8b-4b70-ba55-c30463d2716b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a79f64d-5a58-4815-b1d0-72fea5e70543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a97b4b92-8518-4d1a-acb3-f0909da202b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e325403d-b481-41d0-8be5-ea02e10a476d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec4bc28-6de1-4681-b870-9e32cd1f9fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a1aae5c-6943-473c-ab5b-e4070bc73c6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d87b93-8dd1-4bf4-b7e9-fc34091b0cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c2ed0b2-96fd-49ef-80dc-9986770e13d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41b95e9-0d76-4a58-a85f-7212fae3dddc",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ebebf4-be17-493e-ac92-8fa6423796ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32baf730-db8b-4c6c-b5e3-80ffb045492a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360be83e-03f6-48a3-bf19-122a7c0933c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "572edef4-8af9-4396-8568-d113400521f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c476de4-b058-46ac-b3dd-fe1d880991ea",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a471d4c-2b9d-493c-9737-194af6e4023c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d19267a0-ec05-41d6-8a0f-7a243289124a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42371076-7446-4c49-8d39-e01b14c5f62d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "46faeea4-f0b2-4538-8322-6984e4b3479a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c5762da-a0aa-4762-8407-1a4c3a2eadf9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33a067f-2734-4ee4-ba0a-9905dfa7e428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b59bb830-0922-4f69-9d18-f732e53f2b3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12711e74-aca0-444f-a2fa-f8e48e569e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "19a9560c-17a1-40cf-a989-346f6db9c770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08857548-0aa6-4e1a-943f-7af30c1a7f23",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d165f33e-b0e1-4036-aeb6-c90e00db37f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60ad4701-e111-4eff-8472-0da0323e25f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f150ae31-8a5f-4b88-b49b-9d8ceff4962e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e99eacfc-9c9e-4efa-ac5e-1335cbb4750f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c16855-9f3d-4034-a304-303350b62348",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cbd2b00-180e-4cea-92c5-c3534afcdfc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b7d3df8-14b7-4f85-9a96-9964532beb65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1077228f-d2f1-48d8-a15a-3f26663f51f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "73acc4a7-f348-482f-8e7a-f4104d7dab9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54d34e8-a6ee-4d29-bcb9-f46156a4f382",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb27b1d6-a914-4e8e-aae0-892503d2eb29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfeaa253-577e-4ac3-b089-3bb464400dab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e456e57-5d95-4248-9bf6-9717487efbba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2def529d-8259-4fa1-88cb-0c8e675c598c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92026154-bbd6-4799-ad10-65750f96eccc",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b91d88e-a5fe-480a-8fb0-d00b5732e9ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6a3423d-41cd-4a35-9b6a-2d1d36951d2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c68a378-14d1-4d8d-b2c6-8c04a97d2c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b288d690-eb1a-4971-b70d-7cdedf35bbf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50e8768-9e07-483d-bfa6-d18700329c0f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e22dc5-557e-48cd-878f-3e9854143138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7fb0bbe-bf61-4b75-8c8c-0cdf9fbc9985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb458f85-da5a-4a99-a74d-e6591ea914bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "503dcdcf-31c2-4598-8206-8329751597a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d07828-123a-4d65-9d42-384ea8b662c0",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50edb0c5-51c5-4a13-abd5-49022ef133b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "75a87502-ea45-43e7-9023-0f60e54356df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d7d381-427e-4012-bdea-8e6d3eb62523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "705b5434-5649-43ad-b505-fab12276c305"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fa63b977-5a18-408d-a548-946326657e67",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6634c8b4-5451-4df4-b13d-8946a8ddd3e6",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77262cd-4fac-4ff1-8eb7-f94bdbfe16e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "145e49a9-45ac-44b8-af05-8326e72ce775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a44be3d-b3c5-4cda-bf6f-cf0f1f4e7532",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24fe966e-de51-4fcd-bac7-72cd9753ef40"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1a22760-0a16-4f54-b9fb-30d4b2a618ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aef3df52-aa44-4e66-8b86-b34837dc22d5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f5a2f29-378d-4d2f-a1fa-6e8ae782aa90",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a97a337a-2530-41e1-9603-77f33fb2c14e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9de546c0-6437-42a1-a221-d13864212109",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8b29c32f-a1a4-417b-b477-e2419a6605c5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0eb198a6-0c96-417a-96f0-ee6ff9ed1428",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b780d638-51ef-424a-bbd0-ebbc9f6729e1"
                }
              }
            ]
          },
          {
            "id": "d6df47dc-09d2-4ab6-a72a-eaf4b56830ea",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c2159397-fb00-49ab-ada6-fd31feb25f25",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "c3f2d690-326e-4e35-b3be-68adc7d35eac",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e4e3a7-f5d1-41ba-9ea5-f29b38783533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "15352aea-b6a6-4560-80fa-18b83a0ac6df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "392f40bd-4e4e-4e87-9f7f-65b47bc2db59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaabec7d-7356-4195-92ad-3a4308b7e0a3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4c7ce07f-a9ad-492b-b70c-872e32034273",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "51eb56b0-c852-4745-bc2c-123b1ed8776b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5ec230c2-cfc7-4f9a-8602-40e5a16305fd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00061260-588c-45a5-ac6b-da72bab7b10f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d920eda7-db1b-4da6-bb6e-57718060b643"
                    }
                  }
                ]
              },
              {
                "id": "b74a5fbd-7650-4ee0-9e7a-3afac8eddb13",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a343fc6-a3ab-4af8-9664-9a7f11afac8b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6846d453-8181-4271-8a09-6a0714f2750b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "501def88-c86b-44ba-ad47-2d26d5b985ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "67257b24-7d60-435f-8be9-44fbe3e331d6"
                    }
                  }
                ]
              },
              {
                "id": "e01efeeb-0ced-4c2e-abc8-cfff58adf6fa",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "09666236-1db3-4804-ad51-5519778c06b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a223955e-e2ee-446e-ab4a-583c31c99fe3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4afb7003-4495-402e-b18d-0a58f89a17bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3bf34b8d-2f92-44a4-b5d7-2ebc08fe3d70"
                    }
                  }
                ]
              },
              {
                "id": "c9b450c6-ae4f-4865-a985-4d175ed45482",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3e41d88-cc62-43df-891b-657e6f534fbb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b3f697b5-f4cb-489d-9be7-6f2e1871bcd8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "89293f57-6845-424c-bd0f-5d4ca6ebf389",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4a06f007-461e-4fb8-a690-857f43699cb2"
                    }
                  }
                ]
              },
              {
                "id": "4475b00d-a298-46cc-818c-c1252ac40446",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "690768ef-003e-4bf3-a459-ba1d7a62aff1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b76d0567-269b-44ae-84f7-838fa9decdbd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76d2f9ea-5df6-4cf6-b8f8-394fd090d338",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "1d775b9c-c86b-48d5-8146-aa078072d386"
                    }
                  }
                ]
              },
              {
                "id": "a9539f91-4c7d-4e38-abcb-e3f2b8b93481",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d9fa8e0-63c0-4960-a557-ed0006b6b9d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "547d3f2f-b728-4bf5-842e-5836576df9ed"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a691b5f-c3c2-4ef9-a848-845e3e58fbcb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5ab169d6-0b5f-46ae-af95-f696afb7d177"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1ac5867f-3a28-4be5-baf8-e500438b9e33",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8ad22717-9ee3-4fc0-805d-0fb10df12ead"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1ca56a18-00f9-4b50-b62b-c3a162387117",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "930e68cf-1dec-4e80-996b-bbf6e96c3435"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "085803b5-b490-4ed2-830d-7c013ea11976",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c7b059ef-12d8-44e1-b2f0-73ce5e0ba6c4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eaef6932-4de4-4e92-8cc8-0e608855b9c0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "70ce2644-c50b-4a34-b0c2-df7a15d241eb"
            }
          }
        ]
      },
      {
        "id": "ddc88c2b-9c18-4bbe-95a8-7108f92c10ef",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d855e93e-da6d-4c04-9208-ed1475b8e711",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2524c3bd-0ee9-4baf-bf17-430b1744fd5c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "09bc39d7-39d6-4da8-932a-a0d04ea7e1ff",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dffebd5-e69e-4516-98c4-ba8a7dcde69e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21704b71-d164-437e-9e95-52d47c28bdbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af23d666-6849-4d59-80bd-2ac49961e71e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bd0bcb9-d0ce-481e-8a2c-df99271481ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1942eb19-1c6f-4acb-bcc4-1e770cdc60c6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eea0408-6606-4df0-a3d8-63854daa01e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69039428-23a4-4c82-9873-1ca63b3ce409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a08e9dc-2432-4692-b46d-5f9648f88f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "86d3bc78-3efa-4a7e-89f1-229fd34f9a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b543649-0ec9-41b2-8aa2-2691d1cc873e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86aa42ba-1472-4cee-8e62-4984ca2c7de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "256d2e41-25cd-4f9f-a876-ecdbc91ea1e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c71600-75d8-49ab-81cc-4ba4d19aadf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cb550dc-ea70-4dd2-81b0-86b89f4145d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "708af934-2786-4a22-9645-f370d0c8758f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8008565-0164-4309-aa6b-ba9fb14f8d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd01a925-daca-4958-8bee-8ecf6681003c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ffbb31-0fe1-4eb0-a1bf-d66fb04da463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e762d24-4eb3-49f7-b156-d0914e13b589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9a90eb-c900-48ba-b407-578453341b26",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e61b20c-3e23-4e81-9373-821299b011ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bece7b1d-7198-4613-ac0f-b0b800248d5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ea6b03-96e0-45f2-9b2a-f7484741adf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "96ddccff-9ad5-4196-996c-9b8ed2cb4e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ec20eb-4653-41b3-a223-50dc59a2472a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2388f354-d274-4737-833d-6436ef2e7fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7695a350-b319-426b-ab40-4b9c58c7ff80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9899a0bc-3129-426f-b6a2-9702725ea878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "15f6d1c3-40d6-4ffe-9e41-b8a5c4bbe591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fda15eb-686d-4a79-8f78-91527e2fa6d5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "818ca68d-49f8-4e19-bcbf-8718bc7402f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "592aa922-a0ab-44bb-b5c5-6aec37586424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea99887b-a6aa-4d4d-a658-22825c064c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b9e4567-4888-467c-a93c-7dd537402b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "656c38d9-5506-454d-9be6-5ee446bafc90",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f14968-188f-4c33-9f81-5f823936431c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf082081-5d44-4d0a-8785-ab262fbbaf0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18615326-a01a-4947-9a74-5048972fa48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "49fea244-d412-42a0-8037-8f5d03f970a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae39ab2-4745-4aa3-8cd8-7fd910dc6c78",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4a3996-8050-4654-a572-1d2d0d29d825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63ea7d1a-fdf0-4cde-a63f-0d80ebb49823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caad0a74-af17-4987-a4c1-36b61de3bc53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "372ca4fa-04bf-414b-9115-f9f6b1e38c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ac2166-df74-4115-8db9-0a4c5ad6bdbf",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d163a963-eb4c-494a-a26d-61856e9712ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0f313c5-3ac7-4045-a166-91eebb7e0fc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85fc66ee-96ad-4a91-a013-cd5df9490046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f9f2834-1aa3-4177-b59a-f7edfb0f5ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e45324-07bf-409b-8b97-011ebc949a37",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2366f67e-15fb-4c05-a06f-e37540182f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "426d0a1c-031c-4fc4-8ebe-c626e3e4c4f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ace7e3c-f64c-48a8-be22-6c29f50ee2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "61b8d29a-4d96-40cb-8934-6c11379e9061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d09aeef3-f1fb-4c24-abaa-6601399381c7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0eac6f0-0f27-44ad-9109-cde311f26cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfd13be3-5342-4b1e-a32b-1a89be533b37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734267a5-1d0c-4d2e-827d-df4ecb4aaf2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d7a317c0-cb5d-4584-9140-4ddb3e5bfffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fbf1792-ea63-4d88-a93c-c9e767f0482c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e4d911-a6b4-4ae0-9352-045850827fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e668fc61-ac98-4925-a9ae-4752ff0be22c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b6ec2fe-74d7-4b0e-af1d-c861dc67f272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0469950-3745-40ea-8193-b46da1f3080b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2ff7ea-59e3-42e6-87a7-8bf7d669184a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a703f9f-ba63-44c9-9124-868d4831c72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "055e2ef3-89c1-42b2-81fe-d7bd2f0226c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7f7c72-791e-4310-ab16-98573c64d355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b44f76c-95d7-48d4-911f-bb4172143a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b61a750-8305-438d-ad1c-66c0efba30c8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3dc8c6-f646-4a8d-8ff3-ac33e20320c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d193e7ea-419c-471f-b6d5-ce759987ae89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc844243-9608-46f6-a856-330e2de85b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c0e51c2-df5f-4abb-94b5-9d0d68c97383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b161530-ed39-4ab6-8061-90a978f3c8d7",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94b1ea1-f2e8-4158-92e8-883995dad388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab4fab61-de09-485d-80ed-8b18ce446c7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22780473-0201-4328-be3c-22399335efd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cdff20a-0b01-4318-a784-906cf6b7f8d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92b1ab0-8376-48e8-887b-700640d3ed01",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd1d042-2acd-4b12-a7d9-5f4e9bacd857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d66e94c5-7ff7-45f0-a820-c889b6e74596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d85f69-0d31-4afc-8748-c3e051e49578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "87b2a0ed-1da5-4fb6-9c4c-d38299531dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3755d573-cd49-405f-9734-4444516b0ba3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f1e58f-3ad3-4755-bb0a-91c4f9cd3d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c4b7bb-2cbc-4c2f-aae5-806685ce6cc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e02237-9d87-47c5-b255-39097a745984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "abf67a37-8a7a-4404-8a51-ed96b90064b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef599eb7-e3c0-4eed-addb-72e33b1397c8",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad23440-96b9-4e8b-af46-b362c9e6132e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbbb9c07-c860-4427-b925-d15253adbeb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba47578-35db-4f19-be5c-42dfcf8b9484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86d314c5-2714-40b0-892e-9224d77de45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31427a58-9095-4553-b1b1-244ff5e87782",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be87ebfb-98c2-431e-b4f1-5a96a48d3776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acd755ff-f940-4e34-a0fb-6d606e6b7ff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "983ee06a-02ef-4e54-a3ed-1e88ac4372c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2481d247-283c-42bd-9233-60b590671ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311da1ea-debd-49e3-a6cf-7f0e47c9150f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd08644-b469-4688-81ec-8e86c40ed0c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68006bae-1f07-41db-a007-3c344125206d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149c7f47-66b2-4dca-9d4f-b19ca2ce1b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "affcbd93-a31c-4ec9-b7f2-b2f6bb838217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15b51e4-b85e-46d7-a952-2fb23d69e38e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49abfeed-e44a-4f58-a4ce-5c454435e72d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5548558-567c-46e8-a0cd-fb36fd6696ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1fa355-d9e6-461b-aeb1-8e9d8abceb6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a99bea1-458a-4072-9b1e-6668e68fb2c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6563bdc4-e6b5-48f5-9e18-d6ea1de53f92",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7958b20-8f3d-4216-9743-773984c0934a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41ea6b45-11d5-4e45-9873-f6b49c9834d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b23455f-36b8-45d3-9e1c-524723379230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ad3d3a7-1426-4e0a-b25e-b6dab2006b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf110be8-2161-4a8a-8706-36e47016e8d5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08d2eee-9622-4084-840b-ab57b0c0c671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "296f8e80-3852-4567-9931-fd24ce889c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08767f5f-b819-4f16-9092-012e551e5114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52482476-40b8-46e4-941c-a37b804c7e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd64ca92-cc55-48fe-beca-3be1d09914bc",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc8ae4a-afd7-469d-ad04-07510ac025d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66603b64-a782-4281-a0bc-c02338f8fe06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ad1ae8-f8fe-4bdf-bfbe-a94a8fd7354c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cda7db9a-d605-4acc-99e5-98c40aa0d61e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84db1744-3f3e-41b1-9558-1971060ef21d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbccc66f-ae75-423f-88bf-c9a56216840a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "909e782c-794d-41dc-b074-c32d82a0c45c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "611db44e-9364-4691-8f81-c665f445994c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd0242ea-e3c3-4451-b0e6-658846682c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb24f320-e384-4924-90b8-849f15be9399",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5348304f-b029-48f7-8c8e-a6b8ba6529e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5232de8-75c5-466b-9152-208332fe45d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9244c096-1e6a-496f-b2d1-d56dbdb16c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a21cab6-b61b-4077-8ea3-19aca1cc0072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63bc8f74-0200-45a1-95dc-747b339c6dc6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b3bd26-4f54-48bc-8686-0f5912516a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54ead84a-0a47-4522-b976-0a8de4fb683c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a3fa7c4-5c5d-49f5-949c-aeba1555bf68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93715a0a-db15-4ea8-a2d7-1c7581f9858b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1489baa0-c69c-4a53-9a54-63d62796008f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "781694f3-dfa5-4c8b-85d6-375a878366c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91e14820-bbd4-4ae3-87b9-b11bdad9c36a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44e86a6-8b72-4e75-9ea6-4fedd87dd329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cc38ec5-e7f1-4fdc-ba7a-917e75e38112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da0fa864-3d46-40d2-b3c2-447a694d7fbb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "970be12d-4ce6-4b2b-bc82-e2677804482a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ae2640e-9a39-44c0-bbf0-c6c41007001b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a0db32-415e-4121-a404-dcca8e0f8a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "caa57fa3-d787-43ae-babe-a49c8ffa4363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b56148-6093-44fe-80f5-bf1775171a6e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4177c342-7c77-49cd-aea1-70fec24f3707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3794a22a-3b26-4928-b5a5-e3a124b31916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ef81f3-8a13-44f8-ad24-ebe0d0b3b8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "588cb940-c8e0-4d4b-a1ee-1260917bc2c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f09c9452-0529-4c14-a4e5-5bc00dcdef7f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cece55f-da28-49f4-854b-9c878545e82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c566f2c6-16df-477e-a0f8-51c8c3bb432d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28531a40-6e5d-40c3-8085-6a26cf9065cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "042e432d-4a5d-4d73-a736-731c9edb046b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8354af-f03e-4de2-9c26-c002f81d6fda",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30906347-a577-4357-8083-093186a84fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db4f3a5c-3af9-4fd9-8a6c-1dfeaa436315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d280bfba-84b6-43d8-a459-56dcfc3ecc11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eaf58527-fa41-433b-9201-1e1aad2d1b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f63c32bc-a2b1-4db0-9866-8e3e7124e338",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30cf5725-3e68-45ae-9257-23433ac96d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb9efe1f-f351-4dbc-8470-40f42a54d74a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2397d574-515c-419f-b3ec-a90cfa439269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f94531c7-8147-471c-b1ff-8cf11c07365e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fcf4961-244e-4c6c-9929-d22820ef8d22",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81337d03-694f-49a9-8f15-c4a1c7bff39e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e7dee36-cc25-4129-a49c-286c82add9da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "111ecba7-bf48-445a-93bf-6bc47a6622e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e33c798-5360-4081-8ea3-d25e70069fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2423b009-1f9c-4859-8267-edf82bcde301",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d261a6dc-cb0b-46d4-a728-71f41b2f0d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9193995d-1099-4485-ac32-a3f569073349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1009af-de5f-4a16-a7e1-14be27cc73e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "740a508c-d4cb-49d5-a677-6cee8fab7a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2943f5-eb19-45c0-87e7-1099275645b4",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b3f059f-95f4-4da1-be08-44529e803f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e14d400d-eceb-4e2e-a5ad-a9dd03095000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c059e17-f58c-4e7e-b767-5a0cdb137bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3e7eb86-a9f5-42e5-9993-c68fe22149a0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "528ca9a1-3b1a-4e39-ab47-17429728ccc3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b462527d-3186-4fd3-b807-289ee5b25804",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5ad036-e26a-47a3-a06e-b236e6998fc7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f435a940-0825-4643-9507-e946f396f2c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5be4ead-d341-465c-a715-3dac4f979c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52407886-96b7-4b67-b221-0c44b6d72d38"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "743365f7-6d52-4f75-a9f1-81d6a7c749fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9fc4ea95-7823-4648-9f06-7dbda0fe2e03"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c3db32ac-70a9-4a1c-acdc-6a2021e0969d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "144ee7d8-c042-4719-b6d5-f046df822867"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0647baa5-c18e-4c54-891c-e0317467e911",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c5bc67fd-6fe4-4acf-8ae6-5366b1cc3d8a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "168d7c93-e02a-4509-b200-619c1d897787",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9c000f30-5e3e-493b-abf4-d0b36eb6aae0"
            }
          }
        ]
      },
      {
        "id": "f33cfc12-4d1b-4ac3-8532-662f5c3dcef3",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1358d34e-429c-47d1-afea-b88cd3331bfe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "37679cfb-ba02-474e-8668-3be08b2d6a1e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c0592cc6-aa34-4817-8bdc-da75de3694e2",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c36793-ccf0-4a78-b41e-fc5e18e05fc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9246ae2-00c2-4b83-8e38-a2789b15ff8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a332663d-44d4-4a49-b947-3e68bf65d35c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d56328-7d2d-475b-b8fb-c92efc16e596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fe124b1-1be1-4cc3-92de-dd08e92819ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d423d5-8059-4007-ae5e-f88a050a0234",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b05dcd0-35da-4f2f-a1be-0907074dd616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cb93fae-b70b-4c9a-8540-19b02e44dad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eef10ca-ea83-4dca-b6a3-e88b3accae57",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7339024-65c8-4444-87d7-1faff38efc03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17f4f7d1-8d78-42ed-a224-5a6d6f523b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5aa2cac-1b8c-42c6-a240-d1c566be8de5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ab96ae-b2ff-4afc-b98c-f4cb789000e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a50d839a-83f1-4394-9f9d-87dc86df8287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a5037f-ffa1-4ac1-b542-e38ea5d39e19",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e869e68-c589-420d-8291-587fbad629dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef1cda54-135c-4730-8c2d-f39732305cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05c58c5-5ba0-4a08-9d98-69319ca34456",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ea6519-05ed-4190-90be-f1628a942c72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01fab766-f886-4fe3-ab04-a780124d1649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8284db3-f502-41a7-9423-6860535627c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "999fe48c-0902-4c76-9278-75a12ce9f668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f691f867-7d99-48c2-95bf-9aca221bc7f3",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb317dea-6a03-48aa-8076-0268ebf25bba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27e01c9c-a10c-46fb-8279-d615016879af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a41b85-4832-4003-b010-e463049e6532",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df459bf5-0e35-4444-90bf-c625ff92397e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b02c73-7634-4d83-89c6-9765ad82241e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b96644-83c7-4d52-b964-758a77dbbda7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ac06ac6-19d6-49fe-bfb2-f68aa08d3cbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaff3929-1c8b-4a26-b6e5-57abd710a0b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "974fe4e1-d912-4774-bef0-63b3cc51387d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8dee05-5d45-43b2-9cbd-79e116bfc827",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1156d68c-edf8-44d1-ae8c-01e2b688d16d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88a96d43-4f6c-4f96-a51d-f3bf132146fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4e1c3f-ccf5-4f60-8773-62d02b5bd1c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40cab5d5-43d6-4aa3-84c1-18ca14f3f457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f085e06-faf4-416f-9182-03e7a41db412",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a7e1669-6eaa-401b-81c3-f4bc771852d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c893da2-e8cf-4ea3-8cc6-2ffb8cd60050"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c853adc7-ca7f-4939-9420-fdb34c1a86db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54128500-e6bf-4ccd-a3c6-625406b018a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "996e69af-1ff6-4df6-a8d8-5799247c9a8c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a481ebf0-bfb1-48e7-9d6f-baa6a1be03a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab35d67f-d20f-4605-bd1a-c7a7143662d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f321aff5-f307-4409-bb86-22293ab48775",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9986d1c2-e3e5-44c2-9948-235cd183d198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50543cdd-91c9-4a8d-82a3-1a7814e891fb",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bcf4ab6-034c-4b52-8373-402cea3c2a4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d71e7fb-73db-4f64-a5b1-ad0164348b8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b698a681-1cfe-481e-af1e-ed03d4cead2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c56b192-d36c-4591-8a7e-833287421cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "428da0a2-b683-43af-873c-15ac5797fe47",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deaa8133-9fb0-46f6-8f53-aa98ef58964a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc4b57ee-cfc6-43f4-a362-eaed2061f18c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e004e2a1-d82d-4a6c-b4b7-c75a50d1f457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f51913ed-1391-4c78-a5a0-b771332ec0cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc0e5b4-e5b3-4c1c-be20-8b446d07e1e2",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659ba13d-0d5e-4d2e-92e5-ef68145296f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2f1e7a0-3985-4cc9-adc3-62de828afcfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1353a2b8-bcef-4cbb-b3e1-c9df685bad90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c49024f1-c1e5-439e-9f05-8c743a349460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d06c13-0792-4359-8cef-dac6dfcda91b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02e06a3-0dfb-4ef3-a69c-969ee01adf09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4196cc4-dfc7-4e72-a2d3-4cb86b4bd556"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b448d1e1-f42e-45c1-bbfc-788c58f9dc2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91d36e1e-e123-40c0-9c5c-728360574faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3ee4db-0a04-4727-9c7b-edf21a4d7381",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80801df5-63ce-454d-9a07-652370ebc4bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f99456b-3d33-498e-89e4-a050903ba79c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ae313c-82f7-442c-8335-bee2b9918e2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4705a82a-f695-4f09-b844-706fa22d1bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6522f794-78ea-45f3-8ba3-2188f7b2ebb8",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29bc70af-4120-4de5-8640-649807237e5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ab4170d-e514-43ea-aca5-4787707ad2d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b59fce-46de-4cbf-b1fc-294494b638d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "948a6a3b-3aab-4e15-8008-1d251c04b0f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c558d2-8daf-46f1-a27b-efc30d7366cc",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7f1f4d-bffb-4951-b466-a3cda4292991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a58a6a-e74c-4632-b60c-d554c93a2a10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "971247bb-d981-4865-a47c-e43aed0bd755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0435aabc-c88d-43bf-acc1-f1489dd99420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5caf8ea-6cfe-436e-9b1d-77ecd1e39249",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6553914-8ac9-4e9f-80e4-66c4a7afa462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1490043-ddf1-4318-88da-a8c1c28faa27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d48622f6-565e-4b33-bc0d-9888a4b6e941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "686fc722-f639-4be9-9978-cff0c44a032a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8acccdc-8216-46b8-8d11-2ae750ee615f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc10dbff-54c3-4012-b2c1-47407a144b93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14b2d30e-3198-429d-b46c-6be35260d262"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f813e074-9478-461e-be0e-d970b0d229e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ee99ceb-f473-4a67-bca3-f546114b4248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00faaff6-3db8-433d-8456-ee7dd5393b6e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "693fe60a-fdbe-4ce3-9774-d29fc015d0d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6194838a-4161-4e9a-beb7-365ed0599c01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0e1543-acac-4608-836e-224aa3690e7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c51f33af-638f-4601-94be-364a866e9291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a07dbf0-58f6-4db5-a8f0-130bcf2937d9",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "839809c0-6783-40ff-b504-9538d5789019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d482ea4-8e44-4192-9b4b-382792679b47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2bafcb7-a62d-49c7-b9db-126ac9016ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51753b32-1e25-49cc-a04b-49cbc30bd4d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d9245f-8731-44db-9b6f-e347b1825387",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8655af2-80b9-45e8-b024-c91285e961aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c00bae8-7d10-44f3-a1dd-5f94cebff0cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c26afa-cd83-4d8f-ab53-28d069ce49b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "246561f8-c3e7-487a-a9f8-03fbfc70a277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d9dd0a-7281-496b-be76-ceb5bb84416d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a14fa7-8268-43b2-93ad-2a0429507642",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5d1be16-33b6-4f19-a30f-3e333fcd9e1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c852dd6-ddaf-4514-95dc-d6373ac60a6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fe908fa-186f-4306-8675-981607f63fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04b81b5-bec2-4846-b44b-e9468c62a890",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3233d568-f43b-44ae-b002-97bdaa68ffa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "549bf37d-4844-47de-bfff-dba2466393fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1f5418-64f1-46d1-b7c6-768d33d36050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39b4a8a6-9509-4105-893f-954e91d20632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad463b24-8123-4e55-974e-0f444f401bce",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475f1ef3-f69b-4042-8d58-ee897e4405bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fcfeccb-b8dc-4817-8452-9a860ef09879"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7133cf-bb08-4c24-94a6-d3e7084765d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b632635-8c81-4240-9637-e00b10af7932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb6bbad5-9536-421a-9733-509ab637dc67",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5584347-a9cc-4a54-a735-98fdb6aa48bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bd40252-d63d-4796-ad72-6e8d7bb82c97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d974f71-21dd-4650-8399-70e5b2b5c7b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2406815f-e7b3-4568-a52b-54a00027da17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e33b2a-da95-4a20-a63d-cebab82c1f13",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df13a9a8-025a-4acc-8963-dfe0fca2133e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94df7f5b-2d56-499f-8eaa-03424ac9cc8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3282e51-cdc4-48eb-8057-ed4aee53b614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d04dd001-0b3a-4a8d-8b01-a640f609d21f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5fd7bfe-8fc2-4013-8bdc-36610d9ad7c0",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e91970-c45a-4c39-bb74-1266c5de938d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c887d164-d987-484f-a420-fd60797e0309"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c885e1-687f-471d-a2ac-516e8779e4fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2df918bc-08b5-4654-a7dc-8a1cf8916fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8429d43-9ad2-459e-bd86-b950a9d925c4",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1264218d-6070-4bd6-8ab4-3941f1b7e3de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "635a0446-d122-44df-bb94-68f2d01e0d31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deebf9c6-d177-4535-a715-a398e03342d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3292003-753c-4ce8-a36c-ad3692c07caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e2f83f-425f-488c-bd31-8e318d68f0b1",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cbdb2c8-c336-49b3-be1d-2baf359111fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fde4842-ca1f-4da7-89d1-f09534217995"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc9c5a4-15b5-4f8f-bdd1-b8123aef906b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c7fbd2e-a2f2-406c-91b2-0054ec0bb65c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3fac988-e4da-4477-b138-920fa271f09d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef2614f-4cb1-401c-b876-7efe6e70a252",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "518f6876-43c7-420d-9548-f3be3e3c722c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a062649b-a3aa-4e8a-a5ec-c0128d210559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f28fe9e-7bd2-4d66-983f-2ab3db0aa8fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4796dd2-96c8-4a29-9409-192c879b0c5a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "387548d9-0d49-41a1-9ec4-7a185d0e3ee5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cfbb769-b8f5-4ada-ac5c-f10791b4c6fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3271ed-2be6-46c8-95f1-0cea07740976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fea4daf9-3430-423a-825d-e9c480c9cb34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d5b45e-644f-4fdf-b163-daa1ba6ddeca",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea6ed57c-c915-4cc8-917f-b4c821c4dfa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b6eb65a-5a8a-4d9e-9fd8-a9d58cfdcd56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb5ab3c0-dc08-4f84-a187-8a36d998d1b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d69abbd-4de1-4e3c-b80d-2c425fe0d675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670b5a10-c33a-4e17-9352-286b0008a8a1",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a067bd19-25c9-4d27-af58-fa461e52d463",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "357256fd-8eb0-41b7-b4e2-5e5be57c1666"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "501e72ee-ab44-4b46-96a4-cf21032770e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a056ac14-82eb-4577-93f6-85068c4e4191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d68bd6-8c97-48f5-b69a-2f0083a71d2a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc90eda7-a516-4d55-88ce-49f9ebbc6423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb7f504f-277e-4f22-9daf-d0313eef0671"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4898ad0-ac1d-4fae-99ff-b86fd87c0941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57dd4e02-2ccb-4a86-8308-9f668d36f752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46457916-1e95-4059-9cb6-54f5268d6326",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde16936-a966-4a8c-8903-4509095b5070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3ad3463-d01d-41b1-8367-6c3caabb136e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c4681e-604f-4438-b1d1-4abcf7047439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a33daeeb-f1b5-4850-85c1-a780f29db1e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775883f8-3271-4a7e-8303-09533a8121bf",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af72172-bd9c-4996-99e1-0e71be8e7664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cefe958-f696-4751-9bbd-948351d28236"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a4f929-60ac-42ed-990a-cb1ee3f1c080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3e47621-1fb7-4e60-90bb-3758d4a72975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e265b0a7-0ee4-4bc8-b300-ef4c4f6ac23f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd8c622-ae9c-46f1-937c-fce5d61f05ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f08611ce-0650-45f3-b55a-ed9fd78d120b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60737395-2fcd-4833-9419-ccde09c27512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7a95741-6eee-4376-9caa-a3b931aa97f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27bb5a44-a267-4f48-91e6-9d1edc567e38",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a5ee3b-a7aa-46aa-836e-977ec77a54ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f40130e-9d71-41ed-bc9c-1ce620b1fd82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc9d655-101f-4acb-a347-2291d85efa50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c94f54c8-b14b-4057-a495-4b31df0e25a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e110339b-e0bb-4db8-9ee7-c51abd34b71c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea16098-92bf-4f68-ab1e-69f7c07efdfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "643f5575-bdf9-4266-b9d4-0ab41c0f24a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b0eff2-06a8-41aa-b3c2-00c82432785a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de7e1fe4-10f3-470f-a1c2-997abea90923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a91e2a9-71b8-4d4e-9be1-23ebf13dbd56",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b82144-3b70-4ea9-a152-4a9f5c34db5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42bd6e90-2108-45e4-a6e3-b6b69f1ad066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "963c2ab8-c62c-4af7-a5d6-d5642012835e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d4d771e-229e-49e4-94f3-c972707f857c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195a1c00-0757-413b-b687-3d4a33741e40",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e7923a-97bd-46a0-a7d9-978e71310804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "323a8388-ff7e-4bb6-b41c-83b4db909ac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2eb676-ff61-426a-820b-8fc492daffd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80771121-3079-4eba-b73e-b0e9af443543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f77ed2-dc6c-4ff7-880a-93b02031d25a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d264528-8005-49c1-bb13-08e51cf311c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba2f8299-2204-4ff1-acb4-bb80713fefea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b2f819-7370-4d11-833a-10784a5bc1fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9093fce-c9aa-400f-ab7d-6bc210af5d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b55f58-4bdb-4601-8d18-ad2c532496c4",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f76fa5-e058-45cb-8b17-512a17daf67f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "758980e0-3087-4e12-8e1e-8bd20bc2f737"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4698fb6-dac5-4bca-af46-d4d29baace00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d192db1-6108-477d-b72d-887c706a1624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b436673a-bba0-41ea-9948-91df55600659",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de471e5-3e00-4e1d-b2c5-50d98314324b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b489ef78-6d14-4154-bdbc-f028726cc2f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87fe2ec6-07c3-46b5-9833-6128fa44ba01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02d33784-94d8-4848-bd64-f43a00af789d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e93d64e1-3986-4b4e-83ae-d92d85dfb04e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a2196c-dbc7-4482-8d3b-e0b8cdb90aef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8a68bfd-103a-4827-9a34-8453771e195b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49b41e6-8bb4-4da0-97ee-ab2c4db283c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4d91332-0408-48bb-9826-e1de6fd21730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add3dbab-102b-4a8e-b927-aa8ad37682f9",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de0a535-0c1a-4445-a2f9-a5be73656217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f849ca6e-c624-4930-8ed6-4895850cfcf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce60cf8f-308a-440a-ab4c-45a2bba731fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1bb5563-29b5-4d06-87ba-bb13e9da2e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b295ebb-8bf1-4146-bd55-d622f2d712e6",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3814717-8c74-4d52-b741-8ef528118a73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40a7e28c-733c-4f93-976e-f5de2c9a1ad7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8f8cbb-aa32-4de3-a2e8-763ab1fa23e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1538e9d7-bf85-4453-afb9-369ca912e79d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c3ab621-8ab1-4814-8e10-452c93849772",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae7cfed-5958-42e4-acab-af704af91030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7b24152-aba3-41af-ac3a-4770ee8009b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd4ff9e9-b08f-4e6b-a5b2-b4faa4ee7c92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8134549d-28bd-4ea3-9de4-73e633b3abf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa52a3ee-8a1a-4c8f-9156-ae1e8ee692f1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd35becc-b926-4797-9869-373fde3459a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2ea8061-8f97-4873-8aea-0e20b4ee8119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01059df6-1688-4cd5-8917-965645158744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e5a4ce2-c9d9-40c2-9ddb-b2ddfcdfac0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef020783-9121-46ec-a0ec-87d249415800",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e877e55b-a5e4-489f-84d9-4a59bf21e169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "139380fe-c886-4f9f-8907-3ed51e3dc736"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "694007b5-7c55-4152-a95e-7a4ec7b8f2d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fc339a0-b9f4-4652-a007-38b3832bc283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b0065f-28b7-4672-8b5e-19da01d9f911",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e24ff0e-4b4f-4a8d-9397-b4301a9a7ac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51a9374d-be22-44a0-8243-d76df95bd96b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b36d9d-346c-48ee-9ee3-db91074f8028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1391d705-d4ea-4d88-977f-52594ac245a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5adab2a9-a552-4963-aec0-ea29d896c6c9",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb247571-9ade-4e23-aaee-39e48d4947ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ee500c2-3a17-44d6-9f7f-c9e3e9cb0b0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c91fab15-3b69-430d-b67f-3eb3e6124dcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "765eabdd-a28c-4757-8e13-1fee6ceccb4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5876e1-53e3-4e59-a419-aca9f54fff8e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54be128d-2ba2-4ff8-972e-cc236b34e8f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8167bacb-38e4-4633-b7e0-40c6b17f8346"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1477d662-ec09-40bc-aea9-fed9637257ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6b801f8-067f-4a42-89f0-46fd4df17cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6da98f-529a-429e-82f3-dbd3d720b240",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bbb03b2-d2dd-41cd-aaf1-afbb9499d848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f52841c-ad98-4896-8a3e-251af78957b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc675a7-a6d2-4826-bbd9-d6f845a328c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9efa4203-eedb-4306-8548-0d6491a670ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12335e0e-5fd9-4653-ad79-c2ceb84dd64d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd344c4-9cd3-440d-80db-05b4a4872ec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a62eb27d-3cf5-441b-9c79-517f4a48b186"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "580384de-94c7-4de6-a849-c5791083310a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54b68bea-1d4c-41e4-93bb-ac2504636121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f93143-e0fd-42e0-9bec-8db2c9ea7174",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35310edf-ad6f-43a4-b7e3-da881ecc6177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d449c58-15eb-42b8-8947-a5a92ff8a6cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e9fb1b-475e-4c47-8410-36d094e4d9d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "292559e9-741d-49f3-91ac-7be93fc98633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8feb06d0-18cc-40d7-a2e9-0013ebcb83f6",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be032ce-136f-4fbc-b750-ae58f0d63309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bd63942-8b42-45b5-a235-4e912b71b580"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df06996-e0af-4889-bb5d-79b75c5295b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21f683e5-659f-43cb-a1b9-84b14e632148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc474989-f7c0-4881-803c-c421b796e90b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d7e600-7626-40ea-8fc2-cb1a1cc21b87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82ebc320-718f-49d8-9554-e387d7ad10c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54da515f-489a-4fff-891b-be6edfb6d414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2df585b6-adaa-455b-bdf1-fa8eb8aa1c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce328e7-be0c-4bdc-b6cc-240999c3db74",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e5da8bd-169b-4940-9914-29d9e777c02c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c4a1855-22ad-4a17-a1bd-b01c0355c194"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "064e2c6f-c6bf-4a62-81fb-5221ee4fc498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ac172ca-1a0d-4e9f-9be0-44ccd5b295ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d130709f-d4c7-4059-b567-2f851351eaa8",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cce5f14-6d5d-4db4-9ebe-bb7d1ac287cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84a7e329-b19d-4440-98d6-fdad3e6c2832"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30107f91-6d2e-452f-b55e-211a0817ea20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69a99477-a429-4870-a7e3-2c43cf11d908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac7559c5-5805-4759-8725-514501b12253",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e9c388-d870-4a4e-9579-8700c44fc4ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2863e7f8-dad8-4dd4-babf-f74fd8b8dd9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a652c917-ce4b-4400-a55b-21dab8f848c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bd7192d-6d84-4cc9-9c0f-16594ee39735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f58777-aa10-4465-a5bb-269ff882eb73",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f485bef-02f8-45be-bdb1-4d5627a75fb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1eb875ac-16c0-46c8-85fc-06f43abf40b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c295fe-bc59-4ca5-ba85-87541e5a64c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aeb12b5-d015-499b-93a6-c25e0083c7b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "771597ed-931c-44c2-a42a-500a73a3dff0",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242008ee-9ee9-42eb-8163-9a7db7447e37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "641ff16b-5a63-4366-92f9-32e4c3904484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d472dbb4-e538-4259-92ad-0828401da35f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee4c8589-1f95-44d0-88f4-8299103e8522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d9be019-7a94-4f70-bf3b-eb4f47cd55b4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad974277-b700-49eb-956e-8d33a0c427dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91a9333d-3b98-4b17-859c-19adb5be71b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe175eb-b04c-43bd-b391-b68caadbb48b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "903cf8ed-f538-4bd4-9ba7-fda7e4f4ef54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a0329c-cb14-4586-8129-8e5b9d756cf9",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db984620-83d2-4238-82e0-d362c8c15497",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efb3749f-cd6f-4eff-92ce-76f723e3e11e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc3cec8e-9221-4227-8b59-6895b8fafc48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b63fd0a3-31ae-4067-bc86-c9b8c8155065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "819a3a11-b3f0-40d9-825e-ab509359e3eb",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "510b0e37-7dc6-412c-aaec-b1417fa86ed7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "961c3c86-94eb-4dcc-ad81-ce8cd1439d32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a3903f-98cd-4250-874d-146e3d812ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac2ad2ac-a143-4e35-a6b7-6773754d37b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af76717-a2d0-40d8-aca7-1da12270cde9",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0daa3be4-87ef-4273-b631-91db2a7e35d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67142e4a-10b5-4817-a3ff-0bf57062ec1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "154c105e-0d63-4c08-af49-c8a3e08d592e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd7f0582-5e31-413d-a28e-2964b33ef835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c28997-1bb8-41a1-abbb-de9b2fe3b72a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4674c1cb-a75c-4a4c-b078-ac2bae968ccb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84e1ba08-af40-485c-9944-07036a5b7b73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39267ae6-5fbd-4e7f-b0e6-10122a488075",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f256013-2393-425f-8bad-ae085699340f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a964f9-342a-4c70-9d82-b18ffd65042c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ecac67d-dded-4ffe-a4d6-21aba9d23756",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de21e60f-e492-427a-a275-91e70c93382a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2a5720-5964-44cb-a6a4-4236624eb503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7737f779-691d-4e1a-88b3-802aa6170196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc83b40-a695-456c-b026-5b0436bd0c98",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67fd619d-f316-4c53-8908-e62419e7c96a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6a42574-5b32-4fc4-a1a1-fd1273f1c531"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "077de412-6d32-45fc-97b4-213866c76512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de5bcaaa-d667-4432-a552-1475af123c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b144697-48f8-4772-81e2-e22712da4a05",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a853352b-647f-4d5b-918b-14a0ade1f8af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7f9b127-9f38-463f-9221-c61921a737d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ac0d63-e930-4fef-a635-16f8c9a08dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "516eca9b-12f4-4893-aa89-c562c1426fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ec1379-36f3-404a-aac8-785db3356a05",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7624bc7d-3181-4225-8bd9-bd098fe42d2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45f85b2f-abdc-4868-adb5-40b5c7d5ca5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "086a9f34-0fae-4e6c-83b7-245d371ec900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "908e8486-d3eb-40d7-9ebc-627fe8cb2c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66452ee-68c5-4a51-b141-d56f4058c4c6",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98831fb6-88fd-4c76-8598-ef1138899532",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d8e2fb3-4fcb-4608-b0ce-a3fcbe531f02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6003f304-f455-46a7-88f5-cc169e691a16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "183ba112-d682-439f-8324-cc322acd38f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60dd8975-2c08-46ce-b2b7-7de3ca6280d1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9d17ff-204b-4ea2-9c7f-1a8c6d6c9ab1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51d3b78a-402e-43c8-9477-1f408db220e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9935621-457b-4909-a704-835bd6aa34dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b254a3a1-1c98-4924-89d9-18afa6936dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21bf418-8600-4670-9f7c-9a02f488beca",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f14b89-c2b0-4145-8a28-792a63d595d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09c2596a-8d22-4c0e-b957-543ac3dd15de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b51b282-19e3-4e33-926a-36499eff4433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69abf167-500e-45b6-9a1b-c180aba7d28a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e7abbc-10da-4cbb-abcf-226ec21b162c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d6a26c-62c3-4db2-86b8-9c7ba7e6efe2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fd76126-de67-40ae-b912-e6abe262b774"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "529428e2-23ce-439f-8ea6-c25381474095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "932630ca-1bf0-475b-b89f-1315d4f551d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae71c741-b359-4194-81b6-0358429eaf8a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9add214-d595-4200-b7b9-d6e657736abe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55255063-d0cc-47f8-82fb-f2bfe2013ff5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fc7ab91-aec4-45c9-a305-cb3931b9ce0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd2e4e5b-ed14-4bdf-a77a-2bf2ee14a163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e9a2fa-f830-4b87-8f09-f66d98bca05d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b329ec-20c7-406c-bd93-913d41656bcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a35b9eb-01b0-4ed4-8241-0de90b597fa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca1a960-bca8-4015-a518-79881c4677a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bad369e-9f96-45f2-8df2-3a1387255676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778711de-0ae9-4562-9231-abc8daa58f21",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0c8bf1-8c11-4eee-adad-2728f1fc6362",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0098616-e228-4897-8103-c92f3e4f6603"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baefa604-c8bc-4bbe-a7fd-c076c0d6dd91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef8c9c1b-e400-4b37-a936-8af0a8c0634e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "355a7b34-13d9-4511-a7f1-bb56b91ed9f1",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4945f89-61a9-4b8e-9940-9bb7906f0872",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae145602-4efc-4abc-ab1d-02e946c66a21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc86fb9-a162-4048-8017-87b2b3ae222f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89525655-334f-4798-a208-f56e4d0d8b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48de6819-1725-46b2-991d-875801015abb",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d219e695-edf4-4273-90cc-e8ed2b948e08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c5b60b1-3fc3-4edd-8d12-9728e78a99ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdea74a5-4ae8-4ed4-92af-677de69529c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d494c6e-256d-47d5-9e3f-f3694ee94d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50e612d-5e79-4c02-b40b-0945d1a35d29",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7df4af5-4b14-43bc-8638-bd57e0396b6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4133de78-dc59-4785-899d-0948cbf7ed98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6659650a-a39f-4641-9ca5-51a439026c1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4c384ae-b1f5-4ad4-8b6e-2f8d1fde5a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9589500-f9dc-428f-8dcd-e2c7c0a2a2e8",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2764841-d568-4c71-aec9-7283417c8918",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efa0657b-fef9-49e9-a55f-b783f54bc311"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8b5552-dbbd-45c3-9a00-67e11b118fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a90b6cf-1549-4854-ab0b-9b4147714cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eeca132-7201-43af-a451-7caecb9651eb",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640cf35e-a6ff-46db-9d55-92cdc85ce4fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9bab371-5d09-42a3-a054-981fc263798b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a3b762-2fe5-410f-97f1-8a31fef8207a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b910c1b-6a5e-44d6-aa57-7770c6becdb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b66fda-6784-4e37-b39d-8e520439b040",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a985541e-1573-4f7d-be8a-9b6d01baf16b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d81ab75b-a175-43fa-a33b-10cc121de1c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9181439-8983-44bd-bbbb-dc8f71dda693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f61527e-a73e-4f01-8c06-7cf1f43fab25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "219b81ec-db8c-41c8-abcb-a74a9e140054",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caad516c-f7e6-48d5-919d-a7e781acf560",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abd7fd20-c659-4317-b524-24ae2cec963a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b48e229-24a0-444a-b1fe-00cb6723779f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd1db44-612b-4403-b454-750d5470183c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce73047b-eed8-48d2-8406-2603a589ee02",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46da053e-314e-437d-a8cc-0ce23191918a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03471dbd-81b9-43b2-bcbf-712e8f3f0bdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b86ba5f-e860-455f-acca-750688c4717a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c8a03ec-04b4-4324-b230-0a8c9be55f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "882e2e5c-ebf5-42c6-afb7-024abaf8c36b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146227a4-0eca-4e7c-89fe-7c07337b065c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad9545c4-3771-4f74-b361-574c037845f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eac036c-5044-48fe-84a1-f65172d3d37d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dae62e5f-5bb7-46cb-b8f0-af5f911b2150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c10001-9f3c-48c5-87f0-c619e9234c28",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71acf6cf-d499-41fb-899f-8edb934805b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8df4d6f-97fe-4c83-a72e-aeebc163097b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d1bddc-b06f-40a3-8e4c-276065874298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ca3ff3-948c-45b7-87eb-861c1c340a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54cc059e-32fd-43c6-82f9-eae16f772e53",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5cb40fe-7dfb-4860-964c-c47d1e5abaa0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf3a260e-e2ac-4c5c-b42e-aab9811f93f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc08b237-7bc1-4d59-9ceb-e8a657ea69b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c54f22c2-eb35-46e5-b5f2-ea35019d5840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ba0a4c-6cda-4901-9039-782ec4e12a14",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad09323-e3ef-4bc7-a92d-eaff9c482be2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d31cbf18-a15c-4451-b47f-e915c6ed5d18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b79b041-21b3-4370-bc10-4d3538a9e3e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88a3c00e-08f4-441a-9c1b-fcf698b0d6a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c0d6a6-9ad2-47d9-9749-bbd74f89de91",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded7ef6a-998d-4379-9d09-31495acc1328",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "683574d0-7f37-432b-a9e5-7d2b61339a18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b61e378-4e54-491a-a0e6-771d50a1c1a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "270c0ab9-9527-43b6-93e5-54c243c62360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639fd492-e4a8-4709-82d2-e3f5f93613b2",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ac8142-ba88-42bc-97f1-28b34ce02a8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28c60806-f8b2-4724-978f-987897ba927f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37272787-87c4-4b18-838f-cce183923655",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01fd1ba5-a082-4bed-99a4-836e824b7b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0289cabe-1e07-4ebe-bf79-4a8dc35cf874",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "772b5683-c802-4f5e-b2f3-f4eb5e5f9dbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f228b8f-7c59-4727-b587-387477ad9c30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "924c8485-2368-4f35-957b-83548441ece3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb7f076c-5324-4287-96d4-4a6428486230"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1546f8e-4edc-452c-8663-3bb2d58d63bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "775156bf-dfc7-4d73-899c-f84070db7816"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b51101d-9555-40c4-818b-4db49e4ad4e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "28afeaf6-5be2-4b64-b9a3-7e67bf6859e8"
                    }
                  }
                ]
              },
              {
                "id": "653fb7f3-aefa-407a-be85-0a4205067425",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d87fb880-a0ac-41f4-ab08-494b532f7548",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb275cf-6715-4f1f-b8db-6600fdd4c19e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e8bf0061-b056-4bf2-be8f-7b2d91ddfb11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ae162a-c49a-4dc4-8924-f51f6df79b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a80bf41-6466-4b5f-b7a6-1981a09d0341"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47178ce1-c5c2-4a48-a06a-f8753a869493",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "407606c2-1a4b-4078-8560-871a8195f7cf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d6d3365-488e-49f2-a634-d17ff4e17f44",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "026f5f4f-fe81-42be-b956-bab37ca147c3"
                    }
                  }
                ]
              },
              {
                "id": "326b4529-639b-4f33-a11a-8ce28eb7fd7d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f90801d5-4c6b-4235-a965-2361c022fda1",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "439b4fb0-deb8-48c2-b5a8-dc513c6b60e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9e64d838-7034-4499-89dd-8fe3a62fd746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aaecbdc-7c6e-43e5-83c3-f01d8dae3e77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aae750d-6e17-4b69-a045-27942ddeff7b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b0e37ba9-0912-4d27-8f6f-2b14cf1403e6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "492b8a0f-f61c-4e01-be93-83599159666d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d1c1cf3-9b2f-4858-bd41-349e0fdda617",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "594db570-411b-44bb-b71f-0444e34572fe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f748886b-f8d2-4a5c-a228-cd6cb3d425b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62ceb328-89cf-464a-82ed-f68b92285788"
                    }
                  }
                ]
              },
              {
                "id": "2cee567a-3e5d-4dde-8ca3-ee42de8dbbae",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b79f5775-39a7-49fa-b871-130e65b8d24c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3771620c-c157-431f-a453-8af101535eaa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6cb7a4ee-fc4d-4442-8327-d7b35c25dad0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3e919f4-6779-4d90-820c-c26489f833f2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "16c4b80d-d6c5-4973-bc1b-7bb9fcdcedbf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "956dbf5e-3c18-4727-abcd-cded003f5db5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0c71e415-4eaa-4e9c-a9ec-160fb726ad0c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a853e784-3dc6-4e2b-80af-901ac5b3df53"
            }
          }
        ]
      },
      {
        "id": "1d0831c8-2927-4902-a908-d1209bdee9c5",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d6cad780-59a5-4ad8-b113-22a8cdd27bbb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "688d4f1c-4212-42c8-9302-c106ec3f907d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e3c74aa4-0a21-41e2-a71f-ce22894284d9",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58115a9-9e42-4a92-a487-f5dea5fff013",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "62377cdd-7e82-4778-bcf0-0bbd6537c4bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd3dce2f-442e-4b5d-829e-34a3060f5979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0e309787-6beb-4adc-a308-a4217b2b8be5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85f8f83a-b5dd-4779-b115-df76a1bba439",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa0de841-09da-4594-b545-362b4a3bd3b3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8aff3955-2925-488b-bdf8-03f79d2ab38c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73c0d031-2151-4a3a-87ad-b30065324bbb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "49624f08-2e6e-4099-91d3-9ac03cdf3640",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "24590d24-b355-4551-8e72-0a15a85f2471"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ac19727c-155e-48e1-bf9e-0c8f02de87e0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bf3e1e08-8e1f-40d9-b426-23bdc8d53786"
            }
          }
        ]
      },
      {
        "id": "541c0ce8-0020-474e-973f-90c264fb74c3",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "f750571b-12e3-4ee0-91a2-cfe6d019961b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d6a6521f-ac4c-44ea-898d-5907ec204652",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9c336ab1-303c-4a7e-8d8a-db9b1bb8cebe",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d18b670-635d-4ff8-8f1e-1e7d357ab950",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a7f31b3-fccc-4908-a100-665dd4ca46a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6562150d-21d9-4c86-b141-6e08c8b4ef2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34e50f5c-a7fc-4326-abe9-1b7f01b40586"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f14c7ea-e9d1-4e36-b71d-9a8ead6da0bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20311bbe-1609-4530-a647-4fe74bcb932c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5817c180-3ba8-4a65-b2d3-62e2ec3ac4df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb0deb44-b756-42f1-a4a2-9b62931d1626"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f1ee6695-d87a-4f33-874a-4fa4a3b76dc4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "294ac5fe-a0d4-4916-8341-aefaeb30ae44"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3b830c46-41df-4c04-aad6-b0e8ce9b504f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0d4b4c20-064a-43d3-9fed-c0aec5c74284"
            }
          }
        ]
      },
      {
        "id": "b7b14548-71cf-453e-8bc6-48bc8b23c1c5",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "64070b39-0e66-4874-ad62-12f77ccb1ea8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "335613d6-8786-4020-9db4-7d5ce0078f6d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4297aa3b-82a1-4bb8-a4b0-497a97080686",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd34445-1f10-4578-b94a-f12aea18ca69",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c589caf-d2a0-49ae-a6c2-1da74e495ae6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7461f19a-1e5e-49ce-adec-fe5ab692230e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e101ef7-15c0-4691-a0f3-61398a6167da"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b312aed1-002f-44d5-96bb-581195999b03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b36f49d8-ce6e-4fc3-ba69-66415af29c4c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8fd6451a-df35-4348-bbf2-8da8375c753b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68906f9e-9054-4931-9402-999050adef5a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "559f5e25-39c4-4076-a8de-6a5676ccdde5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bf293c6d-54b0-47ef-a40f-8c5a5f6b4adb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5daf0e5a-8700-48be-9f24-085b06967542",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9d9bf641-49cf-4695-96bf-bf78377c650c"
            }
          }
        ]
      },
      {
        "id": "785e7c2f-85ce-4253-8d24-4b93f556825a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a218114-a546-4ca1-adf5-a39ad6e9fc5a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bda8d748-d0c1-44be-be67-f472ca0e3e42",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4936e871-c4ad-48e6-aa8f-b2ca27e290c7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d71c6357-ef2c-4c6f-9a3a-2dda436afbba",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "04e2fa72-3c55-46c9-8865-803c9d12c795",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 5
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 235.72619047619048,
      "responseMin": 5,
      "responseMax": 6477,
      "responseSd": 949.6568722587892,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1717720723999,
      "completed": 1717720791843
    },
    "executions": [
      {
        "id": "84e15745-3c23-4656-9804-d06872eac936",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "deb7258d-60e5-449a-b0ed-41f63a69d395",
          "httpRequestId": "4054c79d-5276-4694-8072-51b1c1a0a367"
        },
        "item": {
          "id": "84e15745-3c23-4656-9804-d06872eac936",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "eb4ee6d3-2897-43dc-b795-afa066a1f16d",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 0
        }
      },
      {
        "id": "def5459e-b9bd-463f-969f-bb4391945e1e",
        "cursor": {
          "ref": "875d769e-e6d9-4109-856f-01e0f0f807dc",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f655a7a8-40e2-4834-b39e-e951b7d49b65"
        },
        "item": {
          "id": "def5459e-b9bd-463f-969f-bb4391945e1e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "1ed0d4d9-200b-48f6-ad3d-13711bd451d6",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "144a430b-fcbf-442e-955f-8a3225491aae",
        "cursor": {
          "ref": "e2b222f2-3ace-44a1-967b-1f5ea3c2bb41",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2ab40aaa-9bc9-4719-9a68-fed58c7e2b2c"
        },
        "item": {
          "id": "144a430b-fcbf-442e-955f-8a3225491aae",
          "name": "did_json"
        },
        "response": {
          "id": "19ef5494-bf03-4222-9880-bb010d0f4c8d",
          "status": "OK",
          "code": 200,
          "responseTime": 197,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c3aad4-68c0-430e-851a-ad2bb828fcdc",
        "cursor": {
          "ref": "b9aec485-54fb-47ef-a5a8-aa6eae2778a1",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "68c5ecbe-15c9-4f9c-8a1c-ad32270c2fa5"
        },
        "item": {
          "id": "d6c3aad4-68c0-430e-851a-ad2bb828fcdc",
          "name": "did:invalid"
        },
        "response": {
          "id": "390f5f79-4892-4e05-a74b-716b4d49e840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2337,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c3aad4-68c0-430e-851a-ad2bb828fcdc",
        "cursor": {
          "ref": "b9aec485-54fb-47ef-a5a8-aa6eae2778a1",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "68c5ecbe-15c9-4f9c-8a1c-ad32270c2fa5"
        },
        "item": {
          "id": "d6c3aad4-68c0-430e-851a-ad2bb828fcdc",
          "name": "did:invalid"
        },
        "response": {
          "id": "390f5f79-4892-4e05-a74b-716b4d49e840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2337,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b17d23e-4c52-4d07-9dc2-0ab756c5ae0d",
        "cursor": {
          "ref": "1e19a72e-1bd8-46b7-ae34-129ed0bc191c",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "385f99fc-5672-4497-b665-9d9d9b8ec6c4"
        },
        "item": {
          "id": "3b17d23e-4c52-4d07-9dc2-0ab756c5ae0d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "927a904f-1db4-4b38-add4-c3507dfb5476",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2432,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1589c9e-156d-4722-ae10-3a5f0f87aab1",
        "cursor": {
          "ref": "f9137357-a594-4162-8b87-cda3a1dbfe19",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "90820677-defa-4565-bc0f-fcd58dccc66a"
        },
        "item": {
          "id": "f1589c9e-156d-4722-ae10-3a5f0f87aab1",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1624bb5f-70d6-4e51-869a-b9778b642e69",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1969,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9fd29d-fdd8-4ea3-b1b7-77693447d767",
        "cursor": {
          "ref": "e427d500-2017-4c5c-ba01-2c3b81303c69",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3c623e83-03ff-426a-ba96-230697a1485b"
        },
        "item": {
          "id": "ea9fd29d-fdd8-4ea3-b1b7-77693447d767",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8d10168c-4b64-4280-aeda-63bc394d521d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52151395-4439-4715-8a33-0a3a18d284de",
        "cursor": {
          "ref": "5b187e9b-ceef-4857-bdf5-12e74341508f",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "34872335-0b52-4fba-b100-892b95ed5871"
        },
        "item": {
          "id": "52151395-4439-4715-8a33-0a3a18d284de",
          "name": "identifiers"
        },
        "response": {
          "id": "872a6b72-8aa0-4541-9544-817ea09eb493",
          "status": "OK",
          "code": 200,
          "responseTime": 2183,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f50cd10-ba2e-4b0e-93e1-5d2afa783383",
        "cursor": {
          "ref": "e52d30ed-84e4-45fa-ba63-65ac6297650b",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b112db99-6f3b-436a-b97b-0e08cd23eb19"
        },
        "item": {
          "id": "9f50cd10-ba2e-4b0e-93e1-5d2afa783383",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "82ca4c3a-6028-4c38-9644-f979e785ecf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f567400d-863b-40a2-8196-4a2fef12fd5b",
        "cursor": {
          "ref": "a3133328-4efd-41fb-a067-429b0fac2b76",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4a516e0e-3438-4534-a05a-27bfc31fc6f3"
        },
        "item": {
          "id": "f567400d-863b-40a2-8196-4a2fef12fd5b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "5a72a698-0afb-45fd-869b-e580491f8d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f4d7c0-3cad-430e-8df2-21217644fe35",
        "cursor": {
          "ref": "e862052b-99f0-4557-893c-cce4a55ccf79",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "6ef505e8-fc8d-4141-9ec7-510880c3acdd"
        },
        "item": {
          "id": "e6f4d7c0-3cad-430e-8df2-21217644fe35",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "9018d0b8-1a17-46f5-99b6-2caa2fcf377e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0847964d-de4e-4301-9403-942fab1b25f2",
        "cursor": {
          "ref": "de7544aa-7fe8-4c55-9dba-8e6a264c7430",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7969a74b-4e22-4365-8d9c-d666ba239a58"
        },
        "item": {
          "id": "0847964d-de4e-4301-9403-942fab1b25f2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b665de77-d719-4724-8400-a72cd922ab32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12d73c4-0199-4c21-97ef-5cde081fec51",
        "cursor": {
          "ref": "be59870f-078a-4502-90b6-29be307955b4",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c307550a-a852-4df7-9312-622c4cff1424"
        },
        "item": {
          "id": "f12d73c4-0199-4c21-97ef-5cde081fec51",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f47c8f6d-bb5c-4418-a215-e0eff2ba508c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10bb7d5a-472d-42a0-867e-420b3e27892e",
        "cursor": {
          "ref": "e8927971-0e6a-48fe-b949-4a78cb37d9a1",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "38e8c72e-36ca-49ae-9338-459b7afa4c06"
        },
        "item": {
          "id": "10bb7d5a-472d-42a0-867e-420b3e27892e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "2283d9dc-3710-402f-adf9-698da35760ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ecb39fa-529d-4420-b387-438e7662c9f4",
        "cursor": {
          "ref": "2368bb23-cb3a-4c28-9fe2-66e57eeefd74",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6751c6ba-3b6d-4217-8db1-114612a3fd07"
        },
        "item": {
          "id": "8ecb39fa-529d-4420-b387-438e7662c9f4",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e6621587-b741-43ff-9651-b104adeb096a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d1db1c1-f153-4d68-b058-82f1d469801e",
        "cursor": {
          "ref": "f2d85278-2880-467a-b5e0-3a8f15759084",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "67047b08-c2e6-4f3f-8e71-35403ef77688"
        },
        "item": {
          "id": "4d1db1c1-f153-4d68-b058-82f1d469801e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1e8cdf2d-8588-43dd-93cc-950c82bc2c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e42179-42c6-4197-b46d-f5ff45fe9752",
        "cursor": {
          "ref": "410b08e1-3aa9-41b1-8622-c1543ec0da81",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e7e12955-3531-435e-8d15-70d5de865ad2"
        },
        "item": {
          "id": "f7e42179-42c6-4197-b46d-f5ff45fe9752",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "8f569fd8-41eb-459f-8d5c-c1b51fd99d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3596a792-c0d5-413f-9945-c04064ca38f0",
        "cursor": {
          "ref": "6bb2c465-26b3-4360-9c6f-56bf26c709a5",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a0ff419f-ff71-4ea7-8453-120c66476aa8"
        },
        "item": {
          "id": "3596a792-c0d5-413f-9945-c04064ca38f0",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3d12e666-97f2-4713-a21c-67067d03c27a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3904175-adc2-441b-9854-4456ad0975fa",
        "cursor": {
          "ref": "3ed1c091-197f-4d32-a519-9c6bb31c9bed",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "48cacbcd-9d8c-486c-a12c-bbd9011d3a2c"
        },
        "item": {
          "id": "c3904175-adc2-441b-9854-4456ad0975fa",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3023eb05-800b-42cf-9e49-251f53e531c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0dbf0a9-419a-4343-9e6b-1a822df44042",
        "cursor": {
          "ref": "faba1b14-7858-43e2-a392-3fab9d01c5a6",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "775b376b-c35a-4e9a-89a0-4914b6ace90b"
        },
        "item": {
          "id": "e0dbf0a9-419a-4343-9e6b-1a822df44042",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d8cf2fc0-5a9e-4cb0-9cb7-39599a5f6dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e464c7-daa8-433a-a117-b62751843c89",
        "cursor": {
          "ref": "cec5ae9b-9d8c-4abe-9e73-4ffa0bb5016c",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "11caa272-aac7-452c-933a-e05adec1b717"
        },
        "item": {
          "id": "03e464c7-daa8-433a-a117-b62751843c89",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "efa9e29c-f336-4589-a1ca-ec5b4c10e877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fecc8d5b-e2fa-4132-90c3-2ea66db31b4c",
        "cursor": {
          "ref": "837d826f-034b-4a37-bc46-008d9c2c9b83",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "04470879-2c25-4b3f-8c2a-67c2c0ed8684"
        },
        "item": {
          "id": "fecc8d5b-e2fa-4132-90c3-2ea66db31b4c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8123a9ad-c725-4466-b58d-834746155b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f42599f-601d-453d-849b-2c1ae59ccfab",
        "cursor": {
          "ref": "fb8f82e0-c12f-4a16-8994-ed6135faa5b1",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "288385fd-9662-4fd7-b5ec-bc1278189fca"
        },
        "item": {
          "id": "2f42599f-601d-453d-849b-2c1ae59ccfab",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8632f45e-50cc-4ff1-a80e-9048aac6ef6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae2fbe4-beb4-4820-a293-9a6781f29b0f",
        "cursor": {
          "ref": "0494fe1a-1fb5-4567-801a-8d0af573f1f8",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "cf972ac5-ec58-4680-ab3f-7813b5bcb5aa"
        },
        "item": {
          "id": "1ae2fbe4-beb4-4820-a293-9a6781f29b0f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c199ee96-bf51-485f-bf6d-2b9502b65048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38747f10-6f12-4e6b-9e6b-91f97ecaaaca",
        "cursor": {
          "ref": "cf0e6acc-0d6f-48f3-9b6c-49ee1bcdd971",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "fc3a5c45-a7f2-4b4c-9229-735fcfa98f04"
        },
        "item": {
          "id": "38747f10-6f12-4e6b-9e6b-91f97ecaaaca",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "9e745204-8e23-45c8-acc5-921e3326ba1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d66b98-ab29-48b4-a0d3-c47e6d531294",
        "cursor": {
          "ref": "189fc3ee-14e2-4584-a80b-6fd82719862d",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6339e6cf-93a5-446f-a44b-699c992eb0a9"
        },
        "item": {
          "id": "26d66b98-ab29-48b4-a0d3-c47e6d531294",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "cdc79116-e918-490f-91dd-995f18064d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3526453f-d2a4-4f5b-afd4-e06fce2f13c7",
        "cursor": {
          "ref": "f164cc3e-9b03-4359-83c0-1cafa3ed2e87",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2589a2a5-5612-421e-b433-9c8df99216c2"
        },
        "item": {
          "id": "3526453f-d2a4-4f5b-afd4-e06fce2f13c7",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f6eac77d-cce4-41cb-ad59-7474195305e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05bdb5e2-d68d-4d07-b87a-184dff01dbba",
        "cursor": {
          "ref": "4a3beb4f-c9c7-41ed-8b7e-4861ef1e6b3a",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6cdb6e16-e49d-4871-8bb0-88f960dafd8a"
        },
        "item": {
          "id": "05bdb5e2-d68d-4d07-b87a-184dff01dbba",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "10e7652d-f2c2-4a54-8b97-50b0f09061e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17d9094-a964-4f93-bc78-dd4c01635233",
        "cursor": {
          "ref": "656a88ee-1e65-40e5-a872-77c3d89addc3",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ca74d40b-ec60-4195-af5a-5533b31bf243"
        },
        "item": {
          "id": "d17d9094-a964-4f93-bc78-dd4c01635233",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "800d1c06-4645-4fb4-9932-18418e13f6df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566af8e4-3db3-4b72-b689-5fa2e573a13c",
        "cursor": {
          "ref": "0617be6f-9336-4b92-a2b9-2c7380f8aafd",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1671ef3b-19da-4947-9ac9-e3202305d1a5"
        },
        "item": {
          "id": "566af8e4-3db3-4b72-b689-5fa2e573a13c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "1766c9c2-0d23-4809-a8a8-15150dd7854c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdddced5-255e-4882-b4c2-0d1c056fdd2e",
        "cursor": {
          "ref": "de535c41-2456-41b1-9c89-38e45e786b46",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9a365d66-d577-41d7-b704-08c04c916dd6"
        },
        "item": {
          "id": "cdddced5-255e-4882-b4c2-0d1c056fdd2e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9dfa6895-a7d6-4bbc-851f-51c0dae6a1b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8545ee5a-e59f-4d05-9664-7bf131512a59",
        "cursor": {
          "ref": "03d93c76-eae1-4ff0-bef5-9e75197ce00f",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "85e0791b-d3bd-481e-b75b-a0e713551997"
        },
        "item": {
          "id": "8545ee5a-e59f-4d05-9664-7bf131512a59",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "dc12ffb4-3836-4655-ab7b-149bcd5faff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31b4680-5632-40f4-9297-297305e86196",
        "cursor": {
          "ref": "de6da2ed-7fc1-4b60-9b50-4d29ab272d97",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "cc1ebe9d-efbd-440a-8852-428d34e98e6e"
        },
        "item": {
          "id": "b31b4680-5632-40f4-9297-297305e86196",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1f9648fa-c7bc-458b-b9ea-d5c3832999dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af870b55-3efe-475b-9d83-d205a42578cc",
        "cursor": {
          "ref": "9b911946-34c2-4c27-b3ca-3559e10cf231",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4cd69bba-61c2-4c61-b3c4-6f89894bc2ec"
        },
        "item": {
          "id": "af870b55-3efe-475b-9d83-d205a42578cc",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1ce4f81b-503b-456f-a071-ba1e415cfb86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64872e0c-56ed-4b92-bf43-d3b96c50d759",
        "cursor": {
          "ref": "26d009bc-1310-4e10-8a92-025c8ca38487",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "62f723e8-91f9-4a7e-9fd5-ff6cf6b8fbe5"
        },
        "item": {
          "id": "64872e0c-56ed-4b92-bf43-d3b96c50d759",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "793314e8-fbe0-4b7d-9862-9878d80a7b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db33f202-928f-493e-993b-f620baf0bb20",
        "cursor": {
          "ref": "ccd979f0-cf22-47c0-9c02-a57ab2a8c441",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9823e90e-ad16-488c-a629-7b5cff5107f1"
        },
        "item": {
          "id": "db33f202-928f-493e-993b-f620baf0bb20",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6e712252-1ca3-4fbc-a3d1-0593af3c5869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2ffd88-9b2f-4d31-9dd6-49691d6b38c2",
        "cursor": {
          "ref": "693a1966-03b5-4bfb-8a91-db6782dedcb4",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8f027924-cfbd-4675-9672-fba9b32bd8fd"
        },
        "item": {
          "id": "be2ffd88-9b2f-4d31-9dd6-49691d6b38c2",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6a97b92d-d185-464a-9233-eeedb9193ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a71a22-23fa-40cb-a6fe-df1eb3fe5a32",
        "cursor": {
          "ref": "27d52871-0a19-4ccb-80f3-3881aae49703",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "afaca35c-162c-459e-80c0-1b3899518ac1"
        },
        "item": {
          "id": "42a71a22-23fa-40cb-a6fe-df1eb3fe5a32",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9d01f9db-d939-4316-bdbe-42a4560ffef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145ec318-627c-43e2-a403-a71ad9a69303",
        "cursor": {
          "ref": "e97e0dcd-67ec-4792-bf23-8a3d2e54609e",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "740e3c52-738b-4f03-9189-822c742b23cb"
        },
        "item": {
          "id": "145ec318-627c-43e2-a403-a71ad9a69303",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f830e41f-2ff4-4eb8-85a4-6f7aa04a5c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8445cfb-0b0f-47d3-9e54-e82ab28c2fb8",
        "cursor": {
          "ref": "15753d13-cf10-40cc-a075-51bee6394a82",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e559cdca-0763-45cf-aa2d-e46faa4c9034"
        },
        "item": {
          "id": "c8445cfb-0b0f-47d3-9e54-e82ab28c2fb8",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4ed067ac-2037-455b-8963-6392a8184a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a860d32a-3d05-48a0-8a49-92ad182d487c",
        "cursor": {
          "ref": "71d8dbea-f1fa-4110-a2ed-9bf918590537",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "193fd763-a5dc-41ff-82ba-1b90c166f550"
        },
        "item": {
          "id": "a860d32a-3d05-48a0-8a49-92ad182d487c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "26efe360-c696-454e-afc1-00af7ef6435b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e1ee4a7-5bde-4d8d-987e-ef3f023a1d9c",
        "cursor": {
          "ref": "e64e56a4-ef09-4800-800d-0eba962728cc",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "dc259525-88ba-42d7-90f2-d40f97feec1c"
        },
        "item": {
          "id": "8e1ee4a7-5bde-4d8d-987e-ef3f023a1d9c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e9dbaa74-630e-48e7-aef7-747b07d1c415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc68338-d813-4aef-9e5d-9a942ddb5731",
        "cursor": {
          "ref": "b082f79b-c1f8-4b06-849b-efcca12c33c4",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "22b6c863-3f1a-4e47-8942-8acc5c4ee56b"
        },
        "item": {
          "id": "3cc68338-d813-4aef-9e5d-9a942ddb5731",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "29b9b126-b114-447b-bd4e-de861488572b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "163d8f2b-5dad-4b39-a967-d8f176735737",
        "cursor": {
          "ref": "5f51754b-b6ae-4ee4-a0dc-bfcb19c07ac8",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "137d008c-23df-4770-bcef-5d6d62d53070"
        },
        "item": {
          "id": "163d8f2b-5dad-4b39-a967-d8f176735737",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b44685bd-e7a8-4ca5-8b17-0ce39d78a785",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 34,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867ae680-3bd0-41e2-ba9e-759a1cda2171",
        "cursor": {
          "ref": "b1b8aa02-8803-4055-8b50-aa1c7452f42a",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6bb5499a-613b-49f3-8e6d-b5e56314c052"
        },
        "item": {
          "id": "867ae680-3bd0-41e2-ba9e-759a1cda2171",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5618be74-18fa-4a8f-a747-b1472e5a5a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55080fa5-0dd1-40b4-8760-9994b606c60e",
        "cursor": {
          "ref": "db5cc78a-eeb4-4426-b8a7-6776aef518eb",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "340d7e56-cf0b-4665-8dcf-a711bdad171c"
        },
        "item": {
          "id": "55080fa5-0dd1-40b4-8760-9994b606c60e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "29612176-ad83-4a15-8e77-c23a92472d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17a1728-3ebf-4b19-b45c-5a0f9cfa52a9",
        "cursor": {
          "ref": "4509b1e2-fe00-42b4-a5d1-588bb66c5c93",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7f463ef6-f191-461d-b46f-f9a5cc8c9a90"
        },
        "item": {
          "id": "c17a1728-3ebf-4b19-b45c-5a0f9cfa52a9",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d19f654b-b489-4c9d-98aa-49aa5d63f4c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c6f9e4-ef5a-44fe-9949-fa41c309f82f",
        "cursor": {
          "ref": "c9f6fcfd-61d5-4f43-9fc8-643a9bb870eb",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "52891f2c-5061-42c4-93fc-3c18b13601db"
        },
        "item": {
          "id": "20c6f9e4-ef5a-44fe-9949-fa41c309f82f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "36ad1f77-3ccb-41d3-b737-7a4d434fa0fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118b7b18-5bed-4b34-b61b-4c0479c808c5",
        "cursor": {
          "ref": "2fed341c-cd11-496c-a76a-0b3cb280c1af",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c3c7d1f7-8d0e-4c97-8dfb-f71cfa08386f"
        },
        "item": {
          "id": "118b7b18-5bed-4b34-b61b-4c0479c808c5",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f16407a6-4af3-4299-bd41-9c10883c096f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a138db0-8d02-4104-8859-71f2f4666137",
        "cursor": {
          "ref": "303b6b54-4b4f-4927-ae59-214cbe3551a2",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6ce8742a-4993-426a-a213-60f1c3d078a0"
        },
        "item": {
          "id": "8a138db0-8d02-4104-8859-71f2f4666137",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f6dd508a-49fb-4d54-ae94-6c79850cbb0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a823c28-bdad-4f2f-80e1-c0cc7fac4f66",
        "cursor": {
          "ref": "67e0ffee-e1ca-450b-8e12-a4a3153c178c",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "98edd60e-9b49-4862-a64b-38d69e2e7f6e"
        },
        "item": {
          "id": "5a823c28-bdad-4f2f-80e1-c0cc7fac4f66",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "66acb696-b937-4029-9041-335d3315f9ba",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 35,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794266c4-e2e0-4708-a2dc-4b7d9117d9f4",
        "cursor": {
          "ref": "a2f000a5-dc96-4833-8d31-3b5efe964eb7",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9caced41-1425-4d79-b572-ce9d12bc316d"
        },
        "item": {
          "id": "794266c4-e2e0-4708-a2dc-4b7d9117d9f4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ba88193e-916f-4982-8ce2-7b729191bc12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ca542f-728a-46a4-857a-93ce4e059f8a",
        "cursor": {
          "ref": "c7495c33-98f1-469a-8263-9e36dffe900c",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "74651af7-f83d-40cc-ac5a-89374b69eaef"
        },
        "item": {
          "id": "09ca542f-728a-46a4-857a-93ce4e059f8a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "948439ed-8d30-4776-929d-babcc91c4e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d903ec3c-735e-4acd-a494-cd1532a0b84f",
        "cursor": {
          "ref": "01589a6f-2d44-4b81-8525-101f48adbf95",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "83db1f3d-121f-414c-b210-a085cb46fa13"
        },
        "item": {
          "id": "d903ec3c-735e-4acd-a494-cd1532a0b84f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5ebc9085-c8f3-4543-8a94-10ab3440549c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e091201b-d36a-478a-9f64-8c5fb70037eb",
        "cursor": {
          "ref": "270b93f0-dc7b-4d91-8380-a0cf292b9c86",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "96b92bfe-f1db-4ada-b081-a25f710ce855"
        },
        "item": {
          "id": "e091201b-d36a-478a-9f64-8c5fb70037eb",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8b08a344-be41-4a80-a1ea-5fc2c22ce36c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65784117-c122-41c7-9d58-011570b620ec",
        "cursor": {
          "ref": "ffaec610-0a6c-4fe1-b887-4d530116c14f",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "5f8ab3fa-bf66-435d-9def-b14191ee1324"
        },
        "item": {
          "id": "65784117-c122-41c7-9d58-011570b620ec",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b60b1259-d884-416d-a693-34a5b59135ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82043b18-3e22-4bc7-b7a2-99c09d650ebc",
        "cursor": {
          "ref": "41374001-0b5b-49e1-89a9-8bdb6ed70ab4",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "147d2ef6-3c9a-492a-b22a-3426f31e09ad"
        },
        "item": {
          "id": "82043b18-3e22-4bc7-b7a2-99c09d650ebc",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5bc87f6b-8a5a-454c-ae9c-d1ef06a71c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0cdbd9-4e86-4f0a-8c0b-a41818d5bda9",
        "cursor": {
          "ref": "80dc5cc2-52e4-4b60-bd57-ccd7dc337f93",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6aa72f86-c9e7-42c0-a9c7-049a88efbfe5"
        },
        "item": {
          "id": "4e0cdbd9-4e86-4f0a-8c0b-a41818d5bda9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "40c948ff-dd10-48a0-8926-9cf54413b300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e60afa4-9319-4db8-a1a2-dd7ddc5c991a",
        "cursor": {
          "ref": "adf20d43-ecac-49f2-93cd-cbf7cd1399f5",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b6b60e9c-c2b6-41e5-8df9-0512e5326bd9"
        },
        "item": {
          "id": "5e60afa4-9319-4db8-a1a2-dd7ddc5c991a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "39458da6-b7f4-4965-bf38-7ad238fb73f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c799aaf-6637-44f9-937c-f4df3313fe71",
        "cursor": {
          "ref": "3b2b2034-cbae-494c-97de-c10ddabdd6be",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5549b7a8-1e8f-4c65-ab1d-5f6e585e4d05"
        },
        "item": {
          "id": "3c799aaf-6637-44f9-937c-f4df3313fe71",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "135fa5a2-3608-4a23-a2f4-01bdf7db843f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0abf8922-a835-4788-b42a-e08a8c3ff732",
        "cursor": {
          "ref": "b65f8b1b-4009-4170-90d5-5974e2dbec9c",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "5c1a6881-5679-4612-b68d-58d69135ac5d"
        },
        "item": {
          "id": "0abf8922-a835-4788-b42a-e08a8c3ff732",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "71367393-decb-48d4-91c0-47a18d7fd80e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4ac54d-0cca-4e9a-9461-ea4cd6b92425",
        "cursor": {
          "ref": "6973ee79-f8a7-4041-bffe-77a52d2ad70a",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "beaa074b-865b-448b-8895-55cf7b38c7a5"
        },
        "item": {
          "id": "9c4ac54d-0cca-4e9a-9461-ea4cd6b92425",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e65ce934-dc23-4d34-aca4-7fb181ca074f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed35030e-ed50-4401-b08b-d3b7937bea45",
        "cursor": {
          "ref": "369f099a-ac3b-444a-bf54-4c4ac712820c",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2f1c7530-b257-44e7-a1a5-47d6364ae39f"
        },
        "item": {
          "id": "ed35030e-ed50-4401-b08b-d3b7937bea45",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6de167d4-04f8-4e82-879c-cb3e3e236fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91112a7b-7229-4cda-8a96-4b0fe79fc84f",
        "cursor": {
          "ref": "8ccd8da1-1170-427e-ad8a-5fdd4a1c745d",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "57c3930a-0adc-4772-adf9-20795d5089b1"
        },
        "item": {
          "id": "91112a7b-7229-4cda-8a96-4b0fe79fc84f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "072c148e-97a3-454d-b7ee-39a3b53dec87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d6a16a-a257-4669-b8e9-08e66c5cf533",
        "cursor": {
          "ref": "80ef260f-1f89-4f29-ba22-a89cc7301dfa",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c8981697-381b-4c4f-9f6c-9936ce75feee"
        },
        "item": {
          "id": "89d6a16a-a257-4669-b8e9-08e66c5cf533",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "43e5a572-839b-46a6-8ce4-76b1b0954afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43aa06e6-6bf5-44d7-9f3b-bc171afa855d",
        "cursor": {
          "ref": "21c6dc75-559e-4481-8ee2-cd9116b32930",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4c721902-3d52-484a-af5a-90f95a14c6f0"
        },
        "item": {
          "id": "43aa06e6-6bf5-44d7-9f3b-bc171afa855d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "bbc2c9df-7303-43ab-ac90-b3646e53ed95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81fb5105-ef50-4357-9adb-3f271753268b",
        "cursor": {
          "ref": "289378a0-d6d7-4e9c-ad0a-6074bc145db7",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9436d4cd-a8a1-4b93-b9bc-d7a52ece1e7e"
        },
        "item": {
          "id": "81fb5105-ef50-4357-9adb-3f271753268b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3c9cbcb4-4f5a-4a6b-a67d-0d8928d9f35a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d6beb6-51e2-4280-aebb-d73671dc6595",
        "cursor": {
          "ref": "df7e3fe3-634a-4b0b-b7be-66cf790f710c",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "0c469353-8c43-460f-8c28-caa2def44a85"
        },
        "item": {
          "id": "36d6beb6-51e2-4280-aebb-d73671dc6595",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "96d0b1c2-9d48-43a3-beb9-68a1372cb213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d60cc14-646f-4883-bd43-d77b7eba6fba",
        "cursor": {
          "ref": "b81e1a6e-2e00-4313-b6de-fdab3ab76c3f",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c9f47f57-f102-4b1c-98ab-d557a45db9ad"
        },
        "item": {
          "id": "9d60cc14-646f-4883-bd43-d77b7eba6fba",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a537e445-0313-4610-a9e2-204fed7384d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8d8c11-5453-48b0-8a5a-8fc9f7bbcbec",
        "cursor": {
          "ref": "d70acfac-94e8-4254-a470-8c0964939cc5",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d18cf8f2-dc27-477f-84b6-ab3241e6b1a2"
        },
        "item": {
          "id": "6d8d8c11-5453-48b0-8a5a-8fc9f7bbcbec",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "51f9865d-8fe5-4da7-91d1-995247d2f298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27bd1cb2-b3fc-4da7-9b0c-ca95c95f5d4e",
        "cursor": {
          "ref": "db36516f-d72d-4a8a-908c-6f955aa63473",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "410bfd9d-ed8f-4f9e-93b0-06e09cd3b6d4"
        },
        "item": {
          "id": "27bd1cb2-b3fc-4da7-9b0c-ca95c95f5d4e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b4cf38e5-db42-47f7-8681-b0e23d039ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe809fdc-f7b4-4da3-b44f-6f4b1bd10629",
        "cursor": {
          "ref": "e99fed5d-1f4e-482a-afc1-6e0c18d0f1b3",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "7b1b8d69-4484-4dda-aafc-2d04ae839b9b"
        },
        "item": {
          "id": "fe809fdc-f7b4-4da3-b44f-6f4b1bd10629",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "963de470-39b0-4446-bc1b-2bccf665aa80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2010be-5f4e-4781-9271-819a8f9167b2",
        "cursor": {
          "ref": "f61c04a5-2df5-467b-804a-9722db66349c",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2c49c93a-690b-4efe-ae7a-558fff3a5b88"
        },
        "item": {
          "id": "1e2010be-5f4e-4781-9271-819a8f9167b2",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f8012b50-3413-4767-a265-2b6fe801fa95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c246cc-651d-4407-a945-c78cf010b30d",
        "cursor": {
          "ref": "ec07c58d-7b2e-4964-bb05-4a9cf9164842",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0ff7d823-0fb1-46bd-8701-80be41572f76"
        },
        "item": {
          "id": "66c246cc-651d-4407-a945-c78cf010b30d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6a0baa9a-3e28-415c-a0c2-6b0771cf2abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c504e258-ff7a-43fd-bede-82a416977aad",
        "cursor": {
          "ref": "392a3828-4c1a-4e4f-9eee-46d4a8b5a590",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "69ef8df7-3663-4fe8-aa16-b0e5c08d4bb7"
        },
        "item": {
          "id": "c504e258-ff7a-43fd-bede-82a416977aad",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ae92d8c5-db52-4c68-a34e-3617738e8ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370944e2-ad63-44d3-abc0-64f989177c78",
        "cursor": {
          "ref": "3cb55592-4723-421e-a778-67824601b30a",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c2f372c4-8f5b-4db2-9180-cd5cd3db05b9"
        },
        "item": {
          "id": "370944e2-ad63-44d3-abc0-64f989177c78",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "7e5d779f-57b5-4ae6-991e-ea5c1ed35f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b307989-1be4-4df4-b784-33f62d5799ef",
        "cursor": {
          "ref": "af043469-d407-4135-bff7-305f3e54d1fc",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "fce323f5-53cd-4aa6-bf0a-fc06ac0932df"
        },
        "item": {
          "id": "1b307989-1be4-4df4-b784-33f62d5799ef",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "90b63c01-59b7-4d98-9c66-729ffa3f072c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4889a282-6d73-4f42-a916-9426dc43dc20",
        "cursor": {
          "ref": "8712f22c-c12b-435b-9d89-8f8f6ef7d4ec",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "bddb5e99-628e-49a5-b665-100d1b84a4d9"
        },
        "item": {
          "id": "4889a282-6d73-4f42-a916-9426dc43dc20",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "3a77b30e-5276-469f-a5d0-679907550dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9135aa02-2dae-4259-8132-00127adf0048",
        "cursor": {
          "ref": "d028507d-3e32-45de-94e7-c44fcb81a6c4",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e1699231-0c5d-4d3f-ae25-02b3a989e0c8"
        },
        "item": {
          "id": "9135aa02-2dae-4259-8132-00127adf0048",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ced022e7-342b-4733-aa35-16b8e4454bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3198eae6-dbbd-49ae-88f0-318c67216f12",
        "cursor": {
          "ref": "b410cfc3-6f6b-4f56-b9f8-aa982c03b47f",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c07ada3a-0807-44bd-9fec-7e7a90b4f5e3"
        },
        "item": {
          "id": "3198eae6-dbbd-49ae-88f0-318c67216f12",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b905bf9f-b75c-4599-98d8-caeeb61dcafc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c428ff-6530-4730-a4f5-0eef45a862cb",
        "cursor": {
          "ref": "0e0c1ff0-8942-4e3d-9fed-de72742e3d08",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9a12af23-f6f2-4487-9f61-44f82e703893"
        },
        "item": {
          "id": "c4c428ff-6530-4730-a4f5-0eef45a862cb",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9a01e98a-17e7-47b9-981d-64e7ab96d500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2381cd0e-46b9-40f7-9838-f8a7c57feea4",
        "cursor": {
          "ref": "04beafd5-c565-4e11-a87a-67e547e873e2",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "2a6d01ea-b74c-4094-9ee7-70fe313dd4d1"
        },
        "item": {
          "id": "2381cd0e-46b9-40f7-9838-f8a7c57feea4",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "588969ab-63fb-44db-b900-ed1bdf6486fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2dad28b-69e6-4eb3-bff7-591191f7e4a0",
        "cursor": {
          "ref": "1dd552b5-2eb3-4e1f-8de5-bbf0e6ea6759",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8f6e7bf0-4ff3-47f7-af4a-9d96d7c4303e"
        },
        "item": {
          "id": "c2dad28b-69e6-4eb3-bff7-591191f7e4a0",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a60a3b86-6fab-4f01-bd13-8f43e0f56496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "715e1366-6672-4e57-99f7-7e868734380e",
        "cursor": {
          "ref": "133c1dc7-0443-46a4-b142-a09c195667a2",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "237f6da6-7fc7-412e-bba4-b763c5c740e7"
        },
        "item": {
          "id": "715e1366-6672-4e57-99f7-7e868734380e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6c7b943f-c1c3-4638-8c65-d4e7091e62a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc19e72-dcef-4f31-9899-823fb385502c",
        "cursor": {
          "ref": "ee26630a-6e0c-4436-88f7-7645a4490061",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2c70ac39-c340-40d1-aad7-0b1a7b4e0ea0"
        },
        "item": {
          "id": "ebc19e72-dcef-4f31-9899-823fb385502c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "bdb9a2c3-0355-47a1-8b9b-70fd447f4b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c84b4f-b295-44cb-8d0b-c2f13e888bd1",
        "cursor": {
          "ref": "211cc409-4d9d-433b-9e06-d22bd484d850",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "9eecaa09-4231-4d7a-a3ae-a927ca0f8f51"
        },
        "item": {
          "id": "b6c84b4f-b295-44cb-8d0b-c2f13e888bd1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4fe29afc-5f85-448b-b1f9-aed7e8cb48fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa84d48-0e36-4432-a932-34694e1cc02a",
        "cursor": {
          "ref": "83bca2cc-dfa7-42fc-9e67-100597a27ffe",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1c55e38c-c693-4f90-b580-a5d543598685"
        },
        "item": {
          "id": "baa84d48-0e36-4432-a932-34694e1cc02a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d3a97d96-3fbb-4de6-8331-81cba6e636e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955a4bb7-233a-41f0-9d11-cc5c0f7b2496",
        "cursor": {
          "ref": "c75e9ead-85e6-401f-a219-8acefbbb66a9",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "4820a58c-12b6-4a28-899a-1b503d5dcfd6"
        },
        "item": {
          "id": "955a4bb7-233a-41f0-9d11-cc5c0f7b2496",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1fd0e014-df76-4673-add2-4d9d7c97ff26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fdc7023-fc6b-4d3f-a438-d487346ced70",
        "cursor": {
          "ref": "72417b81-f31a-44be-b2f6-bcdbfc80891e",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "39c9d50e-0874-4adb-8f07-bb0ccb366c7b"
        },
        "item": {
          "id": "9fdc7023-fc6b-4d3f-a438-d487346ced70",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "298e0357-8904-42bd-968b-743bca53d29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f157c0-bef1-4ea1-817a-b5f28f0d4a9b",
        "cursor": {
          "ref": "68a3e026-d9c3-453c-aef7-9cd6688a8000",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6ec101d1-0014-4154-8601-4f5585d35c0e"
        },
        "item": {
          "id": "f7f157c0-bef1-4ea1-817a-b5f28f0d4a9b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "561e455c-a29d-4d99-8af1-88be791487a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e325403d-b481-41d0-8be5-ea02e10a476d",
        "cursor": {
          "ref": "21d9c6e6-bdf0-4411-9b18-788eaed2e659",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "685af92a-1634-4f46-ab69-5cc9e6268c0f"
        },
        "item": {
          "id": "e325403d-b481-41d0-8be5-ea02e10a476d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0cab3c4c-aefe-4442-b3c2-c464518291d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41b95e9-0d76-4a58-a85f-7212fae3dddc",
        "cursor": {
          "ref": "12311e8c-93a8-48d4-86ff-d6d20e7eb0d9",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "50af48b6-2c73-430d-ad91-b5e404a36b44"
        },
        "item": {
          "id": "f41b95e9-0d76-4a58-a85f-7212fae3dddc",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d722633a-07ee-4ecf-9cdb-1cf0813e2be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c476de4-b058-46ac-b3dd-fe1d880991ea",
        "cursor": {
          "ref": "c5a49451-f53f-40ac-bdc6-1f0e3a40c29c",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "21da44f3-2eb6-4758-8346-699d2bc40f64"
        },
        "item": {
          "id": "0c476de4-b058-46ac-b3dd-fe1d880991ea",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4bfe9999-400d-4d69-8812-1136b2d7a37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c5762da-a0aa-4762-8407-1a4c3a2eadf9",
        "cursor": {
          "ref": "ab093093-9644-44a5-90f6-0307ed8d8c99",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "56f2bcfe-97c0-4dc2-9859-1fb56aa506df"
        },
        "item": {
          "id": "1c5762da-a0aa-4762-8407-1a4c3a2eadf9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "caeb29f5-c4ae-40a1-a1d0-879c16b80e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08857548-0aa6-4e1a-943f-7af30c1a7f23",
        "cursor": {
          "ref": "5a5bffeb-aecc-401c-84f0-7f90fa438051",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "054f48c0-9acf-46a9-9d5d-bf35678d200a"
        },
        "item": {
          "id": "08857548-0aa6-4e1a-943f-7af30c1a7f23",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4a1499c0-346d-4767-a299-00e16e1ba697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c16855-9f3d-4034-a304-303350b62348",
        "cursor": {
          "ref": "92a2b87a-ad0b-4725-8b82-c15c9cea35a4",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a5e629c7-012f-435f-87d0-b2132b32f087"
        },
        "item": {
          "id": "b4c16855-9f3d-4034-a304-303350b62348",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "444e0464-74e7-4c1c-bd24-8166b1adc002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54d34e8-a6ee-4d29-bcb9-f46156a4f382",
        "cursor": {
          "ref": "9fe57087-ce18-4669-a9a8-1e66ff9e4d2b",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8301a307-641f-4a78-b5b3-ddf7901c49cc"
        },
        "item": {
          "id": "d54d34e8-a6ee-4d29-bcb9-f46156a4f382",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "03069944-d554-48eb-a920-9be9726f2bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92026154-bbd6-4799-ad10-65750f96eccc",
        "cursor": {
          "ref": "326ac626-cf53-4cc6-af0b-9fd102b37ce8",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "402b192a-a42b-40a1-b8f7-f5affdbbaf0e"
        },
        "item": {
          "id": "92026154-bbd6-4799-ad10-65750f96eccc",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "bdc80328-a42d-40f9-bb4b-1146f2d5be1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50e8768-9e07-483d-bfa6-d18700329c0f",
        "cursor": {
          "ref": "01eebbe2-c148-4a02-8a04-24afe12c12e5",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "0593d88b-804d-457b-a42a-be755fe6da1d"
        },
        "item": {
          "id": "e50e8768-9e07-483d-bfa6-d18700329c0f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "66ed258d-530d-4142-95f6-b2a854cca132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d07828-123a-4d65-9d42-384ea8b662c0",
        "cursor": {
          "ref": "189efaa8-cbed-41fa-90a4-7c2ddac7a44e",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5658fdf5-fde6-41c5-add3-b7ad82dff2a3"
        },
        "item": {
          "id": "84d07828-123a-4d65-9d42-384ea8b662c0",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7d5581d5-f416-49cf-a474-23342a27041e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6634c8b4-5451-4df4-b13d-8946a8ddd3e6",
        "cursor": {
          "ref": "fa6df4f8-5f97-405a-b98a-29f24087ab22",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "01cc50aa-1b3c-482a-be00-3ff97e8c5e7f"
        },
        "item": {
          "id": "6634c8b4-5451-4df4-b13d-8946a8ddd3e6",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2db9af0d-a377-4f0d-855d-b673ed3210c9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f2d690-326e-4e35-b3be-68adc7d35eac",
        "cursor": {
          "ref": "85ecd217-3257-4ea9-bdb3-9c1218dd297a",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "35f2fd03-6ba9-45c2-9942-9d5c084a9270"
        },
        "item": {
          "id": "c3f2d690-326e-4e35-b3be-68adc7d35eac",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "a5973609-2d7c-4a7c-b278-370f39880da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "4c7ce07f-a9ad-492b-b70c-872e32034273",
        "cursor": {
          "ref": "af906bc7-ed49-4832-b9a2-860d34c131b6",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "607738d0-eb16-4c56-b369-60d20dc8eb18"
        },
        "item": {
          "id": "4c7ce07f-a9ad-492b-b70c-872e32034273",
          "name": "credentials_issue"
        },
        "response": {
          "id": "386bfddb-a9a0-47cc-be04-64f1efed0244",
          "status": "Created",
          "code": 201,
          "responseTime": 6477,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74a5fbd-7650-4ee0-9e7a-3afac8eddb13",
        "cursor": {
          "ref": "c5e268ea-ef17-4377-ba83-7a50acf1f95a",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "da4aab20-26e1-4c8c-b201-2a39e2e844a8"
        },
        "item": {
          "id": "b74a5fbd-7650-4ee0-9e7a-3afac8eddb13",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7ec61e03-5d9c-4921-bdf4-6e60a3cee5f0",
          "status": "Created",
          "code": 201,
          "responseTime": 5976,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e01efeeb-0ced-4c2e-abc8-cfff58adf6fa",
        "cursor": {
          "ref": "4e24576b-fb43-4dc1-b948-e88cfd687c9f",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "76c8c090-829a-4542-8cda-acd3692d76ef"
        },
        "item": {
          "id": "e01efeeb-0ced-4c2e-abc8-cfff58adf6fa",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "174f2187-e20e-431a-b580-5e3b21abc4d4",
          "status": "Created",
          "code": 201,
          "responseTime": 5670,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b450c6-ae4f-4865-a985-4d175ed45482",
        "cursor": {
          "ref": "9cb79ce8-6cd8-4546-aabe-506e91278fb7",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0398cfb0-a63b-4b43-a79e-0b8a6de00f91"
        },
        "item": {
          "id": "c9b450c6-ae4f-4865-a985-4d175ed45482",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0f3cb376-c14d-4117-a7f0-6e34a469f920",
          "status": "Created",
          "code": 201,
          "responseTime": 5558,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4475b00d-a298-46cc-818c-c1252ac40446",
        "cursor": {
          "ref": "58db6086-9249-4f37-80e8-fbc45d2a9a2d",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "0ee2b4b9-6455-45a7-8be3-fbc6a829f4b0"
        },
        "item": {
          "id": "4475b00d-a298-46cc-818c-c1252ac40446",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3aed7536-4e8a-4728-b42a-0143229768cb",
          "status": "Created",
          "code": 201,
          "responseTime": 5756,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-06-07T00:39:29Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-06-07T00:39:29Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "a9539f91-4c7d-4e38-abcb-e3f2b8b93481",
        "cursor": {
          "ref": "4a00071e-c564-43ae-901b-d02bf6ccedbe",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b9631e18-5318-4a6d-b182-070efb6da2f0"
        },
        "item": {
          "id": "a9539f91-4c7d-4e38-abcb-e3f2b8b93481",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ac6e2cad-d22e-4281-beb0-d72e22926be2",
          "status": "Created",
          "code": 201,
          "responseTime": 5366,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09bc39d7-39d6-4da8-932a-a0d04ea7e1ff",
        "cursor": {
          "ref": "5ef2edc2-fde7-4467-894d-b9ff89631669",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "5483e850-5c93-4587-832f-8ee30f6d6060"
        },
        "item": {
          "id": "09bc39d7-39d6-4da8-932a-a0d04ea7e1ff",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6ab70519-d906-4845-aef2-66de891d326a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1942eb19-1c6f-4acb-bcc4-1e770cdc60c6",
        "cursor": {
          "ref": "97f5ad08-6a82-4e09-9f8d-87cf04320476",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9d7d5cda-95dd-4f56-8dc1-4b816e870a62"
        },
        "item": {
          "id": "1942eb19-1c6f-4acb-bcc4-1e770cdc60c6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "03f7ead7-8aa2-4808-be70-b775e27dd19f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b543649-0ec9-41b2-8aa2-2691d1cc873e",
        "cursor": {
          "ref": "e2f993fd-78d2-4ee9-b0c7-93830f0664ca",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "368c7eb0-6332-419d-8ece-8e02c2bf42c3"
        },
        "item": {
          "id": "6b543649-0ec9-41b2-8aa2-2691d1cc873e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4b4a3c1a-0072-4547-9098-e739e39e1761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708af934-2786-4a22-9645-f370d0c8758f",
        "cursor": {
          "ref": "9c651e05-b0bd-470c-bfe2-f0669d375a2a",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c3ef58ce-582a-4f9b-91e1-7f4665274d3e"
        },
        "item": {
          "id": "708af934-2786-4a22-9645-f370d0c8758f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "918ac88a-c02b-45b7-92fa-7a9f9b48db63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9a90eb-c900-48ba-b407-578453341b26",
        "cursor": {
          "ref": "b63189d2-e394-4b4e-ac0a-f1ab840a8cfb",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "03613cb1-f9cd-4891-b466-ab7f77c8bbf4"
        },
        "item": {
          "id": "ea9a90eb-c900-48ba-b407-578453341b26",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1655747b-2128-4094-8a8d-1dd65143309c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ec20eb-4653-41b3-a223-50dc59a2472a",
        "cursor": {
          "ref": "864e0935-19cf-454c-abbb-d66c434aebde",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8b63b4b9-1836-4364-8912-7fc2dce889db"
        },
        "item": {
          "id": "38ec20eb-4653-41b3-a223-50dc59a2472a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ec45c530-3378-4f5f-9236-0d862058b34f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fda15eb-686d-4a79-8f78-91527e2fa6d5",
        "cursor": {
          "ref": "3637f508-b724-4484-a745-ab11d0ba9a6e",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "28e20f8b-ded2-4626-a075-078c65df73f6"
        },
        "item": {
          "id": "6fda15eb-686d-4a79-8f78-91527e2fa6d5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6f3ece95-a2b0-4bc4-bff9-fefe933d1e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "656c38d9-5506-454d-9be6-5ee446bafc90",
        "cursor": {
          "ref": "9d09a2d7-9c27-4544-98d0-c122ff9741d2",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a462604e-976f-4b76-8db0-e896cfe70314"
        },
        "item": {
          "id": "656c38d9-5506-454d-9be6-5ee446bafc90",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0b26a897-b137-44f4-b961-0feec08b247d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae39ab2-4745-4aa3-8cd8-7fd910dc6c78",
        "cursor": {
          "ref": "87ad8042-c44d-4715-b56a-c5eace289d54",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7ea78ccf-5eed-43f7-b142-f4d679f138c7"
        },
        "item": {
          "id": "3ae39ab2-4745-4aa3-8cd8-7fd910dc6c78",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4f72cc79-2d2d-4e58-b867-7dd0231c75be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ac2166-df74-4115-8db9-0a4c5ad6bdbf",
        "cursor": {
          "ref": "e0a4a996-1d39-4f82-b960-1db7f4b827b0",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "799ac44b-8c36-4204-bd85-29064e00c5df"
        },
        "item": {
          "id": "69ac2166-df74-4115-8db9-0a4c5ad6bdbf",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3405b6c9-ff6f-4cac-b72a-c0e98e16453b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e45324-07bf-409b-8b97-011ebc949a37",
        "cursor": {
          "ref": "c33a82fc-3451-4cff-9cc1-1e39cb300f6f",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ffe48872-8ed4-4ed0-b41f-73d95f90841b"
        },
        "item": {
          "id": "a5e45324-07bf-409b-8b97-011ebc949a37",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "617f4b05-f8b4-49fb-ae45-85a38b28b4d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d09aeef3-f1fb-4c24-abaa-6601399381c7",
        "cursor": {
          "ref": "af60eb82-f997-44db-ae4d-6cb32a8aea3d",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "321a6048-4de6-4b56-8a5e-d850bb103155"
        },
        "item": {
          "id": "d09aeef3-f1fb-4c24-abaa-6601399381c7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7ac41a9f-504d-402a-ba6f-ae04dd9ec61e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fbf1792-ea63-4d88-a93c-c9e767f0482c",
        "cursor": {
          "ref": "b73d64ea-7316-4287-8007-3e9bb3fba596",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "214ade5c-683d-4b61-ac4a-9516f48c0919"
        },
        "item": {
          "id": "8fbf1792-ea63-4d88-a93c-c9e767f0482c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d90cba1d-c80a-4863-a513-f00122d4a06d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2ff7ea-59e3-42e6-87a7-8bf7d669184a",
        "cursor": {
          "ref": "286a3274-5c33-4315-b189-96f03880c73b",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "fdba46e7-6dd2-4b95-ac49-7cb2b9e81e15"
        },
        "item": {
          "id": "2c2ff7ea-59e3-42e6-87a7-8bf7d669184a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ccf675e9-947e-4a83-a3b5-c405b550c43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b61a750-8305-438d-ad1c-66c0efba30c8",
        "cursor": {
          "ref": "9ce71caa-5688-49b3-9fa0-d2ef5f923fd0",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a05781bd-98b2-4fbb-a1cb-927014b0ddb7"
        },
        "item": {
          "id": "1b61a750-8305-438d-ad1c-66c0efba30c8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "05787cd6-0a68-44ee-8d2f-88fb53b6cc4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b161530-ed39-4ab6-8061-90a978f3c8d7",
        "cursor": {
          "ref": "a87db15e-76f0-4ff5-8d55-f568ccbceab2",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "401088f9-f3bc-4c31-a806-b1d5bd28c9c3"
        },
        "item": {
          "id": "9b161530-ed39-4ab6-8061-90a978f3c8d7",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ae0352b9-9904-4e7f-806c-535918656161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92b1ab0-8376-48e8-887b-700640d3ed01",
        "cursor": {
          "ref": "b21a02e4-624c-4825-90af-3a3c57417141",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b1db3941-94c6-41bd-9f4c-2b61b4cb4b27"
        },
        "item": {
          "id": "e92b1ab0-8376-48e8-887b-700640d3ed01",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ef5fbd36-ad51-478a-a19b-cbe7c235467a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3755d573-cd49-405f-9734-4444516b0ba3",
        "cursor": {
          "ref": "c0598c24-f021-4a32-bbe9-750c9a484981",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "184d16e5-e932-4167-9426-7f4d4ecfd847"
        },
        "item": {
          "id": "3755d573-cd49-405f-9734-4444516b0ba3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fc6e358e-c659-4748-ade0-b633ad4dbddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef599eb7-e3c0-4eed-addb-72e33b1397c8",
        "cursor": {
          "ref": "3c1bd8e9-7c82-404a-9ad7-4238b233a5cf",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "8b870380-fced-478b-98b3-21d731f1ab3d"
        },
        "item": {
          "id": "ef599eb7-e3c0-4eed-addb-72e33b1397c8",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "54b0f536-37b6-4a3e-b0ce-00e54367cb60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31427a58-9095-4553-b1b1-244ff5e87782",
        "cursor": {
          "ref": "8105188c-6f06-48b2-9c17-1e48fa38241b",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "cabbf57b-ea71-43ae-b937-d6d4a62eb330"
        },
        "item": {
          "id": "31427a58-9095-4553-b1b1-244ff5e87782",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "93d5f1c7-07f1-4699-a06e-7c5970f88c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311da1ea-debd-49e3-a6cf-7f0e47c9150f",
        "cursor": {
          "ref": "d55ef450-437c-48a5-9c44-964200014511",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e1ed6114-6eee-44c4-95b4-47def930ce98"
        },
        "item": {
          "id": "311da1ea-debd-49e3-a6cf-7f0e47c9150f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "bdbcf19d-dfb6-4cf5-9a7a-04cb030e6f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15b51e4-b85e-46d7-a952-2fb23d69e38e",
        "cursor": {
          "ref": "0b7b61c3-06fe-4585-aa60-b99c557fa7bf",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f27d6829-03f3-4fe6-93b7-5649be1c9dfe"
        },
        "item": {
          "id": "f15b51e4-b85e-46d7-a952-2fb23d69e38e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a0314a7e-c8a6-4fdd-904c-bcfcf941b639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6563bdc4-e6b5-48f5-9e18-d6ea1de53f92",
        "cursor": {
          "ref": "c5f9c060-a767-438a-91e9-ff91cc7428a8",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "89d28799-a6fe-4ca6-8f79-6c91e5f0925f"
        },
        "item": {
          "id": "6563bdc4-e6b5-48f5-9e18-d6ea1de53f92",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cce45563-c906-4726-a548-58e878338962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf110be8-2161-4a8a-8706-36e47016e8d5",
        "cursor": {
          "ref": "ecd1bd86-920d-40a8-81be-193a2b1dc5de",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b868faf2-bf44-45e9-8e08-dc2aeb36eaff"
        },
        "item": {
          "id": "bf110be8-2161-4a8a-8706-36e47016e8d5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d891e4f0-dc96-4235-a4af-a7222877b288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd64ca92-cc55-48fe-beca-3be1d09914bc",
        "cursor": {
          "ref": "6fa4ce13-b55a-4fb8-b552-da6669a7c54f",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "844cbdf4-c152-42b5-86b1-ba6474124e5e"
        },
        "item": {
          "id": "fd64ca92-cc55-48fe-beca-3be1d09914bc",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "57531164-147b-41bc-b84e-adeef2ed4524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84db1744-3f3e-41b1-9558-1971060ef21d",
        "cursor": {
          "ref": "d4fb89f7-1841-4223-80a9-01af70f21176",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "016c2ebc-0441-4e20-8d94-58c55f217cb1"
        },
        "item": {
          "id": "84db1744-3f3e-41b1-9558-1971060ef21d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ddf441d0-e1d7-4baf-8f37-294480fb4725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb24f320-e384-4924-90b8-849f15be9399",
        "cursor": {
          "ref": "4dbd8fa2-61f2-4d40-bcce-e915d1563515",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2d5bf0f2-b9f9-442e-a71f-8556919c28ae"
        },
        "item": {
          "id": "fb24f320-e384-4924-90b8-849f15be9399",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b91fef5c-4193-439a-863a-6bfc4098c85f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63bc8f74-0200-45a1-95dc-747b339c6dc6",
        "cursor": {
          "ref": "336b5582-0dc8-49dc-be63-813062f43d53",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9370413a-5753-49e4-bdce-511562e1fcb5"
        },
        "item": {
          "id": "63bc8f74-0200-45a1-95dc-747b339c6dc6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3d0a3104-8b35-4e05-986b-b06e779ba3e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1489baa0-c69c-4a53-9a54-63d62796008f",
        "cursor": {
          "ref": "b1c8b8e6-1e9a-4b2a-b1cd-02062f02a64d",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "19d14178-6413-4204-a2c3-881b9d881420"
        },
        "item": {
          "id": "1489baa0-c69c-4a53-9a54-63d62796008f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5e9c3639-a5b2-495b-a9b3-08e2c1032eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0fa864-3d46-40d2-b3c2-447a694d7fbb",
        "cursor": {
          "ref": "1544e370-8a78-4976-88c8-acae0fa1728d",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b2560f32-82b2-47a0-af26-e4302c3a05cc"
        },
        "item": {
          "id": "da0fa864-3d46-40d2-b3c2-447a694d7fbb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "56664cb9-5e2f-4f32-b0ce-77bf90f2cb86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b56148-6093-44fe-80f5-bf1775171a6e",
        "cursor": {
          "ref": "4ca04996-3f2d-4145-925d-7101093af948",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2ca79cd3-af44-4b8d-84aa-bb3b74d1892d"
        },
        "item": {
          "id": "37b56148-6093-44fe-80f5-bf1775171a6e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "509e7cbf-af8c-4d4a-8e2f-7c66c03aa7fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f09c9452-0529-4c14-a4e5-5bc00dcdef7f",
        "cursor": {
          "ref": "e2e9312c-1983-4a09-9a09-1b6217c41912",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ec74cde8-3f36-41ef-850a-da9817cac951"
        },
        "item": {
          "id": "f09c9452-0529-4c14-a4e5-5bc00dcdef7f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "542e6fe3-c616-421f-bd4f-431b72dbc3e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8354af-f03e-4de2-9c26-c002f81d6fda",
        "cursor": {
          "ref": "6ee8000c-224e-4b51-9073-0fbfd6674920",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6cc94a78-8acc-467e-a6e5-148b09c8b6d0"
        },
        "item": {
          "id": "7d8354af-f03e-4de2-9c26-c002f81d6fda",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "570a66e8-27d6-4063-ad17-a5985d89badd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f63c32bc-a2b1-4db0-9866-8e3e7124e338",
        "cursor": {
          "ref": "18542746-1b27-4443-95ff-c9d1235b1fc1",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2c540577-6d78-4dbc-904a-6d995d585dbd"
        },
        "item": {
          "id": "f63c32bc-a2b1-4db0-9866-8e3e7124e338",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a0b45419-ae53-4db1-ac7d-dd3f3c04063d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fcf4961-244e-4c6c-9929-d22820ef8d22",
        "cursor": {
          "ref": "decce338-1a2d-4fc7-ad51-01d7473ecdd3",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "90cfa340-7452-4a1e-84ee-7ae0af5bc14c"
        },
        "item": {
          "id": "3fcf4961-244e-4c6c-9929-d22820ef8d22",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "5b7da13e-d928-4e96-aace-b7b21ad9bd58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2423b009-1f9c-4859-8267-edf82bcde301",
        "cursor": {
          "ref": "85b72fe0-1627-4aa7-bc39-d2143d52a854",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e993a17b-b008-4d30-a471-41d2efaec47c"
        },
        "item": {
          "id": "2423b009-1f9c-4859-8267-edf82bcde301",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "6f154603-dedc-4d1e-b808-2e1695f3a669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2943f5-eb19-45c0-87e7-1099275645b4",
        "cursor": {
          "ref": "c9f20d97-33b8-4065-b484-7c03ddfaaaa2",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9b6e49df-a1e1-4c77-bd7b-f1a2b9aca232"
        },
        "item": {
          "id": "fe2943f5-eb19-45c0-87e7-1099275645b4",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f2be91cc-32ca-40e1-a796-8acabdd4a338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b462527d-3186-4fd3-b807-289ee5b25804",
        "cursor": {
          "ref": "969ff8b1-b990-447e-b79a-705363dce4f1",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "aa70c19c-d57f-43f0-968b-eb86f860713a"
        },
        "item": {
          "id": "b462527d-3186-4fd3-b807-289ee5b25804",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0b70c118-99ef-44f5-b2c1-98a3cdd05ba9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0592cc6-aa34-4817-8bdc-da75de3694e2",
        "cursor": {
          "ref": "eef5c99e-0efd-4ddf-9d28-fbd1eab0df53",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "21110eb7-c7aa-45ad-a212-7d57906af291"
        },
        "item": {
          "id": "c0592cc6-aa34-4817-8bdc-da75de3694e2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e1cff042-5f9d-469c-8450-015714539a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a332663d-44d4-4a49-b947-3e68bf65d35c",
        "cursor": {
          "ref": "6c030609-04de-4518-8485-add192bbf53c",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3eb19e90-78ac-4c50-8d9d-f3db51f398e6"
        },
        "item": {
          "id": "a332663d-44d4-4a49-b947-3e68bf65d35c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f3613ec2-2728-4bb5-a06e-06d089d340db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d423d5-8059-4007-ae5e-f88a050a0234",
        "cursor": {
          "ref": "392174d2-c8e0-400b-b168-65d258b9cb91",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0ae983b2-439f-481f-b674-0ec74346415d"
        },
        "item": {
          "id": "16d423d5-8059-4007-ae5e-f88a050a0234",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d55474ca-ef69-400e-952d-d27d4bdc35b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eef10ca-ea83-4dca-b6a3-e88b3accae57",
        "cursor": {
          "ref": "d7b17b46-3ac0-4fda-a3dd-7dbffe63ec4a",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c610c6a5-de78-4bad-9f71-72105f4b3de5"
        },
        "item": {
          "id": "1eef10ca-ea83-4dca-b6a3-e88b3accae57",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "52a44842-9024-458c-b033-ee9e8779ae2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5aa2cac-1b8c-42c6-a240-d1c566be8de5",
        "cursor": {
          "ref": "68571877-c09a-4b43-a296-20db58a27a81",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6adf6d35-0fcc-4e97-a825-d620453f811a"
        },
        "item": {
          "id": "b5aa2cac-1b8c-42c6-a240-d1c566be8de5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4fd680d0-fce8-4655-ab53-91ad5a726df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a5037f-ffa1-4ac1-b542-e38ea5d39e19",
        "cursor": {
          "ref": "d50eee1e-1329-45f1-bb7f-3bdc4d550348",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "335bf728-f4d6-441d-8881-202b487586d4"
        },
        "item": {
          "id": "43a5037f-ffa1-4ac1-b542-e38ea5d39e19",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "cc1fe63e-1392-4a71-b758-a76daa04a945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05c58c5-5ba0-4a08-9d98-69319ca34456",
        "cursor": {
          "ref": "32b467f5-a78d-4b30-b20f-efd8432ee051",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "50df0150-8f0c-4983-aa22-38913c71b7a2"
        },
        "item": {
          "id": "b05c58c5-5ba0-4a08-9d98-69319ca34456",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b8bbfa2a-468b-4318-9d41-7c1b948141bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f691f867-7d99-48c2-95bf-9aca221bc7f3",
        "cursor": {
          "ref": "f7f935d4-9a74-4159-9021-942980bb24f6",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4a587eea-d493-44c9-85d4-98130f3a5d92"
        },
        "item": {
          "id": "f691f867-7d99-48c2-95bf-9aca221bc7f3",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d958e06d-a2f9-4d13-b933-801c2fa14889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b02c73-7634-4d83-89c6-9765ad82241e",
        "cursor": {
          "ref": "e5d8c5cc-b18a-47ad-a829-d0a4d9456b05",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "698cf02e-7fcb-4fcf-8d36-9f8e0f9e486b"
        },
        "item": {
          "id": "f7b02c73-7634-4d83-89c6-9765ad82241e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "86067023-2eab-472e-a7de-3dd88e88a8de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8dee05-5d45-43b2-9cbd-79e116bfc827",
        "cursor": {
          "ref": "b57313ee-634d-4cab-9d2a-e873aafed6e3",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "860f8d28-cd6a-4c92-9888-6f3b09b3c280"
        },
        "item": {
          "id": "6b8dee05-5d45-43b2-9cbd-79e116bfc827",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "edf1352c-1c95-4270-af17-466128f9a8fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f085e06-faf4-416f-9182-03e7a41db412",
        "cursor": {
          "ref": "81bd1c20-b966-42ba-9c0e-6841990cf40d",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3c62ca68-952a-48a6-ba8f-f2a56d53b835"
        },
        "item": {
          "id": "4f085e06-faf4-416f-9182-03e7a41db412",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5853ece2-9663-4d31-b360-74481060ebac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "996e69af-1ff6-4df6-a8d8-5799247c9a8c",
        "cursor": {
          "ref": "cc874a83-e4fc-46f2-b658-fbfcf84d66ba",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "89e2edd8-cc22-4ca5-a88b-7d777aca734e"
        },
        "item": {
          "id": "996e69af-1ff6-4df6-a8d8-5799247c9a8c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "6870f66b-94b6-4b15-a734-6ea5ad4299a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50543cdd-91c9-4a8d-82a3-1a7814e891fb",
        "cursor": {
          "ref": "a26ae767-904d-4443-9455-f1e33062571c",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "db217d5f-4a4c-4ff0-93ff-b9f4829ed109"
        },
        "item": {
          "id": "50543cdd-91c9-4a8d-82a3-1a7814e891fb",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3fac8b20-e6b9-4c8a-999d-97fd57deadd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "428da0a2-b683-43af-873c-15ac5797fe47",
        "cursor": {
          "ref": "7bc1925f-fa1f-474b-b405-815f98c21973",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "49b53740-fb94-4c03-ae8c-912660e2f3da"
        },
        "item": {
          "id": "428da0a2-b683-43af-873c-15ac5797fe47",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "cf22a429-17f6-4954-b0a6-ae4234b2bd40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc0e5b4-e5b3-4c1c-be20-8b446d07e1e2",
        "cursor": {
          "ref": "5b802774-4716-4a1d-8b4d-dc83ff67a8cb",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a8fab2fc-5a18-4291-a370-3c95e2f06326"
        },
        "item": {
          "id": "8bc0e5b4-e5b3-4c1c-be20-8b446d07e1e2",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e070ebb0-e9ca-406d-bb1d-110cb2bfc656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d06c13-0792-4359-8cef-dac6dfcda91b",
        "cursor": {
          "ref": "76267c52-801b-4c11-bf91-8debfe8b0105",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "506fbe66-3b17-4aa3-a7ae-28fc3b9f0a0a"
        },
        "item": {
          "id": "d4d06c13-0792-4359-8cef-dac6dfcda91b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b175cb98-8f2b-4fdf-9f19-f8f5e3df449f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3ee4db-0a04-4727-9c7b-edf21a4d7381",
        "cursor": {
          "ref": "c95cdcd3-4e0b-466e-91cf-a967c75bd7b3",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "978c724a-1046-4fac-8f0c-d6bf5143a828"
        },
        "item": {
          "id": "8c3ee4db-0a04-4727-9c7b-edf21a4d7381",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8a176d22-116c-4299-860c-ae860068d745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6522f794-78ea-45f3-8ba3-2188f7b2ebb8",
        "cursor": {
          "ref": "603bed4f-1c12-46fc-a44a-5e94f42ece13",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1eee039c-3c4e-4313-a985-5f9fb731416b"
        },
        "item": {
          "id": "6522f794-78ea-45f3-8ba3-2188f7b2ebb8",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e9cdbd84-f3f0-421b-ad1d-ff6efbc1583d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c558d2-8daf-46f1-a27b-efc30d7366cc",
        "cursor": {
          "ref": "2e91d361-e4e4-43f7-b121-b6d1448a123c",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ffca22cf-8e33-424e-95aa-4f6ca4411da7"
        },
        "item": {
          "id": "b8c558d2-8daf-46f1-a27b-efc30d7366cc",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4bdc9fcc-8601-4d10-a642-fdfe23ee1eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5caf8ea-6cfe-436e-9b1d-77ecd1e39249",
        "cursor": {
          "ref": "110f7845-1b2a-4aae-8cd0-c3c1601a50f3",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "62768fa7-a45a-487d-b80b-97dacfe6a9ef"
        },
        "item": {
          "id": "c5caf8ea-6cfe-436e-9b1d-77ecd1e39249",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4a3e6e0a-4175-46d7-bde0-23e74d1d5c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8acccdc-8216-46b8-8d11-2ae750ee615f",
        "cursor": {
          "ref": "2125c923-af27-4a74-862a-bbc4743461bd",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4dccbc4f-bf67-4468-baf8-7b909832d303"
        },
        "item": {
          "id": "a8acccdc-8216-46b8-8d11-2ae750ee615f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d809f45c-ff87-47ec-9872-2b3a726054db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00faaff6-3db8-433d-8456-ee7dd5393b6e",
        "cursor": {
          "ref": "5f635de6-fd29-4cab-a432-58ede8840543",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "167dbea9-9f32-433f-9071-a089e5a6511b"
        },
        "item": {
          "id": "00faaff6-3db8-433d-8456-ee7dd5393b6e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "1b086732-1b7f-48f5-b97d-22859a8f266b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a07dbf0-58f6-4db5-a8f0-130bcf2937d9",
        "cursor": {
          "ref": "e6ee4697-6163-441c-86fa-43b49dd32fc8",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1551cce4-99c7-48a6-9861-4d472a4e8dde"
        },
        "item": {
          "id": "9a07dbf0-58f6-4db5-a8f0-130bcf2937d9",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "45ce6682-5cea-4f0a-b382-e28890ce6bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d9245f-8731-44db-9b6f-e347b1825387",
        "cursor": {
          "ref": "03ac996f-67c0-4cc5-8cf2-0a2c21476df9",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "cad035bf-08e0-4f66-b8d8-24e2ea35b7e4"
        },
        "item": {
          "id": "f2d9245f-8731-44db-9b6f-e347b1825387",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "848edac7-52eb-465f-9590-922d87152e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d9dd0a-7281-496b-be76-ceb5bb84416d",
        "cursor": {
          "ref": "56419fce-3e07-4b7d-84cd-0b04e1e75f7e",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5aa45ab9-61ba-4930-ad31-c986378ccc32"
        },
        "item": {
          "id": "85d9dd0a-7281-496b-be76-ceb5bb84416d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e0336a58-0614-447c-9294-ad4b66cc217c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04b81b5-bec2-4846-b44b-e9468c62a890",
        "cursor": {
          "ref": "d187d9b7-db52-452d-aeda-3cbe5680fa11",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9a7a8f74-18b6-4d8e-9c48-f261abc8a7c8"
        },
        "item": {
          "id": "e04b81b5-bec2-4846-b44b-e9468c62a890",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "31b8c643-1854-4e97-bd6c-cafd809056ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad463b24-8123-4e55-974e-0f444f401bce",
        "cursor": {
          "ref": "ff2d8ab6-8660-4b44-bb17-e48001d47791",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7fb64306-d933-438a-8e34-be68061f348d"
        },
        "item": {
          "id": "ad463b24-8123-4e55-974e-0f444f401bce",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c12075e0-bc85-4e47-9cc5-4e69322f342a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb6bbad5-9536-421a-9733-509ab637dc67",
        "cursor": {
          "ref": "efc9c63c-bdb4-42e9-bcfb-8dd9d7852922",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ff17951e-ce59-44f7-a31a-f9f907e0e6a2"
        },
        "item": {
          "id": "eb6bbad5-9536-421a-9733-509ab637dc67",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6e303fc9-c964-4eee-be6a-10dd0a56ff70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e33b2a-da95-4a20-a63d-cebab82c1f13",
        "cursor": {
          "ref": "5edf5ec1-7038-48e7-9a72-44b3f48a6383",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "64f6ad7f-acde-4c3d-acc6-fb27c63e1610"
        },
        "item": {
          "id": "a8e33b2a-da95-4a20-a63d-cebab82c1f13",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "2ce1a6c9-ede4-4f46-b074-233434f4ffac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5fd7bfe-8fc2-4013-8bdc-36610d9ad7c0",
        "cursor": {
          "ref": "cf2b5363-9e77-4f97-9a98-ffbe37ccc230",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "effd19d6-7975-4c12-9cce-14caac522211"
        },
        "item": {
          "id": "c5fd7bfe-8fc2-4013-8bdc-36610d9ad7c0",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3945d284-5d4c-41bc-a3d3-4d93bf4efb6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8429d43-9ad2-459e-bd86-b950a9d925c4",
        "cursor": {
          "ref": "d3c58b8b-862a-4c17-ab6d-233825fafca7",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "08ea1d90-362c-4f63-b21f-1a7bc67e958a"
        },
        "item": {
          "id": "f8429d43-9ad2-459e-bd86-b950a9d925c4",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "826059a0-8b23-4892-a70d-78db5bc49b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e2f83f-425f-488c-bd31-8e318d68f0b1",
        "cursor": {
          "ref": "99e9804b-4c76-47f0-b087-d65d2b161d4f",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e340b8de-ab72-49e4-83c8-ddd68aad2b37"
        },
        "item": {
          "id": "34e2f83f-425f-488c-bd31-8e318d68f0b1",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5033729f-75a1-49fd-86a7-b0e08c967130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3fac988-e4da-4477-b138-920fa271f09d",
        "cursor": {
          "ref": "e2062be2-4867-4952-bb97-c0a1cc2b1a74",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "832e1f7e-3cbf-4c76-9a82-7dc156980450"
        },
        "item": {
          "id": "f3fac988-e4da-4477-b138-920fa271f09d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1c2835d3-f5b1-4c07-b003-b57de5cd3fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4796dd2-96c8-4a29-9409-192c879b0c5a",
        "cursor": {
          "ref": "ad116d6c-5bbb-4095-a875-4b38ff305190",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ca5c533f-7d42-4418-a40d-96819e25c26b"
        },
        "item": {
          "id": "b4796dd2-96c8-4a29-9409-192c879b0c5a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "78d4f6cb-97cc-49de-9c2e-c858ede4b707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d5b45e-644f-4fdf-b163-daa1ba6ddeca",
        "cursor": {
          "ref": "120e34be-704a-4f48-bbe8-40e17c325c11",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "91e1ff0e-5cfc-4433-a1f3-d383d3953f05"
        },
        "item": {
          "id": "00d5b45e-644f-4fdf-b163-daa1ba6ddeca",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d98d6f20-6c16-44a8-a36d-235d23e09df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670b5a10-c33a-4e17-9352-286b0008a8a1",
        "cursor": {
          "ref": "10590552-840a-4aa5-86b5-3df93b3a2610",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c730958a-3994-4eff-bc71-2dad3f4db01e"
        },
        "item": {
          "id": "670b5a10-c33a-4e17-9352-286b0008a8a1",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a051174f-580a-43f4-961c-87cbf611f487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d68bd6-8c97-48f5-b69a-2f0083a71d2a",
        "cursor": {
          "ref": "289a1824-8320-4c9c-bb1a-2e7ff0d40f7b",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3628bcc9-feee-4df7-9042-71343f4b6e49"
        },
        "item": {
          "id": "03d68bd6-8c97-48f5-b69a-2f0083a71d2a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f519ed82-8a75-430e-85f6-bb6ca9deefd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46457916-1e95-4059-9cb6-54f5268d6326",
        "cursor": {
          "ref": "618e77bb-efa2-4681-a302-9e4d6edc25f3",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "6eca040b-df8e-4af6-84d8-c5d78e9cf5a5"
        },
        "item": {
          "id": "46457916-1e95-4059-9cb6-54f5268d6326",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "bc34816e-ad09-4f6a-9e5b-b9998ba7ed7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775883f8-3271-4a7e-8303-09533a8121bf",
        "cursor": {
          "ref": "c8b712f2-5993-4816-b9f9-7adc3d0fde49",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2b644da8-f8f0-40c5-a6a7-98c48f869b69"
        },
        "item": {
          "id": "775883f8-3271-4a7e-8303-09533a8121bf",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "bafefe33-6ae8-49ca-b529-eefc2d3f58d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e265b0a7-0ee4-4bc8-b300-ef4c4f6ac23f",
        "cursor": {
          "ref": "29d2d3d8-d8e9-44e6-8223-e003475c7822",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "eb780d84-7dd5-4286-902a-d5973c0a9687"
        },
        "item": {
          "id": "e265b0a7-0ee4-4bc8-b300-ef4c4f6ac23f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7a00deed-1d97-40e1-a549-f2732e862077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27bb5a44-a267-4f48-91e6-9d1edc567e38",
        "cursor": {
          "ref": "81d0ae96-9b5e-43f0-83d4-b8bcba2a7bda",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e15e4384-d434-468a-88e3-bd67503184d7"
        },
        "item": {
          "id": "27bb5a44-a267-4f48-91e6-9d1edc567e38",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5dcbb439-e053-4161-83a4-777d8f4a6dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e110339b-e0bb-4db8-9ee7-c51abd34b71c",
        "cursor": {
          "ref": "d6ff1d75-3b14-486e-a8db-ab32e25e9635",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c4b17c91-d1fe-4771-acb0-bf202d206d5a"
        },
        "item": {
          "id": "e110339b-e0bb-4db8-9ee7-c51abd34b71c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a24214f1-dcbd-4063-a7b1-67c7899e8a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a91e2a9-71b8-4d4e-9be1-23ebf13dbd56",
        "cursor": {
          "ref": "838876e6-76c8-4107-b314-613c485d93f7",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3da8b87e-2937-47e1-80cb-f57488f8d866"
        },
        "item": {
          "id": "9a91e2a9-71b8-4d4e-9be1-23ebf13dbd56",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c680c571-62e0-4991-9cfb-b1a4c7a74449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195a1c00-0757-413b-b687-3d4a33741e40",
        "cursor": {
          "ref": "aa0acb26-510a-4941-8d2c-56a297dc4e89",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "bd5f6186-0bf4-41e0-8452-7305f97f1cf6"
        },
        "item": {
          "id": "195a1c00-0757-413b-b687-3d4a33741e40",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "49960baa-0b73-4e7f-809f-e4c68acb6504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f77ed2-dc6c-4ff7-880a-93b02031d25a",
        "cursor": {
          "ref": "d6145564-dc69-46f9-866f-0377ba2c4586",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "aff8328a-97e4-49c4-9c3c-581d960b6136"
        },
        "item": {
          "id": "11f77ed2-dc6c-4ff7-880a-93b02031d25a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "be01df22-3613-4e5a-977e-18d828da2fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b55f58-4bdb-4601-8d18-ad2c532496c4",
        "cursor": {
          "ref": "75c13053-1dc9-468b-8f35-3388518efa44",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7a071137-95d6-4d23-a0e4-932f7916a2b6"
        },
        "item": {
          "id": "03b55f58-4bdb-4601-8d18-ad2c532496c4",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "43c4394d-5bb3-4d30-b4a6-85082c0c79b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b436673a-bba0-41ea-9948-91df55600659",
        "cursor": {
          "ref": "d2feee97-6fa0-40c3-9797-90b0db7c3c25",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "4a559b68-42d0-4fed-9b25-446f26ba768c"
        },
        "item": {
          "id": "b436673a-bba0-41ea-9948-91df55600659",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ed338608-2a35-4332-9b52-364193e42330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93d64e1-3986-4b4e-83ae-d92d85dfb04e",
        "cursor": {
          "ref": "fc8f1484-088a-4584-84ed-4173888a9cb1",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "dbbb14cc-0efa-4cd5-85dd-6ef2a76daf5f"
        },
        "item": {
          "id": "e93d64e1-3986-4b4e-83ae-d92d85dfb04e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "14e2977d-01ff-4d65-8b34-a4a1decf972f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add3dbab-102b-4a8e-b927-aa8ad37682f9",
        "cursor": {
          "ref": "75e81e1b-5032-4c25-ae23-cbb62424dc26",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c11dacc1-6ff5-4342-9007-41a7263bdb08"
        },
        "item": {
          "id": "add3dbab-102b-4a8e-b927-aa8ad37682f9",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "34ce1ba3-0bfd-4c68-8300-885c0e2107ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b295ebb-8bf1-4146-bd55-d622f2d712e6",
        "cursor": {
          "ref": "ac3638c0-ddbd-4bb0-a92e-7e4ad1bb91e2",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "61c656d9-019d-4557-8e05-f6b7c52b1dbc"
        },
        "item": {
          "id": "7b295ebb-8bf1-4146-bd55-d622f2d712e6",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "292e2d9a-1179-4bfd-ad3f-7212451b7183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c3ab621-8ab1-4814-8e10-452c93849772",
        "cursor": {
          "ref": "ff139df0-aea9-4e3a-897f-aec8e85cde03",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "cd745ad6-af27-4f83-94dc-73213a7db682"
        },
        "item": {
          "id": "2c3ab621-8ab1-4814-8e10-452c93849772",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8348cec8-a17f-4370-b41f-3d6f66872feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa52a3ee-8a1a-4c8f-9156-ae1e8ee692f1",
        "cursor": {
          "ref": "7d564f0c-aa36-4de2-9d99-28816befb8b9",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "975b8809-3eb8-4019-adac-559d3c92fe00"
        },
        "item": {
          "id": "fa52a3ee-8a1a-4c8f-9156-ae1e8ee692f1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7ff5198e-c547-4c59-8808-a00a9bb8c9d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef020783-9121-46ec-a0ec-87d249415800",
        "cursor": {
          "ref": "651ba28d-b10f-4265-8b12-ee94f9e13df6",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1d548912-9f23-4245-9736-65f507fa763a"
        },
        "item": {
          "id": "ef020783-9121-46ec-a0ec-87d249415800",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "10fb5f0e-4efb-4ed1-b486-1c5d75eb5ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b0065f-28b7-4672-8b5e-19da01d9f911",
        "cursor": {
          "ref": "7c5e8b25-3535-4ac2-9ba9-4eb84348ac6d",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6db29d91-e95c-42d5-874b-78a40d47c941"
        },
        "item": {
          "id": "e8b0065f-28b7-4672-8b5e-19da01d9f911",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ee9d1985-24e6-4fe4-afff-fe8e32833bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5adab2a9-a552-4963-aec0-ea29d896c6c9",
        "cursor": {
          "ref": "050c32f5-2254-4f22-ac0c-e6987e88ac9a",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2eec5bf3-e362-447a-beb6-0e3debf9be95"
        },
        "item": {
          "id": "5adab2a9-a552-4963-aec0-ea29d896c6c9",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f751e1a0-26b2-4573-9122-e1e295b5507a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5876e1-53e3-4e59-a419-aca9f54fff8e",
        "cursor": {
          "ref": "6436efdb-4b48-425e-8c19-e20159d2a6c9",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "805a873d-1c60-4bd4-ad54-1326f4b82017"
        },
        "item": {
          "id": "ba5876e1-53e3-4e59-a419-aca9f54fff8e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "71a0a5f2-d737-4831-9713-cb6e7008c62b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6da98f-529a-429e-82f3-dbd3d720b240",
        "cursor": {
          "ref": "b3bb80c6-d25c-4e7d-98f3-7c0c535e7acb",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6c473fdb-6c1b-4ce2-8937-bdeb8c6d6050"
        },
        "item": {
          "id": "3d6da98f-529a-429e-82f3-dbd3d720b240",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5ed0b167-a071-4dd0-b1e0-9f83ba870bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12335e0e-5fd9-4653-ad79-c2ceb84dd64d",
        "cursor": {
          "ref": "5e83794f-1398-42b1-a98b-ba76b9726396",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9aed5e76-a7d7-4b45-8882-7b7cc81038db"
        },
        "item": {
          "id": "12335e0e-5fd9-4653-ad79-c2ceb84dd64d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "22133e67-3321-4d27-8778-175c3c64a195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f93143-e0fd-42e0-9bec-8db2c9ea7174",
        "cursor": {
          "ref": "1d9ff370-383f-4418-b7ae-a2d83df4536a",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "69466b1b-4043-409f-b9bf-09c8b7606c77"
        },
        "item": {
          "id": "21f93143-e0fd-42e0-9bec-8db2c9ea7174",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c0195624-68c5-463c-8fa2-355ef281c790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8feb06d0-18cc-40d7-a2e9-0013ebcb83f6",
        "cursor": {
          "ref": "768ca3b0-3e47-4ada-81bc-cbc024fee2c9",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5ef34e2e-ac7d-4a7a-a32b-a8fa8a8b312e"
        },
        "item": {
          "id": "8feb06d0-18cc-40d7-a2e9-0013ebcb83f6",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "57857f5d-253b-433b-a7e7-296a62db2cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc474989-f7c0-4881-803c-c421b796e90b",
        "cursor": {
          "ref": "934afecb-a10d-4606-964b-c775b0fa2935",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "924837d5-8ec8-42f2-966e-ad6f3a14c783"
        },
        "item": {
          "id": "cc474989-f7c0-4881-803c-c421b796e90b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2dc4c7ba-41b6-4572-9569-953f8e3f1929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce328e7-be0c-4bdc-b6cc-240999c3db74",
        "cursor": {
          "ref": "085ceb95-bb5a-41c1-bc06-be22970372ff",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d29636fc-ee0b-4137-b343-861577e1fd2c"
        },
        "item": {
          "id": "7ce328e7-be0c-4bdc-b6cc-240999c3db74",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "5cd82ef6-287c-4e4d-a9ad-3c15cc8ed3f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d130709f-d4c7-4059-b567-2f851351eaa8",
        "cursor": {
          "ref": "32339733-c8ae-4fc4-9c1c-60b1b2fc2c4f",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1ed81673-d92a-4938-8f86-a57daf590136"
        },
        "item": {
          "id": "d130709f-d4c7-4059-b567-2f851351eaa8",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2e9561f7-a9f9-4ac0-8de4-060fcf3a2c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac7559c5-5805-4759-8725-514501b12253",
        "cursor": {
          "ref": "89fd867b-cb66-4a2e-a63b-74aa8fe23162",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "9a7a6970-f085-484a-a868-507d8d2a2f33"
        },
        "item": {
          "id": "ac7559c5-5805-4759-8725-514501b12253",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f7de9c78-cd4b-48dd-a8eb-379c3b442f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f58777-aa10-4465-a5bb-269ff882eb73",
        "cursor": {
          "ref": "4e87a125-99c7-47f3-8f40-fb5c748f4625",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "28bdb43d-0975-46ea-ba1f-0b674d5a6b0f"
        },
        "item": {
          "id": "a5f58777-aa10-4465-a5bb-269ff882eb73",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4226f55f-8a28-4810-ae8c-62e375088f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "771597ed-931c-44c2-a42a-500a73a3dff0",
        "cursor": {
          "ref": "91bcfbae-c248-41ed-9eee-c5c8617c2f2e",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "06ba138d-ab3c-4cd0-bf1a-db4cb3cbbd40"
        },
        "item": {
          "id": "771597ed-931c-44c2-a42a-500a73a3dff0",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "637ce7fc-b703-48af-9612-c6e36ee52239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d9be019-7a94-4f70-bf3b-eb4f47cd55b4",
        "cursor": {
          "ref": "b50dcc8d-56f5-4c6b-b698-2146ac7baecb",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f1f8609b-8b6b-4474-be84-2eb2f9d382e5"
        },
        "item": {
          "id": "6d9be019-7a94-4f70-bf3b-eb4f47cd55b4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "665b5abe-05f2-4267-8735-2401fe729a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a0329c-cb14-4586-8129-8e5b9d756cf9",
        "cursor": {
          "ref": "d270abfb-6f07-4e17-8fe9-abfb6022783f",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f8aa8662-e0c7-4750-8801-65d2b817a521"
        },
        "item": {
          "id": "54a0329c-cb14-4586-8129-8e5b9d756cf9",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "3a53c808-1e64-478b-a3df-b42e1c583281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "819a3a11-b3f0-40d9-825e-ab509359e3eb",
        "cursor": {
          "ref": "a0006aee-6520-479a-9100-dbbed6a4ab7a",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a2310c68-9b99-45c3-a89c-cd914fb5511f"
        },
        "item": {
          "id": "819a3a11-b3f0-40d9-825e-ab509359e3eb",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3f940099-9608-49b7-968a-052ba4281a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af76717-a2d0-40d8-aca7-1da12270cde9",
        "cursor": {
          "ref": "bc9d1bd4-f3db-4c9b-a94d-486a2344c960",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c140316d-18ed-4ff8-8f65-af5bed08e533"
        },
        "item": {
          "id": "2af76717-a2d0-40d8-aca7-1da12270cde9",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "632f1373-e485-4a34-8326-f504883cda84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c28997-1bb8-41a1-abbb-de9b2fe3b72a",
        "cursor": {
          "ref": "39929e97-37ab-4466-87b7-cd42e8966050",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "92b18ae0-4c89-48ef-ab43-97d22384d84c"
        },
        "item": {
          "id": "35c28997-1bb8-41a1-abbb-de9b2fe3b72a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f702d794-aee3-4dec-94c0-99e3ceb033ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a964f9-342a-4c70-9d82-b18ffd65042c",
        "cursor": {
          "ref": "f724cf89-698c-4cd5-8958-04e6ac636748",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5dcfc11b-b873-40b5-95f7-9bbcbbaa2cf3"
        },
        "item": {
          "id": "57a964f9-342a-4c70-9d82-b18ffd65042c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d6b6b679-3ba6-4790-904d-40c3a32eefe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc83b40-a695-456c-b026-5b0436bd0c98",
        "cursor": {
          "ref": "d0eb164b-51c8-4ff0-ad7e-26d7a1c24492",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "cb1f6768-7179-44a3-984f-f4d306ca0546"
        },
        "item": {
          "id": "6cc83b40-a695-456c-b026-5b0436bd0c98",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9960c99f-8d81-40b7-8100-68c8edb725ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b144697-48f8-4772-81e2-e22712da4a05",
        "cursor": {
          "ref": "0ee9ee1b-877b-4c85-a318-49c1cc695b10",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c3a26418-048b-4fcd-8bbf-0d2d8f72ef15"
        },
        "item": {
          "id": "4b144697-48f8-4772-81e2-e22712da4a05",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b8a77ff5-0c25-4667-9330-e028280fe1ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ec1379-36f3-404a-aac8-785db3356a05",
        "cursor": {
          "ref": "13512361-e15e-4ccd-86bc-d7960a8a772e",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b6e83b2a-0fea-4209-94ee-895d1cb4d133"
        },
        "item": {
          "id": "a0ec1379-36f3-404a-aac8-785db3356a05",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d2ef4e3c-e654-4d9e-a41b-0b04f90b1abc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66452ee-68c5-4a51-b141-d56f4058c4c6",
        "cursor": {
          "ref": "ac5dcd78-daa7-4b9a-a73e-18d9233791f7",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "97b19623-a6e8-420b-873d-a02088ecb02c"
        },
        "item": {
          "id": "b66452ee-68c5-4a51-b141-d56f4058c4c6",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "1dc3815e-c9d0-4b40-8c47-a7f1824fd6af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60dd8975-2c08-46ce-b2b7-7de3ca6280d1",
        "cursor": {
          "ref": "21f9e302-5189-40e7-a04a-c9d51a640615",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1a5dc04a-a16d-4398-a58c-6080bd23b6cc"
        },
        "item": {
          "id": "60dd8975-2c08-46ce-b2b7-7de3ca6280d1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e6f59d5d-3ac4-4c06-b4bf-6dc2a4bf2c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21bf418-8600-4670-9f7c-9a02f488beca",
        "cursor": {
          "ref": "b4051b5e-3c7a-4e5f-a424-ccbfea1cfd13",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4cd283b5-7c29-4096-b5d0-dcc52b3599e8"
        },
        "item": {
          "id": "a21bf418-8600-4670-9f7c-9a02f488beca",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8f3152f7-9c63-47ca-a313-66961ee62e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e7abbc-10da-4cbb-abcf-226ec21b162c",
        "cursor": {
          "ref": "db28de65-250f-4eb8-9a14-8c4bac1ba868",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "8ee78925-aa21-400d-a2f7-e038fe3d7688"
        },
        "item": {
          "id": "81e7abbc-10da-4cbb-abcf-226ec21b162c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9c4b5ef8-b129-4d3a-8966-7cb6947362c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae71c741-b359-4194-81b6-0358429eaf8a",
        "cursor": {
          "ref": "12ffe1db-a2a8-4f7a-98d2-3ba88b066005",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "beac6f48-ab7b-43d8-bda9-6132582d7c36"
        },
        "item": {
          "id": "ae71c741-b359-4194-81b6-0358429eaf8a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "5e2428c7-0c17-45eb-a1b6-b90477ebd7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e9a2fa-f830-4b87-8f09-f66d98bca05d",
        "cursor": {
          "ref": "1c682a68-c1a3-408e-bd3d-5e8bb4b60934",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "60982f56-dcc7-4027-9962-860cd8239f4d"
        },
        "item": {
          "id": "28e9a2fa-f830-4b87-8f09-f66d98bca05d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "30a86898-20b7-4fd2-a88b-92a18cba1cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778711de-0ae9-4562-9231-abc8daa58f21",
        "cursor": {
          "ref": "36035431-02c6-4847-b5c1-274d216d53a6",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "766456b7-93ab-4a57-97f3-7a7b75ccf758"
        },
        "item": {
          "id": "778711de-0ae9-4562-9231-abc8daa58f21",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e7197e3e-ec71-4486-8b63-54c953b17214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "355a7b34-13d9-4511-a7f1-bb56b91ed9f1",
        "cursor": {
          "ref": "061b9256-65c8-4b85-bbdd-9799faf8c98d",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a463e703-8705-4d37-a19a-9869b6e8686e"
        },
        "item": {
          "id": "355a7b34-13d9-4511-a7f1-bb56b91ed9f1",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e0d8f50c-1163-4f4a-b741-0aed48b2463d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48de6819-1725-46b2-991d-875801015abb",
        "cursor": {
          "ref": "dc3d76a9-5d25-43c0-9dcc-951c1f558cea",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ab893708-6f4b-4a48-a680-091333a5efca"
        },
        "item": {
          "id": "48de6819-1725-46b2-991d-875801015abb",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5784c14c-ca6c-4228-9ba6-53e720b37b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50e612d-5e79-4c02-b40b-0945d1a35d29",
        "cursor": {
          "ref": "3af0e9c5-bc8a-4d12-868b-e7f9f2d36f1e",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "460e42e3-5e70-4dbf-b787-4f86f773c52f"
        },
        "item": {
          "id": "e50e612d-5e79-4c02-b40b-0945d1a35d29",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2d5e2928-32ce-485c-b831-e761892f67a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9589500-f9dc-428f-8dcd-e2c7c0a2a2e8",
        "cursor": {
          "ref": "3dc313f4-f1ab-4917-a77d-feed0d64d1d6",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "77bff3c5-8312-4c6e-ab3f-e73ce9546e2c"
        },
        "item": {
          "id": "d9589500-f9dc-428f-8dcd-e2c7c0a2a2e8",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7600aaa3-7f3e-4a85-a1fb-d224b5abe53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eeca132-7201-43af-a451-7caecb9651eb",
        "cursor": {
          "ref": "10ec1eca-ecda-45dc-a061-242caa3c67d1",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5abb84f6-4d56-4f36-8607-97721741df26"
        },
        "item": {
          "id": "6eeca132-7201-43af-a451-7caecb9651eb",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e7bacdf3-0f93-4aca-86fa-7b5b2d22b879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b66fda-6784-4e37-b39d-8e520439b040",
        "cursor": {
          "ref": "07a9311e-0f2d-40e7-8178-896743499645",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "321f04d4-3ec5-4008-992c-5171f6af69a3"
        },
        "item": {
          "id": "f7b66fda-6784-4e37-b39d-8e520439b040",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7b66970f-3ac6-4177-8785-a764e2ea38fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219b81ec-db8c-41c8-abcb-a74a9e140054",
        "cursor": {
          "ref": "1f92c0d3-2e5a-4bb2-bdfd-c6ce1f91089b",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "5065ac0b-7903-44b9-b9e0-3fa6d2ee6c23"
        },
        "item": {
          "id": "219b81ec-db8c-41c8-abcb-a74a9e140054",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e0465ce6-586d-4048-8469-84e0cf4dccc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce73047b-eed8-48d2-8406-2603a589ee02",
        "cursor": {
          "ref": "8e4c6c11-b513-416f-8072-e2889717ee6a",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "0d4de4d9-b253-486f-8d41-c18a818e1c1d"
        },
        "item": {
          "id": "ce73047b-eed8-48d2-8406-2603a589ee02",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0c08b734-683d-444c-a510-cdbed7066105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882e2e5c-ebf5-42c6-afb7-024abaf8c36b",
        "cursor": {
          "ref": "846bd439-94ed-4f03-88b4-6e79c8bbbcf2",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "608a6cc7-af21-4125-9a9e-a95ae58d2e0d"
        },
        "item": {
          "id": "882e2e5c-ebf5-42c6-afb7-024abaf8c36b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "32f57139-2bb5-424b-8f99-3c11c15e9acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c10001-9f3c-48c5-87f0-c619e9234c28",
        "cursor": {
          "ref": "66de4dbf-b9c1-4f1e-ba0a-966d66f8fcb9",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "8072b2c8-f1a2-439a-a47b-20d738529173"
        },
        "item": {
          "id": "f4c10001-9f3c-48c5-87f0-c619e9234c28",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a6705d3a-5418-4616-861b-5da8918bbfae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54cc059e-32fd-43c6-82f9-eae16f772e53",
        "cursor": {
          "ref": "61bb891d-e9a5-451a-bae8-ab8a151ab3ab",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "4a2180d9-4b6c-4daf-913f-0c9a4ddc65b9"
        },
        "item": {
          "id": "54cc059e-32fd-43c6-82f9-eae16f772e53",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b8eeb816-3d0f-4f93-8753-2e69198c88f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ba0a4c-6cda-4901-9039-782ec4e12a14",
        "cursor": {
          "ref": "ed19ae51-4b91-4a79-88ed-cd4889cb124c",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "88266303-d59a-4612-9ae3-0657b7a125c6"
        },
        "item": {
          "id": "86ba0a4c-6cda-4901-9039-782ec4e12a14",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "4f8818f7-f4c7-4900-bed5-3929d119bd82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c0d6a6-9ad2-47d9-9749-bbd74f89de91",
        "cursor": {
          "ref": "15b84241-25de-4ab4-96d5-4d2e2afb4fd5",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5453628e-00ba-4260-856b-aea869df4471"
        },
        "item": {
          "id": "c6c0d6a6-9ad2-47d9-9749-bbd74f89de91",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8f796249-d21d-43a6-8808-75c6f2905252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639fd492-e4a8-4709-82d2-e3f5f93613b2",
        "cursor": {
          "ref": "e4cd4286-4550-432d-85c9-0ed1e5d9337f",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "5f9cb9c7-5e3e-4d99-a90e-efdb3270c9e9"
        },
        "item": {
          "id": "639fd492-e4a8-4709-82d2-e3f5f93613b2",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c0681d90-ec68-411c-a118-2519ec9a3663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0289cabe-1e07-4ebe-bf79-4a8dc35cf874",
        "cursor": {
          "ref": "bce610b9-cbc1-4188-84f4-868fed8a3565",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "6ab70b6f-7c60-4d88-9be7-2860bfe76702"
        },
        "item": {
          "id": "0289cabe-1e07-4ebe-bf79-4a8dc35cf874",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4f779a21-c45f-48b1-8be2-836cdf5e6b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87fb880-a0ac-41f4-ab08-494b532f7548",
        "cursor": {
          "ref": "a54604d6-4f25-4114-b17a-f7ca8a1aedc4",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d32af6b9-27ea-4eb5-a057-228c9e61b680"
        },
        "item": {
          "id": "d87fb880-a0ac-41f4-ab08-494b532f7548",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1c0457a3-3ba1-41b1-b41a-9dacfb279356",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90801d5-4c6b-4235-a965-2361c022fda1",
        "cursor": {
          "ref": "c4857910-a3a5-4f96-b905-d01f394a21a0",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0ca67699-509e-4c5a-9a9b-6eaad8793a55"
        },
        "item": {
          "id": "f90801d5-4c6b-4235-a965-2361c022fda1",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "972fc55d-528d-42c3-b49b-26b93debfbf0",
          "status": "OK",
          "code": 200,
          "responseTime": 2035,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "492b8a0f-f61c-4e01-be93-83599159666d",
        "cursor": {
          "ref": "bd8e3b6f-1cb6-44f2-bc40-4adfe456748a",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "61f8e5fd-218d-42cc-9697-abdc864b8515"
        },
        "item": {
          "id": "492b8a0f-f61c-4e01-be93-83599159666d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9d54f4a2-3afe-4de4-9785-eae8fbeb82ac",
          "status": "OK",
          "code": 200,
          "responseTime": 2826,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cee567a-3e5d-4dde-8ca3-ee42de8dbbae",
        "cursor": {
          "ref": "e03d4567-90a6-49dd-8abc-68e6347e83d8",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "3850a7a9-bb48-4f6f-9a00-03175b8c6094"
        },
        "item": {
          "id": "2cee567a-3e5d-4dde-8ca3-ee42de8dbbae",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6834746a-61b5-4db5-841a-ebf4876799a8",
          "status": "OK",
          "code": 200,
          "responseTime": 2482,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c74aa4-0a21-41e2-a71f-ce22894284d9",
        "cursor": {
          "ref": "f89d2dad-21fd-4cd1-bf1e-3308a0a6875d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8863cc9c-e780-4fbf-8e48-ab6d7cf6708a"
        },
        "item": {
          "id": "e3c74aa4-0a21-41e2-a71f-ce22894284d9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1198620e-4917-4339-adf4-b93733ff6866",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c74aa4-0a21-41e2-a71f-ce22894284d9",
        "cursor": {
          "ref": "f89d2dad-21fd-4cd1-bf1e-3308a0a6875d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8863cc9c-e780-4fbf-8e48-ab6d7cf6708a"
        },
        "item": {
          "id": "e3c74aa4-0a21-41e2-a71f-ce22894284d9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1198620e-4917-4339-adf4-b93733ff6866",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c336ab1-303c-4a7e-8d8a-db9b1bb8cebe",
        "cursor": {
          "ref": "7a459441-021c-407c-869e-cb98c81dc947",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "122c250e-1047-4de9-b60a-c8bacace2cf0"
        },
        "item": {
          "id": "9c336ab1-303c-4a7e-8d8a-db9b1bb8cebe",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7f9865a6-dd24-486c-9d8f-57cbcfad0796",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4297aa3b-82a1-4bb8-a4b0-497a97080686",
        "cursor": {
          "ref": "919e96d6-eeb3-4e16-9155-f2a2d1763a77",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5f173b3b-6ff9-48a4-9982-99b8c09b3481"
        },
        "item": {
          "id": "4297aa3b-82a1-4bb8-a4b0-497a97080686",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e6bd29c0-db6f-45d3-85e6-98eb0d0066ee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}