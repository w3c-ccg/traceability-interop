{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ca76c750-29ed-4e3a-9912-8003318df92d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "71e2537e-2b0e-4c65-8786-5eb3f3fb1ae9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f2c72c6e-51d1-438b-ae27-ff6fcab2d723",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ee866e35-e097-4a1a-b2ac-910e0059b562"
                }
              }
            ]
          },
          {
            "id": "ac76aa39-a209-47b9-b1a2-bbb284650e63",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "28d3a2a2-2bb5-4741-943b-70b5f720d9fb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a5364eaf-619e-4c18-87c3-4bf542a88f91"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "fc799262-3647-4f2d-8e1b-f7c730fa3c8b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9a2954a3-ca7e-4201-89a6-822b07be0ddb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5a36fc2a-eccf-41cd-97ef-d0ae54338fa3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc3eddc7-66f3-4f5f-a76b-84f8a027c541",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4da90456-a0fc-42e4-87bc-eebd36c32163"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cb0622cd-4863-4b8b-baf9-66cf33f25790",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c2e44dba-aa4e-4904-a173-71875e0a70a8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "783192ac-d76a-4457-b768-c239887804aa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "87ed24fe-6ff6-4426-908d-835299292fed"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "17ca0278-480d-4534-b220-0db709c5a1e5",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f319c07c-893e-4e83-a541-5f37fb597f16"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7ccf39f2-1a46-45d2-83da-cdeb63463dd2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7d894488-357d-43c5-a5a2-3ebba6ada782"
            }
          }
        ]
      },
      {
        "id": "7e03a9b2-7af3-4aec-af4e-7a0709df77f3",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "23c8f3bc-3d34-4074-92a7-32be7191ae41",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1cb71d02-f64b-4dd2-b98b-17108a23e8bb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3951dc20-7449-409c-9377-1c80a729d7e9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "092d61f3-7563-4e3b-9067-c6ede5b0c079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d5a1e981-2af2-4a75-82a3-2d53689028f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc298fe5-e21e-4126-9468-14f08a7d1689",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da731beb-4b35-4eab-8113-13d7370b02a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63462ea3-85b1-42ba-af0a-4246b98cd9c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c8d387b-fa95-4b18-9cd6-73e440dfbdf7",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b66f8f-ea86-4f88-9e6a-ed76b64cae2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be30d260-fc23-41c6-935f-bf7edc0378a2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "592cb530-74ff-410b-803b-d6909843ff6b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6b08e62c-c924-42b1-b820-649ecdafb67c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc210bfa-5c2d-45a9-bc53-002deb70ffde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96f07ec6-6bdd-493d-ba25-b26813740124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a52ed1-95ac-4d71-ba41-2b15bc34810e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92c6286f-7e22-462a-bbc8-03896de4c613"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2919fc1a-34aa-494f-93f8-f555e52449e0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "32eba2ce-c732-4893-b9df-a7d2f3b42825",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "15422114-7893-4c7f-8dca-51feb8f5b12c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "532adf86-7836-44e9-b8d0-f54916129692"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a9f831c8-10f1-4339-88c4-0f5e91e06b58",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "0039058c-b10f-48eb-a2d2-4cfeea4bcf71"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "67736bac-4791-4f32-8600-044cfd9f15a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "788c4eef-9cfb-4ed3-a664-4eae481c40df"
            }
          }
        ]
      },
      {
        "id": "2e62bf12-111d-4246-a97b-90136f5f7b33",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "17f7db7a-5a14-4015-a16a-dacf64b26d24",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5c54147a-e895-499d-9764-467a6230b2f4",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "151a5ed3-fb62-4406-bd02-c75b5749cb11",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a60d91f-e863-4d84-aea6-91bb62a95a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "761bd7e9-c887-4f43-86b3-121b0b7d1130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3f81ff-24e9-44ca-bc97-33d057d665f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f01068d4-c988-4e4d-a78f-4d71ab821483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6729fc-63bc-484c-aa35-c29b7d3f045f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf487312-c055-414e-9888-660220cb89b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb83a7a9-1e87-49c7-943d-136a91f1c876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5416a525-0f03-46b3-8fb8-9412bd056dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "469d5827-50db-4f32-8514-40a76c66eda1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9915ca26-5fbf-46d7-b83d-a46940f8708e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab70aad4-7417-4014-a5a8-3d3b8d3e5a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4a176f2-405d-41de-8b4b-c56310bbcd0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d22cce-6d0b-4453-a2a0-a8d37748ab09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae28d085-18de-4679-beda-e0e459e0bd87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c10ee5e-efd8-47bc-8d0a-f6441bb0aa4e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "412d9739-eeaf-420f-bd91-41f29478cabd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80077ea9-db23-4b97-b1c8-17aa14f1e103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4ebb36-1069-498a-8434-2ef4d80463ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc954824-7c13-4625-8945-c2c6f276925d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "890195f0-a03d-4dce-988e-380e0ef61f72",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7d4468-4e76-4350-a73b-ef7226a49dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28085a37-d244-440d-b1f9-d028007addae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a36e91ef-e836-4047-bd17-edcd1f6d260f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9389b8c7-5d1d-4195-b045-de1d349659fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d952e1-0da4-4ec1-8933-596b865d5049",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0f3d1e-62f0-42a1-a248-8dc6b14687b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ce260f6-7044-4256-b5c0-d325a33aeb09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "637f04a2-9bf3-4897-8b84-30eb9fd13d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11af903b-61c5-4198-8a15-a7742393503d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ccc051-478d-49f6-8d92-4c85f5a9e06f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff07127-9379-412f-b4b5-ee5be916a5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b24f863a-c2d3-4290-8f3e-dd1ee516764b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf788f1-1cd6-4e81-9248-e89793851879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a394ce11-c92d-4de5-9361-d10a3e9bfc1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9b5585-77f7-49a2-bfa7-0fa86917d2df",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a534886-21f2-4540-9884-78a6194f1acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09110a65-ad40-46ab-9203-5d819f78581d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7da9960-ca06-4a09-ae7a-60636968f09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "728f6ef8-2e7d-44ef-ab0f-8bed3d110a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a341ffa2-61ed-479e-9ce4-281fdbfa113f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98379731-4c6b-49bd-9494-d783ceefe7bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "919dda13-0207-45ee-a259-35abee77fab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b05edd-6af4-4b93-ab07-65b3bdb15d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4f182bf-56b8-4652-bd3a-6c779aa0b656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d3b9e57-1616-464d-bdf4-b2699ed9726e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f04b49f-7a56-4b7b-8f7f-b8b7dd8e4f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8af0f2b8-c2af-477a-983b-5e13a36507a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9416b636-c4ff-4de5-b729-2d74a45a894e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87bfdb54-ae09-4e50-ba23-789ae561579c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610fbe9f-2747-4ff3-9e31-2c7b86cc334c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a798327f-301e-4e3c-8c0a-4c2832463199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0b2c5bb-d23d-4322-be5e-4546ca80bf5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc49f4d1-f097-4852-92f7-7a9ce16f1cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7eb47134-78ca-476e-8497-e5c35c38ca77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796206b8-b794-4bf9-af10-88b190b4c00f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9cd9e44-6d5c-487f-b48e-e49498a06c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "091e8cb9-dfa1-45bc-8ba5-c17ef2c42609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f580bfa-bcb2-44ab-98ae-7384c6a2c777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "276593ce-0a28-445a-bcd3-30eb47593bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c2311c-51b2-4a01-9512-20f7715976ed",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd491a31-87e8-4392-a555-9f614815e471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86aea178-8dab-408c-96a1-f81ef8807aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "263c7219-1d33-4f73-9699-6940483e36be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57587fad-c311-4298-8e94-33d9bf82f3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbcf33cc-573a-46b2-8e88-7abab17c228e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ffa000c-a552-4d88-afab-3554cd408d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94df34fc-e223-455f-a253-acbb737597f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b9e0eb-5fc8-4302-a795-ad08d4ceff1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b21a3c46-739b-4eba-aa33-25cb197aeaa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade1109d-0991-41a2-aa6a-2a9422e37793",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b7c971-410e-4207-8540-ae5deb384cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efe10a18-86f4-4ac1-8720-9376402a5855"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fafc803a-78a8-4f25-89b3-e03fa023f3e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6978f692-8685-436e-b224-f117a4903f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef83a8f-abe6-4346-8070-cf364d2825c7",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df04730-98c2-4eb6-b3ce-cc79957e7c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "303f120a-7ec3-4f26-8f02-dcf481874154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780c7ab6-6d86-4d0e-867c-2b36e07c7966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c26a3a4c-7087-4c64-8156-78bd1ab58076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604e3c38-fe71-4e13-8949-a7d6b8cc5845",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f0c1c11-8981-4884-ac0a-f1bb58730cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "636e6f9c-7076-424a-a4db-a60291073df9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9348c0ef-4dbe-4f01-ac85-66244fe3d6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2f7bd87-ac7b-4871-bd6d-6e079f83719c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce8bcaf-0bd1-441b-9b75-c427ca3f85d6",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa0ef56b-599a-4906-b17f-3ffcad8d533f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19ddf2fb-1267-424d-9446-9644fb60da9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b861a94-f706-47a1-a325-51e05a2a269d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b562bb6b-1f51-472b-a74d-f9e426bc428c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f05cccd-01fe-47f4-b4b3-b449e8653771",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2fdeff-56d5-4171-8aad-30d0d7444cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f79b845d-77d8-42e5-bcd6-72fd4d6f781e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92a4a2b-b4b3-4199-bb66-77ecd94a9358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "554ec07c-2226-45db-a523-2e5d42b604f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf5b1b0d-a20c-4596-b3f6-7cdb5edc5d0e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec663e86-f7fd-4edb-a2a2-137eec6f54dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaa4d1c9-f605-4e1f-9fb6-bc8ccaa98d73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4497ae-ff35-4ba7-bff1-a448c7fddf09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b9c10e7-87ff-47dc-b321-a1b9e41ba035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5983fbb1-061d-4a5a-a136-424fdedbaf3f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "625f66be-6a9f-409c-b4aa-0cbd4981f609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf5398ad-6ffe-4ff9-832a-817eb3e571d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3aa332b-fd58-4f89-b2e9-eab60b8effce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e3bc163-085a-4bd9-a795-1c8e52cd7e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bedae365-e046-4125-bb72-c36090d95d9b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffee4fac-3bb8-44df-b188-2a4df79d971a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce9a3e42-9356-4c5b-a715-1890e405646d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0549287-d179-48f9-b413-95df129602f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5420df1-09f6-47d9-8139-dfd38de8c29b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8344e5ee-8a71-4bf0-9089-930606c796db",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b075249-a8bf-4474-a398-d69228d3f3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00064b7c-0026-4e79-95f8-59abb65cc04b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dec4e2b-93d4-4df1-a672-ed2c411ecf41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5a8429fa-1c16-475b-a948-1e2af8c764a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1692d409-6fec-4c11-a45a-07ba0877043a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "978923ad-6b53-4aac-890d-c73de78e1e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a69783c7-aacf-44f2-828a-d36b2a30672a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "784abe72-eb78-42f5-a1f2-3d41ca186617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7752e7a5-9cb2-47d7-a5a5-cbc020cfbe1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56186034-31a0-4a45-aaab-2460924a2220",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db6a1f1-6dc8-45d0-b392-1b6e9dcc956d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc94ba78-19e7-4895-a82a-7ec04d47d0b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc566bbf-2d96-4e44-aea2-4d76873ad819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "68bcd645-4bc2-42a2-b183-dd60edb8d7e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87531e3-794f-4fa7-af43-4cbd49433573",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d876207-7eaa-4b01-a1af-747707b26e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40e58874-d7a7-4978-9bab-aed0f2c93eaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c07064-30c8-4dc1-b46e-586348ad3ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9c14328-8daa-4da1-b9d3-6e21acd3d015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde41fdb-8df6-457b-92ea-adf16f8f392b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea25afbb-35cd-4e1a-ae44-b0d112e947ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e61c3b4-36e8-4e8d-ad52-2a39203d7546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5bf8258-bcd0-488f-99aa-5b53dad36482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e259e9d2-987d-4831-b812-b0637c912d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46855526-ca1c-4b81-86c9-ffb416a07d48",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5070795-a07b-469e-bb12-d484811835f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d4c3195-ef2b-4df7-a734-228e63666175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cccf034-e253-4655-94b0-6481000b6047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "02762ddf-3481-4570-98f2-99ce85653526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8bda98-00f8-442d-848b-20fa65061e3a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa536e41-38e3-4b4e-8983-0530568607aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "018038db-cac8-4c5d-811d-f0e472f2c69b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc69a9f-920c-409b-873b-a3601021ed23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a9e86e0-21dd-4849-a80c-570081232f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea59608-fe66-4c8e-9836-2476824c0e30",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fbfd11f-bfc8-4630-b978-d2a940de9554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1223cbf8-0487-4334-ba38-f4993f3fc3ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b99f9d8-dea6-4f67-b48b-2fd2c75cf1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9790d0e1-41c5-4f86-971c-e833db44b5cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630c2bcd-07d9-4880-917d-e007f0110be0",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92db636-48a0-406f-8a8a-f68832d7d114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e776fd9-b92e-4526-b6d2-aab7addbe5ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d9e74b4-0fcb-4dc1-9992-9cb350bfcbc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9880cda-47ea-4da6-a897-b0af7311701d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb6bf77-ea4a-41f9-bd03-49a518f3b692",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94840250-8c46-4fba-91a0-1a8dd1d9651f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64d17b5f-0437-47cc-abe9-0e397b7e81a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c15298-610e-4d53-9792-6666ea2d9e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b96a9aee-3ba8-478c-b816-1eb5d1011949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b70b433-3bc8-4dad-b702-f02058ad0455",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b23f8672-d254-4942-885f-8e40064f9e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f332faac-bcf1-4fb8-952d-30554413beba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b568dcb1-0f91-4fa5-a742-2aaca766c839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd2b6948-c057-4819-8ebd-3ebe61888e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e03750-9d55-41ba-aaf9-f5fcf099be30",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "259f4f2a-845a-4027-a0f8-5b42688f0f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cdaab8e-063d-411c-8280-8a75b6d02ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8f65ed-96dd-4a1d-8652-3de6b956a92b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9eb3f16d-39a4-4de4-9254-39bd364e5d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bccaf9bb-442f-4ba3-b994-cc90cf8701a6",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b887ec-ed02-41a4-bd04-fa20d6fdec7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a69c2678-55be-4e2b-93be-85b492941e5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5526e80-bbc7-4e62-ab38-19187a314c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "472c7632-a62f-4ebc-ae72-05c5c4206269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49392e3-3f0d-4fd6-aca8-e5cb19dfb285",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93d61ce-9e65-4f04-a7ec-39794dff5930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2694f077-2248-4468-a84c-844bf62160d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a36241a3-1483-4989-b55f-c97097c286ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3470a267-6c93-4a55-9ee0-bf6b981bfef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65923107-a44d-40dc-871d-8ea5459e3053",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4339fd7e-922d-47cd-9190-d736ebf48d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "428f113a-4091-471f-9503-75bb3f6a08ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2ab214-772e-4e4e-ae2c-1b5d5d502c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "88acf485-b44e-455e-a7d7-823d5943127e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4056aa7-257c-4f93-a0ad-3e10dba85a2e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba56ba3-c1d9-4b8c-a567-66746abbef0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c41c6a5-8001-414b-bb34-4bc447a2b535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d51544-b81d-49b0-822e-b8d2e3bfa11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc0aa0d8-56eb-45d5-8272-ef18c642096e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8538e9b-993f-4abc-8b54-6df3fc51e658",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df9ad685-53fd-4443-9515-474a4ec38787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29da8fde-a096-498e-9847-d1b7a9d99285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1281a37e-38a8-4786-a894-118b8c9908a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4dd9e41b-e37a-4d6e-9aaf-f5625fbdbcad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7776f3f-c771-4a12-b638-ad3ef8b9a9a4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6bd92bb-958a-4e8f-9318-9ae6e0e1a5f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "516fa750-1b79-4920-97da-ae45234ed7ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2769f404-0e9c-48a8-bb88-3c3e38e113f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "85e5d10b-844a-466e-abd7-db0bda1b98d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e237acd-e1d2-4b3c-b4e6-0d44ad556797",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "456dddf0-76bc-437f-94b9-c707f76ed097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8405b1ba-0116-4de7-9881-4c9bd0fa4ce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e9948a-c4f9-40b2-adac-0bcf7b990e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e0b87a3-e4d2-422c-97e3-2f44aa2fbb27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2cea131-f0d6-4338-9833-6eab7bee9ebc",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c00ac3e-798d-4e31-a104-9d73b87b44b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04f57820-6d8b-4946-bd28-47abc1a349dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01db00ca-1809-4d95-ab9f-526923dab3fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "8a920532-d29d-48d8-91d3-885679d898be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e117ae9d-7319-40cf-af4e-e5eb415be04f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "222b82a8-6ad5-465f-b83b-6c0697ed65da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd29d66f-7083-4b95-a366-bd30cc3cd3d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb03659-7111-41d1-b0a3-3385b7e8ac46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "31e343ca-24d9-495a-b610-2f526c2fcc89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cfffa41-0a19-4914-b139-b248b278c3d7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "632ecdf6-27af-4907-b9b3-43668cb9768f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee8b891a-8f0f-472e-99ea-ef757478d609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "249fbcff-3226-4d7b-8ae7-7061af25ff2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "33b03958-4908-4135-9717-75bbcd6c53b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ba47d0-399d-43d0-b1f8-e49b53155ab5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "811a3249-940b-4811-b67a-3f75bcfa5f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3ace4ca-8a9a-4eb4-9b8e-607acb87bf14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e8c440-9fd5-4459-8d0a-f941af65c2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "72231b94-8896-4cd1-befe-ecc661e78f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb1c9c07-cba1-4c31-a01b-78c24042bbfe",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1499e899-8899-44d2-b0a5-28e00506713d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8de1a19e-6aa7-46b0-8361-bc31992c5f4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5520fe-3afb-4d68-886e-6c591e41d27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9004389b-2dee-4c49-a316-21c79db5d10a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56c331b-93c5-44e9-9565-69eaaf858630",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "082b172d-0cd8-42d7-a182-2af896217890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f32ce06f-19ea-408d-a57d-cb853c9d5efd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93882dc-df59-4e6a-a0c2-2457cd773cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f5cc998-5255-4ea7-b183-0f6ac377161b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c26c6d6b-fabb-4753-8e2f-497805c38d0a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc81bf45-d62c-4509-9817-d26eba0814a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36036bb1-95cf-486a-bc07-62b26d2fb6e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d2c620e-9734-4668-8be5-e973148dfc8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d410e2e-f506-49ba-b020-63c145fa9bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1607a0c1-a020-45a3-8276-53d02fe99333",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65aa5a3-3fcc-4174-8f34-9cb58df66a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b76879c-646f-4584-af62-0bce559e1484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa31491-893d-40bf-80b3-07a7afeb9afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ecd2b66-4260-4865-9080-f8604a74af30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac080526-bb02-4962-840d-d5eabe6661c3",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef677a95-5c29-42e9-9326-674fc15f75ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "210ee2e8-4126-44c5-b935-0a575191d530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5ecc43-d02c-4835-baff-f299126c3c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9fd6c2b2-edce-4202-aebe-bc6dabf7f773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635fc1b3-928d-42fd-b432-5cfd24c35430",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "095f8e53-f30f-496e-9cd0-e63b82b7860d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0075e532-460e-45bd-9df4-1e109bb4f15f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0b5c9b-d7e5-48cf-a393-5868630a2809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "77531023-c912-401a-b341-dc3032d110da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba7fea3-588e-4696-95d7-5a5d65a6d59a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f8e253-9443-4439-9a7b-3833d4f3b585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25faf582-abf6-4866-9d0f-bd2847dede7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e8c6b5-8073-4796-91a0-165980591f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "32af3b71-7d0e-4cd7-a7ea-3a999050eaf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7975e47f-8c6f-4466-8e2f-a2e3fcd089d4",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f1af4f-792c-4d8b-80bc-a33fdadc099f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2f08301-912d-4c91-a178-e67277635a78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd83f10-9526-413c-8405-f7aaa1e7efb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "980ddecb-f1ad-4be7-8797-4ac154ab8bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5241442b-2c3d-4eda-b33c-6e427805d78a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "528db7e6-2330-4e83-8e9f-339f4a115b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "863dbd21-740c-44f9-8473-b651e8c15afe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c09292-8d16-4fb5-b700-e1f419bce317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45bdc0c0-b636-41d4-916b-d547d49ef120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5454033-8408-4d24-a518-6436c556c9cc",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13501486-abd5-456c-b761-7c1558449a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ad00a4f-e39e-45d9-bec2-4bbabf64c4b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14748f38-083d-49c9-8524-dce8f233b49f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbb44d28-a8c4-4350-98ae-b0c51271269d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1c8614-412a-4daa-a8e0-021e416fe0d4",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a794df-c66a-4384-b41b-7d20e0622667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "471bb915-e41e-4d1d-b571-54caf914de7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7df663-e8a6-48c9-9f0c-194fa5902f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "069c7462-07cd-4ce9-bf85-93226624b2f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93dd91a2-b623-4f1d-bc63-55abc5374710",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ca845e-5e1e-4a65-8288-4c85a93dd7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a169c4d3-e99c-490a-bcbc-84d96962cc59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e82cce-fdf4-4817-8d85-c232712f7c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2540e326-952a-4ea9-a9d3-16f2b1dccfad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a00732-7f50-4d95-860f-3c62c1dc581c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "617846a9-5b61-4495-b1e2-b1bed7c39156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82e3f2ba-4d9f-4bbb-8d05-3db9229e91cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fccb33a3-213b-4269-b9cb-9276bf21142c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c434dfe-9f3a-47cb-b056-538ec06462a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59546864-c234-477f-a7cc-dfe2fffc0239",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c792f5-6aaa-4739-bd3f-9893483ef5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adc59924-4f1a-4b80-9e6d-d4b9ae8a6e29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b215aab-575d-45e9-abdc-82390adda3fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "91a2ebd0-3b82-4f47-a15c-eae3c52f8370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03dbce87-fdf9-4028-b803-3dd5aca41d9a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a4a283-429a-4259-a7c9-641c5225e8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e7d619c-1511-42b2-95d5-cfdd9713d1be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27fa5423-7b79-4d6c-b90d-4afbfcc1f1f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3b8d8f7-47f2-436d-85a7-a0b3dce522fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e78bbe6-c07d-46d8-8b5d-046d98cb68a6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd089c38-faed-4275-b868-c1c6fab90db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97a64c9e-aa51-41d3-90f7-ca8bbdc970db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a82a0e-0c15-461b-a759-1a5d7c342eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6b649a3-4d49-4912-aaa1-e01dd59be236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f581a6-1a39-4298-93b5-2f459b732fab",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a814e5f-1fc7-4295-b488-637a042b73da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf942740-906e-4e04-8d23-60a1796c6572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f6fee8-9058-4963-a7e2-ed4de57daa99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e26c3c1-caac-4f75-bf17-447e56767e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109844f7-09e5-4179-9117-08270bc882f5",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c7d51e-ea6c-4214-8598-7a406e59669d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c975f6cb-6717-4bcf-bcc5-b02783fc196a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6422401-da51-4438-a8c1-0f4057e91d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "30ff54b7-19bb-400c-bece-2a6d655da7b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6800a6f9-d7dd-41f2-a2cd-311361fa1b23",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ff54b6-e0be-4f81-bdc3-a5804d777814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09e6230e-3f57-4379-a9b3-2eca62b7a4b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1838891c-9301-4b15-948d-93fd50cb116c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb88b509-0b07-487b-8c6f-83e1f1eb1e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce25eb43-9c8f-4796-b59f-c239bfa06b6e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81018a78-949e-4ea2-aca6-7953f1ff7f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da442ebd-d2f6-4cac-814d-173c831f15f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0090ca1-4ce9-44f3-a9fe-636be2b8a437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c6c2f36-178c-4fbd-8ed7-f89d1e8091b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0261fff0-7c6e-4550-b5ab-f8d5b206b24f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4f40a1-e1fb-4773-8764-130194fc6147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace85fe2-d324-4b9c-a97a-b32d74a3bab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a5995a-d2b7-4bbf-bdff-4955dd91f143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "de4240cf-e261-44e9-9e9b-5df6ec3c4f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2bb9c76-45a1-4b1a-8e2c-c3b6b819bb0c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18b2573-e51b-4c12-bdfc-5c7f6ac4dfda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef8bdde1-0b9a-4506-8ef7-d96a3f18094d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3c4cbe-4970-44c6-9c75-f6a96f6ad7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9208b7ee-7714-464c-9884-3b01443b3a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94d3651-dd9e-4eb9-a2b0-fab9fa5caf96",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd321345-61e8-413b-853b-d14d6366cf38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65220a39-e476-4437-a17a-c069d3c27579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9612959c-9307-4258-aaea-bcd8b4be7623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "29c09ea7-06b9-475b-8528-fa1a40dab0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75393754-f18c-444d-a621-fe46e5894fdf",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5315b2f3-19e8-4e70-a364-905160172244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb01de57-a3db-4593-b6f5-0c990f39025f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9317d220-4fc8-4759-b386-b39c5e506952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "76205c1f-8ebe-487a-bb24-efcab4987c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04c4c39-17a5-4f0b-a018-2951c898fcd1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "137cfba5-a72b-4089-82ef-f841a8d61f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ec8278d-945b-443e-b157-78a2f13bf16c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3579fcfc-6eaf-490f-885a-b2620ec9c6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d2b37a1-b727-411c-9d88-9c86ca2b130d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4845528c-f8b9-44f7-a066-66364df2bdf0",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30ada6c-c538-49e3-bb59-3feb21924e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d3b87c8-dfb7-40e1-b641-02b6d8df1e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8779a73d-8adf-48d8-be4f-3ec2d4248436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c42fe7b8-a775-443f-9c14-dc423c87b7a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17beeb78-582e-4a26-87d3-bb1c8437436a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac2c498-e663-46f1-abf0-94f060dc206a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0a993e4-0f73-4de9-825b-73c7a4420830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902c72b2-d473-4662-933f-a9fe2c83019d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "33af22b6-8fa9-4080-931f-91e850771592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49fd3de9-058a-48e5-afa2-b197a77340a2",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11906cfa-3c2c-47f5-bc66-7160bf8de4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06e86382-0b1c-4acb-906f-7e5ce31f7bca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f534e706-36d4-4372-88c8-78cb604e61b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "421be637-2b64-4856-9784-ed1358dab814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38fe7e8-8e0e-447b-aae0-d10364296c43",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ac03c4-3a5b-42f8-baf1-ad3f6e0465bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cda1baa-8ecc-4337-914c-908b7aa60519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe92d5ff-9723-449e-a938-2caca5823757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c978eddc-2054-413d-b51d-489a6f534ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc374c2-4ee7-4ec4-9fe5-a51b07385f38",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "400cb17e-a2e3-4343-9bdf-17dc81038bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a15c6bd-9098-4e4a-8b2d-db6542462918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59bd7334-89b6-4c2f-92ec-cb157df9f336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab1ebb15-012c-4153-a548-089ea54cfa4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ad15b1-0442-4927-8e1e-52e44df21ca7",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "639d1769-bd05-40bb-a42f-37e8bca5a485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7490feb-4296-4ea7-add6-da0c2315d9e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00ecd2f-45cc-4d56-9706-cef31343d8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "86f2abba-2afd-4110-94d9-643b17a042f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ffd9fd-93fd-4c46-abcc-e8a259348c6e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f2a55d-88b7-4fb6-a03c-cc04be3d2717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cca40b19-521b-4abf-b2d3-0812e1670f90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6793d0c0-2e35-4485-93c2-e581bdda9310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c37cb3bd-8287-474c-b9dc-f1627f9da50a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2063bb6e-b693-4dc4-ac76-2aa6526b9030",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3435ca90-fd4f-40ed-9727-edf80e064561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daef880c-3056-43f1-8065-c791e9d96870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d3120f-343a-4f66-8f84-11c03c482092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "af1681e1-8a41-4561-ba0e-5701dd199499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc6a0f9-56b9-4e9a-b492-35f65fed8ada",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce5c890-97b8-4f57-a80d-68e2c33802f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a36ea75-f4a9-4970-ab5d-05d65e1ff41b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b55159-3aab-42b2-bdd7-c10f9c2f8921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ae33ac3-09a9-4a4b-924e-cb93e4956f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef16f41-217c-44f7-8042-baf21c312c79",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9d917b-9604-4734-a5b7-1e24414ea9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ebec8ee-5e62-415a-ba32-92e3e6a74fdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a65fa6-4704-4dab-9275-7868a3a07572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2cfdc424-2679-4d4f-9bca-dfe7f1ecf4e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd03221c-cb4a-4419-96f9-d88559c7e832",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d5a59b-85a5-44ae-aafa-dd5f65e28e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c56892b-c772-4719-be3f-71d861340596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caaf3a72-3fb1-48f8-9913-ab4ece7ea5c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f69ba39a-6bf8-40b4-ace1-872045c3e701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea078d17-fd55-45c2-b418-13cf3cc65678",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29220c5d-6db6-4e8b-9f13-e16908c56b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edc25710-44d4-4fed-9346-05bbe4faaf0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1f995b-9a42-4381-9a25-2e0822aaffa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cd43465-6005-48a8-90f6-1f0c87a57e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08af24e9-359c-4678-99de-68728a182cfa",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c497b2d8-6e1d-48f8-975d-4c976cae2ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "553bcd81-5b07-4c04-bb79-5fd85727e4a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d55505-0657-43ba-9da4-9a3aa7e8be4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb687c08-a704-44f7-bb23-271f1fe691e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a59f778-268c-43eb-a28d-66b9506763a6",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3df61d-8fed-4316-ae29-b8f07f16402a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bf75f08-cfd8-410d-8c04-9dcd68b46bf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c49474-b2e5-4cad-8c34-6a2f1c53215a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f6eed17-a40d-4042-9a46-9b222d356aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69fffb9c-b710-4fca-9c38-fba8a393920e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a2ffa9-d77e-4582-838f-c29aad8101e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3db80e3d-69a1-4637-8173-732725d07ab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c73618-0c70-465b-a35d-a1f96fbff3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9b1412d4-0118-41d8-bea5-7a634cc8107d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e4683d-a710-43e0-866a-c82274cd247d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a68365-ac98-4301-aa7e-f024d5489632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "030a1330-1dc9-4ddb-a2c9-c19f3bc3bf74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489a8254-606f-4eb5-8e43-a96c5240bbe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "efd52efe-f652-4ef0-b7ed-9b18af12e9eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77281c59-416e-4863-8b52-dca9526c6123",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6a97ab-c05f-4331-8f22-18481dd60567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1919ed29-5fa4-4659-9ef0-644c13861860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c7f2d5-cea5-4ede-a296-efa541a2d41c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "52d72182-082e-487c-b120-a404b3823298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d6bcb28-3f7b-43a1-8a73-1940c27db604",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95445962-13cf-48c2-8119-059c29c7a3ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51eb60e5-08e9-488a-a7c3-1f967225bdd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc0adad-8cce-4517-a9eb-0813fbd919b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b472a115-fd30-406b-b3ec-8430b1411a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56129f4-af13-468e-8ba5-ba527d8f36b9",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da69b056-f1b3-472d-9083-9b324b01a719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7d1c92b-aba7-466e-a432-471d008825e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe9b903-9ea1-482b-ba3a-1bf9a0c200dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd46bb03-f072-4868-bffd-b59a7d0bf423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f08d5693-935a-4fb9-aed8-764f26bb5025",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd76eea2-2cb8-4fa6-ad7d-1bdd15aeb090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4463088-7206-4f29-b011-faf896c66618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46954a4-d8c1-4a51-8f0c-23979ed60ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d2707ed-3344-49b5-8016-5ee1e7f343b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb9392bd-cc16-438b-93df-7eff7943a303",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e22b0f6c-7ffa-45bd-a137-636b4614e7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fc96150-0398-4d34-9351-8ced2c6d4710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27996af-9dbe-4aae-81cd-850ac9395986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2f4d603-0fc5-4de9-b466-02062d49103c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26210f01-e0ce-464e-8f4e-862ac2a841cf",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36add898-1d8c-4894-a7b0-80ef016dead2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "eacce334-19f6-4f13-a4a2-e8afe9a4a782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a40d59cc-c06b-409c-8f2c-188176cc433d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "79584f80-f711-43a4-931c-c41a5b43a1d8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9c636ba9-5593-4817-91e5-2bc9619ab751",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "51b6e4d8-f522-4785-baf8-cb586489ab3c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1a11d4-5952-4659-9d25-4f51f3153f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "24e93fdf-9b85-423c-b5bb-094922b2d668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68db1b73-da06-446e-bc10-6e1986efa6c3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ff8aa30-ede2-45a8-9762-bc6bb60189b2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ec3e9b1-f7e1-46da-9e37-a65556fe76d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b64b4d36-132d-49ce-a0d8-6a6036e633ad"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb9869c1-59c4-4433-a452-716963695fda",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f0bfc048-2565-49fa-899f-01d7776a3c94"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5b3770a7-3c6b-4c4a-96f3-7cc37500c3ca",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "774d50c3-c9b3-46ff-8c70-e32f05392384"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "10309d55-ca25-4fb5-b503-bab675322057",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e556f31f-c3bf-4d66-bcf8-1eef1653184f"
                }
              }
            ]
          },
          {
            "id": "4ad47700-178d-4f73-9250-94ac4552a662",
            "name": "Positive Testing",
            "item": [
              {
                "id": "27952603-e2f8-4d94-ab70-990af7a0cbef",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "555bd204-be8f-4bdf-9d14-b3afc3854a71",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2a8282ee-dfc2-4397-8852-915e042c5cf6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28192f81-5942-49d5-82a3-f9b17441f1d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8cb0ff97-1b88-4db0-ba40-a1e451998833"
                    }
                  }
                ]
              },
              {
                "id": "639c21b0-aace-49a8-9fac-2d01936216ab",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c7e7575-ee74-4cf3-80f8-122463b1090b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bf68b208-9caa-4ca3-bdb0-ec6c268d10e9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e1fe272-53cf-4f1c-a3cb-7968b189581b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a72874b5-2e67-4190-bafd-5753ee2e17b0"
                    }
                  }
                ]
              },
              {
                "id": "dfa3558b-59b2-4600-8baa-3a8da8985459",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c1be7ea-a0a9-4b2a-aea8-e9728de0ecd1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c5870ae9-e042-4b86-b328-1c74e0b1c4cf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "317a7161-b29c-417c-a6c7-335d8e0d256b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "61dbae4c-9a6f-47ef-aa38-761427bf7ea7"
                    }
                  }
                ]
              },
              {
                "id": "807fefdd-a867-4cd9-a2df-1274fff0763f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "71b0ec2a-f023-46bc-aef2-f79c5743386d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dca744a7-d5dc-4f6b-b49a-55c3882062c1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03bcea2d-9381-46d6-bc02-cd867d1f3311",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ee7b2e91-dbde-40e3-896b-65eb23ac2b7d"
                    }
                  }
                ]
              },
              {
                "id": "803b3576-cfe8-4789-a183-bd10ad5d84fc",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c0fa432-e8b3-4edc-ac16-037d56841dd3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ad288e71-448f-4135-b44d-9913fb9b695f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9e0694c-56e2-47cd-8200-27124911348e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9a9a33af-1175-4383-a059-a9848d7a37c8"
                    }
                  }
                ]
              },
              {
                "id": "74ac390b-5d46-4ca0-8c75-7b489c1bc891",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "114ba1fb-ed0e-48fc-b1a3-c32a7f0cf183",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3801f052-24ca-474a-8ee6-9a72bd109d25"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61b5ff44-d79e-4e37-b059-2012e284e396",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c05382ef-1408-414d-b18d-ce1347a2147b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "abac76ce-5e31-4ac5-83cf-6f410d8c9be0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "94c14525-9509-4693-955a-11d66fb5777e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "61d97d12-2be8-4d44-97c0-d3cc63028a76",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8ee00a29-ecb2-43e1-9d95-aa3125d19f27"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8a06f39e-7bd7-4d16-8753-b356348a0214",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "499640d4-21b0-48aa-9f22-d714b27b53b7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "978e2a0d-5d4d-4b49-973e-7912491b3882",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "690b596b-d944-4e28-83c1-6c20ef3be9b2"
            }
          }
        ]
      },
      {
        "id": "32d01f43-2a55-4e8f-bbfd-225c7940165a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7b81a287-fe07-4e0e-9299-eee38c990bcd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f253c530-e26d-4009-8723-3a4eadf8f444",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "479758db-9f8e-4b07-9bd4-39a62203d641",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "271ee901-1779-4cb3-9b06-e747290bd8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4707c230-486a-4f20-8afd-048e8f241441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8bb0602-0d08-4ce1-bcf2-65d95405ed10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3b5e5e4-f12c-4229-9679-9ad5fd2ded85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f14a895f-24b4-4af8-b0d7-1d3b4fae15b2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2371a3c-6ee2-4fb5-9554-d42040bc5bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9c27713-4294-499c-970e-143054002d52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9c33dc-99a9-47b9-af19-525dfc30ad50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d66ad383-8aa3-4217-a9a5-fe534e863e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb06f49f-7a7a-41c2-aeb3-7f70d63bc0c7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf9a06c-666b-4dfc-a4d0-4ee3afeccaba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "931989e5-b60e-461b-80c1-75b21da63f2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "076bbb32-b290-45a0-b106-ac64764692d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "82f49dd8-e8de-4551-b3bc-9dc86dbdda8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d102e44e-f22d-4156-9581-fc688375f298",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c247828f-bb82-4b61-aced-7d94f73f8828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d53c2a02-812a-4d50-938d-e5525ec8895c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66420c73-e003-4497-8307-2ad7f6b4295f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f577b5b-5943-4422-83dc-bafd3ed48889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e09e4f8-f323-4360-8f3d-82bd0a8cc587",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec4ed26-0619-4984-9c85-c1d537311d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9f9a2be-8d9d-42e5-8b0e-959dbf4eac28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ba14b5-83ce-434f-86e3-d97e88f816c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f53cef47-29c4-45d1-8a5a-21631e23fcf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28dd1167-f1c8-4173-90d9-b6019928502e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20454c06-3b1d-4bfa-baab-5223ac662872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bb6c3d4-281f-4444-ab99-b9480e9db896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e622f93b-17d5-4f2a-8f28-c3499faf0a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a6c4ffe-8cd8-4edb-b6ca-89f945820116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92098ba6-59b7-4848-ae86-ff6035b5be43",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a1ccc8-671b-416b-a32d-7bb636005587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f0c258d-5637-4a9b-bc1e-c2523b63d15a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8379e3d0-9374-48b9-84be-ed925888bb50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6d4dabd-b0ec-4efe-9996-1bbc4f83bc7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfbd900c-a56b-4129-ab31-7091c71581ac",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f584b6-7a7f-414b-848d-aad4cc30dd4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f137eaa5-9443-46ca-9845-4f2b13a1ba14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d846cbc-0ec3-44ef-bc4c-66906e3e8d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb4b0c0c-00b5-4598-b1f9-bd9ec8ab7008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86809e94-a889-4b43-9b76-c6015321bad7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57740a4c-db6d-432f-8afa-f9ccf495ab0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95979520-d006-4357-be89-67e286f0eef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f5fc67-0379-407f-90b1-c3453ffd8eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "997def59-b4a7-4a9e-b14b-4301801d5db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf20583-1be0-4262-9369-4e21eec24847",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ed7a85-889b-45b5-9669-753b634e1b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f75ffec2-be1c-4411-8ba5-744e68e1b249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3157b88d-0d29-4eed-adf1-3a8926d248a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "612ba0a1-3221-493b-850c-e968b2a27b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb98e19-2694-41f2-af18-ea8af1b7082e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d5fd71a-cf05-40e9-a04f-76b073812bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae4d6cc4-149f-4179-a41f-3c3bd562c2e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1597af61-fb57-45f5-8405-e8bd9fc9b1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8c073b3d-9a52-48d7-b5b9-8db533d2be9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ec7884-5668-439b-b43b-b3a74e5b01a5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5bd348-bb49-46e6-87e2-3947551bd516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acb1bf9d-321b-4188-bed3-956004e196f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335c7d99-48cc-44b6-a703-14e37302c361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d9108981-fb4b-4125-8128-b2130b483e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217adb62-a0bd-455d-ab6c-e5a0990bdaca",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d642ed-ef18-48bc-818e-0699178aedfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6a9d631-90cb-4a54-b82a-9e2e3fbf18e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d46144f2-2648-490b-922e-d500ff8d313a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "53996204-1819-4c0c-bae3-115e5a6a1a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e4e7a5-c0c3-4371-9be1-32e530283a28",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e27d5d6-3589-44fc-bc4e-d0ae54147c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93a149e1-5f16-4854-b084-f3c1fd538161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576f9636-67d3-4218-9d7a-86cc9984f3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "37cdfe1f-2e54-43e5-b833-9ec686ebe892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abce7697-6388-4a0f-af8d-dab22782176f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dcebbcc-b6dd-47d1-9433-7aeb23a3ee70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ee8f813-34cd-4c03-97d5-69f70a931370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfafc04a-396e-4bad-acc2-ec7f3e145d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1bbc6f2-8a88-45b8-bb44-a108396de3e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e94329-afb4-40ec-9613-4d244b55d0ff",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffad2cea-4179-4f1c-86d4-acc2a80a90ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66e25336-ada6-4702-abad-413b57fa6993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2724728-1cda-4f9c-ab88-925ebd66af95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c37a089a-b305-4eff-bb90-e9de7c156f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f1d0c6-d4f8-45c5-aaa4-4554c0f21fc5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39874f00-8a92-4777-931d-853d5baaa884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4982d6d7-a284-465d-9edc-0a5c1ca060d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623c4112-8a62-4579-8c66-7b3b84d644cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b36a9f89-2800-479a-a86c-d20fcb6f654d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d0222aa-382b-48e4-a7cf-ef02d2e0b57f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7975bd9e-68ac-4c00-8c3e-fc543a129678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0645a68-235d-4798-870f-f1fd030bb476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "493fa897-58a7-4183-b8b5-c2c396022fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a8614f0-1ba0-4c1d-ba7b-a3494078da54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c320af5f-c393-4009-9998-7dece430f62c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69de9f42-7ab9-4e18-afcc-924d76fc19f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c13ef4ea-09ce-4b57-9cef-db5bffb4c9f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d19c25-4dca-4874-bfe6-8a48d3897bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be725aa8-97d1-4963-ad44-5ac60936e63d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3ca67b-953b-40ee-9c08-da985d32c99c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce50370-8877-4e94-8ace-30b0d8d6715f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dace06c-7b5f-4e04-abdf-a33305b062eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "949b0bba-7d98-40bf-9049-fbc3cfcbc1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94b289a9-684d-45c7-81c4-ca0c3cd3cc89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea1e1ce-ba88-4cc3-a3e4-a7b83096987e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "692ecaca-352b-41db-a1e4-2cbe0e241e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e72cf25f-2a90-459e-97b3-26e91c9acf59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "076453e2-b094-4aff-a87f-9b7db0ae633e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "177cb776-ef92-44a8-9514-0ea8a5c62a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f366f3-6f68-46da-8386-f4a2b0bb54c5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c5354a-abf3-44da-8452-184293f47ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78ee11d0-02ef-45c0-8686-98c94ebb4db8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7975b983-6d29-49ee-93f2-1d27a0f001ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fd21596-33b3-4aa5-aa29-78b5b425a4f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27916490-5404-42e4-a9a8-4a18d0d66a14",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d842ccf-c632-41c4-ba32-6373953f8caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e261357-e468-410e-be14-169882f707a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff20d7a-fca5-4699-8985-75ee5e74943f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4989c977-1205-4806-8080-f8c0be5d7ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d2e14d-e4d6-4906-a3ea-567c5657729d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc6fdc8-6062-4426-b28a-82c110dbb508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a1aad76-0854-424e-9c8d-e8eaa19d3997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a54c26a-5bdf-4335-ad46-c8c95b6ef23b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f18cea8-5251-4395-abbe-e6275160e8d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256265a8-76b6-4ed8-9388-d2c962c5e1c3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6923f3-4851-4b7e-bd48-efd232111ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e93abcbb-66ee-4421-87bd-827dcb3ea75a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c287858-0e52-4acc-9a31-459c5a65409a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fdadf82-1abd-494e-8675-008ea0bd45ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6e9f54-7dac-4da3-958a-1e8b0fde18b5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74db9266-3424-4a1f-a9d4-d0bf338d3622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aefbc02-9a63-4866-bdc2-156f71d35142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4aa0ee7-2ed9-41e3-b101-e2da728876b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ca07631-510c-4be2-b7cc-909c6e7415ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7c61fa-7169-41a8-8f3c-c4aa1defacf8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf16382-daf2-4d2b-88c7-72bdf8d0d2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f9a19c0-aae4-40db-8998-b6cacd7990ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a05d16-dd9f-4f3e-a77c-7e8ca555a9f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd101ca0-405c-4580-b2c0-c51df6dc412c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "969dd4e6-5e6c-4b82-8c07-6caa0dcacb63",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "971f44a6-f04e-407f-a4a8-858b09e47cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "955d957e-1174-4758-8d6b-3692e506ef2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e04029-3cb6-4495-96ab-093540b04ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55eba01d-7709-47f4-a6ab-d0671febefce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d3f396-035d-40f5-a725-0c78074687f6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30cd740e-2f2f-4338-aba2-e45cbf618dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f0f4e82-d406-4342-96a4-ffe2f7e66c6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f41a2f-f50c-4566-964a-2f2d94190c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b648f758-641d-4c85-97d6-19d40b1d8867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "210a6c4a-e5ec-4157-b3e1-0ee677cf0192",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71fcff2-6bc3-45e3-9b5f-8420f1eb143b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e12000bf-be9e-42bb-b824-fe8cb5bff34d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de43be5-2ec7-4d1c-ad07-c6ccce4ae5d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d3ab73d-0a46-40d0-9341-727b44b7ea21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cb09457-06ae-4812-87ab-6d4d91f0b5b3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b707f48-3e66-4a1c-951c-228acd761aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cad42094-766a-44ee-9dea-c13b15509bec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425c9868-12fb-417f-beed-8a78cef630fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ffcab5b-80c8-483c-ad65-3e027b367031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61609522-15bc-49ed-82f3-2e37c8b58bef",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1777dd87-452b-44a0-9479-6df6e44b5aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "401ba42a-ddd1-4e0b-bd05-07c877278faa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f790581b-4085-43be-8b5c-ee97adc95e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a38f6d37-a3d7-4ab8-aa8c-48a5eea33a64"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "81bfe87f-7242-4710-abae-ac866dc53dab",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ef05f0fc-d495-47e9-b8b8-f8820cb91809",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69b1121-f27b-4f1a-a29a-56ae27d24b1a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6355e700-d05d-4b75-9a04-f0a6293fa514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c658d3-269b-4406-8be2-e9f743492ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ec32a01-d597-4656-bec3-e38030be44bf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf9aa210-4184-4670-bad6-1ba048ec3a29",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c3810a6-a57b-4604-9a2c-3acb0c71476d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8fe0c711-5d2b-4a68-83a5-6b4dbf7698ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3dc43aee-8d83-4556-bac4-e65ec96cc4cc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "07b879c5-e6bb-43f0-a28d-0be32228feb0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "89f24283-f3f9-491f-bfec-52621eedca41"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a696040e-5c5b-478a-9286-ba356fd8c9ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b9908090-e01d-4804-b0b7-6f0a5778f83b"
            }
          }
        ]
      },
      {
        "id": "738735e7-4035-4e2d-9ccd-c5debb6f4f53",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "47e34951-9da5-4afe-93ca-4e08271f67b0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "74d99e22-d62f-4f8d-89fd-2bf34b5a9e08",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0527ce8b-60f2-465b-91a8-91e17767e4a7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00da4474-fef6-40fa-85de-c48c1d19265f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47853f3a-b3df-4fc5-8450-1d3a041f2920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f32a73-de4b-446d-9006-a54d7a278451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0aa5afaf-4bfa-4bcb-8e18-8c82c72d226c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d93a404-4323-4165-94fc-38e2c17bdf96",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea9e587c-7a3b-421b-a4f7-8c3af3e0606a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e65c812-588c-463d-9adf-b8eefbc3a958"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c62fb5a-7fa1-40d4-aba4-5a2e4aefa08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "54aff83d-a292-4177-96f9-29d7e0c1f1d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e01b820-b26d-478b-85df-d340366a4e10",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a540f82-44f3-49c6-85d0-3f44b56ecca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "591571b9-594f-47ac-8cba-befd68303c3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e40dc70-dcd1-44c6-ae83-f8d7d61662af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e56b1534-c8fc-4512-9419-8f1e27cae721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17705979-d911-4eba-9ab9-4c942e6daed9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19588059-e0be-42ce-9cd6-05af649a63f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "750f37f4-bbf3-4a95-8c47-3152dac516dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be16173a-6156-4611-87a3-ae8e613485fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f0c3a54-6c01-49f8-9219-b4de8c09117b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772034a7-19ca-4069-ad89-805731c55d61",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df8cde20-9a3a-4873-b4ed-1ccc6a81527a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58de61ec-5f35-4950-aaa7-bcef9c97a4f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b50e38c-247a-420c-b583-768603fbd707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5430663b-45da-4e95-9818-c590f462b15d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8972055e-b12b-44a7-b0c7-1afadeb87265",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9b649d-ddea-46f0-a231-b396cda27bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aa79d46-b160-4437-af58-c4d7373994ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c686f42a-b077-49f8-87bb-d1c47a058aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "395eb3e2-d8f2-468f-8a09-c959bbd9c51f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5b4ada-1e34-46c6-9356-718b5a9388e8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5607640-5d88-491c-8269-6d484e3dc753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "988a5375-3713-49bf-a616-2ba6e27e5a7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33f6991-8f98-49e0-bc3a-841724e939a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e77bf55-e692-4eae-82f1-886a3ae8313b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe136e26-8b1b-4218-a598-abd80dfd60b6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9807ff9-620e-4220-93bc-1a64c3f6636e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42ca1389-0a54-4833-8084-ea0095430fb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5271c4c-3ce7-4a33-aebe-37180e4d3bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8c1803c-db35-4953-b8e7-1f916d862fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a87d6d1-db95-4d0c-bf4f-6268036756fc",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b50bb89e-f52d-4628-af4b-ef6fdfe15abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "586ce43c-87e0-4679-be81-382dfd6f3b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4174551d-e40d-4104-b6cb-6310fca4a18e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4eed9e3c-1598-43a7-8283-28de9e5e381d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50add0d3-d0ce-4c24-8c7b-7b490c433ed1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16fbfdf-fe80-47e8-9ae1-adcc4362003b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6820b2cb-3eb3-423b-b896-7f91222f77dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d695e102-0330-4280-bd26-f02dcab80238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2d4507a-5ebf-47c4-85fa-e2116517290e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d11eb2b-befa-4ec1-968f-1d10f4eb0225",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec51991-2182-47ca-8835-037d6e28f9ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf5c737-70fa-45cc-b316-a24de06ccc09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0287bcbb-dc09-44bd-b52d-9ce46c7b24c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3a73d335-ca25-4fd3-9bd1-c2abd92f7cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c51836-1955-446b-8ddc-343379749de7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b15c2cc-1239-4054-ad2c-0baf4d31a183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa6fca34-149a-4c9e-a602-10c74ff66c0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e8e498-8db1-4fbf-a030-0a96739f86a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "841aeef1-0051-4c62-b8ac-9bc4bfca273e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "996e37e5-0629-491e-be50-e70a1b49ba2e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04ff87c-777b-4f34-87fd-bee9820f8c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b6fc252-be80-486d-857b-36fe0a37c154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dcd5ede-71b0-4a2b-9294-2dc755c8c259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "590c6d60-a5bc-4805-8f4f-fb7a1618e920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb29e29-67d3-4229-96ec-b8e3d0c9f793",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a3d600-117a-42d9-adb6-bd99af779b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52c1e5f7-a887-4cd8-8253-c45272e74e33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec1527d-2120-4811-9ffc-78c140ec0f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1125c64a-6260-4ecf-b041-529e2f59aa3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac883d07-97f0-41b4-9985-ef2798adad1d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b31dde-d67c-4394-a3f8-c8eaf14ed890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "108d136d-afd3-4e97-930e-7d5a38153d53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb7759f-7bf2-4aaa-9ca7-f88a2099ca49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f194bee-3db7-4b5b-bcd5-0559f2afc52a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "948e653b-e436-41d7-8b52-eedb6ae16aaa",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d2a01e-e8c2-4cb0-a3f4-7683615773ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39096f8f-ffab-4798-aab5-543c5a92d8b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0663a6af-cf5d-44c2-802c-0efdd8710a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8626dc5f-32bf-4679-b81d-68f67353b84e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c716c5a-95ed-4eb2-b872-fc00d69cd7f6",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01bfbc73-f063-40ac-b24e-cf232ab7af0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f1fa920-0f39-4adc-88d9-75bf1c121d1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b7785e-ab23-4e54-9ef3-f44e057e7926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "26b957fb-c479-4f8d-ae8d-97557798fdaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b025378c-7cad-496d-b6a0-c6b27431a42e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf41b86-b966-48e5-ad26-057a9bbe92b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f1906bd-6e67-405a-ba62-832d9801693d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf576a5-f000-4c7f-80cd-19a743f06b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdf51000-9f74-4354-8829-a335e1973bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc32efd5-5e89-4424-a807-a762f6828054",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce70409-53e0-4c98-9c6d-aab631c25dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ab63215-7c49-4cf2-8b12-1804ad546ddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f47d0bf5-065b-460c-b661-155eb9d17297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "212665a2-5f91-4467-8152-a889387190cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "560dff08-0354-49d7-a983-5b526a96f5f9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d2f60f-2979-44e5-9e52-b56fd7dd8101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da0ae79-a028-4a56-b721-c27ede5c1eda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96dab4b-7722-4ad1-bb78-5da64a04bba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe453e8c-3869-4d0e-a55d-0d5fac7c760e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8480f956-6a88-4706-b553-dd54992741fc",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b716597-2902-4f0c-b501-54bdf3367cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70070798-769a-4dea-9196-7a52b87d6495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179b4669-fad1-46be-be54-b6c907c1e454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "edaf42df-f5fa-4830-929a-6d1c56ee2716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc3742e-1f6c-4e08-aedb-dbee0c3d66c7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c922851-c03f-41c3-831e-b77ec5a4aadd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42a83230-99db-4f62-b846-07ae84661cd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6015ce03-8e77-4ca6-9aac-2065928b30dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c64f84ac-7ef8-4982-8cd7-813ed4656a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b2d3eb8-f0ec-47e7-9e09-577aa27accfe",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba55ec0d-aabf-4078-9adc-f3c3a8cc127d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70ba4686-063d-4c01-9d73-f7188f5650c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4acb84f5-3de2-40d9-97c9-69c8522a9630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "921c149b-0564-4c20-bef8-a8e99f39d13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "589c26e7-dbd3-4407-ab16-735135d1a176",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8107f33f-4061-4a0b-b950-a95064183545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65d752ae-04f5-4ca2-9ab2-5792aaa94011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81018d6c-b49d-42fc-83fc-583d80755eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31dca1f2-d9e0-4168-a509-e18ea4e1ba2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df2f402-d7b7-4f87-8dd9-692787a7ac18",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0a74a0-6eb6-487e-8add-4ad8ee11d889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ec0d0ac-ee28-4f8b-94b7-001d36993b92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9dd824d-20d6-4563-9715-af4e6f5aed6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16d073d4-1beb-4c45-9ecc-705440afeee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917e7fd3-fd56-4ac3-b5fc-fc815eb6f51b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef15f0e-fa7d-4936-b2b7-9f332ac72324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae9c0755-5df3-4db8-b44d-595ce4e98f97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d687eb-31bf-4105-bdcf-baa367596e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bb194aa-0651-4be1-ad5b-09d426d91cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a8a7b9-c0a6-4d07-ad67-e2520272d70c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9868023d-0f36-46fb-ad18-719aeda0e242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5830176-747b-4bb9-97c0-49be53ab1916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a5ad3e5-f9f3-4ee8-b50d-ffd3395d3ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60834d5b-e0c5-476b-bcfa-55f691b59d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f4dafa-fee5-4f76-9f69-d7fa9472f8cf",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a366e6a-236b-4d8a-8e34-19e2ff1c55ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "251d5bed-47eb-4f88-9917-1cef0733b2b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef4a79cf-c297-455b-8364-48828e59afba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93763da9-5f23-4e30-b2ca-083eecdf5355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1efc0f90-9fe9-4f0f-a90e-7c677c1d8e9c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "632a1541-b46a-42a0-a9e1-6fbdce7e14bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fbb0b31-5ad4-499a-91be-6de439728c95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20edf64a-ae6e-4f8d-a522-3c1d1abf41cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b4fd6af-6423-442b-a9dc-75e30e9cdd82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b1f878d-3623-4d83-a494-ebf507fa0661",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6a0296-8d6b-4d18-8db9-888fefdb93ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "439adcdb-1b2e-4e9f-a24e-fadb8925710f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc1976b-d34e-4b7a-8e0a-bf19790352d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "032afd07-dc8b-43e2-a6bf-134c7cff5260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e482de2a-0747-475d-8c4c-fe2c89035bfe",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "662330e8-c2ee-44d4-b0e6-e385f0568b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c64a44b3-2ed9-4621-95f5-1803b7b8d343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f41c1a-82fb-43fa-a299-69aa7a73981b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf92148b-20bb-4eb7-ac34-9acfe20ad664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8646fe-d1e3-44a9-ad48-b6fab5fc9917",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "613880a7-ca92-4182-80f5-23c77f16c2f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df0a91e7-f059-473c-ba6b-7c8b70858656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0293f3f-d5f2-4d00-b50b-fc372d42f435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3df36f7c-c7bd-4900-a3b1-be3e318c2ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632231cd-869b-4270-ac4e-2a8573160d07",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e25b3d-e61c-49d0-8001-9059ac9d6729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59084fd8-d840-49b4-9ce1-f1dd91cff39c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750d3a29-9c03-4f7f-83a0-e49d285b3d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "094a2c51-d803-4856-af09-a7c6bc35a6de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f395b833-28ae-4807-aa1f-ddb32d0fe6c2",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c352495-6958-4493-ab6e-0dfcc566601d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4318cf0c-8e4b-453d-bef4-fe8d524c0a85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffce2b0b-8228-4760-a65a-cf832ffaa13a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25fadb04-e943-4353-8fe5-d934a9c1f161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e76f60-b5fd-4671-b71a-993948ac90ba",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9e9a4d-6ee1-40d4-8552-dd68d7e7810a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df72bc73-157a-4078-8a08-e488c9d600c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5701a578-624c-489f-a61e-3a1c622e8fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3966cbdb-9bc7-479b-b52e-81a8f6d6bde6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94308ced-8ee3-4771-a3b4-f21588fbfdef",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf58918a-5c60-498b-aeec-16f607b1d045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aef27cf3-61ad-466f-a926-325542725113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e547eb-7cb3-460f-85e8-26ae12562c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd86e2d7-77ce-48a8-a703-daac4f0d19d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad76123e-3301-4128-a9ca-57466882f149",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9309902f-0d6f-47eb-aebb-55d0abd26613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b6ae515-7cf3-4d8a-997e-91f5ffe02a92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "442da7b2-2698-45f6-a08d-995d21148241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b217e1-5421-4c5b-ad62-5300fee066df"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "893fc938-3809-4b9f-b804-ef39b7d4e4f9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0c017b24-3d96-45cd-9be2-9f749ceefdb0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8cabed-5a60-484f-8de3-369cc9d7b63f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f90934f1-cff8-4a4c-ae78-5ee8cdf012c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc9b106-aff0-4d08-9dc8-95ae4cf1cc2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2005b8e-863d-48c7-ba55-c85e27be8f24"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02391ad0-74cd-4be9-b683-9bb4747cb667",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45508739-6670-4881-aa47-6c74fab9c686"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "218e232d-a087-454d-93f5-a4f4b5033759",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6979bb10-a8f2-4083-b009-cd447e440459"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01d4e7c8-ec72-4f70-ba7b-89ffb44f70d7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "565600e9-26f1-4058-9f3c-ca80f475ff9c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "89a747e4-258f-46a4-92ad-dfab26edfffa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2aaff660-b083-4872-bd17-4d773b409810"
            }
          }
        ]
      },
      {
        "id": "a153ca31-6d3c-4da2-ab66-a3ca7fab356f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f558e1ec-37cb-4265-a97a-b2065054cfec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9162ea74-7435-4e58-b570-fb87b4d56218",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "08cb5d59-8a76-4831-94cd-6190b8e913fa",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eafe8e9-c3c8-4dd9-9e64-32d8d3a31dc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8bbaac6-0ab9-4984-b62d-07fbb79c9c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e8cdce-5925-4b88-bbe1-a9abce9b5975",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ec5941-dade-4ef8-9e3f-9529783a797f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e948a86b-b7e9-421d-8796-2400e1c9c315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1fd6df3-c94b-4e15-aceb-cc10668d50b7",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccfba02f-5217-4448-bd52-ff453786cf2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dbcf9fc-5ec8-496a-bb8b-0414da7abddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68698adf-8114-4d9e-8b34-5acb2e21bab3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aead107-36c7-4c7c-8026-4431486fe76f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdef8852-1e47-4f20-b070-06b0fd5f87a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8396f724-1232-4ef3-926f-f22090faa534",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4235f33f-e1ec-4e0a-a990-c1001abfa982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c57ecd6-4c8d-4db0-ae5a-f54c766c04f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09a4cb0-96e9-46ad-b175-bce13faa0553",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb7b091f-7edb-469d-ad6d-34578ba7883e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38e1a169-3a45-4ac8-b81a-ad52d08418f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17df2b6c-7b51-495f-96eb-490e9261ed9d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbbef2da-896d-4b0b-b68e-805a783caf47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6da6eac0-fb42-408d-b93b-c28773be02b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a20675-922a-4fe6-9260-285e527fc65f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbc69be1-7ba4-496c-adb4-2c7b454a3f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfedf173-c6a1-4709-a6e8-86f63ce74dc0",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b9f4d9-b85a-429e-b549-95cf4ff8ddf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11f3a638-747e-47c5-be62-ff8292208697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ac77c9-9c1d-482f-8e59-a208f821c3b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ab99d48-7a37-4329-b35c-5d9df8a68c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976d3d8e-65d7-41a8-929e-95fa0d0ba67e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6adda29-8e2e-4108-97f2-0e0f766af3a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df472085-d98b-4141-87a9-bd684d6a7e41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b68a2eb-9fae-4c42-9fc8-c4f4186d9346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd32f192-2b05-4115-a058-1d139390fa67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e8023a2-0c32-4bcd-89a4-6fbf5055e978",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe875c8a-2d5a-43a6-8fcc-1aab7951dcdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fbbd7fe-cd27-4af3-a8b2-1c2b1fac2d3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6959dc4-118a-49be-b84b-bdedd259b6da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f87fe5e0-edd2-47b3-ac8b-eac15fc29942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd4a8fa-3f3b-4ec7-99dc-93ff55d67242",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a10e02-d664-4dc9-b87b-ae187f65b0f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88dc9fc2-5637-4a51-a88a-2b0829cef61b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9620035a-4406-4403-a5dd-5333bc25a1b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a3d6fc2-d0b2-49a5-9b53-91754f911f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b18a8c-a4f5-4a47-a195-8a929210c309",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf08f8a-3951-4b07-8bf1-a67407253f01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32ed4735-7b6f-4d63-91b0-53adf6b1a069"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a60f0e12-461f-4c9f-a2aa-0efe2b8be83d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e04fe850-8598-420a-b909-755aa15302e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3239238-44a9-4615-86ea-e8fccd011070",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d901bd5c-179e-46cb-a356-7389a3ee3cbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9490b40-1a68-4a71-bf54-2462980209fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53ea5f9-2990-4d6d-b2d8-22ce4499099a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "606a34b6-4411-488e-a0fa-956efa2eb518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4877c0f7-702d-46ac-b3ac-a244b798d3fd",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05adc53-d90d-4795-8a2f-39365ae958b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4895a25b-11ce-4a3d-9e90-9de1e0388061"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0377a2be-0c9b-4b9b-8923-ba5c902e1025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc91f9dd-09bb-4679-9b15-14d6498cef97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f5b5458-f5b3-4c11-9926-8fe6f8bd66af",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08def14c-e586-4184-8a13-9ffb23ad92bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7eef3f13-6ff2-4961-a030-4ab2102c97b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0081ac38-2629-4ec5-b44c-a50a671c8025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b76304dc-b56c-488e-8292-a5198a047ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd9f26f-845b-417e-9292-19c1737c61d2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0542a9-2ee6-40a8-887e-3cc2ba98cf6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0922d3aa-352b-4371-b45a-0dbfca6b4792"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "219062de-445a-4eec-8120-59d9c9e2267e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aeb3c55-1ca6-4591-acd5-06a130c05aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23eb1b0-5ddb-4ea8-85f1-88ef8a43357f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39fded93-4696-4c81-aa6a-348e85e6cf3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aefa3710-2d5e-4fd4-b032-5e9fe199f0a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "611121f2-c015-441a-b553-7184e41bbcd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81ae201c-25f5-463d-b3f5-63779cba3dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ce4193-ce13-4761-bf07-7feed18c81a8",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3680ef76-2edd-4a31-994e-44dfd03963f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab7146ff-0d5a-467d-9675-0b709455b6ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea9d8065-587a-47ae-b0de-dda3d6f15721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "479c96af-63b4-4819-a6ba-848dd36baa9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1bfa7d4-4bc6-48fb-9a62-2cf3fac9265c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ae4c58-b1aa-4896-9d0a-58a003d1f403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58897262-db45-4690-a6fc-af90bce51bd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c89a435-c39d-4303-8e7c-2a21e7065484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01cf7006-ef74-4143-a970-fda22da935f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e900e0d-c947-44b0-bf83-3105d2351d3b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e7a1b1-eedf-4fb6-9809-9969920ba94a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0749244-a716-48a7-a6f3-f7c7f23b15e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13c3dbe-0327-4ce6-aec2-0beb1f12e3e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9552b340-3a34-4bc6-ac67-5c79db0fe05a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbabc901-01d6-48fa-95ca-81753edc7581",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd74a50-f906-4e9a-b906-52a24171461c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3979ac6-bca8-4992-a341-f8babe07e385"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea818ef8-2af7-4c3f-bf1d-fd17d571c271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a88333c-511f-4dc7-b2c5-2ca32b2450cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acdca507-699f-431c-880c-319b39619cef",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c696be-ab9e-45e2-b08b-3b5a820a6537",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07f3b8b8-305e-4c3f-8000-fe32e2c36a86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "188abd9e-d593-42fb-a648-7a72ba7f87d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8acbb138-010d-45eb-bd5c-467a76909500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0e8ca4-92b4-4eae-bdd2-c8af976cbff2",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc61fc06-c0ed-4993-a955-464307729b68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40f2f01d-65bb-41d6-b3a3-ecaa41a85e92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e16f0c-8822-4b35-91e8-26d202d92bef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "003c6d34-4b23-4187-941b-2ed5b1f7d261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba38f04d-f86d-4c46-977a-f28ed0741eb2",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be0b800d-22c8-4eb2-af76-a76cbdff351d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "870b211e-05d6-437c-846a-09ab1e7567c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4590f86c-1b23-4e25-8042-e1e6a23ccb6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb35e825-1420-45f5-9ddd-ab6b77abdf91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd44ae4-9b52-474f-806c-fa956d3e3c75",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c10dd55-aabe-4744-ad83-8bdfa2adbe5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee9eb170-02eb-4712-aa2c-b0694cc84269"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e3d6775-4517-4066-a2f4-0257b33c80c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f64186be-a723-4890-a69f-9c994025cc49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb843de-68a1-4d6d-b3df-9a7da7aad859",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118441dc-6b0e-43e6-b89c-354e060fbc8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5295954-55ca-49ca-a13e-b07795f8a3ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79538d38-a6ed-4d5e-8456-f565544b3f6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4199c163-a808-465e-ac1b-0ad9ade93d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925d1134-a9a6-44bd-b637-47cfc3a95ba3",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed62b0c-69f7-4cef-a690-bcbf22ee9aeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df9e3323-7a57-4373-b6e3-fb3cea764463"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d04d19-1ca9-468f-97b8-e8e7b7c399d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ece1cd9-4f42-46ac-9ed3-c8c7563355c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54477800-8f65-49b9-bfd7-02d01bcc07fb",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a82ccd8-dcc0-48da-a846-bcb4e4d151d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "353ba3ed-d534-4681-bcee-782a73651df5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97aa0f10-82fb-497b-a885-aeaaf1f63488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "156d19ec-624b-49dc-99d4-e36c1e71b048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8521075-7905-426a-8e38-f78c938fc932",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec1ca2b-2aa8-4b8a-b3f0-e23c2c96883c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27d62f4b-b36a-4ff8-b740-06fc43fdc9a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e75896-3f9b-4f7b-afdb-9620e3f072f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85ed4a48-1071-4c27-979d-655b959be645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4444785-a319-450c-b230-485da0c55d1b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddfd9093-461f-4f06-99ea-42f64776667b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60f87fdc-38b0-402a-b8c5-0acb39b4d006"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c4fb79-e22c-4c43-8767-08779320f031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9df3f06-dd98-432a-8bfe-bdaa8f859946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc2861c-07ee-4a8a-a000-2d5762b42663",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb2277d-435c-44fc-a927-339814a699b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04b0a8db-1404-443a-803b-c66d564984ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "657e48b1-9d36-4b47-af39-8e89202897fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44548d41-f2d8-4cab-ac8c-163d0ba221bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa84600-0316-4956-a9fb-79e7abe5a184",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60151d1a-e6c9-40ab-a781-e28bb0d5430a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b46fa70b-7a06-480e-a33c-2ba9bb215ec3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4773c2-eac6-450f-8515-1916e7e3a202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1d8174b-b9f7-472e-8a39-5726dd548156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f611fba-cc86-4cc3-88f4-d16cb0c8ee49",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eac8cb8-d713-4045-b97a-a06bd5820731",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b36de72-d0fa-4417-be6a-9c64b6bd8dfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9911dcff-795b-4c3a-b29e-b7c15128e318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf4e901f-79fe-4204-b23b-d36ea91ba6f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f767ff6-82bd-4042-9bc3-714e0937bce1",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0859287a-53a0-46cb-8e5a-2ba089c2bc38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2667450f-73ae-4d22-83c4-4034cac56a46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17be3cb7-7745-4ba5-9887-ad36707411f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b8c7a6-c2f8-4477-81ed-049a492c821a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b31c22-410c-428f-8013-415d788f5c9b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6c9ade-d800-4c1c-9f09-8a4a9fdfa304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4976ad4-bfa0-4650-b438-c56114c501b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93160a76-3713-4a6a-a064-bd96f8194f5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdad3341-5008-4289-9f94-dd734ad5ac64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "470e0874-d024-44a4-8d45-40b7d6464684",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a40aa4-ee7e-40a2-89c0-4357f72377b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16f11906-acc3-4e0b-b541-8b974ba19699"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "603da948-137a-47bf-ae22-2e3958462cca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95360894-d4c1-4705-96b4-d6a397f4c609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a27c9d0-2d5b-44af-886a-9fd292a66fa1",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f692e620-1a29-440a-9128-afeb086f7250",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfd93abb-40db-424a-b468-0c8881e39d48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06042f70-1c98-4092-b1c0-c40d9fa2c75a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3782cb85-bf6f-4086-9ad8-0f313afa313c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd0d7ec-1eaf-42c2-9b56-4e0c1fdfea20",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ccb7b4-4032-42f1-b5c0-2b71cf01087e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0545d55f-e2f7-41ce-bd15-f1eb0d1a31ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df595bea-d864-49fe-bfb3-fe4d7c3e016c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d2f1f19-b79d-49a6-a964-e838dcf62981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "451c2bdf-92f5-48ef-b1a3-264538425fc4",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b348ba5a-537d-48ee-84a9-4321df11a95f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "776d64b9-1b2c-496c-a90e-0fbe6cc1c2ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62daaee-8885-4ac7-a2c5-885c92fa90f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f2df58a-1ba7-4719-8dbb-b365b76b25dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ce4169-6d07-458a-922f-9ffb09233935",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c60496-5e18-448b-8a4b-94abf6b12be7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5d7eadc-d545-4a93-997c-4a4d2ba7587d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b3a87b2-e6d2-401e-8551-642ad488f4b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5e73a02-5275-4018-beee-33049cd63597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4be0790-0336-416d-9deb-ac0ec912fa1d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4abaeece-1d95-4522-a925-64475b910448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e831e3ad-22dd-4771-88a1-1f958c8c1cd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61720b13-00b6-47a7-a75e-6c6d056b07dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "472a6ecd-5e8c-454e-af2a-389f2b999b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eaf1f7e-7eff-4710-a665-a51f80556525",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83dc674b-de77-410f-b168-bd2546c8c2ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43ee21be-fc42-4db9-8d51-7f4d90cb0b02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe0f7188-93fc-46ab-b295-bb86a5c0c623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "389f1413-4196-4311-82b8-2e761a8f9cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2ddedb-18f5-40d2-99a2-45eb56401479",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f18905-814c-4230-becd-5f1e45ccea45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "242f3144-6e87-422d-8554-296a8328c764"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87645414-def2-4d7c-a5a7-791df337eaed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3923385a-b683-4887-90ce-fbd8adf5ecd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e92b0ac-970d-4297-98bf-883bc93d374f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b31f39-fa5c-433f-892b-35e1869b03e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4ef16a9-d846-43f5-ae0b-95e8e8445836"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e0b166-92f7-4584-9b67-6c292f06266d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7762731-dcb7-485d-9236-95a84b4fd532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a523af-42ed-4bec-86f5-b72c8c95683d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eba1276-5692-4037-a81b-8b35cc0638e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c099f27c-b6ce-4183-8944-0254fe8d6dc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01238436-32ab-434c-ba39-8bce3fbf6a07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98be4f2f-bc1d-414f-b316-587fcb6cd478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6238db5c-8cdc-4ce7-b1de-49b247e1fa26",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464a1999-77b7-4e81-a481-3eebd9cbbc23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "542e121e-8875-41c8-ad89-29c1290783b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85def964-f83e-44e7-9672-f3859dfa1606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c37aa0e-55be-4dee-bdcd-ef81f7db088f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5d2e9c-357c-42bd-b5e2-d937d9e9a455",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687a53c5-b715-4c7e-9a56-06daf3ed9ea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab9f0add-897b-485a-b10c-2f9c61444b13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b746b579-49c6-4fd2-bd81-0b530b8e9b65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dadd3d82-2f06-49e4-8767-b0e9c0ac5807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "644ae4f6-6028-41db-bdf7-af88b8f5f4d3",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de9ac34-377f-4f1d-8847-0086fb251713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b817fa28-22df-4ae6-9c67-afbffb6bc978"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ca819a-ec99-48f1-a796-976af3ccf72c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04d41b04-d46e-4110-bfe1-24df2dff55ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "747f6a1a-a11a-45cd-9509-d41ddbf231de",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e888da4e-3e1f-4134-8e9c-eec030ea5a31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63705acd-30d9-4730-808c-188db128933b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54bc13f8-6707-460b-9582-767b970692ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86fe9907-5e9c-4240-b061-5b86e4396cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d2a64e-9534-4eb2-bf1b-75b2c7b7cf5a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250990c0-152d-4d22-af5b-b1b58e0ed6d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb13f616-8f4a-404c-a9f8-e105f6f84ebe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6f2a5b-7a46-4f8d-a279-3eaf2e6db561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90c8197a-71e8-46b0-a48e-f46a79c00d15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49420df8-20c2-4b53-a8ae-f8d5be3b190f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf633927-b369-4773-aa30-f97c5cf4aeff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3d56a05-2399-44d1-88e9-579f9951ca8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b8d242-a916-44d8-adfe-d4d421d1643c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ee45876-203d-44ff-b82b-4cec8e00629a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c24ebf-a40d-4191-a326-65e1cdfec618",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3054493-da92-41e5-a50c-ba949bee6aaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53206e94-1be9-4b0f-8638-f1f2b5082032"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db37dcca-ae6e-40f6-ad74-f43802a567b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68ec9b0e-6bb3-4152-bb24-3f1e59be9133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5ebfa5-fcf8-407e-aade-b4158d48e0bf",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97957828-b05f-4d25-83a6-857c3adbf72e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a2b3db3-b0c7-402e-b325-b81671ebfd42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb5030d-ca96-4d97-9795-0efa017972e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3d153aa-6846-4b18-b41d-dcb549fbefe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f305cf5a-6c64-4f47-9a0a-609ca1dbd2f5",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b01c006-5eda-4952-9195-a672ed55e9a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40df6514-6f06-4bbd-afc8-36657851ac1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb956a65-c45f-4e4e-89ce-363e66c9ae48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "201442ed-8a31-4981-b934-dba3c43d6d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec81bb58-6eb4-45ae-8178-fc81d70358c7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b1deed-5e87-4916-9715-4cecaa79e07d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbf9aa19-dfea-477a-83a1-870f5708cb49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca65a21-4b85-4f0c-861c-832149f8c6a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9505c8de-c463-49ea-996c-753ff3621ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb315f1c-577b-46b7-a655-f86f8b8b1a72",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3c561f-8b04-4bbb-a268-728d1da931cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d3827c1-821c-4ff7-80ac-8ec2737e2042"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5f02eb-7a02-4091-9dce-3768247fa17e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a94f633-c59d-42a7-9495-103b840c5686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0cae17-0367-44ba-81ed-9bd70ec32284",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d3c435-5924-49df-bfd0-89a33ffb022d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddfc8ae0-135d-426b-8b31-a0cf78cf037e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0331c24-14e1-4503-8549-33aae8c89f64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb50c8f8-323e-4a5d-b097-36f58965e88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eba3917-7ac8-43be-be38-c2e49492c257",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2b0bb83-38a2-4236-a7ea-611099117cb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a3fd4ae-eb0d-49b7-80b0-36b52678ac98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e145b61-d794-4825-bd9e-ec80a648a723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0443aedb-f088-4e6f-a757-ceb84bfe2eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d77f4e-4654-49a1-9818-00d37b215667",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc55009-e597-4aeb-bc7e-8bb24b2f8c58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "186ffd3d-4cbb-48e6-b0e8-f32db4cdc55c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8ab06f-7f6c-47a6-b51f-5bc529175020",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "765c85ec-600b-49c8-bcd4-7437fe26fa13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5601bf0d-5c7a-4cd6-9ba4-6a5a3fb817d0",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b87459c-05ee-4b70-b0f5-9448817adc91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e7f863b-3f76-4575-b1a8-28bd27c991f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c90b76-c3f4-43f5-9b5f-c4539df271d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46c6abff-4259-49d6-8afa-436b6f887676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a329f1c-a712-4e42-b28a-96856f420293",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88acef4b-b1ab-469c-9d5e-4d9d18d973d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "547a6ed7-a35a-4643-a9f9-41674a7a2928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff8b751-677e-41a1-89b8-3f4ed388dd1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "905c9847-f941-495f-929b-1013e580f4b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d395c96e-795e-427e-8e55-8a350f398b56",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44952a44-3873-41a6-ad46-378f6cdcd2a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "828123a4-e9f0-4715-a564-3ee789713c1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f128065-97fa-4849-b600-08128e00c13f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bedaae0-6341-4202-bfd3-f08cf10b00ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb4177ea-ed7d-4484-8572-1894ae20eeea",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c187a49-35d5-4eb2-9f54-5ab63ea30f52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa1db135-bc75-4247-a7d8-4dc5e9071213"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c99771-7942-4a79-954f-fb833957555b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53aa4320-c24f-4f6c-aeaa-d95bff4cad54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c62eba46-3169-4791-a7bc-b1799a9b0068",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c9d938-bd7d-4eee-8a04-68779922c0b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa997850-0c0b-4e80-87ef-0f735e90c869"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd1f4af-9286-4d94-bb7a-0225d050fab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5509ede2-f359-4345-8d0c-e7715bc285a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e86238bf-30a9-4ad4-8e2a-7dc09b1efaa5",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa51eabb-c120-45ab-abab-2f1638674c95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61f7f3be-2452-449c-93cf-0cca7c0eafe1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2408245a-5409-4f92-ab05-84d7a3c951e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "491d1962-ea1e-4db1-af95-c5b27a4de845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f5fa1ba-a532-4ff5-ad62-079e87fe6b83",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b335b22-48b4-4e67-ab75-5591d8445ba7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b24bada-3a90-4d45-8aa4-f31007af5dc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f1e37e-e649-4bef-bd4e-17b3d096267a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1735ec11-47de-4248-827a-f02b7a997b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66685acf-7ee5-4ad5-9ae9-0607cfaec60f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22855f84-376b-408d-87fe-02e368ecc449",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c79b734-23ad-4be7-bfe1-70afb3690814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e880f59f-c738-452f-b2fa-f1b60117b99f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c79ae31-5d74-4580-b0b6-2530f519326d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e521f1-33e4-4790-89e6-13582a8bb9a1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6632a2c3-d1f9-4c1c-8afb-dec56db2af1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb6dfb74-4445-4b38-b924-7e830df5f24a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "213ab6a3-b579-4932-ac45-e0b77d203685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8e04785-827a-40f4-8038-aff952049371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0d6b06-041e-46c6-811b-966976954e95",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a36bb1-49df-4ebc-a355-6d683f14eb9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63628e2f-fcbb-467b-9270-aa438218fb6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a5e1a5d-28bd-45e2-b847-19cbf253e7ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56465739-2a1c-4ee4-874a-425c06958fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0664c836-ddf5-4578-825c-e24c200c2356",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d786f5-4ce4-475c-99c2-859cc50060b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d082aa42-adac-4c45-b6d7-504db6539b4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87915dd9-2bbe-4a44-b030-e8c37933dd2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "731e3a14-5145-4dc4-a7f6-3999e3d8a734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e911fb-4dba-4d98-a105-6ec6728ead1b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98306be5-57b1-484d-9a63-93660355694c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49a08e47-3447-4806-9ab7-7072485c84ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dff6b84-c700-4e93-9358-f7fa439580ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcfeda15-773a-4c13-9e99-1639b9848c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a0400f-6fea-48cd-853c-cb8574bbaede",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c254e371-e340-41a7-b5ba-a514aa1d0548",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "155fa992-9564-4078-8127-c56562088fc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c41476-1cd4-4bd3-81fd-850addf68d3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ef5ca6-c372-49e0-8d87-4cec3cc349f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dab14ad-13ba-4293-8ff0-84477fd53a91",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc47a2cb-98d9-4091-8bca-e29bf529e3e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1718e7de-547b-466c-8924-067eb961a2f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "190b4f95-9acd-4d02-9846-eb23a4689bd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e68bfc64-e54b-46b1-8a01-ce4a7f604f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fbd16b2-1672-4ea9-a507-65f294621e96",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "392a8c59-6ef1-4618-a53e-3f4c12301f86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06ff4f40-d78b-47f9-bfad-506a8f619c27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c99c27-bbc8-4c0b-95dc-0d51161e1916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b1ed611-e7c8-4f24-b232-673e75282a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e96925-79f1-40fd-aacb-35f53001bcb7",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e4b55d9-bba7-40a2-9811-ad8dd8bfcc24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f15f890-e741-4ee3-97a6-17986fd10c3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d8f24e-a568-4ac6-b3ca-d2fb480a4051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a9852a4-0f8c-40db-ad55-c4c5dc4f3ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f55a8b-a3b4-4222-b456-035339890718",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a1356ad-5412-458f-8767-3b1f92bb4564",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d62570a1-db02-4ae9-9b1a-446676e32c6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19cadc9f-8ed3-4fbe-a1a6-dc894cf1260f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3947850b-22e7-40da-91d7-31a71fa24452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c600b738-32c4-468d-ab5b-3bb434be0684",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb544f50-2be7-41cd-bfcf-b69a0d1aafd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17790ea6-a4b8-493e-91f6-a3baa61a5faf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d57e6e-7847-4f77-812e-b677fd8f2e5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09851d99-0aab-487d-a709-592af02ecafa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce334522-efad-4da2-bace-dcb9a4f230cd",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5918a931-5df5-4a90-b10c-b0713176ae96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5af2e232-0920-41e1-9772-20673603c6f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c4dac2e-78ac-4252-bf36-b89f749c8d8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ae975df-531b-4c03-9527-c2ac6c7e0e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab58f80b-e0c2-4414-83bf-7ce1698fe4d1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b03702a6-9245-48b7-970e-b96e87313bb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35de3389-6443-4359-b681-e23a636bd6b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "839ee7fe-426a-4a44-a561-128202071ee2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "607cc340-7a50-4088-81b0-885cb7f9049a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dab3b94-d531-441e-9aa7-bcffac8615e8",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e12ee7-1501-4846-9ca7-af655f141fad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d0ddfb9-e251-451d-8c78-95f8505a283c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4e764e-926e-4c46-ba7f-7b8a2f4fe044",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aade27c0-7379-4081-9407-217d25c32ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94abf02d-e0ef-4441-bfdc-6fd67dcb0a53",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7225fca3-dab1-426e-a5d0-3788af0405d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8a2a602-a064-467e-be8a-d09c2c2388a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ceabf76-ddc9-4a89-92ad-2bc059cf1f29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bafad95c-8894-45fc-8d0a-8b4b38179279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d485acd-c445-458f-aeea-4da93343e4e1",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34990119-5464-4e0b-9313-1057793e806d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "060d484a-2479-4f70-a842-e991cc5e15ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0785bb11-bd0f-4134-887e-4ecd7ffc9375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d39ead0d-0834-4235-834c-23f7272c21ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48317284-62bb-4501-9410-fe958ab9e4f4",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "664a7d6f-2e18-47be-914f-662636fa8bac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0494baab-7542-4219-843d-051eba3e2b9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38fd7ceb-800e-4ea9-bd6c-c340c8f7930b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0b81c74-785c-4397-9b38-73bcdf07587f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417b04dc-d8a7-4520-bd9e-67d0de3c8480",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa83219f-4f1b-4f0e-b986-9fe02499bd64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54391703-d827-4ac9-beb4-c8e8be3f10cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "651ae0b1-0841-4b9b-a67c-93e948028def",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5693a3eb-9696-4c48-980a-c3d1e6c7976e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "320f5bab-e15c-487a-94ef-b007a914d869",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced28e57-c86d-44b4-88d0-f5600508dee6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6a57723-67bb-4e9a-abd6-86ef8583b2ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f168b02-b9d5-4868-9825-8cc4087a6fe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43c5f3e5-2e51-4e7a-b030-1db777b7475a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be8cba9-6a66-42b5-91fd-0b918bd4949a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95fff7c4-b516-4c03-8d12-254091b720b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2605931e-2d9c-4500-9dde-5107eb446de6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2721f8-5162-4a07-9606-e1291f897115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5018ddfc-d071-48f6-a969-b9a82ab481c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c866598-3eb7-4f10-b18c-df2a48957e1d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80415401-5aba-412f-b5ac-0612f32df255",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2ebb9af-89e2-4ac8-a64d-eb0ca0338636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21cdfd46-1701-46fb-b8b0-d7bc8682b533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b7ba2f-a84c-4ea1-8a44-6642bb29e631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10303a2-06ff-4d61-a89c-c2ad768b48d8",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48816ff2-e47b-419c-8c3d-dbb6d5df4d86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08180c1c-cf10-4f1b-b142-b13180944826"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "224ad4f5-c4d2-4a68-9e3c-79eacf849cab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87f1a660-9e69-471d-9591-13b3b928f55f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090cadd9-2d5b-43d7-9684-1b2a39b22f7a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cda0517-fc82-4cab-9f5a-13ba3ead369f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f7daf62-301c-49f3-9d2b-b7b6e8d7cfbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc464619-9f59-48c6-9835-82740a8b3586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21c2fc52-bf2e-41d5-81bf-a4a52985ce55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c267e96f-daaf-4145-b91e-03548f906220",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8817a2-637f-4afd-9147-e126141028b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df063bdc-83bd-41ad-b396-6dc3e6febe90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df9df5e-b5c3-4555-b6c4-89eefdf233cd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d50f7bb-37a1-41c9-b249-5a4cedf19a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "904d9528-9d74-4ece-815e-9e20c135dea4",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92687e75-0e51-4b54-bd00-bc5fe3b0ad58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c705fd1-bb91-4b7d-a6e0-d02c2a992016"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "213f14b5-71f6-40db-9ed5-4621f011781d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4f3cdbe-29a1-4d76-834a-14107b23db6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32fed7aa-1852-4d8a-8e03-9a4ba896d50d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330ceb1f-3e43-4d87-91bb-dd4fb1d54e7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4aa95175-038b-409b-8f82-fd661ad08c74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b964e9a7-ca7a-47d6-9ba1-b33fea6de2d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c75b07bb-de6b-4423-982c-3b8de6112368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8355269c-c005-4add-8755-4a0aa24e6dca",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b229671e-3f50-4aba-8e9a-31c76713e920",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0e6284c-c7a0-4a39-8c9b-e39adb7b6333"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b4acb0-43a7-413e-991e-e4bab38fb3d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0af653ed-6471-4919-9ef1-2a9591506abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b29e0f-0d5d-45bc-8c2a-00c9502c9e36",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92343db4-cdc0-43af-a5ba-ca6611b1942e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f485616-0e81-402d-a7de-a4c64c2ebf12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1116cdf5-8e2d-4c0f-acbd-29bb731e2fa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23c8f482-60f0-4f07-bb46-ec26a1f35e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a5baf5-d32a-4a42-bffd-8d8bc76eff95",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676e115a-afab-432a-a0c1-02bb4e05ebe5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70af4f13-76d2-4e6a-85fb-f2cdcd778e86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e59bf6-5edc-4bc3-a794-cf0d9a311081",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f73393de-f098-4047-8059-54c3a1e9d4d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd290b2-e691-4b55-a0b1-a30dc719eb5f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b79ee7-e3f0-4e13-9715-7a2e5b820601",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e67d21f-1194-402d-9386-82beb07647d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7e1649-c34d-444f-80c3-4daa72bbfccb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "029c5a4e-d5ca-401d-bf09-4a6186589ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2208bf-b159-4054-881c-5b7c9df966ae",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a3c6a7-26ab-4922-a7f8-438b0fc84625",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3d27a00-6367-454f-b8c4-51cf9eee4db7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60611e09-9738-4c6c-a81e-663789fad633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6bbef11-e6b9-424d-8901-9837f0f695dd"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea1cd1ca-376a-4b40-ac68-c07cbc3b9708",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4ff59f4-0a7a-4c8a-b3b6-f13c5d46f68b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "11b306b9-cade-4290-bef3-85fbb1495c7d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "06947952-2c0c-4e8b-86ed-cae3eaab9e60"
                    }
                  }
                ]
              },
              {
                "id": "b75313df-3586-4ab5-af08-6ebe6d8efb2c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "508c035d-b08e-4208-9f1e-fcd5037577ab",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc816dd7-04e3-465a-90dc-78d7a3b0134a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7b3cc997-e8e6-4ff8-b5e4-df2516ff2364"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5f15b0f-c8d5-4dc1-acc1-0f73c4e8dc00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6cda061c-a02b-44a8-b2b2-1c1ea29dbc7d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb5e7329-10dd-4586-82b0-b1fef0f83c47",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a8b3ac2-3ebd-4e2f-9354-5cb16b50fac1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "292973e7-7506-4ff4-a382-7c4452e60985",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c8f165b-449c-4be0-b6f8-a08940b4ed92"
                    }
                  }
                ]
              },
              {
                "id": "1778d18b-31bd-499c-b81c-3767d66fa58a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "edc4aa3e-051f-46be-8ce3-154073e66910",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d9e262-5c8f-4047-8614-01fa5a3d8ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "cb6750c7-912b-453f-8446-f6620327e5fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c048e8f-6a31-48c6-a220-e49f2b085e95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2769fe47-b587-4430-95e1-571422b35846"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6f026d5a-6d77-417e-8c81-ac77c6f69ea0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "949c7b6b-4954-453e-a69a-a1447938b208",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fae15b85-b14b-441c-842e-eaf66f12c79b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fc32fc1d-cdb8-4f58-8ef3-cd96e69e7a14"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a875698-aee1-4718-83e6-14915acb37ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff1fbea1-8a72-4602-b631-9b1ff0bf6254"
                    }
                  }
                ]
              },
              {
                "id": "d2872bcc-9ac7-42dd-af3d-3718bbafbd3e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "792c9195-2913-4ad4-af07-5a6516ee0e0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "de20a0c1-c03c-499f-b39e-45cec3887848"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6dbc6924-a03d-488e-9525-edeaf0453c95",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18b61e44-536e-43dc-963c-fca69296dcaa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8410b8ad-06b5-46e1-88ac-75457ac63636",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6703d1e9-1ac6-416d-830a-0059ee25dea9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "217bdec6-cfcd-4d02-a13c-d27859577d1b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "486d0146-f2f0-4b7a-a1c0-2817c3e2f7ee"
            }
          }
        ]
      },
      {
        "id": "3538f0f5-8681-43ea-9059-6314a802f942",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0b476940-5bc4-48b0-a82c-3ecc904b6009",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2256d375-d77a-4705-a250-f0f4a7d9ab8c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6ad4ee05-1ba8-4290-ad2f-a615e41fbf6c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce75acc-eede-40c7-a2f4-faf3ecc6f289",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6bf413f4-d02a-455c-bd09-9ef6514356b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a961fa-b2f7-4c6d-a014-eb76c5141bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d716bd5-384a-4943-956f-c236711ee634"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aafe304d-5482-4b18-8353-d93a27628caf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc3f5cd8-6810-4107-b795-31335bc44eac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "08b827f2-f2bf-4cc3-9ca1-0156267445db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "706ea107-591c-48bb-8938-623ac8a279a6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e038c22-b7a5-478c-8f88-0df877f011d5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2cc05fae-a1f6-4737-b3e5-66e516477363"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ba50dc63-2bff-48ec-b063-0078e9234676",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a35d537c-f02c-4318-aa9a-58a781d1d9de"
            }
          }
        ]
      },
      {
        "id": "44150a08-b5f5-429f-8d97-e3d558db6a92",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "eceaaf42-2261-4474-ab04-f9d0ef0971ab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "33ff2970-45f8-4990-99bd-17adf144494a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "18cffcfb-bc54-4028-b23b-b48de673fffb",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5034367-3503-477a-9583-a75a8b8453bc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "296704f2-4697-4f47-bf1f-42a0dd076e47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8bba7b0-ce13-4ea6-bcc5-911d2612b9ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "878661c8-eb7e-4df8-ac8a-9b303ef9f29e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35a98da5-facb-462b-9bd8-2270e6ad2194",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73d76c80-eacd-4a79-b229-e1a41a4e3156"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "056bc75d-e0f0-49b4-983b-4d4cc275a042",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7137846-34ba-4c43-95fc-386d134f513c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b464475-1650-403a-8ef1-220fed439051",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7ab1d41d-99c9-45c7-bbf2-1ecf757ce209"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "88cbb647-702a-401c-9d2b-59ef5e36bf6e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "470f4ab0-b09b-46b1-925f-de7da48e1be3"
            }
          }
        ]
      },
      {
        "id": "1adbcc6e-d021-411d-bf58-fe0bc712809d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a9d43e67-dca5-41aa-82f9-d493fcd4fb34",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7f560baf-fef7-45a4-ab1c-ae2904c1425f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7fdd4bca-2b6d-430e-ba5c-95bdaaf20a4a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49980518-10a3-44a9-811b-315b5510fbbf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2aa297e-6292-4cb7-81d0-5a976e0c8ae7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ad9339-70da-49f4-be88-ae84fc9ac197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c015b612-ea5c-4c3e-8b1e-d9cf03c970d3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "264b12cc-095b-4f47-869c-b5f72bf7525f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c48b567-7c46-453e-844c-873c014df544"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0222c9d-b8fa-47b6-8c71-49e2fb5a20ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7e271bd-8606-47f2-8548-c3cc26870211"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1899c918-e909-4ae4-a600-92f25cf011f3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bc5afdbb-a255-4f87-bd40-5ce7acfff984"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f0427e0e-c1ea-46e8-93a8-9bdd8f89e216",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b731198c-b0cc-47d4-a0ea-e96b9106f1f3"
            }
          }
        ]
      },
      {
        "id": "daf2e7f1-a3fb-492c-a0c7-5fececa43391",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bbf2683e-68d9-4511-8a25-2686c0591b49",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "edf01e50-758d-4c62-9ba0-fd746f8a8809",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d58c9310-c448-43f3-85a0-631522a51888",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "763bb0db-661e-4999-8cd6-0e7a67956a6f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d297cfec-0d5f-4a01-9e92-9fe5a2abf425",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 173.61619718309865,
      "responseMin": 15,
      "responseMax": 16141,
      "responseSd": 1051.6671325210145,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1692059526682,
      "completed": 1692059590843
    },
    "executions": [
      {
        "id": "71e2537e-2b0e-4c65-8786-5eb3f3fb1ae9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2019fe17-9da6-4d3b-9f54-1c9cedc502c9",
          "httpRequestId": "09a6d043-0b20-4c08-9aaf-5c59e32d1f6c"
        },
        "item": {
          "id": "71e2537e-2b0e-4c65-8786-5eb3f3fb1ae9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6a07cdab-2f7c-4a9b-bd49-0a4810799324",
          "status": "OK",
          "code": 200,
          "responseTime": 102,
          "responseSize": 0
        }
      },
      {
        "id": "ac76aa39-a209-47b9-b1a2-bbb284650e63",
        "cursor": {
          "ref": "a3d67d06-9779-48fc-8388-cc2a4cbaa794",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d1cf96c8-da5c-4bb4-9292-ba4d643ca636"
        },
        "item": {
          "id": "ac76aa39-a209-47b9-b1a2-bbb284650e63",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "2472ee10-33ba-4366-8df9-9e4af3fe6df5",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "5a36fc2a-eccf-41cd-97ef-d0ae54338fa3",
        "cursor": {
          "ref": "fd50bf07-de9b-4810-a0ea-ae33eab22ec6",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1ef19c2e-414a-4792-aae8-eded46d71286"
        },
        "item": {
          "id": "5a36fc2a-eccf-41cd-97ef-d0ae54338fa3",
          "name": "did_json"
        },
        "response": {
          "id": "51bc4948-f957-45ce-82ea-81465dc2f788",
          "status": "OK",
          "code": 200,
          "responseTime": 1318,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3951dc20-7449-409c-9377-1c80a729d7e9",
        "cursor": {
          "ref": "40d64efa-2aec-4f1b-9849-28e666cdb3c8",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "dcb56222-47d7-41d1-a8f0-1a58ea43f7cb"
        },
        "item": {
          "id": "3951dc20-7449-409c-9377-1c80a729d7e9",
          "name": "did:invalid"
        },
        "response": {
          "id": "098659a8-fa9a-42c8-99b8-7cb27458b0bf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 663,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3951dc20-7449-409c-9377-1c80a729d7e9",
        "cursor": {
          "ref": "40d64efa-2aec-4f1b-9849-28e666cdb3c8",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "dcb56222-47d7-41d1-a8f0-1a58ea43f7cb"
        },
        "item": {
          "id": "3951dc20-7449-409c-9377-1c80a729d7e9",
          "name": "did:invalid"
        },
        "response": {
          "id": "098659a8-fa9a-42c8-99b8-7cb27458b0bf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 663,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc298fe5-e21e-4126-9468-14f08a7d1689",
        "cursor": {
          "ref": "2e22c1e5-20b4-4db0-8db5-ed47dca9b3b0",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1f297e58-0794-4b25-8670-6cc9be7eede7"
        },
        "item": {
          "id": "bc298fe5-e21e-4126-9468-14f08a7d1689",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1c3265fb-b9cf-41a8-bfc6-ccb09a942cee",
          "status": "Not Found",
          "code": 404,
          "responseTime": 51,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8d387b-fa95-4b18-9cd6-73e440dfbdf7",
        "cursor": {
          "ref": "bb86b7a0-b157-4452-9b6f-821a6fa3d548",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7582a586-2443-48af-a8c8-25dd7eb779f6"
        },
        "item": {
          "id": "5c8d387b-fa95-4b18-9cd6-73e440dfbdf7",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "40d11cd8-861e-434f-adf7-e0301cffe684",
          "status": "Not Found",
          "code": 404,
          "responseTime": 48,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b08e62c-c924-42b1-b820-649ecdafb67c",
        "cursor": {
          "ref": "6600cd6a-854e-49d0-ad2c-6742f9c2d640",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "162117c1-d730-41fa-9031-e0c6b0fe9ee3"
        },
        "item": {
          "id": "6b08e62c-c924-42b1-b820-649ecdafb67c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "46330330-660c-42f4-a024-73ef35ee7482",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32eba2ce-c732-4893-b9df-a7d2f3b42825",
        "cursor": {
          "ref": "4fefdddb-6518-4a2c-abd6-fb53103513a0",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0af28be6-ba74-4cd3-a575-841067c7a7c8"
        },
        "item": {
          "id": "32eba2ce-c732-4893-b9df-a7d2f3b42825",
          "name": "identifiers"
        },
        "response": {
          "id": "dedd4041-1b63-4527-abb5-e6cc969e6927",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151a5ed3-fb62-4406-bd02-c75b5749cb11",
        "cursor": {
          "ref": "fdd59a70-ef3a-4d70-a47a-509f2cbef2a3",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c82386e2-6174-4ed7-83c0-0f8a541390d2"
        },
        "item": {
          "id": "151a5ed3-fb62-4406-bd02-c75b5749cb11",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "60be91e7-d98c-43b8-9891-5edefe878af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6729fc-63bc-484c-aa35-c29b7d3f045f",
        "cursor": {
          "ref": "72e0a336-b276-463a-8094-d95ec5ed6f42",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "497ba473-011a-440d-9f61-a795de90bfaa"
        },
        "item": {
          "id": "6e6729fc-63bc-484c-aa35-c29b7d3f045f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "06802ae4-1eeb-40c2-be9d-767dd922fe76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9915ca26-5fbf-46d7-b83d-a46940f8708e",
        "cursor": {
          "ref": "92de258d-cba9-41e5-85b5-aa46834ad67c",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "dc409c6e-7a2f-4b13-a716-bac9d4093133"
        },
        "item": {
          "id": "9915ca26-5fbf-46d7-b83d-a46940f8708e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "49b3f11b-22a2-4ddd-8d45-af8b4389b7a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c10ee5e-efd8-47bc-8d0a-f6441bb0aa4e",
        "cursor": {
          "ref": "dffbf878-065a-44e9-b30d-c6280e6b3023",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6b572fd7-ca91-4e2a-a1b0-f78c169b3d65"
        },
        "item": {
          "id": "6c10ee5e-efd8-47bc-8d0a-f6441bb0aa4e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "038b4cd4-032e-401e-838c-f9fd44a787e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "890195f0-a03d-4dce-988e-380e0ef61f72",
        "cursor": {
          "ref": "18442c10-a5de-4186-8568-037531ea4665",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "94a4bb62-9a9d-4d05-baf1-9202995c68d7"
        },
        "item": {
          "id": "890195f0-a03d-4dce-988e-380e0ef61f72",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "eca45991-83d6-458f-8be3-5d343ee299d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d952e1-0da4-4ec1-8933-596b865d5049",
        "cursor": {
          "ref": "9ba084ae-d1cc-48e3-8f0e-e409dd08d3d7",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2aef7bac-0196-4c59-bf7d-c9b495fa97ce"
        },
        "item": {
          "id": "91d952e1-0da4-4ec1-8933-596b865d5049",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b67fe208-00c1-4733-aac5-c0c058ab0449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ccc051-478d-49f6-8d92-4c85f5a9e06f",
        "cursor": {
          "ref": "74af3659-e1fd-455d-939e-bdc048898e16",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c9b9f47a-f1ef-4b5b-87c6-7f11d4d4ab85"
        },
        "item": {
          "id": "c3ccc051-478d-49f6-8d92-4c85f5a9e06f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "69e311de-99a1-4838-a1e5-0fb54a3d5bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9b5585-77f7-49a2-bfa7-0fa86917d2df",
        "cursor": {
          "ref": "d1eb8b99-e994-4a6a-8f69-4baa75c0bead",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0645ee4f-c662-42f4-83a9-0a66c1dad831"
        },
        "item": {
          "id": "ed9b5585-77f7-49a2-bfa7-0fa86917d2df",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "6916686f-6cc4-4443-8055-351021d5f33a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 951,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a341ffa2-61ed-479e-9ce4-281fdbfa113f",
        "cursor": {
          "ref": "c9b08cd9-2326-4232-af3f-867b5639f8ac",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6dbdb68a-da9a-4eac-83a0-8f1802f4af5a"
        },
        "item": {
          "id": "a341ffa2-61ed-479e-9ce4-281fdbfa113f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c8481c88-ad9a-45b9-807b-9fcaafb912d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d3b9e57-1616-464d-bdf4-b2699ed9726e",
        "cursor": {
          "ref": "9745a9ec-3592-45c6-9827-a763aad8c711",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ee92fa3b-e745-443a-a0a3-5258f873ca19"
        },
        "item": {
          "id": "7d3b9e57-1616-464d-bdf4-b2699ed9726e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "26144b0e-1b6a-4bd9-b73a-991a16d12bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610fbe9f-2747-4ff3-9e31-2c7b86cc334c",
        "cursor": {
          "ref": "e3e8e2cb-f38d-42a5-9f3b-057b95f4126e",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a1eaba8f-a489-4c77-b8c3-1e930bda7d08"
        },
        "item": {
          "id": "610fbe9f-2747-4ff3-9e31-2c7b86cc334c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e72bc398-6a65-4f42-afdb-0aa569c97c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796206b8-b794-4bf9-af10-88b190b4c00f",
        "cursor": {
          "ref": "0030ebc6-b08f-4fac-8ab4-1fd9349cf0be",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ce65e5ea-cdf3-4746-96c6-5ea7e589e5c9"
        },
        "item": {
          "id": "796206b8-b794-4bf9-af10-88b190b4c00f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "202722f5-d322-4eba-b345-b53ccd69dfc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c2311c-51b2-4a01-9512-20f7715976ed",
        "cursor": {
          "ref": "de731dc5-da42-4bc9-8759-386f71c33e54",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d285dcdc-db7b-43c8-a87f-07fed23bcf73"
        },
        "item": {
          "id": "93c2311c-51b2-4a01-9512-20f7715976ed",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f871b7ba-5cff-4cb7-8918-6e2090963042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbcf33cc-573a-46b2-8e88-7abab17c228e",
        "cursor": {
          "ref": "85a9431d-e6f7-4641-afc6-040772033933",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5deca6a9-8527-40e9-866a-1c05f482f66f"
        },
        "item": {
          "id": "fbcf33cc-573a-46b2-8e88-7abab17c228e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ace4f893-0707-4e8f-ac57-4c02adb48419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 208,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade1109d-0991-41a2-aa6a-2a9422e37793",
        "cursor": {
          "ref": "36e58800-431b-4c8a-a401-e23a4240d986",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d464d942-96c0-45cf-ad04-5e3f9641c9dd"
        },
        "item": {
          "id": "ade1109d-0991-41a2-aa6a-2a9422e37793",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f2ee8327-2815-424b-9037-e771ed6c0a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef83a8f-abe6-4346-8070-cf364d2825c7",
        "cursor": {
          "ref": "e7b1cda7-d57c-423d-9e3b-70cb2d58b6c8",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2f5017a4-ac0f-402e-bd9e-75be79b9f7f9"
        },
        "item": {
          "id": "8ef83a8f-abe6-4346-8070-cf364d2825c7",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "19509b38-61de-4b64-8718-1acf86d248bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604e3c38-fe71-4e13-8949-a7d6b8cc5845",
        "cursor": {
          "ref": "06a87bed-eeb9-4fab-9eb2-f7050a570e5d",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "86722f57-6869-4e62-b95a-cc30cf236055"
        },
        "item": {
          "id": "604e3c38-fe71-4e13-8949-a7d6b8cc5845",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "725a45a4-4e54-43ff-822f-d77ef1fe6f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce8bcaf-0bd1-441b-9b75-c427ca3f85d6",
        "cursor": {
          "ref": "e5063362-29a6-4131-9698-3796632e358f",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "30027178-9b10-4fd9-9237-f4df448796f0"
        },
        "item": {
          "id": "5ce8bcaf-0bd1-441b-9b75-c427ca3f85d6",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b5ea70c1-27c4-4be0-ac5b-5d15995aa4e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f05cccd-01fe-47f4-b4b3-b449e8653771",
        "cursor": {
          "ref": "d8ffdad3-2132-4a18-a867-5afa70cfa261",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5c6f00db-3f5a-413e-acbe-1158b2527e87"
        },
        "item": {
          "id": "8f05cccd-01fe-47f4-b4b3-b449e8653771",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0a01471d-402f-4d8e-b078-e927255ab91b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf5b1b0d-a20c-4596-b3f6-7cdb5edc5d0e",
        "cursor": {
          "ref": "ad39be99-e07f-4aeb-888d-17055c3ec454",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a4a4e6e2-1c9c-425c-aa49-cc9afecc84d4"
        },
        "item": {
          "id": "bf5b1b0d-a20c-4596-b3f6-7cdb5edc5d0e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "161d78f7-25bc-49b1-b9a7-8efef0917bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5983fbb1-061d-4a5a-a136-424fdedbaf3f",
        "cursor": {
          "ref": "78360305-9a70-43eb-bb47-3f52fa76d7bc",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4b02c587-6a8f-4918-a8ec-d44a95fbafc1"
        },
        "item": {
          "id": "5983fbb1-061d-4a5a-a136-424fdedbaf3f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "be27f4c8-1fc4-48a5-bbdb-13eea08f4ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bedae365-e046-4125-bb72-c36090d95d9b",
        "cursor": {
          "ref": "40563c52-5930-4f08-b233-181621dc805a",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "821c67d7-de45-49f0-bbc5-3977380a38d4"
        },
        "item": {
          "id": "bedae365-e046-4125-bb72-c36090d95d9b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "2849d7ba-b6e0-4e62-8fee-185fcd59d1d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8344e5ee-8a71-4bf0-9089-930606c796db",
        "cursor": {
          "ref": "62a4303e-8f73-4edc-95d6-659d3ff60c20",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a9682d76-4ae7-4b1b-8344-de8e9a6f0320"
        },
        "item": {
          "id": "8344e5ee-8a71-4bf0-9089-930606c796db",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4319ebdc-c1af-4d81-86d0-fca47b433da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1692d409-6fec-4c11-a45a-07ba0877043a",
        "cursor": {
          "ref": "bec11bd6-b144-4e99-b8c1-2d486870c0a9",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "dac3fbef-d2ce-455b-974e-9307cff108dd"
        },
        "item": {
          "id": "1692d409-6fec-4c11-a45a-07ba0877043a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f2ad2262-1732-4e5a-b2ce-4dc8c81f99bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56186034-31a0-4a45-aaab-2460924a2220",
        "cursor": {
          "ref": "c66d497f-54b6-4b52-be7e-1c534b56325f",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2874f12a-99ce-436c-a3e7-213c37aa1cef"
        },
        "item": {
          "id": "56186034-31a0-4a45-aaab-2460924a2220",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "35a29d76-b248-456e-a04a-857ed7181d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87531e3-794f-4fa7-af43-4cbd49433573",
        "cursor": {
          "ref": "d2984f30-54e6-4bd6-b5b8-21851f27f9bf",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "dd321f0d-2110-4858-b4f4-39c100ee689a"
        },
        "item": {
          "id": "b87531e3-794f-4fa7-af43-4cbd49433573",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8fdf1721-6826-439a-bcca-f000f2154a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde41fdb-8df6-457b-92ea-adf16f8f392b",
        "cursor": {
          "ref": "8575990a-fb59-46bc-b40c-c4ac418f1a83",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "baeaf598-4386-45c0-bd68-0b7c78ce964a"
        },
        "item": {
          "id": "bde41fdb-8df6-457b-92ea-adf16f8f392b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "71cf30d6-4a1c-402e-bba0-f47c836c7a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46855526-ca1c-4b81-86c9-ffb416a07d48",
        "cursor": {
          "ref": "96da1dd5-4e04-47f1-8fb3-eae0d3b5b7f4",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a055b17a-361d-4ffa-8987-b809f7225d60"
        },
        "item": {
          "id": "46855526-ca1c-4b81-86c9-ffb416a07d48",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3d16e479-0914-443d-8023-ebd14265d3ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8bda98-00f8-442d-848b-20fa65061e3a",
        "cursor": {
          "ref": "c43c6899-39da-4d39-91ca-a721666a1df2",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "3d8f7c2a-39b1-490f-b9d9-292bc00ff87e"
        },
        "item": {
          "id": "1a8bda98-00f8-442d-848b-20fa65061e3a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a46a79d1-aae5-43f0-9d49-0d62a0893dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea59608-fe66-4c8e-9836-2476824c0e30",
        "cursor": {
          "ref": "197d5f51-ea32-4f35-834a-e11c706d33f1",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4362f5c5-91f7-4638-8101-5dbbef836c4f"
        },
        "item": {
          "id": "0ea59608-fe66-4c8e-9836-2476824c0e30",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7714f8c3-6a66-4cb3-91ca-71271b6d0eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630c2bcd-07d9-4880-917d-e007f0110be0",
        "cursor": {
          "ref": "9b369d94-c81f-438f-9501-a30190cad1ba",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "da11457b-5cba-41fd-910b-3598f03f9af7"
        },
        "item": {
          "id": "630c2bcd-07d9-4880-917d-e007f0110be0",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "89f86b4c-f881-409e-9361-1d12d897d82e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb6bf77-ea4a-41f9-bd03-49a518f3b692",
        "cursor": {
          "ref": "a8ac4422-b036-40ca-b832-f0c1a65a55b4",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "67696e80-0c27-4318-98b4-2ed345b23d98"
        },
        "item": {
          "id": "1fb6bf77-ea4a-41f9-bd03-49a518f3b692",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f733f2be-94e7-4460-b303-9039130e77b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b70b433-3bc8-4dad-b702-f02058ad0455",
        "cursor": {
          "ref": "6a98f42d-d716-4d06-b87a-fae824c7b46a",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8f9136a7-0bd4-4846-ba0d-5f37edb9074e"
        },
        "item": {
          "id": "6b70b433-3bc8-4dad-b702-f02058ad0455",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f43f0479-46ee-44a5-9de8-992f6edd3395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e03750-9d55-41ba-aaf9-f5fcf099be30",
        "cursor": {
          "ref": "0144cdcc-dc85-43a8-88e5-e00dd4aa29d1",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "14a80aac-1b45-4c55-b9fe-3c87b78eed35"
        },
        "item": {
          "id": "37e03750-9d55-41ba-aaf9-f5fcf099be30",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f83ade1c-9caf-45e6-b39c-5a3d832a4dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bccaf9bb-442f-4ba3-b994-cc90cf8701a6",
        "cursor": {
          "ref": "e7fa0be4-1978-451c-b71b-49737f1f3909",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1051f7ce-e295-408e-b88d-11ba1fee7ca6"
        },
        "item": {
          "id": "bccaf9bb-442f-4ba3-b994-cc90cf8701a6",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5f248728-57c3-452e-b9c9-8f33ea5f9d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49392e3-3f0d-4fd6-aca8-e5cb19dfb285",
        "cursor": {
          "ref": "b05d0a45-a44a-460f-812f-e82f6790ddaf",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0e135fde-4348-4133-a021-b575036fc653"
        },
        "item": {
          "id": "c49392e3-3f0d-4fd6-aca8-e5cb19dfb285",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "08bc00f0-ea22-4946-ac08-2d7af5116d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65923107-a44d-40dc-871d-8ea5459e3053",
        "cursor": {
          "ref": "3bc59c2c-b789-4bbe-aa7d-ad66b8d8284d",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a813b45b-fa34-4e1b-9465-0e3bc3025241"
        },
        "item": {
          "id": "65923107-a44d-40dc-871d-8ea5459e3053",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "371b88b6-8b26-4038-abab-94a97b098c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4056aa7-257c-4f93-a0ad-3e10dba85a2e",
        "cursor": {
          "ref": "2ea44894-f5ad-499e-9cf0-6fbcbe95f017",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "cdec6c26-a6f4-4ea6-a1b4-67cb179eaacb"
        },
        "item": {
          "id": "e4056aa7-257c-4f93-a0ad-3e10dba85a2e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2696d31b-47c1-4ba8-a5b0-07176b0f1d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8538e9b-993f-4abc-8b54-6df3fc51e658",
        "cursor": {
          "ref": "23833f6f-84b9-4a45-930d-24a4cbd0a844",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "582b5241-3617-439f-a5a2-bcaada0e0dbb"
        },
        "item": {
          "id": "d8538e9b-993f-4abc-8b54-6df3fc51e658",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e84b136f-2f26-4639-a478-cd859cc7cc4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7776f3f-c771-4a12-b638-ad3ef8b9a9a4",
        "cursor": {
          "ref": "bc62d3c7-6660-46df-bc4d-eca01ca81630",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "06004f5f-ac42-40e6-a601-579757f5a0b9"
        },
        "item": {
          "id": "e7776f3f-c771-4a12-b638-ad3ef8b9a9a4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9e0cfcad-c15e-46e5-824b-ddca25ca1d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e237acd-e1d2-4b3c-b4e6-0d44ad556797",
        "cursor": {
          "ref": "3d56cc7e-07db-496b-a05f-170b3227034e",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5920592b-812a-4f47-b33d-f8894185729a"
        },
        "item": {
          "id": "8e237acd-e1d2-4b3c-b4e6-0d44ad556797",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d69d92a5-c259-48d0-8a76-9eb31a328007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2cea131-f0d6-4338-9833-6eab7bee9ebc",
        "cursor": {
          "ref": "5cc1aa13-cd7f-4587-86a8-819ed8e12c33",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "97bda5e4-273a-439e-8cb1-119580b7bf62"
        },
        "item": {
          "id": "d2cea131-f0d6-4338-9833-6eab7bee9ebc",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4e7a977b-8af6-4461-86a5-5cfa79c5196e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e117ae9d-7319-40cf-af4e-e5eb415be04f",
        "cursor": {
          "ref": "b1da7de6-2751-41ce-aa23-900120e0e558",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e87a8ab9-a02f-4ffc-aa11-a2a12aa0bcb0"
        },
        "item": {
          "id": "e117ae9d-7319-40cf-af4e-e5eb415be04f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d5ebe686-fd1b-4c7e-a4e1-b3b4c156a7b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cfffa41-0a19-4914-b139-b248b278c3d7",
        "cursor": {
          "ref": "da36b831-2352-4874-a47d-55f1b84a563b",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "bcddd4d6-fff6-4c90-9adc-1562871ecfcc"
        },
        "item": {
          "id": "6cfffa41-0a19-4914-b139-b248b278c3d7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "35998a2a-68e5-4a6f-8a30-73a5d36fa033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ba47d0-399d-43d0-b1f8-e49b53155ab5",
        "cursor": {
          "ref": "98973c53-36c6-4023-9a42-7434c5c7b151",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2ed9f82b-6643-4de2-83bd-c44bd4b77ad1"
        },
        "item": {
          "id": "41ba47d0-399d-43d0-b1f8-e49b53155ab5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a629e56f-ae42-47ed-af12-c198f50313e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1c9c07-cba1-4c31-a01b-78c24042bbfe",
        "cursor": {
          "ref": "7fb31c1a-7696-4a23-a067-dda79ce9e9d0",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "66ded834-6406-4e25-b335-8b1db56852a3"
        },
        "item": {
          "id": "cb1c9c07-cba1-4c31-a01b-78c24042bbfe",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6d45c343-78f2-40c5-a830-4ed9927484bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56c331b-93c5-44e9-9565-69eaaf858630",
        "cursor": {
          "ref": "50abbf3a-6f1a-40f3-9f11-d28f7131b8c2",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9ee77dc9-0afe-4cb8-84eb-16dfa0ae23a2"
        },
        "item": {
          "id": "f56c331b-93c5-44e9-9565-69eaaf858630",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b22a2057-13b5-4cd2-bf2d-161d4b6f24e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c26c6d6b-fabb-4753-8e2f-497805c38d0a",
        "cursor": {
          "ref": "3200efba-2fcc-419a-8630-d22b25521a16",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6f0cb5ff-730f-4a02-abba-b643caf88003"
        },
        "item": {
          "id": "c26c6d6b-fabb-4753-8e2f-497805c38d0a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "1170cb2a-ea9a-4f4d-b4ed-fe1b1285ff5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1607a0c1-a020-45a3-8276-53d02fe99333",
        "cursor": {
          "ref": "30b02455-0413-4fe3-999a-ebb711b1b23f",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "dc2a8452-01dc-48ad-81d2-2558c076aa11"
        },
        "item": {
          "id": "1607a0c1-a020-45a3-8276-53d02fe99333",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f25f7ba2-af42-4047-8920-029d86af9f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac080526-bb02-4962-840d-d5eabe6661c3",
        "cursor": {
          "ref": "94f3321a-cadf-4597-ab64-430c5c2fd114",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6237ef87-b02f-41e9-80ee-77ed5a364d57"
        },
        "item": {
          "id": "ac080526-bb02-4962-840d-d5eabe6661c3",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a5b967e1-cfef-4bcd-9da5-a9d48b2badec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635fc1b3-928d-42fd-b432-5cfd24c35430",
        "cursor": {
          "ref": "1467a6fa-da76-47bf-ad74-38a98c32a86b",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "cc7c5623-2564-4059-9787-f62d5f8ceac2"
        },
        "item": {
          "id": "635fc1b3-928d-42fd-b432-5cfd24c35430",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6ed55762-2695-47b4-b412-7ff048d63425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba7fea3-588e-4696-95d7-5a5d65a6d59a",
        "cursor": {
          "ref": "1be55fbb-bf76-4764-bdd4-9ada459df24d",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "cd1a5cdf-6985-4686-a6c3-47776b4277f5"
        },
        "item": {
          "id": "1ba7fea3-588e-4696-95d7-5a5d65a6d59a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "be2c36a5-781b-4430-8b10-81b6783426ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7975e47f-8c6f-4466-8e2f-a2e3fcd089d4",
        "cursor": {
          "ref": "81c43fc9-15a0-440f-bda8-9071368d7a97",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f3413453-709f-46b4-9df4-ca9555f7a0ad"
        },
        "item": {
          "id": "7975e47f-8c6f-4466-8e2f-a2e3fcd089d4",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "82c513df-b93b-4d6f-adb6-bac6207d5161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5241442b-2c3d-4eda-b33c-6e427805d78a",
        "cursor": {
          "ref": "159dea46-a4e2-49de-839b-99268001dc83",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8223bce5-89eb-45bb-ab3f-fbf362dcfcce"
        },
        "item": {
          "id": "5241442b-2c3d-4eda-b33c-6e427805d78a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ec99ea91-7cf8-4828-b6c4-fff077b07d1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5454033-8408-4d24-a518-6436c556c9cc",
        "cursor": {
          "ref": "9a6a71b0-f475-4d34-a726-b5098e079590",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d9259272-9ec6-4192-ad3a-a48891b2d88c"
        },
        "item": {
          "id": "d5454033-8408-4d24-a518-6436c556c9cc",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3bca4fde-9f41-42d7-84a1-22d266808abc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1c8614-412a-4daa-a8e0-021e416fe0d4",
        "cursor": {
          "ref": "8dd54fb6-5569-4673-822c-01607afdc537",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d901b708-11bb-4a90-813e-0d2cfe545eef"
        },
        "item": {
          "id": "5a1c8614-412a-4daa-a8e0-021e416fe0d4",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2bf4e4aa-0129-4e2f-b873-324f71eb34b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93dd91a2-b623-4f1d-bc63-55abc5374710",
        "cursor": {
          "ref": "da7863b8-44b0-450b-831a-747d39efa77f",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9a8de9ce-6e66-4f25-a303-73b6c05610d9"
        },
        "item": {
          "id": "93dd91a2-b623-4f1d-bc63-55abc5374710",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e7d0e3c7-b320-4411-a277-0ac955ff2046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a00732-7f50-4d95-860f-3c62c1dc581c",
        "cursor": {
          "ref": "7a9659a8-adfa-41b7-ab68-7ea7e5f12570",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b1fcb733-6b1f-4ae2-8179-8d70a3732621"
        },
        "item": {
          "id": "95a00732-7f50-4d95-860f-3c62c1dc581c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "1c45ab01-014f-4ef0-8aeb-fb03f18eeb2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59546864-c234-477f-a7cc-dfe2fffc0239",
        "cursor": {
          "ref": "8c1a76bf-4b02-418a-8750-28726eb7b7d0",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5f1b5a95-d982-4e0c-b240-ed67af281b57"
        },
        "item": {
          "id": "59546864-c234-477f-a7cc-dfe2fffc0239",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "bb9794e9-d6e6-4843-aa40-57f0c80bbc65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03dbce87-fdf9-4028-b803-3dd5aca41d9a",
        "cursor": {
          "ref": "2b953392-30ce-474f-aebb-c749769324e1",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "79604835-1600-4337-a18e-a0d4330f088a"
        },
        "item": {
          "id": "03dbce87-fdf9-4028-b803-3dd5aca41d9a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b99eb5c1-44f5-45a2-9a88-5c0b410375e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e78bbe6-c07d-46d8-8b5d-046d98cb68a6",
        "cursor": {
          "ref": "c13087e2-de96-4223-9adf-0130f2d45c80",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6a8b35dd-02a5-4843-9b19-f6dc31ab33f7"
        },
        "item": {
          "id": "5e78bbe6-c07d-46d8-8b5d-046d98cb68a6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "36cfe5d1-6f90-4b34-88a8-60f3f928ef49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f581a6-1a39-4298-93b5-2f459b732fab",
        "cursor": {
          "ref": "a405a278-0d4a-4af8-860c-07a27149ec76",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4bdeda9c-af6b-4e29-9d15-de0488ea20c8"
        },
        "item": {
          "id": "e0f581a6-1a39-4298-93b5-2f459b732fab",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "482cfe17-76a5-4adc-b73a-c3e11d4c7dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109844f7-09e5-4179-9117-08270bc882f5",
        "cursor": {
          "ref": "c79deee1-caa0-4497-8ade-9a578c59b5b8",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b24b85e1-82e5-4a2e-bf74-1e7ac62e4749"
        },
        "item": {
          "id": "109844f7-09e5-4179-9117-08270bc882f5",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1c042ae6-fe77-4ca2-93f5-b03e723317a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6800a6f9-d7dd-41f2-a2cd-311361fa1b23",
        "cursor": {
          "ref": "e071f7d4-0a63-4225-b6bc-6a11be782626",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "4db0f99e-c9ac-4207-9bc9-8a6ea68e6540"
        },
        "item": {
          "id": "6800a6f9-d7dd-41f2-a2cd-311361fa1b23",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "84b40b8d-82a7-4acf-8a3c-45098fb294db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce25eb43-9c8f-4796-b59f-c239bfa06b6e",
        "cursor": {
          "ref": "fdfeb318-0c46-4680-8567-eae337d6b5fd",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "583f3f3b-3c5f-4cab-9f49-73ae51617816"
        },
        "item": {
          "id": "ce25eb43-9c8f-4796-b59f-c239bfa06b6e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2e4841aa-03c4-433b-a262-6cddc914335d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0261fff0-7c6e-4550-b5ab-f8d5b206b24f",
        "cursor": {
          "ref": "43a51d96-cdb9-4fbc-a123-87cd3a55db36",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "66efa02e-1fe7-4e0c-8480-3e85aa6fe7eb"
        },
        "item": {
          "id": "0261fff0-7c6e-4550-b5ab-f8d5b206b24f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d1240c3a-e1d4-4bfe-9ec9-f588f9246117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2bb9c76-45a1-4b1a-8e2c-c3b6b819bb0c",
        "cursor": {
          "ref": "3147ca4d-75f7-44be-8f92-eaef3485110d",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "bb02bf10-9beb-42e6-8ee7-adde313ad736"
        },
        "item": {
          "id": "a2bb9c76-45a1-4b1a-8e2c-c3b6b819bb0c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "aa62af77-79df-40da-b6f0-2c2c5e1a521e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94d3651-dd9e-4eb9-a2b0-fab9fa5caf96",
        "cursor": {
          "ref": "00dd8aec-079d-4349-aa20-02268af46205",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2e4c64d3-6e19-421b-a4ce-e1ee0c1f834b"
        },
        "item": {
          "id": "d94d3651-dd9e-4eb9-a2b0-fab9fa5caf96",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a8f7ad85-9cbe-4c26-8e6d-faed374761e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75393754-f18c-444d-a621-fe46e5894fdf",
        "cursor": {
          "ref": "10df0579-9de4-4dba-b228-06d7d0b26365",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "28817784-4cd2-42bd-8ea9-f9455f03ce6f"
        },
        "item": {
          "id": "75393754-f18c-444d-a621-fe46e5894fdf",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "456fb7c7-e18f-4e24-828a-582c8a680a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04c4c39-17a5-4f0b-a018-2951c898fcd1",
        "cursor": {
          "ref": "12072510-1aac-458c-a9ff-1dd25f8b2fa5",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0dac9885-d22a-47eb-bc4d-499521242e52"
        },
        "item": {
          "id": "f04c4c39-17a5-4f0b-a018-2951c898fcd1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8746f7fc-ca9f-465b-9951-df2c10992045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4845528c-f8b9-44f7-a066-66364df2bdf0",
        "cursor": {
          "ref": "f254d4fc-27f9-4aa2-b797-0ef70cc5fe70",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d943ac7b-5c22-4fc3-b4c5-2710f8f9853d"
        },
        "item": {
          "id": "4845528c-f8b9-44f7-a066-66364df2bdf0",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "80371e5e-bb1d-4a68-886a-87d1d81578bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17beeb78-582e-4a26-87d3-bb1c8437436a",
        "cursor": {
          "ref": "319bbe2b-7d9e-43c3-81ae-6b804abbd931",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "9b5a4148-27a8-44c1-a41f-dc4cdcf5ffe7"
        },
        "item": {
          "id": "17beeb78-582e-4a26-87d3-bb1c8437436a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9fe224d3-4922-42d6-8d8f-2cc137c4e602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49fd3de9-058a-48e5-afa2-b197a77340a2",
        "cursor": {
          "ref": "a81acf49-0fea-417a-8b08-e7d269371052",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d390b21e-20d6-4a84-a63c-97c24be4ceb0"
        },
        "item": {
          "id": "49fd3de9-058a-48e5-afa2-b197a77340a2",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "50304dd0-436b-424e-8c2c-704dc4f8a7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38fe7e8-8e0e-447b-aae0-d10364296c43",
        "cursor": {
          "ref": "56c39ab3-7b2c-4b85-836a-6f0167d36bce",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "fc969833-afc1-4a1f-ae53-c982d9246228"
        },
        "item": {
          "id": "b38fe7e8-8e0e-447b-aae0-d10364296c43",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "55ec3817-f6f4-4090-80a2-e9922aa91c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc374c2-4ee7-4ec4-9fe5-a51b07385f38",
        "cursor": {
          "ref": "efe697aa-b9a6-4b2f-a7e7-e974b189aaef",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "40e5b269-fc23-4b4b-b747-dd3bcb33023b"
        },
        "item": {
          "id": "bcc374c2-4ee7-4ec4-9fe5-a51b07385f38",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "8926a319-0787-4e9f-a4ff-0e090a0728fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ad15b1-0442-4927-8e1e-52e44df21ca7",
        "cursor": {
          "ref": "1dd9ba48-025d-48da-9304-b960e1fe5a66",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a2acd940-db3f-49e5-a672-891d08be654c"
        },
        "item": {
          "id": "40ad15b1-0442-4927-8e1e-52e44df21ca7",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ebd6b6af-5bfc-47b1-bf55-c1a27cd626b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ffd9fd-93fd-4c46-abcc-e8a259348c6e",
        "cursor": {
          "ref": "0e324219-95b7-43a4-81e4-bd412d0c9380",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "6bc41f43-da79-4209-a221-9ce08af55b08"
        },
        "item": {
          "id": "24ffd9fd-93fd-4c46-abcc-e8a259348c6e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "935aa7e6-bfe0-4845-af80-ad14c8975094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2063bb6e-b693-4dc4-ac76-2aa6526b9030",
        "cursor": {
          "ref": "56988702-0422-45d8-8505-2a218317ead6",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "06e0df23-ce27-40b5-bc3a-537ed5e6e144"
        },
        "item": {
          "id": "2063bb6e-b693-4dc4-ac76-2aa6526b9030",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3fb4a6ed-e73a-4d5c-a6cc-4868229fb6b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc6a0f9-56b9-4e9a-b492-35f65fed8ada",
        "cursor": {
          "ref": "ee330ead-c696-42fb-841a-4f77dc4b8e25",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8c6d92e1-ac56-47cd-8a20-35865eb65515"
        },
        "item": {
          "id": "1fc6a0f9-56b9-4e9a-b492-35f65fed8ada",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "cf6473be-3abf-42fb-8b03-395a6e15586b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef16f41-217c-44f7-8042-baf21c312c79",
        "cursor": {
          "ref": "39c50fb3-6490-4a0f-84a8-a9f53fded2bb",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8e419822-e5b9-407e-ac2e-b78d2c5fc5e0"
        },
        "item": {
          "id": "4ef16f41-217c-44f7-8042-baf21c312c79",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "41336db7-bc84-4040-bbe2-3b2fe46548ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd03221c-cb4a-4419-96f9-d88559c7e832",
        "cursor": {
          "ref": "53c6740c-a231-4e7b-adbb-5f0a28dc7732",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "130ed52c-0122-4fd0-aea4-532d72e662ba"
        },
        "item": {
          "id": "bd03221c-cb4a-4419-96f9-d88559c7e832",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3868d006-4389-4fb4-afac-e0dbf557cd3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea078d17-fd55-45c2-b418-13cf3cc65678",
        "cursor": {
          "ref": "26e0eab2-9ff8-4881-9b10-2e561a02f945",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e2d4daaa-d775-427c-83f0-50259627a2d4"
        },
        "item": {
          "id": "ea078d17-fd55-45c2-b418-13cf3cc65678",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "471466ad-165d-460b-bd64-69d3b37ba52b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08af24e9-359c-4678-99de-68728a182cfa",
        "cursor": {
          "ref": "863e4f12-10c6-4293-9547-d053260ff335",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5ecba66b-d5f7-4150-b8cf-81bfb255579b"
        },
        "item": {
          "id": "08af24e9-359c-4678-99de-68728a182cfa",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "72b6fc8b-9683-4238-a1a2-debbe7de0b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a59f778-268c-43eb-a28d-66b9506763a6",
        "cursor": {
          "ref": "81b41bb3-9736-4d2c-b471-dffe027c9486",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5050e3a9-299c-47fb-b925-0df124643ab3"
        },
        "item": {
          "id": "3a59f778-268c-43eb-a28d-66b9506763a6",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "9e2e9ed5-8012-43d9-9060-1c2ba6828efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69fffb9c-b710-4fca-9c38-fba8a393920e",
        "cursor": {
          "ref": "2eedd099-9f9a-4ed3-9288-c1279ed69be8",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "947b8193-bffc-44bf-8653-e33f78033a07"
        },
        "item": {
          "id": "69fffb9c-b710-4fca-9c38-fba8a393920e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "85121ed2-8c7a-4f6b-9f4e-9c4c57b08a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e4683d-a710-43e0-866a-c82274cd247d",
        "cursor": {
          "ref": "983377b0-57f8-4468-8c57-f42c0bdafa42",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9bed078f-4eb3-4c36-8b3b-e35a0b0bf4a3"
        },
        "item": {
          "id": "e4e4683d-a710-43e0-866a-c82274cd247d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c750a27f-94d8-49fc-80ed-c3591713ad14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77281c59-416e-4863-8b52-dca9526c6123",
        "cursor": {
          "ref": "9cfd3429-080e-4927-893a-8c4e33d6521d",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f49832df-204a-493e-aca8-621e59945244"
        },
        "item": {
          "id": "77281c59-416e-4863-8b52-dca9526c6123",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b04188b6-5dac-4d66-8d8d-2128548735c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 779,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6bcb28-3f7b-43a1-8a73-1940c27db604",
        "cursor": {
          "ref": "ecf37f77-46e9-4a96-bc91-4323566d210d",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "5acbc704-bc1d-4f99-8fdc-003d4b48fd3a"
        },
        "item": {
          "id": "4d6bcb28-3f7b-43a1-8a73-1940c27db604",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5e0d0d51-c24c-4117-ba0f-b12ad6601ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 141,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56129f4-af13-468e-8ba5-ba527d8f36b9",
        "cursor": {
          "ref": "cc5d1d0e-7df9-4c09-82bd-b958e76755a1",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4b598609-150c-4dc3-aff0-1a5595e7a764"
        },
        "item": {
          "id": "f56129f4-af13-468e-8ba5-ba527d8f36b9",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "52f0485c-90e6-41b5-8249-ec30f85c6ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f08d5693-935a-4fb9-aed8-764f26bb5025",
        "cursor": {
          "ref": "f940ecfd-495b-4d73-9614-4219f3b99d21",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8682c5b3-62f1-4b8c-9f22-da473f938f3a"
        },
        "item": {
          "id": "f08d5693-935a-4fb9-aed8-764f26bb5025",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c5b3b418-ca70-4b3e-bdd9-e37400a4d6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb9392bd-cc16-438b-93df-7eff7943a303",
        "cursor": {
          "ref": "6c3a86d5-618e-43e4-b00d-996301497af7",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6f240d45-9668-4a1f-8b08-b7b044bdbbfa"
        },
        "item": {
          "id": "eb9392bd-cc16-438b-93df-7eff7943a303",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ed0ba655-ce3d-4cd9-a5c8-9e37cfe86729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26210f01-e0ce-464e-8f4e-862ac2a841cf",
        "cursor": {
          "ref": "feae47a0-ef21-49ee-9eb8-1655c95b5a71",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d803f846-e70a-40f2-84a7-3632721be66f"
        },
        "item": {
          "id": "26210f01-e0ce-464e-8f4e-862ac2a841cf",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "fbe67930-e6ef-4aa8-9402-132a7e61d137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b6e4d8-f522-4785-baf8-cb586489ab3c",
        "cursor": {
          "ref": "9bb8f8f6-a01f-4d3a-9c98-c35c0d918c79",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2fc13fca-3e7b-4fa0-983c-f120cb9296f0"
        },
        "item": {
          "id": "51b6e4d8-f522-4785-baf8-cb586489ab3c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5c18ce59-b906-41ac-9853-3aed50b4f286",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27952603-e2f8-4d94-ab70-990af7a0cbef",
        "cursor": {
          "ref": "d2827aea-fe6c-4257-90f6-e9ae7146995b",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "dc485299-ed87-472d-b36d-1181e354ac32"
        },
        "item": {
          "id": "27952603-e2f8-4d94-ab70-990af7a0cbef",
          "name": "credentials_issue"
        },
        "response": {
          "id": "579db87b-6512-4e0a-b218-bda5f695ec03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "639c21b0-aace-49a8-9fac-2d01936216ab",
        "cursor": {
          "ref": "4ffd188f-61f4-4b22-97e2-eb0b21de1b4d",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "50b969f6-6e50-4eef-a5a2-d5efe5a455e0"
        },
        "item": {
          "id": "639c21b0-aace-49a8-9fac-2d01936216ab",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e55c20a0-e443-4ca8-a531-c6ee96725c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "dfa3558b-59b2-4600-8baa-3a8da8985459",
        "cursor": {
          "ref": "b3252fcf-a5c0-4f89-a6bb-c635bcb6f5e5",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "eb12ab1c-c41f-4592-9037-77ac0e2c0df7"
        },
        "item": {
          "id": "dfa3558b-59b2-4600-8baa-3a8da8985459",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "93e4e1cf-4eb0-426c-a44b-ae4d2c1c0eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "807fefdd-a867-4cd9-a2df-1274fff0763f",
        "cursor": {
          "ref": "eb853719-1062-4342-91c2-d0c906c04e27",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "7aa2fc99-6407-4529-94b3-54027a17a9a7"
        },
        "item": {
          "id": "807fefdd-a867-4cd9-a2df-1274fff0763f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "79b74ba7-bc20-45c8-bb30-477fbfedc235",
          "status": "Created",
          "code": 201,
          "responseTime": 16141,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "803b3576-cfe8-4789-a183-bd10ad5d84fc",
        "cursor": {
          "ref": "123e14fa-30ea-4b00-9173-d73b59b074c9",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b6327275-e6b7-4e8c-822c-1da6be364d69"
        },
        "item": {
          "id": "803b3576-cfe8-4789-a183-bd10ad5d84fc",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5067d2f9-43f2-46d1-acb1-693ebedd487a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "74ac390b-5d46-4ca0-8c75-7b489c1bc891",
        "cursor": {
          "ref": "9417f4d7-58c5-4246-a544-db610f6f8d20",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d374d802-57ce-46af-8bd2-f85c0656d797"
        },
        "item": {
          "id": "74ac390b-5d46-4ca0-8c75-7b489c1bc891",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0ceb6787-b0ea-4566-bc4e-7a90b2dcea12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "479758db-9f8e-4b07-9bd4-39a62203d641",
        "cursor": {
          "ref": "0975525c-915d-4ed8-ba9c-58b65d062916",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d8861793-d266-41a5-bedf-cce5214bf0ab"
        },
        "item": {
          "id": "479758db-9f8e-4b07-9bd4-39a62203d641",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "dd3b37b5-054b-489d-be91-d77794d0578d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f14a895f-24b4-4af8-b0d7-1d3b4fae15b2",
        "cursor": {
          "ref": "bf89067a-d26d-4e7d-b046-3200c712c835",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "5998ee53-be97-4dd9-a76a-5bcf8601c9de"
        },
        "item": {
          "id": "f14a895f-24b4-4af8-b0d7-1d3b4fae15b2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d78db0a8-77ea-4fa2-a6c6-00baf66da1e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb06f49f-7a7a-41c2-aeb3-7f70d63bc0c7",
        "cursor": {
          "ref": "61eb7abf-0990-4c8c-9ba2-d86eed437f1a",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a20e563c-bdc8-41d6-ae6b-0bfbe6c1f26d"
        },
        "item": {
          "id": "fb06f49f-7a7a-41c2-aeb3-7f70d63bc0c7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8d2671ac-49f3-4b01-b665-c7c487c8f3e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d102e44e-f22d-4156-9581-fc688375f298",
        "cursor": {
          "ref": "825f500e-c4dc-464e-baa4-ec3b80dc28fe",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "dd7f2ce4-d187-41c2-a8da-c17be0fa3045"
        },
        "item": {
          "id": "d102e44e-f22d-4156-9581-fc688375f298",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9e06039e-0c85-4b89-98f3-2d5f301a3791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e09e4f8-f323-4360-8f3d-82bd0a8cc587",
        "cursor": {
          "ref": "3bd9c4f5-6489-48eb-8e1e-c86c5e86b0cc",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9f4a0f39-4549-4be9-ab31-06c74953a589"
        },
        "item": {
          "id": "2e09e4f8-f323-4360-8f3d-82bd0a8cc587",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "08968807-2751-4b65-b016-9d521099a036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28dd1167-f1c8-4173-90d9-b6019928502e",
        "cursor": {
          "ref": "4d3e99df-5c8f-4ed2-92c3-acb536eb78a7",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "420e653a-7971-498c-aa7a-997161acd3f9"
        },
        "item": {
          "id": "28dd1167-f1c8-4173-90d9-b6019928502e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "495b1d6c-a534-4fdb-ab39-1ecd1cc751f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92098ba6-59b7-4848-ae86-ff6035b5be43",
        "cursor": {
          "ref": "09b99687-40ef-40de-991c-4a6ed995aea6",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a4d3af30-d7fb-44f3-b1d3-a5575c69c2ac"
        },
        "item": {
          "id": "92098ba6-59b7-4848-ae86-ff6035b5be43",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "75b8e076-c450-4193-bfc2-a9593a55a20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfbd900c-a56b-4129-ab31-7091c71581ac",
        "cursor": {
          "ref": "6bec0633-05d5-4d74-be61-5908ba92977a",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f08fb97b-2ab3-468e-b7cc-8923400dd2cf"
        },
        "item": {
          "id": "bfbd900c-a56b-4129-ab31-7091c71581ac",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6bf9bec4-a284-4ddc-a6c9-55e8589457a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86809e94-a889-4b43-9b76-c6015321bad7",
        "cursor": {
          "ref": "35c101ba-a1d8-41d8-bccc-22ab8cadf148",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "32ed525a-a972-4dfa-b401-167293d08b71"
        },
        "item": {
          "id": "86809e94-a889-4b43-9b76-c6015321bad7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4a0d75aa-f87c-45a2-8d8f-bebabef96397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf20583-1be0-4262-9369-4e21eec24847",
        "cursor": {
          "ref": "177b80e6-e5a5-4101-9e83-b835b1b3713f",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "58b29d93-12b8-40cc-870d-e8d8b150c5ad"
        },
        "item": {
          "id": "8cf20583-1be0-4262-9369-4e21eec24847",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4593ba4c-f03e-49cd-b07c-24c491bcc9de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb98e19-2694-41f2-af18-ea8af1b7082e",
        "cursor": {
          "ref": "4f1f1f24-117d-4b49-8282-ae8769c25641",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "520a0597-d854-4a32-9930-d692bb174ff5"
        },
        "item": {
          "id": "0bb98e19-2694-41f2-af18-ea8af1b7082e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2c93fe24-ab74-4746-9f90-af0504a84ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ec7884-5668-439b-b43b-b3a74e5b01a5",
        "cursor": {
          "ref": "045886ca-8da4-4cf7-b776-732a30004d86",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "76f2457d-236c-41b2-8e53-5470c551daca"
        },
        "item": {
          "id": "e2ec7884-5668-439b-b43b-b3a74e5b01a5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a50d9499-011a-41dc-9e6d-c1447158c5e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217adb62-a0bd-455d-ab6c-e5a0990bdaca",
        "cursor": {
          "ref": "fb0ec884-4c03-49d2-8a54-dfcc627ab3ef",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f1a02ec6-dd2f-43ec-909c-c27d330d1c67"
        },
        "item": {
          "id": "217adb62-a0bd-455d-ab6c-e5a0990bdaca",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4503e53e-c6da-49a9-851f-29f84c5f0584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e4e7a5-c0c3-4371-9be1-32e530283a28",
        "cursor": {
          "ref": "7cc457f5-6bca-44f0-9bc7-09f67b52845c",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ec95856f-67a1-4b9a-846b-fe9ac1d79b27"
        },
        "item": {
          "id": "a9e4e7a5-c0c3-4371-9be1-32e530283a28",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "750e5855-ede6-4fe6-8c22-d3dc73bebc39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abce7697-6388-4a0f-af8d-dab22782176f",
        "cursor": {
          "ref": "445e864d-a2c7-4b30-a10f-6a3530063a0d",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b2ebaffc-42f8-4c7d-a5d4-122326db4775"
        },
        "item": {
          "id": "abce7697-6388-4a0f-af8d-dab22782176f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d832522c-cf5c-493c-8ed4-987b3bcdda4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e94329-afb4-40ec-9613-4d244b55d0ff",
        "cursor": {
          "ref": "9bba03e2-8c23-4990-9e75-cd5c073da9f8",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e977a13f-a454-4240-839e-d386b7aa41de"
        },
        "item": {
          "id": "90e94329-afb4-40ec-9613-4d244b55d0ff",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fcbfffcb-befa-4117-a80b-5274ac71de34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f1d0c6-d4f8-45c5-aaa4-4554c0f21fc5",
        "cursor": {
          "ref": "62941d9b-3b83-40e3-93c1-bd118c183589",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "84d3b975-7e3e-477b-a3c7-a11621896d98"
        },
        "item": {
          "id": "f5f1d0c6-d4f8-45c5-aaa4-4554c0f21fc5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f5c807fd-dd1d-45f4-919c-d630a358339f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d0222aa-382b-48e4-a7cf-ef02d2e0b57f",
        "cursor": {
          "ref": "f2a603b4-f885-4302-a739-e998a6b54a89",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c9c50122-f76f-4a09-9ddd-b1705d017b04"
        },
        "item": {
          "id": "1d0222aa-382b-48e4-a7cf-ef02d2e0b57f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ad72efba-1d54-44dd-adbc-659ee5f95f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c320af5f-c393-4009-9998-7dece430f62c",
        "cursor": {
          "ref": "1bc31958-fb85-4d96-9564-ea750a477261",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "31dd13e1-b00f-41e1-905e-dde71215cdf6"
        },
        "item": {
          "id": "c320af5f-c393-4009-9998-7dece430f62c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "53535920-252b-4e9e-bda6-375057d3c98f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3ca67b-953b-40ee-9c08-da985d32c99c",
        "cursor": {
          "ref": "ade15413-9aa2-474d-9b1a-f92f23f8daf3",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "be6aa64b-0810-4285-b003-54afff92fba1"
        },
        "item": {
          "id": "4f3ca67b-953b-40ee-9c08-da985d32c99c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0e4bef17-1a77-481a-98a2-dc5f81eb8d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea1e1ce-ba88-4cc3-a3e4-a7b83096987e",
        "cursor": {
          "ref": "ac725efa-0718-4c5c-a522-3d5f6210395d",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "843bc0b1-97db-4f95-a3b2-8bc76b0a0398"
        },
        "item": {
          "id": "eea1e1ce-ba88-4cc3-a3e4-a7b83096987e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "998eaf56-da53-4150-badc-0e18dc83c442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f366f3-6f68-46da-8386-f4a2b0bb54c5",
        "cursor": {
          "ref": "e483f23a-e669-4d40-af2a-9bdc134f8ff3",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5def0523-9249-441d-9bb5-ae2fd8c373a1"
        },
        "item": {
          "id": "51f366f3-6f68-46da-8386-f4a2b0bb54c5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6644ea2f-6c92-47e2-b8d0-769aba86aae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27916490-5404-42e4-a9a8-4a18d0d66a14",
        "cursor": {
          "ref": "40a34964-3a84-4c4f-bb27-2111d60a4038",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2d41a55c-a5c6-41de-b5d6-2bf398528987"
        },
        "item": {
          "id": "27916490-5404-42e4-a9a8-4a18d0d66a14",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c2e9211e-31ee-4043-9a38-91d7a06be31e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d2e14d-e4d6-4906-a3ea-567c5657729d",
        "cursor": {
          "ref": "9cf52d35-c5be-4d80-8c0e-b486bb4426e4",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "114effa4-ad9d-4319-9f19-042d90c61912"
        },
        "item": {
          "id": "76d2e14d-e4d6-4906-a3ea-567c5657729d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "22c8d450-51ef-4a83-850d-5e80c78ba939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256265a8-76b6-4ed8-9388-d2c962c5e1c3",
        "cursor": {
          "ref": "0b935962-8573-46f5-9dec-f91d7b9aef00",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f9391769-fe54-409f-85bd-8cf0af254688"
        },
        "item": {
          "id": "256265a8-76b6-4ed8-9388-d2c962c5e1c3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5b273c85-c818-4ddf-9e04-8b5fc33213f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6e9f54-7dac-4da3-958a-1e8b0fde18b5",
        "cursor": {
          "ref": "43412d93-163c-4dbd-9ee5-6cd55f7cb230",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0ec84464-75fb-4491-af90-0f396c981da2"
        },
        "item": {
          "id": "2c6e9f54-7dac-4da3-958a-1e8b0fde18b5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d711c911-9a25-4e8a-835e-9fcd919b59cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7c61fa-7169-41a8-8f3c-c4aa1defacf8",
        "cursor": {
          "ref": "5fb44e7d-a591-421b-87c1-709f2151e0dd",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d6ceaef8-98f9-4b44-b3cf-58c1b01b5d69"
        },
        "item": {
          "id": "fd7c61fa-7169-41a8-8f3c-c4aa1defacf8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3c446716-d2a6-4de6-8cd0-361573e06252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "969dd4e6-5e6c-4b82-8c07-6caa0dcacb63",
        "cursor": {
          "ref": "aec8960e-a669-459a-a80a-cc6c71e88b10",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2a51ec3a-7891-4952-86fe-33331e010e58"
        },
        "item": {
          "id": "969dd4e6-5e6c-4b82-8c07-6caa0dcacb63",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d758c0b1-325a-4d69-a67d-1de5b04d307c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 141,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d3f396-035d-40f5-a725-0c78074687f6",
        "cursor": {
          "ref": "c3b58ef4-400a-40f7-8c7f-cec641b4cd64",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f96c23a1-51c1-45cf-9d80-f90c5b30f008"
        },
        "item": {
          "id": "17d3f396-035d-40f5-a725-0c78074687f6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b967de72-315b-4f20-968c-1beb3136887f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210a6c4a-e5ec-4157-b3e1-0ee677cf0192",
        "cursor": {
          "ref": "4cc89f95-6b6a-426c-9e1c-c0108858b388",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "225cc2c7-9e9b-4b7a-8478-428633df7ea7"
        },
        "item": {
          "id": "210a6c4a-e5ec-4157-b3e1-0ee677cf0192",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "64d2fe1b-0532-4c48-b68b-cd3a3b6c65c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb09457-06ae-4812-87ab-6d4d91f0b5b3",
        "cursor": {
          "ref": "86650dd0-c352-48bb-83a7-4a1025ef429a",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c0dcd766-0e72-4a1a-8c00-f55d63ada11c"
        },
        "item": {
          "id": "4cb09457-06ae-4812-87ab-6d4d91f0b5b3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7f0bb115-ada6-4558-8c0d-954c72e78a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61609522-15bc-49ed-82f3-2e37c8b58bef",
        "cursor": {
          "ref": "5c8b25ce-7788-4bd6-aec9-11cb926279cd",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5ca17da5-3414-41bc-a15e-a03bc0b4e779"
        },
        "item": {
          "id": "61609522-15bc-49ed-82f3-2e37c8b58bef",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "9c65b0bf-d253-464f-aeef-526a80f445c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef05f0fc-d495-47e9-b8b8-f8820cb91809",
        "cursor": {
          "ref": "21bde0ad-9a99-4aee-8245-13dbfb296c64",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "79df0628-8d67-4615-b870-9bb602d7558f"
        },
        "item": {
          "id": "ef05f0fc-d495-47e9-b8b8-f8820cb91809",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "12eb657d-1e10-44cb-8038-24ace4dd48dc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0527ce8b-60f2-465b-91a8-91e17767e4a7",
        "cursor": {
          "ref": "5b46bc23-40a7-4aa7-b814-07f2cd1c06a0",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f85e72e2-8d9a-458a-8d62-20b5621bbd35"
        },
        "item": {
          "id": "0527ce8b-60f2-465b-91a8-91e17767e4a7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "be5c3fe2-b6ba-4f3b-bb25-14ffc23a23df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d93a404-4323-4165-94fc-38e2c17bdf96",
        "cursor": {
          "ref": "3eafdef4-8941-4a79-9514-9d6375fe517f",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4a37b68a-81ae-4f05-98e3-2a856fdeed70"
        },
        "item": {
          "id": "2d93a404-4323-4165-94fc-38e2c17bdf96",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e6c3b732-cef9-4468-a3e1-88e1316ebeed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e01b820-b26d-478b-85df-d340366a4e10",
        "cursor": {
          "ref": "94e5ca07-8430-4d81-b536-f401258c6a21",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9288e30b-d37f-4ae6-b202-f8c0995a001b"
        },
        "item": {
          "id": "8e01b820-b26d-478b-85df-d340366a4e10",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0fce422e-e15a-4c8f-9230-0f8b665ca026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17705979-d911-4eba-9ab9-4c942e6daed9",
        "cursor": {
          "ref": "eb6e4bca-e426-4441-95e7-9d51ac8c31bb",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "fd82fe99-a27b-41d0-82a7-150761163de3"
        },
        "item": {
          "id": "17705979-d911-4eba-9ab9-4c942e6daed9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8c3bceed-2572-4610-9475-1dc03617378e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772034a7-19ca-4069-ad89-805731c55d61",
        "cursor": {
          "ref": "16509837-7453-41b8-a43c-b30a06238378",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4cf079b4-405d-447f-9f4f-97dba087fb8b"
        },
        "item": {
          "id": "772034a7-19ca-4069-ad89-805731c55d61",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d2ea2574-33a0-4c49-a9ba-7a973e2061ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8972055e-b12b-44a7-b0c7-1afadeb87265",
        "cursor": {
          "ref": "b2b9c492-a1a7-4f12-9e70-e9f785628216",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "956c0f1d-a62e-474e-baae-6637c11bac41"
        },
        "item": {
          "id": "8972055e-b12b-44a7-b0c7-1afadeb87265",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8ca4fb4b-b7fe-4d77-90f0-4deab4b4655b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5b4ada-1e34-46c6-9356-718b5a9388e8",
        "cursor": {
          "ref": "482cc39c-b7fd-46b7-8822-0bd85d6c3793",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "411a4fcc-5af2-4275-aafa-b78b467e8eec"
        },
        "item": {
          "id": "1e5b4ada-1e34-46c6-9356-718b5a9388e8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "44b498e0-0cfb-4f57-b6cf-3e6f595a3abc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe136e26-8b1b-4218-a598-abd80dfd60b6",
        "cursor": {
          "ref": "5f86b299-cdd7-4d94-8774-dff6fbb4b05b",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "37b272bd-1ed8-43f3-8e04-846bd2a3ff55"
        },
        "item": {
          "id": "fe136e26-8b1b-4218-a598-abd80dfd60b6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "85b607ce-7b7f-44a2-97ea-d4e3c6e8ef14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a87d6d1-db95-4d0c-bf4f-6268036756fc",
        "cursor": {
          "ref": "d708c481-3e78-43aa-87a5-d33c4a33cb92",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "656c6c4c-ff90-4a17-9398-0bcb14f68745"
        },
        "item": {
          "id": "5a87d6d1-db95-4d0c-bf4f-6268036756fc",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e6791bbd-697b-4476-b1ff-39d5563074ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50add0d3-d0ce-4c24-8c7b-7b490c433ed1",
        "cursor": {
          "ref": "f0264c05-0d55-4785-b041-b04d58a6cc11",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "64f73d05-2c10-4af8-9735-d7021ffabcbd"
        },
        "item": {
          "id": "50add0d3-d0ce-4c24-8c7b-7b490c433ed1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a9e1e699-9156-4ad4-a53d-0190b1f160a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d11eb2b-befa-4ec1-968f-1d10f4eb0225",
        "cursor": {
          "ref": "6b271109-6ee5-4c86-ac91-4e73996d0373",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "cda2bc71-153d-43b8-b83b-9c58afafa6ea"
        },
        "item": {
          "id": "4d11eb2b-befa-4ec1-968f-1d10f4eb0225",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "574598d3-ea27-481e-ba5a-736da749d33b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c51836-1955-446b-8ddc-343379749de7",
        "cursor": {
          "ref": "a1b7dd79-e0b7-49f4-9b73-743f137edff5",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "bc523154-86e1-4ddc-bf9e-7f156540f821"
        },
        "item": {
          "id": "29c51836-1955-446b-8ddc-343379749de7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1c4c766c-580a-4074-9e26-465b85fed915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "996e37e5-0629-491e-be50-e70a1b49ba2e",
        "cursor": {
          "ref": "d29b894a-e687-4887-b969-8f89b1f7e41b",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8db3e6d7-437b-4ae3-b336-18a7159ef2a5"
        },
        "item": {
          "id": "996e37e5-0629-491e-be50-e70a1b49ba2e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d529bf30-619b-448f-b2d0-382373f4e9d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb29e29-67d3-4229-96ec-b8e3d0c9f793",
        "cursor": {
          "ref": "c353ea35-c76b-46b0-b45c-33d9ca6c27e5",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "fd607500-5063-4732-94c3-2e90e1fad561"
        },
        "item": {
          "id": "0eb29e29-67d3-4229-96ec-b8e3d0c9f793",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2faf0d07-ba21-4eb0-a3d8-f3be689fb9fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac883d07-97f0-41b4-9985-ef2798adad1d",
        "cursor": {
          "ref": "fbe00215-5a28-4eff-ad9a-38e45290ef98",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "941c3e84-6c8c-4c01-9425-d211469ad349"
        },
        "item": {
          "id": "ac883d07-97f0-41b4-9985-ef2798adad1d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "af75789d-725f-4ac4-ad11-9eef924439c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "948e653b-e436-41d7-8b52-eedb6ae16aaa",
        "cursor": {
          "ref": "697c9ac4-cc5c-4683-8e52-3c489653fccd",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "11190140-d140-4bc4-b603-d7869f9e1a14"
        },
        "item": {
          "id": "948e653b-e436-41d7-8b52-eedb6ae16aaa",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fcf88648-fc0c-4041-8851-1d92193270bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c716c5a-95ed-4eb2-b872-fc00d69cd7f6",
        "cursor": {
          "ref": "b85a2058-d9d2-400a-a61a-60188cd4d9b9",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a445f10d-e966-45ac-a176-02a549569f15"
        },
        "item": {
          "id": "0c716c5a-95ed-4eb2-b872-fc00d69cd7f6",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "715c6215-b306-4c2a-8abe-7c8de042c209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b025378c-7cad-496d-b6a0-c6b27431a42e",
        "cursor": {
          "ref": "eeb7148e-06d2-4d22-9491-dcd94b0c09a8",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "cd1c525f-4307-4adf-b72f-abbd0448d2de"
        },
        "item": {
          "id": "b025378c-7cad-496d-b6a0-c6b27431a42e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "968feee3-684d-4956-95b8-ba3d3cff2966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc32efd5-5e89-4424-a807-a762f6828054",
        "cursor": {
          "ref": "285b2280-9da5-4407-a5e8-114b3f62b54c",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "9e4f75c0-7574-47af-9d40-84dd14a4dd4c"
        },
        "item": {
          "id": "cc32efd5-5e89-4424-a807-a762f6828054",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "af4845f0-7966-4cc7-bd24-2e7b79553667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560dff08-0354-49d7-a983-5b526a96f5f9",
        "cursor": {
          "ref": "4e02d71e-456e-4738-9994-177765d3cd88",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "787be97d-e102-4ffa-86a4-884676290188"
        },
        "item": {
          "id": "560dff08-0354-49d7-a983-5b526a96f5f9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "011cdb45-4cc3-4874-a7db-65fc3b88e6fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8480f956-6a88-4706-b553-dd54992741fc",
        "cursor": {
          "ref": "ed089bbc-8216-4c95-94c9-a75ac9278e39",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "9a392cf1-75a7-44d5-a41f-a75dd8aae752"
        },
        "item": {
          "id": "8480f956-6a88-4706-b553-dd54992741fc",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "24a8f3df-af01-4cb2-8ed5-40c47eecc5be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc3742e-1f6c-4e08-aedb-dbee0c3d66c7",
        "cursor": {
          "ref": "5a0b3339-3e04-44ad-8f8b-afd0e5ad75bb",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9db413cd-b1d6-4840-ae63-002d44992919"
        },
        "item": {
          "id": "cdc3742e-1f6c-4e08-aedb-dbee0c3d66c7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "522e1d8d-8fc1-4fc4-9c32-84f59d008477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b2d3eb8-f0ec-47e7-9e09-577aa27accfe",
        "cursor": {
          "ref": "8284ceaf-5135-44ac-9443-c853c39f3215",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ffc9e945-6ecc-41c2-b07d-df684a612344"
        },
        "item": {
          "id": "1b2d3eb8-f0ec-47e7-9e09-577aa27accfe",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "84ea416b-3d07-4d15-9b89-74ef531e9260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589c26e7-dbd3-4407-ab16-735135d1a176",
        "cursor": {
          "ref": "ecdf55d9-e2ea-4d59-8c6f-52e9a83ebfee",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ce6b2409-118c-4572-942b-1d333fd65de0"
        },
        "item": {
          "id": "589c26e7-dbd3-4407-ab16-735135d1a176",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1b6637ea-1e1b-46d1-b20e-c03f74900a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df2f402-d7b7-4f87-8dd9-692787a7ac18",
        "cursor": {
          "ref": "e127c045-f37b-485d-bb34-05772a10c42d",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9d3a3e1a-3518-4581-abf3-caef19f50059"
        },
        "item": {
          "id": "8df2f402-d7b7-4f87-8dd9-692787a7ac18",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c1cea532-36cf-4fab-b67f-c9f9907a294a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917e7fd3-fd56-4ac3-b5fc-fc815eb6f51b",
        "cursor": {
          "ref": "0e91e725-3313-41b5-a092-f2859d5a4a0f",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3ef9233a-d80b-4a6e-af28-18c7e8d46657"
        },
        "item": {
          "id": "917e7fd3-fd56-4ac3-b5fc-fc815eb6f51b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e28ea6f6-1450-443e-9aaf-f7e380c9928c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a8a7b9-c0a6-4d07-ad67-e2520272d70c",
        "cursor": {
          "ref": "d76004dc-324a-482b-a23c-d537380a046c",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "bcfb2ed7-b7d6-4f9f-958e-6ac81a3f7de9"
        },
        "item": {
          "id": "62a8a7b9-c0a6-4d07-ad67-e2520272d70c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "50606f21-d8b3-423b-a1c5-a9d9c1d2e477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f4dafa-fee5-4f76-9f69-d7fa9472f8cf",
        "cursor": {
          "ref": "81e5b74a-cf61-4a2a-8730-c060d1b1dd48",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d79384e4-6c8f-4fa1-b54b-87bee56bbf64"
        },
        "item": {
          "id": "d0f4dafa-fee5-4f76-9f69-d7fa9472f8cf",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9dbc3776-8832-41f2-bcc0-696fb0bd71bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1efc0f90-9fe9-4f0f-a90e-7c677c1d8e9c",
        "cursor": {
          "ref": "466b8662-3eaf-450a-a54f-8dac02c624bf",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c756fc48-d428-4f83-af8d-fd93b9107ff5"
        },
        "item": {
          "id": "1efc0f90-9fe9-4f0f-a90e-7c677c1d8e9c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a30589d0-c0c3-494c-b5db-b83f9aff9563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1f878d-3623-4d83-a494-ebf507fa0661",
        "cursor": {
          "ref": "1a3b4c90-41b6-4b26-ac43-19fc5dccf24c",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "515f610d-032c-41c0-93dd-f7676037483e"
        },
        "item": {
          "id": "3b1f878d-3623-4d83-a494-ebf507fa0661",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9abb2df4-ced8-4e5b-bd09-344409cd65d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e482de2a-0747-475d-8c4c-fe2c89035bfe",
        "cursor": {
          "ref": "3db96928-a194-4e6b-b47e-ed33359fe532",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "fc35ad6c-9572-4551-b15b-778960502e8b"
        },
        "item": {
          "id": "e482de2a-0747-475d-8c4c-fe2c89035bfe",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f7599fbc-9f0e-4cec-a799-4b51886d510d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8646fe-d1e3-44a9-ad48-b6fab5fc9917",
        "cursor": {
          "ref": "b1199555-00dd-4d42-bae1-a0f98d515072",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d201b11f-efaf-466c-a700-b7f05fd45647"
        },
        "item": {
          "id": "8d8646fe-d1e3-44a9-ad48-b6fab5fc9917",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d8475975-b955-4531-b16a-4c1f67387ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632231cd-869b-4270-ac4e-2a8573160d07",
        "cursor": {
          "ref": "6b2b94b4-6f65-4149-9e18-b34ce6f489d0",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f4cefcd8-4c68-41a1-bc97-c1ea2d54a561"
        },
        "item": {
          "id": "632231cd-869b-4270-ac4e-2a8573160d07",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "5c72a388-f70c-4eb0-a6c1-5be50c67ef2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f395b833-28ae-4807-aa1f-ddb32d0fe6c2",
        "cursor": {
          "ref": "a5c8e596-b3ba-428c-a380-4f96288a0a9d",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "fdb5beae-4bf2-408e-ae2a-a5560db6f080"
        },
        "item": {
          "id": "f395b833-28ae-4807-aa1f-ddb32d0fe6c2",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "9adc40e9-3a05-476d-a75e-f0100f1afe95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e76f60-b5fd-4671-b71a-993948ac90ba",
        "cursor": {
          "ref": "3705abf6-bf77-497d-9e55-f47652811cd1",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7db063e8-786e-401e-b910-d7104d25b90e"
        },
        "item": {
          "id": "70e76f60-b5fd-4671-b71a-993948ac90ba",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d243a7d6-0a39-43c9-a446-516da2fd6888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94308ced-8ee3-4771-a3b4-f21588fbfdef",
        "cursor": {
          "ref": "0f39e8ef-482d-4e45-bbfe-719024b109c2",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "139a8ac8-cbfb-428d-b5f5-f274c23cdf7b"
        },
        "item": {
          "id": "94308ced-8ee3-4771-a3b4-f21588fbfdef",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "b24e3a93-680e-4935-bfce-e1d2f0968397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad76123e-3301-4128-a9ca-57466882f149",
        "cursor": {
          "ref": "f3d487b5-914f-43cd-9652-be6f7e3157e6",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b46b0171-fcc2-4f8f-a0f5-8a6f7eb8433b"
        },
        "item": {
          "id": "ad76123e-3301-4128-a9ca-57466882f149",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "c5852c86-699c-42db-98f2-9e55b8a47090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c017b24-3d96-45cd-9be2-9f749ceefdb0",
        "cursor": {
          "ref": "1eb2e1e4-9b91-4e31-8456-4a8b51577e77",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2170025e-362f-40ff-8e42-13ff4c2f0226"
        },
        "item": {
          "id": "0c017b24-3d96-45cd-9be2-9f749ceefdb0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "52ab58ef-c7da-40e5-a57b-1ce633a15f6a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cb5d59-8a76-4831-94cd-6190b8e913fa",
        "cursor": {
          "ref": "2c306a27-8f8c-4ba9-b810-90a5ee564357",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9cdb5574-a7ed-4b92-b5b9-9faa0ca22496"
        },
        "item": {
          "id": "08cb5d59-8a76-4831-94cd-6190b8e913fa",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ac65e8c6-097b-42ff-ad50-3e4a324d7a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e8cdce-5925-4b88-bbe1-a9abce9b5975",
        "cursor": {
          "ref": "138e0cb5-4e31-4ec0-9634-8f1d03c82377",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d611db10-1d87-438e-8147-54d9b8023483"
        },
        "item": {
          "id": "f5e8cdce-5925-4b88-bbe1-a9abce9b5975",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d640cc4d-91d6-41f5-8d7f-ceea9a3026d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1fd6df3-c94b-4e15-aceb-cc10668d50b7",
        "cursor": {
          "ref": "869a6e97-0b26-4328-8f2a-d8a496f0d530",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2d22a526-c75b-4c8b-8c8d-b10975bce3f9"
        },
        "item": {
          "id": "b1fd6df3-c94b-4e15-aceb-cc10668d50b7",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e994aff1-dd03-4722-a9cf-06eb3e690a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68698adf-8114-4d9e-8b34-5acb2e21bab3",
        "cursor": {
          "ref": "d2ad67c4-3dde-4f46-8c92-720381ff7d9d",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e001d981-28fe-4580-b7ea-c94208759569"
        },
        "item": {
          "id": "68698adf-8114-4d9e-8b34-5acb2e21bab3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8b4f04fb-acae-4239-bcfa-78f57503b462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8396f724-1232-4ef3-926f-f22090faa534",
        "cursor": {
          "ref": "baddbc00-886f-4085-a93c-b25f9d19f4ba",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "bd3fdb57-f440-4404-8d95-2baa4f759945"
        },
        "item": {
          "id": "8396f724-1232-4ef3-926f-f22090faa534",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "aa871720-9a2b-40c8-8bae-5e0961482f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09a4cb0-96e9-46ad-b175-bce13faa0553",
        "cursor": {
          "ref": "df4fe2ad-120f-4b1a-9932-27c92c2c0d35",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7a305c03-2f41-4ff8-b6fb-abf19cc032fc"
        },
        "item": {
          "id": "e09a4cb0-96e9-46ad-b175-bce13faa0553",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "cc790e3a-9da5-44f4-879a-be2bbf43edf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17df2b6c-7b51-495f-96eb-490e9261ed9d",
        "cursor": {
          "ref": "efff800d-a442-4cab-8524-34c86b87f806",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "0be7acb3-38c2-44d4-b75f-8d207313a1d3"
        },
        "item": {
          "id": "17df2b6c-7b51-495f-96eb-490e9261ed9d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f97a4367-9aa5-4ba3-9149-3b3420461586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfedf173-c6a1-4709-a6e8-86f63ce74dc0",
        "cursor": {
          "ref": "b01f0228-9680-447b-bbcf-fd851cc0ff9d",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c056c9a3-4300-4117-8496-73582767f765"
        },
        "item": {
          "id": "cfedf173-c6a1-4709-a6e8-86f63ce74dc0",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c59a20fb-3ac9-484f-a763-2985cea6224a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976d3d8e-65d7-41a8-929e-95fa0d0ba67e",
        "cursor": {
          "ref": "4f71bc12-33c2-4d78-bfcc-43b9f8bcf6ab",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1b615eb5-6165-44a9-bb64-181d4fd3ba23"
        },
        "item": {
          "id": "976d3d8e-65d7-41a8-929e-95fa0d0ba67e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0574d6ed-778c-4415-911e-86fcfa65e884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8023a2-0c32-4bcd-89a4-6fbf5055e978",
        "cursor": {
          "ref": "dd61dd35-ffff-4848-88b0-e5970bc00045",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4f7150e6-6f38-41e3-ac3d-d9142f48b1d5"
        },
        "item": {
          "id": "7e8023a2-0c32-4bcd-89a4-6fbf5055e978",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "2d1211ae-4b94-43e0-bd7e-97c0966f1aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd4a8fa-3f3b-4ec7-99dc-93ff55d67242",
        "cursor": {
          "ref": "40c3e42b-73e2-4b50-a60d-13e27bc1c1c3",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "5ad50de0-795f-4d8d-a7ad-465573849928"
        },
        "item": {
          "id": "1cd4a8fa-3f3b-4ec7-99dc-93ff55d67242",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8c2cfc74-0da7-4691-8342-2769b5083497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b18a8c-a4f5-4a47-a195-8a929210c309",
        "cursor": {
          "ref": "4e40a18b-e534-4dbe-b21b-7a0208cc8d79",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7b8f55b4-fbea-4ee6-a29d-8387561b3716"
        },
        "item": {
          "id": "c9b18a8c-a4f5-4a47-a195-8a929210c309",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "becb775c-d20d-4b9b-847e-5c51e4c242ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3239238-44a9-4615-86ea-e8fccd011070",
        "cursor": {
          "ref": "5df9ffff-6c15-490f-b2a4-94389889b3fe",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0d299b35-85ec-4d3c-93f7-158f1fab89ca"
        },
        "item": {
          "id": "e3239238-44a9-4615-86ea-e8fccd011070",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "195cd7a2-8211-4733-8040-be3bc6f76d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4877c0f7-702d-46ac-b3ac-a244b798d3fd",
        "cursor": {
          "ref": "265dae8d-6771-4632-85e3-d2546652271b",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f4afdede-aac8-4f61-8f07-622436f90f91"
        },
        "item": {
          "id": "4877c0f7-702d-46ac-b3ac-a244b798d3fd",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "882b034e-2ae4-418d-9aff-0a1a2a746821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5b5458-f5b3-4c11-9926-8fe6f8bd66af",
        "cursor": {
          "ref": "067fe35b-6ef9-4dcb-953f-a039f21b750d",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3d6d1870-ee8a-4e31-b5cc-7f954b746804"
        },
        "item": {
          "id": "1f5b5458-f5b3-4c11-9926-8fe6f8bd66af",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2af1c81f-b8ed-4292-afbb-06560d10ce23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd9f26f-845b-417e-9292-19c1737c61d2",
        "cursor": {
          "ref": "d4dc3db4-79b3-43ba-8e07-874cc6b53d72",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "17b908c0-d3b8-4bd3-817a-e26926ffb69a"
        },
        "item": {
          "id": "bcd9f26f-845b-417e-9292-19c1737c61d2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "aaaad67a-fecf-4d11-9d36-609317e28bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23eb1b0-5ddb-4ea8-85f1-88ef8a43357f",
        "cursor": {
          "ref": "aca50459-3d76-4091-8ac0-f1200de5d80b",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "008b3088-bae7-489d-9f09-6407df0463c6"
        },
        "item": {
          "id": "c23eb1b0-5ddb-4ea8-85f1-88ef8a43357f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "97b8e37a-3092-469a-9253-f91679e7da3e",
          "status": "OK",
          "code": 200,
          "responseTime": 247,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "b3ce4193-ce13-4761-bf07-7feed18c81a8",
        "cursor": {
          "ref": "89b3af6b-f0ce-44b8-8359-922551dd1e8a",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a0570d31-dbd4-4f6a-80ad-1ba1cddfec2d"
        },
        "item": {
          "id": "b3ce4193-ce13-4761-bf07-7feed18c81a8",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "70ba158e-8d94-4ecf-a252-516772d3490b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1bfa7d4-4bc6-48fb-9a62-2cf3fac9265c",
        "cursor": {
          "ref": "a0ecfccf-6c11-49a3-9d98-af812873f39e",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9d3f95fd-4402-444a-8972-c6f2f6ba36aa"
        },
        "item": {
          "id": "a1bfa7d4-4bc6-48fb-9a62-2cf3fac9265c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3c803f71-de6f-46cd-a140-eae14783e145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e900e0d-c947-44b0-bf83-3105d2351d3b",
        "cursor": {
          "ref": "67440d59-6d80-45c8-aa6f-1f1f0b0afd35",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "93b5ebe0-632d-4579-af84-f4562a1f6716"
        },
        "item": {
          "id": "1e900e0d-c947-44b0-bf83-3105d2351d3b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "0baec44b-1be1-4936-b38d-f6fcb800d91c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbabc901-01d6-48fa-95ca-81753edc7581",
        "cursor": {
          "ref": "0c7ad414-3b7e-430b-897c-d90a9b167bf2",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c07ef44b-932a-4e61-a7fb-5fa2f0f27bf7"
        },
        "item": {
          "id": "dbabc901-01d6-48fa-95ca-81753edc7581",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9b5fa606-f66d-4cc7-8814-f85eaf198106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acdca507-699f-431c-880c-319b39619cef",
        "cursor": {
          "ref": "015dd619-5cb0-4df3-bd65-944351854a24",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "cc46ac7b-96ed-4680-8a8d-0571d68a6f8c"
        },
        "item": {
          "id": "acdca507-699f-431c-880c-319b39619cef",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "54c93ea3-b994-48bd-8991-6fc455dfe448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0e8ca4-92b4-4eae-bdd2-c8af976cbff2",
        "cursor": {
          "ref": "b3aad96f-4070-4b47-8b17-b00a23adc1f5",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "625eeaa6-9b8f-419e-b492-b0a4b9b07f71"
        },
        "item": {
          "id": "7a0e8ca4-92b4-4eae-bdd2-c8af976cbff2",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ab72d398-0c31-4370-95ae-3ab1f1478d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba38f04d-f86d-4c46-977a-f28ed0741eb2",
        "cursor": {
          "ref": "18cf4932-cbba-4e75-8757-c0e67633972a",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "48def77f-c1b9-435b-97e7-9a692c5ac2b1"
        },
        "item": {
          "id": "ba38f04d-f86d-4c46-977a-f28ed0741eb2",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "420e7271-25eb-41e9-8d35-7ec805a85ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd44ae4-9b52-474f-806c-fa956d3e3c75",
        "cursor": {
          "ref": "d82be646-c02d-436d-975f-bb485da433c7",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "dc4ca551-751c-4bf8-bfb1-ccc9ca08a125"
        },
        "item": {
          "id": "1cd44ae4-9b52-474f-806c-fa956d3e3c75",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "cb1aa7b7-2e57-482f-84c3-68099560c62d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb843de-68a1-4d6d-b3df-9a7da7aad859",
        "cursor": {
          "ref": "38d5f6aa-f7f8-46c1-b379-efbbd3f07195",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6e92cade-28e1-4f10-a2f4-6bcf245bcd87"
        },
        "item": {
          "id": "0cb843de-68a1-4d6d-b3df-9a7da7aad859",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6c5f597c-51ba-4895-95c8-cc79069d3012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925d1134-a9a6-44bd-b637-47cfc3a95ba3",
        "cursor": {
          "ref": "6e145f63-d77c-4b00-a1d7-a769ff900711",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "116b8dd7-94b5-4107-82b9-cffd1f4e0699"
        },
        "item": {
          "id": "925d1134-a9a6-44bd-b637-47cfc3a95ba3",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "77d13bae-e145-4c19-9bfd-2c0baea01ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54477800-8f65-49b9-bfd7-02d01bcc07fb",
        "cursor": {
          "ref": "e094fa71-b47f-40a8-89f3-7ffe54498fef",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7603e89b-3de5-498d-89be-4a348ea6d0e4"
        },
        "item": {
          "id": "54477800-8f65-49b9-bfd7-02d01bcc07fb",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1c47ecd4-dadf-4383-9962-234bd1e7b918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8521075-7905-426a-8e38-f78c938fc932",
        "cursor": {
          "ref": "7a421f0e-7114-40b4-9455-a1ddac778c65",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0890bcc5-88d2-44df-8516-a0c3bbf37f6a"
        },
        "item": {
          "id": "d8521075-7905-426a-8e38-f78c938fc932",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "382de674-e454-4d2d-9b7c-58d6f10942e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4444785-a319-450c-b230-485da0c55d1b",
        "cursor": {
          "ref": "286cb26f-410c-4cff-9e9b-742a64108048",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1be7fdea-a93a-44b3-9a2e-b8433cd20ca3"
        },
        "item": {
          "id": "a4444785-a319-450c-b230-485da0c55d1b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0c2b24c8-01c8-470d-ad4e-6d3ea66f5664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc2861c-07ee-4a8a-a000-2d5762b42663",
        "cursor": {
          "ref": "ec5992c1-857c-4915-87cf-1fcc8f455b96",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "16072631-22c0-4ed4-a544-3db483f00fa6"
        },
        "item": {
          "id": "adc2861c-07ee-4a8a-a000-2d5762b42663",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e2134b53-049e-45c6-bb5a-e363355a2805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa84600-0316-4956-a9fb-79e7abe5a184",
        "cursor": {
          "ref": "1c976945-63a9-4f63-8c04-24bcea2c7973",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a1103b4f-e4b2-4b8a-8683-2d6a47c22a1b"
        },
        "item": {
          "id": "4aa84600-0316-4956-a9fb-79e7abe5a184",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "fe738a83-fa3f-46a8-a2f4-29cdbc586819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f611fba-cc86-4cc3-88f4-d16cb0c8ee49",
        "cursor": {
          "ref": "6e473f50-8996-4d3f-9d70-e6b66a8cf5fc",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9ce3d206-1cc8-49f7-a4e2-1ec38beb29c8"
        },
        "item": {
          "id": "6f611fba-cc86-4cc3-88f4-d16cb0c8ee49",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "94d8a8fd-c8a0-4646-b582-541f354a3706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f767ff6-82bd-4042-9bc3-714e0937bce1",
        "cursor": {
          "ref": "f9216670-d324-40b0-a34d-77a8655b2fb3",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e2ecce13-913b-45fd-a779-9d8bdc4facac"
        },
        "item": {
          "id": "9f767ff6-82bd-4042-9bc3-714e0937bce1",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a39d5ed5-34d6-45da-ba69-afaf0f91ed2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b31c22-410c-428f-8013-415d788f5c9b",
        "cursor": {
          "ref": "9c1d0552-dea5-4208-84d0-c1a33c34879d",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "472ddaf7-84d0-4eee-8625-f4a27901e845"
        },
        "item": {
          "id": "49b31c22-410c-428f-8013-415d788f5c9b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e0e3a0d1-bb19-4685-a848-3bcdb9933366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "470e0874-d024-44a4-8d45-40b7d6464684",
        "cursor": {
          "ref": "a82d28fa-180c-4f77-80e5-d6375f4b9795",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "11e576b1-82fb-4b8b-84b6-4ba60aeb0163"
        },
        "item": {
          "id": "470e0874-d024-44a4-8d45-40b7d6464684",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "68c2d5e8-4b1c-4b54-9c6b-cce697930b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a27c9d0-2d5b-44af-886a-9fd292a66fa1",
        "cursor": {
          "ref": "6bfacd3f-bbb4-471c-a425-b8d8d3f5e9ad",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2d4fd656-872e-4829-add2-a735e838d586"
        },
        "item": {
          "id": "8a27c9d0-2d5b-44af-886a-9fd292a66fa1",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b3435db6-317d-4664-91a7-f800f19049c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd0d7ec-1eaf-42c2-9b56-4e0c1fdfea20",
        "cursor": {
          "ref": "4c5138db-46a6-42da-8497-491f416a8f44",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "4254dac4-14c8-43e3-baaf-d5c54254d5fc"
        },
        "item": {
          "id": "bbd0d7ec-1eaf-42c2-9b56-4e0c1fdfea20",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5d52f0ec-e4a9-40f8-8bf6-493221bfac57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451c2bdf-92f5-48ef-b1a3-264538425fc4",
        "cursor": {
          "ref": "d12bc845-af57-406a-8a67-484fc9dee92a",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "982465ab-28c2-461e-9f4c-4f819ce651ef"
        },
        "item": {
          "id": "451c2bdf-92f5-48ef-b1a3-264538425fc4",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7073d9b1-ef9d-434d-9464-524cd50767a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ce4169-6d07-458a-922f-9ffb09233935",
        "cursor": {
          "ref": "250a729b-60a9-43d0-a9ca-f25af29fd59d",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "07e3f2de-ac95-466b-9cdc-4a4fdeeee6bb"
        },
        "item": {
          "id": "e2ce4169-6d07-458a-922f-9ffb09233935",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "663b6951-4276-4fd8-a51c-1c7c4fc50fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4be0790-0336-416d-9deb-ac0ec912fa1d",
        "cursor": {
          "ref": "409b81d9-70b4-473b-8dee-972d9b142186",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "56ad697d-d8dc-4bdd-b846-6a9fa81df9e1"
        },
        "item": {
          "id": "c4be0790-0336-416d-9deb-ac0ec912fa1d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "eecd2109-6360-46ff-90a6-2ed9626d8c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eaf1f7e-7eff-4710-a665-a51f80556525",
        "cursor": {
          "ref": "56f54383-913c-4d4a-b194-739252a1653c",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ba5c61b2-9d3f-4367-a8c8-b4c83ef8adc2"
        },
        "item": {
          "id": "5eaf1f7e-7eff-4710-a665-a51f80556525",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f185e5c4-4a1b-465a-b93a-72533650c15c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2ddedb-18f5-40d2-99a2-45eb56401479",
        "cursor": {
          "ref": "a222602d-13ab-4cd1-866d-bd8cd4a485a9",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c3978394-f0db-4e25-b42c-1598a9c71de1"
        },
        "item": {
          "id": "fe2ddedb-18f5-40d2-99a2-45eb56401479",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "dbdcec8d-dc22-477a-9fc7-39c59d332a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e92b0ac-970d-4297-98bf-883bc93d374f",
        "cursor": {
          "ref": "8c508b4e-a9a3-4fca-9ee0-a7f53f3946f3",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "00dd6731-b76b-4d0f-b3b1-1001a05cfe08"
        },
        "item": {
          "id": "6e92b0ac-970d-4297-98bf-883bc93d374f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "53db7b5f-1481-4aff-933b-14cd40990c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a523af-42ed-4bec-86f5-b72c8c95683d",
        "cursor": {
          "ref": "dd052b09-c7d8-476e-ad21-eec78c0a91e2",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2322ffb1-95d4-4ccd-8524-5c295af93f69"
        },
        "item": {
          "id": "c7a523af-42ed-4bec-86f5-b72c8c95683d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b7e43534-8393-42a5-970d-3e93ef290762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6238db5c-8cdc-4ce7-b1de-49b247e1fa26",
        "cursor": {
          "ref": "1ab74b59-bd1f-419c-9b01-5b23f74614da",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "104299f1-5637-4b63-9abb-1c4b0f1d5385"
        },
        "item": {
          "id": "6238db5c-8cdc-4ce7-b1de-49b247e1fa26",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "79cbf7b7-82ec-4489-957b-1e6ecf3caea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5d2e9c-357c-42bd-b5e2-d937d9e9a455",
        "cursor": {
          "ref": "ded80e3c-ae2d-430e-9ffc-4ada2533ca45",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "29144aa9-48fb-4176-a78a-93d5dd6bd5f3"
        },
        "item": {
          "id": "fe5d2e9c-357c-42bd-b5e2-d937d9e9a455",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "84feb5e2-5308-461d-b05f-eb7743cc6719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "644ae4f6-6028-41db-bdf7-af88b8f5f4d3",
        "cursor": {
          "ref": "aa5297a9-392b-45f3-8d11-61f44447930c",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "49370472-66f7-41d7-9c44-3ecaa583b3c8"
        },
        "item": {
          "id": "644ae4f6-6028-41db-bdf7-af88b8f5f4d3",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f1c47555-b3c3-4647-bedf-88ea479a17bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747f6a1a-a11a-45cd-9509-d41ddbf231de",
        "cursor": {
          "ref": "a7ff30a0-7d9d-48a2-897e-b6cb35a4246d",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9f423a00-2387-4a1e-8c10-838d9d1e4530"
        },
        "item": {
          "id": "747f6a1a-a11a-45cd-9509-d41ddbf231de",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "bd2691b5-0b5a-4ce0-b98a-4cd7ba6a2e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d2a64e-9534-4eb2-bf1b-75b2c7b7cf5a",
        "cursor": {
          "ref": "0be34315-d312-47d2-9fe7-26beeb12f15e",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "642fad3f-020e-420e-92ca-784422b4f6b9"
        },
        "item": {
          "id": "27d2a64e-9534-4eb2-bf1b-75b2c7b7cf5a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "5d4e7d9c-6acd-4127-b963-d3e3b2c47b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49420df8-20c2-4b53-a8ae-f8d5be3b190f",
        "cursor": {
          "ref": "7c8bd46d-9a6e-4382-8142-b9f2dcfac130",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b97b5dc3-2653-4fe3-b510-a3eb55871075"
        },
        "item": {
          "id": "49420df8-20c2-4b53-a8ae-f8d5be3b190f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "fa4a07d6-527d-4bcb-bbf6-fea44abfd510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c24ebf-a40d-4191-a326-65e1cdfec618",
        "cursor": {
          "ref": "0e5d158e-d1e6-4464-b398-fb80f464ecb2",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "bea48735-2cf5-4cd1-9818-732d4529d369"
        },
        "item": {
          "id": "57c24ebf-a40d-4191-a326-65e1cdfec618",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e1a1a727-c6d6-427d-b533-d35e733fcbda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5ebfa5-fcf8-407e-aade-b4158d48e0bf",
        "cursor": {
          "ref": "17504c45-c280-4b2e-987b-cdf7e688a54b",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e217101d-022e-4a46-be3f-fa7e985384fe"
        },
        "item": {
          "id": "5e5ebfa5-fcf8-407e-aade-b4158d48e0bf",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "fc257ae4-57d9-4c89-a154-4a112dfb5a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f305cf5a-6c64-4f47-9a0a-609ca1dbd2f5",
        "cursor": {
          "ref": "f0958a10-75a2-4f1b-b73f-a42952cc320a",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2824de7e-ca8c-4448-be71-b9381f035f8f"
        },
        "item": {
          "id": "f305cf5a-6c64-4f47-9a0a-609ca1dbd2f5",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "34036f73-4db1-44ad-8da9-649d1abb3a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec81bb58-6eb4-45ae-8178-fc81d70358c7",
        "cursor": {
          "ref": "d0e60a6e-744d-4d92-8812-def661dc4602",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "982c0ce8-cb12-4d1c-9757-085ae45e1234"
        },
        "item": {
          "id": "ec81bb58-6eb4-45ae-8178-fc81d70358c7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "35d06dc6-e405-4006-98f1-df39dc3196af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb315f1c-577b-46b7-a655-f86f8b8b1a72",
        "cursor": {
          "ref": "572411c6-1917-4394-925b-d0b1178f3c22",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1a1c89c5-9686-4783-9042-913cd963cb51"
        },
        "item": {
          "id": "bb315f1c-577b-46b7-a655-f86f8b8b1a72",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ea6fa593-5bac-4166-8f56-afb91963a032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0cae17-0367-44ba-81ed-9bd70ec32284",
        "cursor": {
          "ref": "958e147c-3bfe-4504-a3e8-48b7b935cc2b",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "13170637-179e-421b-919b-424f7205c8bb"
        },
        "item": {
          "id": "4f0cae17-0367-44ba-81ed-9bd70ec32284",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "254e510f-5241-43bf-ab23-80f36b353099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eba3917-7ac8-43be-be38-c2e49492c257",
        "cursor": {
          "ref": "2c52668e-2f5e-4e88-8c5a-2c977017b329",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "3e3d1c91-d330-4a8d-a027-6b36c69babc3"
        },
        "item": {
          "id": "3eba3917-7ac8-43be-be38-c2e49492c257",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4c1060d1-53b2-4427-b428-c3d2084529d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d77f4e-4654-49a1-9818-00d37b215667",
        "cursor": {
          "ref": "196385cf-68eb-460a-aec8-e20a0147453a",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "3864131a-b212-47ef-a551-58966c98f474"
        },
        "item": {
          "id": "f7d77f4e-4654-49a1-9818-00d37b215667",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7580104f-0a2e-4d7a-980b-51e038a3c8c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5601bf0d-5c7a-4cd6-9ba4-6a5a3fb817d0",
        "cursor": {
          "ref": "5c57ad28-c749-4e61-a6b8-84fddcf97bcd",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "69a06bf5-94fd-43e1-889b-8bbdadbbcdc3"
        },
        "item": {
          "id": "5601bf0d-5c7a-4cd6-9ba4-6a5a3fb817d0",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "41b46197-42b0-4c60-a1e3-0ec23ff1ee8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a329f1c-a712-4e42-b28a-96856f420293",
        "cursor": {
          "ref": "465c983c-3b02-433a-840b-9fceddecef8f",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "adafae35-b5ed-4803-badc-dad938e4a0fd"
        },
        "item": {
          "id": "8a329f1c-a712-4e42-b28a-96856f420293",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "716ad6e0-668c-4bf6-ba4b-050af00160b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d395c96e-795e-427e-8e55-8a350f398b56",
        "cursor": {
          "ref": "56c354c3-ab01-4dd9-8ff7-08e42b1cf63d",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "067ac2cd-7b5a-45a0-8cc3-3b23a9004a48"
        },
        "item": {
          "id": "d395c96e-795e-427e-8e55-8a350f398b56",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "04ce3c2d-c623-4c2e-8f30-b6505fb48aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4177ea-ed7d-4484-8572-1894ae20eeea",
        "cursor": {
          "ref": "0629503e-e30e-4721-94c4-618d976dca6c",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d9fadf27-9e40-4a01-8211-765b7a4690b1"
        },
        "item": {
          "id": "eb4177ea-ed7d-4484-8572-1894ae20eeea",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f3bf6a9e-5e6c-4d45-b192-56e40a1ef44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62eba46-3169-4791-a7bc-b1799a9b0068",
        "cursor": {
          "ref": "0d2f0ccf-0064-480f-a57e-275491efe5c4",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3c348286-c0ec-43ae-8a0f-6fe60674682d"
        },
        "item": {
          "id": "c62eba46-3169-4791-a7bc-b1799a9b0068",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ae4f0aa6-c808-4183-8147-f68f137e8844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86238bf-30a9-4ad4-8e2a-7dc09b1efaa5",
        "cursor": {
          "ref": "2b2087a6-e575-43d5-85f6-553cc33e0b43",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "82a6cb63-a71a-4862-b8e0-4ba2ca6fdac8"
        },
        "item": {
          "id": "e86238bf-30a9-4ad4-8e2a-7dc09b1efaa5",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "feb24ce1-b23f-4ec1-8542-6b9061fd39d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5fa1ba-a532-4ff5-ad62-079e87fe6b83",
        "cursor": {
          "ref": "2f5f0569-01a6-4398-8cbd-1189724cfe4e",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "4f9868b9-ca82-4793-acfd-6e0f4911d0f4"
        },
        "item": {
          "id": "1f5fa1ba-a532-4ff5-ad62-079e87fe6b83",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "98f2bdef-f597-4e90-9156-5d6538935a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66685acf-7ee5-4ad5-9ae9-0607cfaec60f",
        "cursor": {
          "ref": "4b8c5872-8fe0-4bac-b848-4f14ad141c4f",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "649f6dd6-40f3-487e-8905-132defb585f7"
        },
        "item": {
          "id": "66685acf-7ee5-4ad5-9ae9-0607cfaec60f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ef4a748e-f9a2-4284-8daf-6494f1eda786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e521f1-33e4-4790-89e6-13582a8bb9a1",
        "cursor": {
          "ref": "e692d493-79f8-46f8-a170-3549944caae6",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e3c031ed-6c5d-414f-83ba-ce9a8d1af235"
        },
        "item": {
          "id": "d1e521f1-33e4-4790-89e6-13582a8bb9a1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7619d398-c011-4875-9bbb-faeb5d4814ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0d6b06-041e-46c6-811b-966976954e95",
        "cursor": {
          "ref": "ceb875d5-ca7c-4e09-ab79-cf10b9a4336d",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "04a55310-3af7-4943-81d9-f19c340a524a"
        },
        "item": {
          "id": "9d0d6b06-041e-46c6-811b-966976954e95",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "53133619-82bc-4ada-a994-dc88f1a0a598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0664c836-ddf5-4578-825c-e24c200c2356",
        "cursor": {
          "ref": "aa9bddbd-2490-4ba1-a1ea-92c3b6afb554",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c8b56edc-6b8f-4194-ba48-eae9359066d1"
        },
        "item": {
          "id": "0664c836-ddf5-4578-825c-e24c200c2356",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "36cf87c2-5e54-4e2f-9801-bde16fdc5105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e911fb-4dba-4d98-a105-6ec6728ead1b",
        "cursor": {
          "ref": "4ea10bfe-0770-4713-a0ee-370596215a69",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "55ddba26-7554-4799-b627-a9fed3ac0231"
        },
        "item": {
          "id": "11e911fb-4dba-4d98-a105-6ec6728ead1b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "60ab184b-e7b8-4f12-8b1c-1c48a5a9c970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a0400f-6fea-48cd-853c-cb8574bbaede",
        "cursor": {
          "ref": "9560af49-04ed-443a-8a5d-b24b736677eb",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9f589329-df9d-48e4-9449-3fa6baa3d47a"
        },
        "item": {
          "id": "f5a0400f-6fea-48cd-853c-cb8574bbaede",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2c7867c2-1758-4bff-97a4-5d2ef155d2a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dab14ad-13ba-4293-8ff0-84477fd53a91",
        "cursor": {
          "ref": "90100414-c4b4-4d35-9c01-4e8149abfdf5",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "aa5a5412-8e9e-4ad0-affb-a5331b7ef9be"
        },
        "item": {
          "id": "7dab14ad-13ba-4293-8ff0-84477fd53a91",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "46c530bf-116f-4e34-b103-87596ce88c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fbd16b2-1672-4ea9-a507-65f294621e96",
        "cursor": {
          "ref": "6be764de-6486-4548-a4fb-25e7fffb732f",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "4f6ff9b2-329e-4070-92a0-07b83354b74a"
        },
        "item": {
          "id": "8fbd16b2-1672-4ea9-a507-65f294621e96",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "1a6e4e91-c5d1-4747-b99e-6c82b224aefd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e96925-79f1-40fd-aacb-35f53001bcb7",
        "cursor": {
          "ref": "40366276-d228-4f26-82ab-524fe01d3213",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "82a61db1-9c47-4c25-b689-9eb415d87410"
        },
        "item": {
          "id": "84e96925-79f1-40fd-aacb-35f53001bcb7",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6bb9944b-d90a-4ec8-a585-55a95e7c5195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f55a8b-a3b4-4222-b456-035339890718",
        "cursor": {
          "ref": "6e290ccc-f0ed-4192-867c-3cc36dd8b77d",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "ccff001f-78be-4554-805c-d2fd7183379d"
        },
        "item": {
          "id": "24f55a8b-a3b4-4222-b456-035339890718",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "99b684d9-e989-4a6d-9db9-88b6fcca21d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c600b738-32c4-468d-ab5b-3bb434be0684",
        "cursor": {
          "ref": "914b8ae1-78b3-4396-8c9b-eaa901c1a6a1",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "788c7c1c-d759-48e1-a4db-6d7751e9d267"
        },
        "item": {
          "id": "c600b738-32c4-468d-ab5b-3bb434be0684",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8e5c1ebb-5a15-40de-810a-d5bd640e98f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce334522-efad-4da2-bace-dcb9a4f230cd",
        "cursor": {
          "ref": "dd3e774b-4494-4b21-8abb-2ac644e373b9",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "8295cb17-b276-4b71-813f-1ddbd735aa38"
        },
        "item": {
          "id": "ce334522-efad-4da2-bace-dcb9a4f230cd",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "599a1c3c-7eac-4e65-bb95-79c0f6409ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab58f80b-e0c2-4414-83bf-7ce1698fe4d1",
        "cursor": {
          "ref": "9e9e8a91-bb40-45aa-a703-81d52ed03f4d",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "6b371940-a363-4a34-a9ba-fc468df4cd3d"
        },
        "item": {
          "id": "ab58f80b-e0c2-4414-83bf-7ce1698fe4d1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5bc65287-57dc-4c90-a891-24fb81f8bbbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dab3b94-d531-441e-9aa7-bcffac8615e8",
        "cursor": {
          "ref": "729abcea-414b-4a4b-b214-3cff13b1b557",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "869acce2-5c0f-48eb-b61f-ad9d8f6327fd"
        },
        "item": {
          "id": "7dab3b94-d531-441e-9aa7-bcffac8615e8",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "785ae035-2569-412b-98bd-1d1061ba0252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94abf02d-e0ef-4441-bfdc-6fd67dcb0a53",
        "cursor": {
          "ref": "5b4e6ab0-bfaf-46df-acf5-eaffa195127d",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "5634e60c-638e-4a68-96f7-f15e980cd12d"
        },
        "item": {
          "id": "94abf02d-e0ef-4441-bfdc-6fd67dcb0a53",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "558b330d-8719-486a-96b8-2dc3ca183172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d485acd-c445-458f-aeea-4da93343e4e1",
        "cursor": {
          "ref": "e26b4d70-5df4-42dc-b080-3eb1a27ef698",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "599ab27a-5043-457f-9163-0eaf345175cf"
        },
        "item": {
          "id": "6d485acd-c445-458f-aeea-4da93343e4e1",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4d41673c-9ff7-4fa5-aff6-33071518e9e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48317284-62bb-4501-9410-fe958ab9e4f4",
        "cursor": {
          "ref": "6e5dc59a-17b5-4e3f-9c3c-554afbdfcca7",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "ad1ed47b-1faf-40eb-969e-d69873ac291c"
        },
        "item": {
          "id": "48317284-62bb-4501-9410-fe958ab9e4f4",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f9421e68-23ad-48e8-be10-7e284037af6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417b04dc-d8a7-4520-bd9e-67d0de3c8480",
        "cursor": {
          "ref": "85e6f5df-4fa2-4f50-b722-2e2a27117efe",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "b182639e-19a4-423e-b7d1-0e4503734c6c"
        },
        "item": {
          "id": "417b04dc-d8a7-4520-bd9e-67d0de3c8480",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ba4dd786-dfc0-4f29-a1e5-950e3c0038fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320f5bab-e15c-487a-94ef-b007a914d869",
        "cursor": {
          "ref": "e1dc637b-0884-42fd-b238-12f34f8942cb",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "d5815744-fe5d-4573-a368-ea6d3789bd8f"
        },
        "item": {
          "id": "320f5bab-e15c-487a-94ef-b007a914d869",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f4a81990-6470-45c7-9406-903b5788ce89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be8cba9-6a66-42b5-91fd-0b918bd4949a",
        "cursor": {
          "ref": "10765b64-6223-44d4-b9e1-8afc58d2b3e2",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "747de29a-c5c8-4923-96f8-ca680917d91d"
        },
        "item": {
          "id": "3be8cba9-6a66-42b5-91fd-0b918bd4949a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1e514d73-7f7f-4245-856e-ce84bb602935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c866598-3eb7-4f10-b18c-df2a48957e1d",
        "cursor": {
          "ref": "9d0e12ab-dad4-47f0-842f-f0a08766e887",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "b1c5f61c-bf41-475e-9398-59ffbf75264f"
        },
        "item": {
          "id": "6c866598-3eb7-4f10-b18c-df2a48957e1d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f2328ade-8aec-4b1f-af80-7cfd87cd5f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10303a2-06ff-4d61-a89c-c2ad768b48d8",
        "cursor": {
          "ref": "4de94bcc-0a3b-4dac-97db-5bec4eec6e90",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "83db1e93-a863-4045-a5aa-64c81ab06402"
        },
        "item": {
          "id": "d10303a2-06ff-4d61-a89c-c2ad768b48d8",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "eee1e89e-298e-4d88-8bd7-fe5da2328d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090cadd9-2d5b-43d7-9684-1b2a39b22f7a",
        "cursor": {
          "ref": "fd25e065-aa05-44a4-970e-22128261d145",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "77e18104-e374-495e-96ea-347dd7625cd9"
        },
        "item": {
          "id": "090cadd9-2d5b-43d7-9684-1b2a39b22f7a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9e25c53a-db43-474f-9e3c-7b7594c35972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c267e96f-daaf-4145-b91e-03548f906220",
        "cursor": {
          "ref": "b9daaadc-a8de-443b-82c2-ba89621e7775",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "165af6bc-e61f-4703-9309-663d2a570f63"
        },
        "item": {
          "id": "c267e96f-daaf-4145-b91e-03548f906220",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a28e5f18-df89-4eab-bd6a-2eced7c9d326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "904d9528-9d74-4ece-815e-9e20c135dea4",
        "cursor": {
          "ref": "c33f5b6a-949c-400e-921a-4d8eecb7562d",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "26900086-e1fa-4d27-9567-cd588e985b7c"
        },
        "item": {
          "id": "904d9528-9d74-4ece-815e-9e20c135dea4",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e72873dd-b2e1-4d72-912f-79110d8c39bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 136,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32fed7aa-1852-4d8a-8e03-9a4ba896d50d",
        "cursor": {
          "ref": "51cd69c3-770e-41d8-ade2-3383af824d31",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "d2814528-a0f0-40b1-b0ac-93ba264ed0c1"
        },
        "item": {
          "id": "32fed7aa-1852-4d8a-8e03-9a4ba896d50d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2d3e848c-4797-436d-817d-7e5eefc47a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8355269c-c005-4add-8755-4a0aa24e6dca",
        "cursor": {
          "ref": "b864ed40-411c-4a9f-85b2-d06c46db3112",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "a9f3391d-ad9c-4859-87e5-9880ae2fb2ec"
        },
        "item": {
          "id": "8355269c-c005-4add-8755-4a0aa24e6dca",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "eac34abe-3f39-4d11-a842-59f68ed36a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b29e0f-0d5d-45bc-8c2a-00c9502c9e36",
        "cursor": {
          "ref": "63d9f056-a946-4913-89aa-d982438b5e10",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "d69c451b-14a8-48de-8f79-c75668731581"
        },
        "item": {
          "id": "32b29e0f-0d5d-45bc-8c2a-00c9502c9e36",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a93959f5-88b4-4b58-98e1-1bf3f49f277f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a5baf5-d32a-4a42-bffd-8d8bc76eff95",
        "cursor": {
          "ref": "1d5f5862-fd58-4f8b-b739-356904edd861",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "daf289b8-60cd-4f38-8152-820b62232f49"
        },
        "item": {
          "id": "79a5baf5-d32a-4a42-bffd-8d8bc76eff95",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "35f56d9a-9236-4cae-a16b-2d91c81ccc9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd290b2-e691-4b55-a0b1-a30dc719eb5f",
        "cursor": {
          "ref": "24eab83d-04f2-434d-b112-9201cb4b2876",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "dac08d31-7bec-450d-b9a4-99294daaceb9"
        },
        "item": {
          "id": "fdd290b2-e691-4b55-a0b1-a30dc719eb5f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "142e274b-b638-4d61-b0d2-d7b20290277c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2208bf-b159-4054-881c-5b7c9df966ae",
        "cursor": {
          "ref": "9b555331-df07-41e2-a997-df35fbe94c69",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "9bcb2022-19b1-4e6a-b6d4-87b107db5512"
        },
        "item": {
          "id": "ab2208bf-b159-4054-881c-5b7c9df966ae",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "cdc40310-bcb4-4ec0-bf8a-2a5818f5d750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508c035d-b08e-4208-9f1e-fcd5037577ab",
        "cursor": {
          "ref": "2625995b-5fc3-4ddc-9bee-811b4e7dc316",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "5eb96d93-7c8f-42b3-a904-3bae5bbcb250"
        },
        "item": {
          "id": "508c035d-b08e-4208-9f1e-fcd5037577ab",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4c230f15-7289-4c7f-ba31-3f23939959eb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc4aa3e-051f-46be-8ce3-154073e66910",
        "cursor": {
          "ref": "a9233962-5e01-41da-968f-49aeb5ed22d6",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "34ff3a6f-6600-4350-9fae-05ab876ffd2a"
        },
        "item": {
          "id": "edc4aa3e-051f-46be-8ce3-154073e66910",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "fbf43cad-b220-471c-9cf4-d3281c2d6201",
          "status": "OK",
          "code": 200,
          "responseTime": 115,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "949c7b6b-4954-453e-a69a-a1447938b208",
        "cursor": {
          "ref": "df454a20-ddd9-4f86-9469-6124dcd2b934",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "facdaea4-7e76-4e24-a0ce-e17752a77d58"
        },
        "item": {
          "id": "949c7b6b-4954-453e-a69a-a1447938b208",
          "name": "credentials_verify"
        },
        "response": {
          "id": "609c4a1c-a231-41fd-8c14-3ca4b0a68427",
          "status": "OK",
          "code": 200,
          "responseTime": 6124,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2872bcc-9ac7-42dd-af3d-3718bbafbd3e",
        "cursor": {
          "ref": "c2dbb10a-bd7b-4021-81d5-cb71e081ea77",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "74578742-7b9c-46f2-bee2-04833ce7ae66"
        },
        "item": {
          "id": "d2872bcc-9ac7-42dd-af3d-3718bbafbd3e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7fcd2a91-8e5a-40fc-b9da-90901fcbc0b2",
          "status": "OK",
          "code": 200,
          "responseTime": 3204,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad4ee05-1ba8-4290-ad2f-a615e41fbf6c",
        "cursor": {
          "ref": "fc688b82-105e-4644-b6f5-1ecffeba1518",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "101edbf1-f93b-4376-b21e-a4ff597e96a8"
        },
        "item": {
          "id": "6ad4ee05-1ba8-4290-ad2f-a615e41fbf6c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b5e651b6-70ca-4ab7-ab4d-b8578b248648",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad4ee05-1ba8-4290-ad2f-a615e41fbf6c",
        "cursor": {
          "ref": "fc688b82-105e-4644-b6f5-1ecffeba1518",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "101edbf1-f93b-4376-b21e-a4ff597e96a8"
        },
        "item": {
          "id": "6ad4ee05-1ba8-4290-ad2f-a615e41fbf6c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b5e651b6-70ca-4ab7-ab4d-b8578b248648",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18cffcfb-bc54-4028-b23b-b48de673fffb",
        "cursor": {
          "ref": "f70167e9-23de-408d-9162-327d14fd01b0",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e1908547-38f6-42c5-9664-1aeab0d2b9d1"
        },
        "item": {
          "id": "18cffcfb-bc54-4028-b23b-b48de673fffb",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "87d6301f-257d-47f1-8b13-b1e89cd9866d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fdd4bca-2b6d-430e-ba5c-95bdaaf20a4a",
        "cursor": {
          "ref": "e5149587-f8de-49a3-9226-23f8b2c3bf76",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "0196e6b1-7c8a-4bef-be60-82b44945396f"
        },
        "item": {
          "id": "7fdd4bca-2b6d-430e-ba5c-95bdaaf20a4a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "196cd7f0-ce8c-488a-a47c-729a76ef69e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}