{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d46c29cf-44b5-4053-b7eb-5b5ea9300a7c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "dee3ff15-d48e-4e08-89b8-b6ecff98641a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1e35b5b4-9087-4373-9bc3-0548497804bf",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "93437626-0a3e-4b66-a805-9c05907a0124"
                }
              }
            ]
          },
          {
            "id": "502e9a40-b324-4ed7-aeb0-4a3099f98b56",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "adf96807-3a50-4260-a754-9916d66a69a3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f4f6f3cd-8c0d-4d07-bcc9-c2301a926b19"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6bfced2b-2ea8-4d7d-845f-85686f0e426d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9d436955-70a1-4066-984c-b444862d5883",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3c7ddf63-84b4-4059-bc6a-58225007b576",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6d515d3-6d6b-4648-a5c6-49b2db988c9f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aef5e905-1f0d-4edb-83c1-e9cd563caa8c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "00b20fd3-985b-4514-8fb8-281bd35cea7e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b92268e8-cd02-42ba-ace6-13b84ebf2b04"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cfcf8545-be6c-4bf3-a580-04516deded33",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2371af81-4c90-445e-a5c3-7fe61a9cfb93"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d6808ed-ce74-413b-b1e8-c4c054109ec1",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a521eea5-5d38-41e6-ab8a-bd6e36e32081"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "11fd60a6-45e5-4b0d-89b4-a0b20aa7097b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "00622307-1c21-40b2-bb1f-9bb628d5a147"
            }
          }
        ]
      },
      {
        "id": "e57d6ea4-48b7-4bfc-9f11-f0cfc374e436",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "05666466-9973-4227-8446-154ab27e9a90",
            "name": "Negative Testing",
            "item": [
              {
                "id": "020bf066-3e89-4cc9-8696-1fbf0773aa9d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6d664965-44ad-4993-bd3c-d9caef918277",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a028fa-a057-40c7-8f95-cbe3f1a8cd45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6ea442c-6b1a-4e44-9ed5-b15aa9b3d140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9761dfe-e2ef-4b5e-92d6-685e7dc05e70",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a880407-f2fe-4950-9bce-55fcd26ff8c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f48d261-57d8-43ad-952c-5f033fa10ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ff3d40-267c-4e9c-be5e-e5a098005f52",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d648a9-646a-4341-b4d6-6e217889aaf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a9326fd4-adcc-4353-af33-72b3324c34b5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7d4e1554-cd86-44ea-8c8a-416ec9f6b98f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "92b041a0-917a-42e2-99fb-9fd80416d874",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce7375e-77c0-4f82-bb88-a62b75dcd06e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b16b7ec4-4988-44f3-99b0-0e1942cd8324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae594f9-a02f-4347-84e9-471e10731810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09292a45-43bd-4e3f-abd4-0186ded47e4f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0b44e57f-d71e-4e71-b6a8-0dc35416a797",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f05b89ab-6e3a-4ae0-9773-d86429e38c92",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "30174c07-85cb-43b2-8717-56f1a4d27d4f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ff86d92d-9de1-4595-b994-a637f817c977"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0dd8a906-8444-4e0c-b39c-f22cf32247b3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "37b6943e-a5d9-4e1b-968b-a9b0de414e39"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7dd46e2f-f556-4b48-be2a-a01d8fca618d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "08bffc6a-3024-481f-98b3-6a8892081476"
            }
          }
        ]
      },
      {
        "id": "88629e21-966f-4071-9762-df79452a9db6",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "19151aeb-f6b9-4701-9d3d-e654a6247eeb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d86ada04-20cb-4faf-9350-728f2861bf68",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5099641a-654f-42d6-a555-d667a5e081b7",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c4986f-baaf-4a4a-a5e9-ca598bb1624f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee89ba05-609b-4ffd-ad6b-04be8438b8a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79737a88-73f6-4e2a-ac71-d1b6435e2bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66f47ca5-affd-4d99-a91b-cb4287b161b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf7142a-f7a9-4703-923d-12338e67c7ed",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a224321-178f-47c2-9d16-67406d93db47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36732fcc-2bdd-4689-83c5-f8718dd9fe2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d5a088-c3b4-416a-9d02-20419e7e5b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67992c9e-294d-42c4-9e03-8b3177144e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec535da-c2c3-4e1a-82c1-54fac05b8b76",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4afb555d-a20e-4a6b-b0ad-87ae50434963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "795a7f62-da20-437b-9420-f54095738493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce381c1-10bb-4492-ba46-0f3ac64322f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51564bf6-038b-4c51-b603-bfec46d0a045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df79cd18-6427-43cc-9a75-ea3b8f3e7db9",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ad7e14-3c56-41d6-a2a3-73e71345551a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69ea80a6-6b2c-4324-af35-a22514a1b025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cda91ee-a739-4056-9a8a-b8e1b8cf2607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f148f36-fda2-4c93-8900-9f8cdda5fd04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f021b40e-b069-4666-bea1-04b6fa09018f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0684073-d27c-48ba-a54c-69a7fe25f065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94f3277b-baff-45ec-9dbe-e11d793badea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b645492e-db4d-4598-8fb9-d3c4680d066e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1db0d3e3-80b7-4460-b3c8-c0400a42b979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072d84ff-0613-43eb-80ec-7d4d5bcc95d9",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "323b609f-75da-4eb1-bc77-293a36f6c645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cd761e2-9673-4d27-b3e1-15d1beaea5cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042b8be5-d744-4515-9230-55420f823efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5d1ed05-2c05-483e-828f-3a94b93075ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b79327-dd5e-4e04-b733-cd116168d170",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a65116-92aa-42ff-bf75-01f8af241997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70a72d80-f854-45ab-97da-051a8b3d1446"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba2c7297-93c3-401f-9f27-2033e23fe8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b649d28-8928-4d96-a778-2e84dd2dbd31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b2e5a8-30fd-4455-b835-c1d3208c2503",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03711dab-ffc2-4a8e-9a36-b2c2f9eea382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1712add0-dc8f-4163-9105-12ae9ef8a5a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03fbb6c0-85b9-4222-b56f-ffe522dbc1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6afda5c-73b7-4dc5-ac3f-b67eba152883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c034186-9401-4c04-b75b-06ae89333873",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d7711b-bed3-47b7-bc62-5f697bcbd283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00d0bbea-9e3b-40ca-b2fd-6b0ce2d648d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f304d8f7-2afc-46b5-ac5e-ac3bc9383473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7bc3a616-af19-4db7-ac6f-919bc60b87da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d7f224-b5d6-49e1-ab47-82c174f83b17",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e2895c-0dbc-48a9-93f4-d8c7ac2f3b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2391cb8-69bd-4609-9843-d27d6ca781f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df776752-a682-4165-a5c5-d287b65d5d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de76bbdd-03a7-4d27-ab56-ad8d2e4553ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98acf57f-4bf6-43c7-990c-d332750f97b7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27c4830-e15a-4c14-a651-2551664c3754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e4f3be6-de32-4333-9053-103228b69df8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac52a44-2a71-482f-9454-8e1ccd3a4591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53adcc7a-0c6c-4df1-b9aa-5429cbc69eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2ae765-a1ff-44a3-bc6b-cdd0f101162b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea992b8-3a79-4931-9985-ec6e0e4f5495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2021d280-c0fe-41eb-ac4f-357b9c86c52f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f03e59-e1d5-4ae6-8009-ab5e5c7ac3a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48595f6e-122e-4a3f-9bd7-ccc7aef492fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976bbd64-9e63-4cf7-923c-95b36154f24c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf46f15c-7634-4bac-aa27-53710a0b9a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8ffb85d-e41a-4b67-9e82-3b424ee0e4c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b3dfd31-252e-4300-9016-8e9e18f757e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "512d6d38-589d-4eaa-8c52-3e90424f115a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f6c60f-3f22-43bf-a47f-8f5bc5eead7f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98559ca4-2752-4b5f-8707-6a2e8bc877ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df25aeb8-bb8e-4dcf-967d-55e43291822a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a540b73-b1e2-4466-9a64-fdb38e795dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51fde0b8-73ad-4147-8181-79b3684f35fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de20d7ee-8fec-4178-957c-6eddbf136f85",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21152448-4e83-46a7-a2c0-32d4665e92a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf0ed132-11c7-48b3-8f5b-86d73e800355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4e3d75-1e18-4c15-9b2d-419bbf6e4f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9156296-a6b4-45d2-9590-245464ec41cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc11542-ef6a-45ea-95e1-3fd24a7a7c27",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb94138e-8d5f-4f1f-b70e-f359e4727511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3ddd85d-42a2-44cd-89d0-d4eb0324be71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aec9a3d-391b-4aa7-ab45-74f4ef8c62b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72ba0d7e-1208-4ff2-a4b7-da4a4781ddf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ca9500-9ffd-4d26-933c-97bc22b9a8b6",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49a6544-2924-455f-aacb-7740dffe57ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef976bc3-832e-4a1c-a6ae-a27af0e6ca63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a1a1ca0-e773-4cc7-aeba-1735d9275b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbd18ee9-5bd3-4ac8-975a-23d267166cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd54ce4-def3-4f32-9c90-805b826423b2",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5ebeb5-98b6-4817-9007-2480d323a0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1d2a73d-10f9-46e8-bb13-7fbf42be590e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d84ac0b-7574-4ea5-ae70-9f4ddd1af954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c912301-f97b-49ac-84bd-07538c82acbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3680e210-6845-4992-a014-f20d769c7903",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "357ecfc6-d931-4dd7-9988-2e19e3c1209c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc26441f-1d97-4597-9b48-659d0236ba4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012b0d78-4f29-4ab1-ba70-926002f6d685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "883cb266-91ce-4ceb-87ad-5839490edace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03fb5b84-b638-4722-83d6-b9265ef66812",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32dabf8b-4c27-4430-9403-89eb02f950b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dae83c73-5398-42df-9cf5-01c14c705b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf5f66f-40cd-4068-8a43-005cd997f01b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a7935f8-17aa-4c66-8c34-9291661dd612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde6ab19-22d9-4036-9678-88b02ec961bf",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49078a07-affc-4cc6-b696-cacfd399b50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c70d71d-4115-488e-8ac2-ada180b9768c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e696b1b-df41-4312-977e-9043c9332a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "de94964d-e889-4e29-ab9a-f066f59f7c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95144c05-26e6-42cd-aad4-94ac5f0c161d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67640cc2-1fdf-47de-8f4b-b4415b9f6cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87e9a557-72a4-4bc2-a2f0-7a01d08f2e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70856e2-3e89-4208-9b5f-f71670a064c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce4a8c0e-1f76-4df6-a2de-9e662445901b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e621a0ad-d66c-44b8-88c9-abf58aa73b7a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a8e969-a092-47d0-8041-a8ed9aa7d85f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c37ffa0a-4a84-456e-9268-a1f5c70b0671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "123f855f-700f-4326-ac94-d7a3a92dffbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "11b0c791-f82c-48c5-9062-594522204c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a3c8a4-a8d4-44e1-95b9-844c60e39c48",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5edbda2e-6319-44f4-8376-eacbb4a41620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78ecf037-a4c5-4bcd-9f97-8f0b0bec0a8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa297e00-f5e4-440f-9db5-1fe3ac4b45b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "21c479f1-2603-48ab-9fc0-3836de4fafce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65025f67-dcab-43ec-b2ad-3ac481e74875",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baff60e6-44d1-4b15-8f16-4b93da3152f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fba21bcf-9d9a-452b-bff4-18b1cda121bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001488f8-d241-4cc6-9032-a9b6ef61f529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "428c102d-dbdc-4f6b-8ec9-dc550f2443c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3afa05c-a294-4d47-91de-273b5432832f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9132a0e0-8d14-4a42-b5bf-27f6b547625f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a11c73e9-8742-474e-8e59-29f7484d1896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b482292-ca65-4f38-9aad-b40e06c98c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "03660c77-2aa2-48b6-9830-84c768952cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa3aa54-cbb4-41e1-96d6-90c90e59b9be",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95efa506-5809-4bb0-b06e-ac5cc408f630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebfdc5c4-ce32-4a08-8d8f-1b79101eb888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419940af-692c-4984-9e2e-66829b7cbb00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbace5ae-5f32-4979-be08-c8577610d050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd07091-8326-4801-9859-e65ad3fa5b8c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc49d686-e29c-441e-b0cc-2fadfbc3748a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc21d52f-9f6f-4168-9780-e18505c4f4bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edafc773-9e15-4f45-91e1-b3f76601dcfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cfcc4f0-1683-4c8d-9101-8a4892b7a2b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fea7237-5f91-4821-b42d-63902071fec7",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c8eacd-3e34-44f0-88fb-9960fd6e8ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ea29716-0c8d-4eb4-9e75-f2ef9e730da1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad3524f1-e905-4aa0-91ef-1274ef37a939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a68fe052-95e6-4deb-be45-0f1d617116c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "937999bc-97e6-4820-8911-2edbd5278953",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e31186-3af4-4bf4-873a-5e6b053210b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f3f7abd-5d83-48d1-b7cd-da5a922d92de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b0f9fcd-4282-43c0-98dd-c00301bef47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "52845a47-df52-421c-b7df-ca44882e6e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4fa438-c978-47f0-a722-ace2c548696c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e56c0bc-60d9-470d-a49c-6e4313c7d4aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46e2c182-884b-4cfc-a270-d4b0bc0168f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d764500-6ccd-4e58-9970-b36a937da028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e120812-181c-4cc5-a7c9-3aecd5d8875f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "716847c6-5ad4-4271-9631-cfa28f9e3583",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e2ce8d-2d4d-4bf6-9e51-dee55a08b431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e277172a-0d05-40e7-b63e-f123c308c1ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c6300e-abe1-4b54-9a91-c36d5fbdbed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea9c148a-c12a-46fb-93bd-d36c8b0dca50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2cd871-72b2-4820-8927-ffeb9813262e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "757f6e27-9d9e-4a7a-a90f-9fc3bf272363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ade2a47-8d6c-4698-a0be-87c1a908b727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b9ad2f-8532-408c-a677-18cf45ff083b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8272b5c-ec76-4bcf-8819-c63b21b536de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a00f76-03cf-4fc1-8308-b5f56c9106a4",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4aad6b-839b-4ed3-a598-edf304e45a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "441b917e-1611-4475-875b-fb6c6495dbeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d356e7a4-6318-44ee-b7b8-4de4d532af6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "03dcb3bc-5f90-4981-848f-685ee3d7a5f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e696d7-999b-4b4b-b5c0-4376e01696d3",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1bceb0c-f8d9-471a-82df-3f1f2fb605fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af16cdd1-16a0-4d3f-be19-b86ee3ceca79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c10af06c-800f-47a2-9f56-0ccfe29488d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b9332a43-503f-4599-9261-cccaa969b749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12654f0b-bb82-455e-8c0d-d4ebad73cc32",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5324d6-4304-4d49-9e5d-44a57357dc20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23792347-c1b5-48e2-b155-038aaec0e5d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b229849-7bc9-4e85-a634-050e1efd220b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ae392ef6-66ac-4816-9fa9-e3708bc32b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1a6746-8b54-4818-98ab-3ef4e50eb9a3",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7129c98a-c9ab-4871-85d5-9602a2658c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3110641-0684-4fd1-80de-26baa1fa8474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451e0e8f-a70b-4504-8879-a5ff9d1c1f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8096538-facf-483c-8b7d-295c907b8ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae348f9-4e4e-4f60-9988-087b722a42d8",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ffed6a-ac5e-43f9-9207-457fe5de23b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db0aca14-184d-4422-941b-986d66788b6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33855602-20a0-4f18-8290-ddb954286ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb0daf9-2dd4-4d7b-81ef-8cbcb8595166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd69ab8e-7ab7-4689-ba46-c7bf11bad94e",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf32c63-17de-4ccd-920f-61096473efa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80f6bf1c-2489-4ae4-9a1b-6356600051d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "085a3254-9de4-4168-ae90-f654708cc990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2d2a631-320b-41e9-84aa-fd3e046f2aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ef97a6-b99c-4c52-8704-f68590472949",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36ae3ff-ba97-4bac-9c9a-4e8918c3a320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6b1a3b3-13a1-44c3-a357-0484669ba9d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59717fe-e124-4dd2-919b-db5dd46cdb7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3f96568-837c-4190-bb0f-1cfaa69a2df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c3e58a-cdf7-4de7-9cea-ce8ca56132ff",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f065ab2a-1fcc-4cf7-a6d1-fac7c662a23a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afddb10d-0e2e-4195-92d8-291ac0323a06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f970faf6-016b-4474-a689-9a692e2d571f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "da1e2fdb-7942-416d-8241-79494119e1b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c72241e-0130-4966-8bec-8b99efcb1f3f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "259614dc-844e-4848-8afb-8c38fd4f8ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5839e35-0d7e-44c3-abc9-33f3d25c27ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1992663b-3ecd-467b-9268-449f61df06bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b8ffa0b1-aa6a-4c42-951f-81c3b0237ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f3691f-a55e-419e-9917-57052a5504e7",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ee7c8e-f1ba-452c-bb51-9f73babe97fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7835ba81-ea6b-47b1-a5dd-6a183ce9d894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4486063-90b5-413d-b448-a6d27c65609c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0c0746b-e5f1-4cbb-bab1-866108a8c2e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336634f5-3ac4-4693-babc-8a71d3fff6f7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a96d1670-d91d-4cf2-a408-3ecba340ce18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a71476b9-6f7e-4a67-8f0a-e9fb487c4d2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d54905-dc6a-410f-92ad-ad1f7494c093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7021eb1a-9659-4a4f-8b84-d5df12ee149f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3426e34e-eb83-458f-a5ff-aeaa9048753d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a179510-c987-41d4-a2ef-27e82642fe5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1014718-62e5-49b3-8bbd-5d32048644bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c20cf15-f968-49bd-b134-0f49263f58a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "772d1d82-cec2-4edc-99d0-fcbaf177ab8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e51c6114-a7b6-4d4b-9260-bb2226894b26",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af73359-74f3-410e-9787-46b882cfa392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12c613c3-9bcf-4069-9618-408fdb84b2d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc136fc5-ba28-4681-8832-6f04a3b17709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "57f48124-2bb0-428b-a0fe-65879f106d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df07048-2b5e-4c92-858c-a22d701ac188",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdaa90c5-4434-4759-af94-ac925dd1d644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7079413c-e8e5-4ff3-9274-c3f48ce0a10a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e8d695-cfb4-46d7-88eb-9a69a7da396c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bedcf1c-aea0-480f-9fdd-31908d970c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5508ac01-7616-4c40-a747-f1a5be421283",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34b973e-b840-4191-9e7d-8226dfc305a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aae72a9-bf5c-46df-afb3-306e7ca3d339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd1c949-db15-4f7c-982f-30eb8e49ce50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51bd4576-1743-41c7-9913-734e303a4487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf2c5732-590d-4928-b761-7f8ebc861e04",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea25393c-f708-4791-b1b8-5e33c0a9d63c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c366a43-2d45-428f-9868-27699dc32de9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94838c35-be65-44df-8312-7a5d1a5c572c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2bebb6ca-54e1-496e-9d3a-94aef9de6382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb56dc1-d2a1-4d1b-a34a-c22b3607caee",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47222923-4f20-4988-91da-41c05dd9e3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22483141-692d-4c2b-beee-f27d8846e698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8024fd-d91d-4c40-89ba-3721f0e340b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "88e645bf-ce43-4b3c-8d2a-3c75a6182dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f420a361-966a-4440-99bd-daf28d994b8e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47061e0-4f4b-40f6-af13-6dec69a30748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "197ea0bf-4af8-47ee-bc31-c251aa692e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62882441-3ea2-4610-ad25-9399739e4ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c88965bc-3177-47ca-a107-c06d287c77a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158e9a8a-ed9b-4653-922f-ca86372a2357",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff36a0f-c65c-4041-9bd9-d455cc31732a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6be4a7d3-5245-489e-9c6a-2be8506aa638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63da842-1368-45d6-8855-06aebbda97da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "790477bb-7af1-42d3-95f9-f8539eb65383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c002ed9b-0442-49c1-90dd-9aa31be351a3",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "074ac3c5-0efc-4f17-a10d-a577fcceca46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "325e9f77-a9f8-4468-b9aa-898be9d5c2ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a94868-9857-401f-bd3c-bf078cdb72e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c37e629-c2a8-4802-b0fb-121708758e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2aca388-de9f-430b-84f1-7be20ae38f95",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0876e15-31fc-4e00-994f-583fb30c101e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fc61eb8-835b-4985-b1be-8216c672fb32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d332026-aa7d-418a-b9d2-2f999d5ccb51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a25b9e3-2c87-4917-a13d-3769e5a35e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc859abe-c094-4043-aa9c-26aebd778382",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "646d1e7a-ae3b-4e8a-8b03-bfa92ab02749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f1b9e57-9ba2-4deb-ae29-01a84ff3634c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aea52a3-e6bb-4674-9db2-28282ce0fdb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa424b44-0020-4054-b71a-7ccdcbe6cd8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e72e5f00-d50d-462a-b6ca-ff43761a703d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "032b5f50-96c3-456d-97df-d9e4a3f7896a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2071baf-f7dc-4a41-b0a3-88b7e561f5cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baef6399-5675-4a24-ab5c-24ff14ee5383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "36914201-126c-4e41-ad3f-06f1c0e06934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7d40a6-0936-4e60-853d-7892f0e356c9",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba279e7-cbe2-4b15-b06f-79e97f9f97e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcd049f7-a60d-4867-a39c-2c62511fece9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56091842-4076-401a-bf57-a16d3858fe1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "39db23ef-fea2-4d4c-9e25-76c10f5db75b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e49aa7-4cf7-443c-96fa-7fe908a8aa4f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "387a0398-ec5d-462c-b4fa-bb9d02583e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0322e9d-68c1-4f2c-8d44-d62bae9e55eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c16c7e-43fa-4660-8e0c-119905f6e1cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2906e23e-9851-4bee-8cf5-c6288520aeea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7f8683-6431-4113-acaf-0902812b5657",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4834ea88-d873-45ac-9543-30b3e6b8dd56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "167c8e03-c8de-462e-9230-abc968c84aa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6833ab-765c-4705-acb7-f96eb1dd329a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "958caeb3-7af6-4a1d-911d-472f331cd9ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d198c6d5-3074-4c06-9a11-e1b7ead87fba",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d8b0336-6947-4c67-9767-21a8106545f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac1df967-eb93-4d6d-9930-5b70a3d5e523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8bf745-863c-43d6-904c-b65daf9688e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e95c6d1a-09d1-49c5-9f51-0364885b5f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1287f66-8263-42af-ab77-116c8429d4ca",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "027c0f41-bcfb-47be-87aa-7f41119a3373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "242e9e88-49d4-4fa8-bc03-d5bd59452c11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f42588-2e56-40ee-a1a3-b2e32a8bcc39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e1c4f2e-a613-464c-967d-53c314e2df94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0297327-66bc-4b1d-aa74-585649fcfe13",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5682226-35f6-4d94-ace7-c890a2d3ac70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6204030-93a4-49ae-ae05-38e001885d89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c643da-c674-49df-a8be-12ba06c03e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff115adf-f7b5-4a2e-921f-21ea60de7899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7eca132-2d50-4e73-b4c2-f8886e090197",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6025c5df-be19-42dc-8519-695e52574877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d969945e-53a1-4f67-a67c-4eebe118a104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d560d3-2135-49b8-a5d0-b2fcbfc69a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "44a8cfbf-06e7-4731-b420-5b8c3b1b32f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d1b82d-4968-4ba8-bd79-155a226e35a3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08528623-9d93-4aad-9bf8-6b4b67186c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfee3de1-e6f7-4293-8531-74e60907d1ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "387f50f0-794b-474a-83a1-94be8d16ade8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f32d669d-b3f8-4d88-97d4-2fb64bb26042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d9ece3-fa4e-4486-b1f6-b2762e4ac301",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b3489b-3991-4be7-aeb7-5b619e59fef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79d88303-4413-45b6-b1f8-17b91fdda05e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8222d51-e872-485a-b704-40e4de57e50a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dc58cb3-0210-4304-bbfa-99447075a2d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bcc3089-a50a-4613-8a94-3d34d7ed2358",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47b4bb4-3ed7-455e-8ee2-4c3d233513e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c44b9ea-51fa-4f40-bbc1-9d1aa9d81577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a79097-5161-41f5-8620-04edf7f33abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cd27e54-7216-4e65-a73d-4bacf783a498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12dcc4f9-9914-4d3a-8f5f-5e40189f3f8e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d6a6d1-7bf5-4ca1-a803-4e915401dda2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7409e6b9-47fb-4b88-a5ed-c445a14c3e10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f001c628-fd1c-4349-9e26-2a032a05f673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e1350b21-4899-4840-a113-bb2011d07f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee684e4-65d9-4034-800f-0a810fdcff48",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a40ac2-5c18-4028-b288-05c4e5ea44d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e652387-e4a8-4361-ae8d-929e919d159f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b37e9e-fb88-4922-826b-5026efb2d6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7018b65-b7e9-4d31-8c5d-fabfed704d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8480959-e2ba-4aca-8af8-ee46629ce469",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe74db4-5e70-4579-ae15-e55f4cc1dcb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "322a0e9d-174c-485e-b7ce-384d43bc9528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b56dae-db25-49a6-9d1c-d4fbac881e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "97ff4029-b97d-4451-98e6-9a1f9f123ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a659aef-8373-4b69-881d-998c7e35e5ae",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c74fba-ea21-4071-a3c4-a84fac764543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24f9de46-561b-4682-877c-f2b82cb902c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a705f3-95e4-45ae-a188-b97d77961ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5c27488-2b70-4f16-8c8a-f9d92a2c3e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6bdc0f1-ed4b-445b-8ceb-2048898c6dae",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace5fc24-e168-41a1-9ae2-7562b7dfe272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c15c42a4-3877-427d-b9bc-0b417089883b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af2994a-98ce-4bf7-a181-9b2e0a7a6b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "770b36bc-8946-4897-9676-4b62757c721d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f683f61b-393e-4ef2-836b-94ab550e669a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3cbaff7-681a-4d34-90cb-4abbf837056e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac58ad27-40d3-4ae6-b3d1-a408825743d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f516d0-2da4-4d2c-bcb4-4fb4f67e34c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e208e47-b979-464b-8a7b-02ac92403f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156f6c2f-cbdf-4f21-8bf1-55f810b4bdeb",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9b5d8d-360b-4eae-ab1a-636606efae46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6ff560d-cb9b-456c-b808-bf90958ce442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19260c67-3047-4b45-8933-cb440ec70aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca52c028-94b3-4516-8073-c1a0c10d48ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4607fe-54cc-41f7-9f75-6fef242738fc",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f55567-e9e0-471e-ab2b-51bf97f0d3f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f906a31-a7a5-43dd-adcc-0b5044b94864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b7fb486-0f09-427d-bd22-2ab7b5a1e76b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d9da2f30-a5e2-47a8-b799-9ee14d5f25e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ff99f4-a268-4693-b156-aef30682de76",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3972d40a-00d4-4464-9110-da4969a7848a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6529ae04-b645-4c3c-9658-c4028b6bc2a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c91355db-b55a-444b-81b9-72ceab6da7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d545eec1-6cfb-4dae-9e22-f552cd3f6758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5279b0e-c81a-473e-aece-b225451b153f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3aabb8-1aae-4dde-b7de-8a9574cabe6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ec1758a-3b28-4dc1-9230-a351be609669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6538a84f-9656-4cd6-bdc9-51e88e93893d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "74f2eced-efb1-432a-9b6a-1b3d9b881788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3d9000-30f3-4cd1-a789-227f238f0ffb",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65d5375-9425-4e98-a5ac-499b55273d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dbe72e5-095f-4049-aba3-e26105e001e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0bd6ac9-fb41-4f61-bd48-28972adb2404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "75f78681-04bd-44d3-a1fd-637fabff485d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d31909-f5af-4c6d-82fc-82b296347c80",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6fe628-a4c8-4da0-b49c-da02a2d9fbd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e62bcf3f-cbe9-4ab8-9de4-a1fb90dc8abd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07bbb0a8-1385-40a3-b009-5efefb566cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "846cca75-6396-4251-8400-01ea770670c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604dbbd7-f18a-454c-8f6c-045b147dd48f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5289cac9-0957-4832-bc5c-f6ad1ecb18d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d046c04-6a47-473b-8160-8d36ef9be5ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "644ae2a2-eec7-4753-8ef1-dc21be7fc982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1c99122-0205-462a-a47b-51d98e49d0ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2947231-9a94-4bc4-9d0d-72b4ae68c021",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "199e6584-024a-42d1-927d-f0a8b09f275f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf31dc52-4249-4cc3-98c0-69b97d5fc139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba04d3ec-c28f-4c7d-9dff-e583ffc9956c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5ef6e44a-3345-4e95-90f1-fa5c1b1e32c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ffe01b6-89b0-4bbe-90c8-a8ad89e28aaa",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "295f6e60-db3c-4729-bcc9-7b2c95adffb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93ebb023-b2d0-46c6-9491-b16014a72e36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a5642b9-fcb9-41e4-bc17-c75911191342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba8dc7b0-d1da-42c1-8ab4-c9f5be03e436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d7f0bd7-3faa-470e-811b-0840eed2474b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4efc13a9-c2f9-4ac6-94b4-8811ae8e2e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b8583b8-9eb5-432b-8237-7cb9d343017a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3256e1d-f1bf-4a4e-a39d-47bc4410984d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "790d0f5f-6494-40b8-a872-ce5422037107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b071ab95-78bd-4302-8b27-04e91b605fcc",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d1d997-75e1-481f-90dc-1df2bcd85edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a235469c-077f-4550-8002-1e2434db7961"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fbced89-f658-4347-931e-c72baabf77f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b006adae-aaef-42bb-8e0d-90b33800ef44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c31dc8-3708-4a26-a8b8-4e9ec4bde29f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcda7bb3-266f-43fe-bc67-ca24a97f46d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e89d4630-1013-48c3-81e2-7b0c59e2b6dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6cfec1-52a2-4d32-a4e2-c33838eba3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b200ebf-9bdc-4edb-9df0-bb792336a6d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6266d05f-b75a-4c54-a5b6-fe8c70681714",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c0b0060-a204-406e-ab93-df5801748e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d471ed42-96df-49b9-9f97-7f07b7b0e6a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8a2966-24f2-4d24-9e73-f500529094ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "234ef2eb-5b7a-463a-b2bf-a0c306841ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb63c395-e713-42ea-ab59-090528d55956",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe6ab33d-f8c4-4707-88f7-0543e04fc020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f054071-2082-4446-a8c6-32ac625f4ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd7927a8-cd82-49b5-9eaf-33cdb050c6c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b065c47d-7d82-40d1-8dff-9a6cdf2d3bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "331f03bd-ecb1-4c55-85a0-edb2272fc26b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf7dbc7-b698-41f9-8e09-10c77cb0291b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d77dd35-f60b-46be-aa86-4fea52d327ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c232833-4fff-407f-9924-9d1cb945f218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae986dac-a8e8-45f2-afad-680c0ffaaad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dcb0c3e-78e2-43ca-b798-e3ce8fc87816",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f4d62a4-7769-4446-be6d-9b4e8e3ec80c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ffb91d2-2bbf-4a8e-8a92-40850e760e57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254cc82d-0ee4-4b13-a23a-d77faf5d6d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc2e762c-f828-43b6-86fc-c63f4b85059a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e7cbdd-4561-453a-941a-2d93ee0f3c60",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db26b2a-1031-4938-ade7-73b1d1fb1fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa1586f6-03cf-4213-8793-6353c05e13c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17634cd-61ba-4a0e-a206-cadf20cc0465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "48c5dc63-eca5-4236-b5ea-0e2823f897f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d565260-6707-4b17-ae59-75a5714cd749",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e378dd0-cefa-446b-a4ad-b699fd6a0ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6368fbb4-d9e9-4d15-be5e-97b3852a7aeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ce912f-00df-4171-a95d-d48048ccc4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6757bed9-1829-44f2-a672-4ae3073e6c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea0b0011-7867-4089-84b3-0e2c87f831a8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ffd43c-6d8b-447c-9e08-fe5d4361d39a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f0b7c6e-08e7-4636-a2aa-7786763077ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b693073-c8e9-4684-9853-1fc75343d143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "58ca6628-900e-4c09-947f-1d607d193dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e49db7-7531-4ffd-a8bb-885baeaf30aa",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95979f03-9b8a-4f59-b220-0bb1d6851f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "75e8852b-7fc7-4358-82f8-e0697c11e516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e3c1b4-2ab8-4be5-91dc-dd4bb82e751f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1826248-2e8e-44da-9863-b45f84cf4a95"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "25cb8d55-df7a-461e-9818-5ce214c0f64e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3a383535-2969-49f2-a7a2-f2e7dc4a15dc",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "607321fe-eb84-4ba3-acd6-7d69df79303a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "608bb0f4-7b7d-4187-b8d8-cb48d3c306eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d12f1c6-995f-414f-b47a-7eae14069352",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31595dd4-3474-4f2a-ac05-902fce8be1aa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "472f852f-f8fc-4461-9568-5e3613c1a16e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25cc2605-57bc-40bf-ac09-62a82c68f907"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "77be847e-1480-45a4-8ff8-9703e794a0f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ebee7866-8ca1-4442-9a6c-8650090a4f61"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "232de345-d952-498f-bba8-e943caad9406",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b17a0821-51c5-4029-b735-26a297125800"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b8910fdc-979a-423e-b5d9-ca8e35827c67",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a0949a91-c81b-4ba0-be0d-a211a8394fa2"
                }
              }
            ]
          },
          {
            "id": "9bcdb2fb-6fa4-458e-80b3-5551c8c5c6ea",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7d162f77-77a7-44d6-9e6f-f00d33c3a88a",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "b2ca1e84-7b1d-4012-8058-c4123dfd4d16",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0111b78-2e5a-4d45-8ef2-0c9fb5fadebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a554d44c-b8e7-4cd9-b858-9cca340346a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69ba1ca-52ae-4162-a9fa-c7030f68cd6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "992bf4e1-2e1a-488b-9a40-de12667ad4f8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9d31c949-ba04-45ec-8098-918ac221414b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "33815bf3-4f91-45d9-959b-061d2d48eec9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6900db7c-41fa-432a-8e07-24d3f4ed68f8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "300544c9-6f8f-42d2-b4a0-2bdef80efdec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "395dcc3e-306c-462d-9b8d-05547301f348"
                    }
                  }
                ]
              },
              {
                "id": "ad76e87e-a9d6-4b71-9238-18ff54771716",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dbb23c33-5e4f-4966-93b5-7605d9ab2e49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ec4dd191-1e4b-4587-bb35-3544a45be192"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e675a4aa-c4f7-40d9-949a-eb815ed8dd55",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e3263845-fa00-46a5-ba3b-65ff311a919d"
                    }
                  }
                ]
              },
              {
                "id": "e480cab3-ff32-40a9-a366-b9de290b9dcd",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "71ff4afb-f240-4e46-8939-dc849d97c71a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e682e90e-0318-4d6b-9df1-d38bab9dd8af"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a57ebe3f-d0b0-48c9-a744-6eb1411ff3ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ee7174dd-b51d-4d4f-a84d-3695abb4a146"
                    }
                  }
                ]
              },
              {
                "id": "725f1218-b460-4745-9f24-4e085ac48aaf",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d406655-59e7-4a73-9e35-bfc697fd4300",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1b4d3e5e-8d24-4b56-99b7-3c40a56d150d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "05371e0c-9d47-474e-b63c-ad1b3acf0584",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b43536d9-4b17-4822-a14c-5b044ac78825"
                    }
                  }
                ]
              },
              {
                "id": "c639a2b2-ae26-4eab-8be2-218e2d95dc2c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2ef2dfb-d730-498c-bb18-cc6d474de31a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f0a28e7c-5b94-49a7-9de2-b928895e30fc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b2d3dce-45c4-4fcc-a965-bb00ab70d6b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "699f3adb-631a-48db-90b7-ffcb4c4d350a"
                    }
                  }
                ]
              },
              {
                "id": "364f6f69-0959-43c1-bb5a-bff30f7cd77c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d223405-f8b6-4459-b6dc-c5aec7ddac94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ccae3ea9-4c0d-4354-b70a-b4382a521a90"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2cc0cbf8-cb71-4136-ad45-8ba57aa99760",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "044f89e8-4aa8-4627-bb1f-1eb8b382a2d5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ff8a478b-4360-4c04-a958-b719e464e2ec",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6df69736-1433-4038-aa70-f1b773ccfaac"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "23bc1a53-80ff-407f-8b0c-c3655f1c1905",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dd87d3bc-5d54-4b99-b35a-39170c06a64f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3c24a483-5189-46e8-bb1c-36880fba82ce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "64742542-746b-4d9e-b85e-7ddc12007ef9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b671d80b-3047-4ff0-8217-77c1c9b72263",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2428910f-dd77-44ec-920c-49691168e21f"
            }
          }
        ]
      },
      {
        "id": "0a754af0-f8cb-4a1d-81d8-fc4d509a429b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "8003d031-e979-42da-958c-880f1e381160",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4827ba94-b93e-4080-aa43-de7023cdb399",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "66bc9f2e-44a8-44ca-a4c4-a50934e96cf4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47025fa-1648-455f-bfe1-a4be43b0e881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "848475f6-2884-42f0-b805-54e094b0c64d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5296ecf0-ba93-44f3-a9c5-a2b54d1000a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fb27e13-8b5b-4eae-a987-649903d6a3f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9446cb-0ed4-4501-9dad-7d93753adca8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44674aac-06f4-4015-9d7c-d3567e1f6def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace3f4de-f5d5-4e1a-b78c-48865e32b819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86744281-ae31-489f-91ae-ca6afd6e4f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "03c993ef-40c9-42d1-b31d-22b2c314f75f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "799f8e0a-5f38-433e-a44b-656e68f61ec8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a79163-2b15-4912-9199-f02e63b73f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13165524-5de1-4545-96e7-c60e79f0a5da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48dd7553-4fa5-45eb-ad36-e8e67a268799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a743549d-b5bf-4d45-8906-dec30322557b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b6718c9-69b6-459e-ac59-f5161d86f46f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7552b6b-d3ac-432d-855c-b9fa40766a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b403495d-fbd0-41fd-9d8d-a0e4bb7951ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e38131-2d1a-4f97-be31-4a053a86b201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7688bcb1-6687-445b-9b84-2211fedc2dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5333051e-3ae2-4ccf-9f51-e97a9a7f8ffc",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "662d3403-85aa-44f2-8fee-1bcf0380b613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0bccd23-f4fa-49a5-b37a-21be432aa99b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f60c80-cd05-4f1b-9b8b-6cc42be83fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "50a12f65-bbbe-46ba-8169-a4d6aeda5f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a611e944-47c1-4e49-a9ad-996b25d1c1a9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "549ad621-ac71-4c8b-bbc9-5ea912f92e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff2863d0-8a30-4292-8c4c-2f07b12cb1a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf157cf-9e29-43fc-a630-f0997eb375eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ee9997e-58c4-4990-b98a-962d771a7f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d7548c-98f6-416f-906b-dbdb2b6c1fd7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec308ec2-92dc-42c9-a2f8-fe51956edf59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35ff7db5-9480-4cd4-8ef6-309daa0d87b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ade96d0-ccb1-43e0-9656-0eedbdda39c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a9cbd65-aaa3-4c99-a6c9-cb9fbf6c14bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d02585-3d3d-4279-be21-3d2fd644305f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ff46d1-0788-4ad5-8a6d-62b091558813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "729fa2ef-113c-4515-ab56-def5bbda48a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8455e51-491a-4bfe-870b-07dd44037a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "337c0014-a838-49cb-8af5-83ee38180ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475eded8-052b-4a58-8ace-7b55d2069ff9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "984caad7-b72f-4666-af0a-7439e009c422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6630e7c0-d262-401d-b200-38ad23b1da76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0421a0f6-c3ad-4a84-9c0f-526bda471f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a210710-8c71-4dd7-9534-8f031241b97e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9bc98d2-ce19-4cee-aebc-19727b39d2fb",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac87339b-6c99-40d6-8770-262258e8abb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88402f0a-5c16-4904-b257-de499af9fd86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80673a23-f490-484c-98a6-8ae9537c829a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e9cb669-402f-4f98-8f30-6024eb809120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f73ee98-8a58-4b4b-8a60-67098a36df95",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7d394c-6c2f-4019-9bc7-68220aeb24b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8412727-4244-4f59-bf59-c89d6915f2f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36e55b1-949f-463f-8bc1-5a5f44c3ac6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c0f0492d-0331-4a1b-bfd3-9b002f533b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58fc607f-179e-4033-b56c-363903c32515",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c9e79d-c0b5-4389-82b7-8f5fb192d7f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "304374d1-3702-4207-b049-b34747d6b15d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7bfe51-5089-4a0b-a3eb-833e1d49e5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0357c63e-393e-4c5d-9b09-449c5557c33d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75dcef3c-6197-44b9-a81d-ecdeb6f336c6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39aa6de0-e432-4d4f-b267-77bb712cbbb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5979895-a566-4465-bf0e-9d643ed949e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a9bcc9-c500-4ea2-9578-de53d4d06fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "366aca6d-68fd-408c-ab3e-787c82fdeafa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa718edc-c8ee-442c-8256-a0d266fe570e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "017e71be-b8ef-4361-86ae-020839bf90c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61c37de9-d265-4751-b4e3-4bf156fc75bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83dcb0f6-512e-440b-8991-42b4195cfc64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "79c83d97-961c-4cd8-8e92-13cd8538be7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8312334c-454d-44ae-aeb2-a3c5672dd84d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32972c25-3515-4a9e-a3e1-b8fcf31e64c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b09486e-26d4-4814-acbf-4e7d3f19476d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72a270d-64df-4947-a6a9-a107c7e623d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e9f19cb-e7ae-4b0e-8da3-c834e8b8b792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "715e2f7d-08e6-42d1-9266-d9c02a32ef28",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43184ebd-7170-4648-8d25-fc589dc1e043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caaa9238-d67d-4338-9d2e-e8cb3366e042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed5e0fe-858d-4998-96df-f2621a3906ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "09323656-a162-4ac5-a033-290e80978dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20ef1b8-698e-4bd7-8dd5-f1dd0e7124c3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63cfd2ff-e927-43b8-9147-01f1fd0bd303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c16a6a-1106-4a09-a20c-2d70fec457d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feffdab0-f54f-47f9-81da-46ae3906b7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b17bbf64-0e65-4c10-992c-c876a9ffce58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e114f9ae-0712-44be-b3b2-05059c116743",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9446467f-6e8a-445f-92de-c7287b6ddf75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e9c6124-f547-47ad-98c7-2dc41c0fff81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de6e770-666b-40a5-adb6-32481d784a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b08f00f7-3e32-446d-b490-81ccd8464885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b61579b8-7907-4bb7-a287-c08a3fd96ca2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00520adf-a1fc-4cc0-8ee9-bd9d1b4e4a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3416a132-8f99-4b70-bbd5-25e5676eceac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3651e1-ffcd-47ef-9bcb-4f178353954b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10884ff6-8735-44f7-a47e-4de9502eb03a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8938d551-05a4-4fb8-a2f1-65cee3a81c54",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa15765-0e42-4b41-a208-2fe5815f8424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f91721a8-ac81-4115-b72a-412aeaa24e2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0985fa3-598d-4657-af98-f1d263a79fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70503fb6-edce-4431-9119-687afe69f7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2e87b5-7228-4eee-b806-217f75c598c1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5e95ab-0151-46e3-8877-20b9f4ae6e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "239cc16f-8795-4d45-b3b2-953bf071d26d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c2b1ef-5cec-45ca-9874-bb4e019f4395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d460cc5c-c5d3-4865-8746-a874dc3be55e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86bb606d-214f-4c28-8e94-e75d11ed659b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d9ad03e-231f-44c0-aba6-a9c399fdf905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35d9c18f-c350-4c18-9f85-197edf0d5f4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce463abb-0c94-440c-9e7d-3944ede78edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79c83116-45b6-4d8d-b17c-013a80bdbe60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03db2c1e-e972-463b-bb87-fb3f4f8e36ac",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65694c44-b7ed-43c3-86be-720f94c39d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf814f4c-6474-428c-85bf-e8af07ccffb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2026bd18-1061-439a-9228-513406f340be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af8707d1-50c9-463a-a7b5-3c746964b062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6662fede-89e4-478c-9b61-78f687c7bb31",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78341795-62f6-42cb-b382-03f0fdf645c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f47ba2e-3e91-4436-b90e-5a384fd61e20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "123aad24-aa12-49f8-b975-62dac757f758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3ab4b49-7fa8-43f4-b12c-933b6b6965fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa4d1b21-9f51-4716-8b32-c952861b6e60",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7f06bc-2a3a-42ab-854f-a0786788e36d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f59f866-6099-4ff2-98b8-21f08710737a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d3d5d0-038f-49e6-842d-92862716ff0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d271d24-84ff-41c6-ac2e-40dabfe07768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f48be60-5a46-48f6-afe5-849428980db3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "634ea0d9-57d8-4f8a-aa3d-acffd0ee2e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4c39e29-8202-471b-81be-54fc1fdaefc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae944a8a-012c-4eac-9049-0c3f1fe7d87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec264479-991a-43a6-bccc-9df22b06f19d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a59188d-4d7a-48dc-bc89-c0836599a493",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68974af8-d898-442d-9234-fa81f199a31c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3634769-4a48-4b72-a0f9-4935cc38d655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2326183-704c-4bb0-868d-b04c6893e8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1723f20d-6797-44d0-9edb-5878aa311477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f3e0f01-abfd-4b05-9cd1-3bf091f89aa3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8cd7ec5-5342-4b08-9a62-71e4b871b067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9812d1a4-31d7-4d90-a11e-d86348b77b1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964db796-648b-4c85-b138-481bbda75a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1820c97-3b13-46ba-880b-94bd25722075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f877fb0-55b2-4364-b089-1d1d0c428ff3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0657ef1c-772e-4380-96ca-a5b035a3922a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fd092ce-84a9-466f-a512-e33d169b1a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e4c8cf-0c2f-4796-896b-7af33aee142b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e44c9127-bf34-4a03-96c5-ca446610e352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc06004-5999-4c9e-b369-6b8159e22a30",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbfd4875-f721-411d-b4b8-0508b6635a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a70cd4fb-2ac5-447b-8e75-1e5dfcaf1166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6170a4-1d13-42bb-a9e0-5a36aca70033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55f2dc14-9695-4c85-b804-5191b67ab0a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd593978-36de-4b80-8c8b-ffc22c62eb18",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67323670-c85d-4b23-94f3-810c96ad8228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ae705e5-4fbe-4ce8-94f6-0da518009b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ecd9ed-0178-44a6-ab93-9051b183abe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0a45026-dcf4-4804-9b03-d5d7f2a0c975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61913fee-e9c9-4c0a-92c7-ec87ea2d6532",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e284e3-8eab-4243-96e9-aabd9d03e724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e81e1e65-1495-4662-b192-23a3bd4aa153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639763b6-3392-487d-bfb8-9ee693fcea89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f16cc48-db97-41c4-bb56-b3a0f5ae50b0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ac91b97e-4e8f-412b-9d6c-78c80eff0c6d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "39a051f2-69bd-44d5-aead-29a471d0e102",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2fa4769-e62f-486c-a88e-080501dea4d8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3b2a6b9f-1bf0-49d9-b20c-0eab69b3009f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b788a39-6587-433b-b7bf-21682c57682c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "41ba2035-e402-44e2-a1d5-65c25b759197"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b295f01-3ee6-44ff-9ef3-76cd1e7adb0f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1400bb6-567c-4f09-9934-80d8ca8d4bc1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f08befb5-883b-4909-96b7-352a4a84c901",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3982e96-08cc-4054-b4ed-7a4560a0a883"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "75380f19-9229-4ae9-8d24-e8cbb9e99929",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "819f1ac3-9db6-406d-9e17-60b9e8a63a4d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1cf33b09-1215-4c8f-983e-1270c8d3f95a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7946d8b6-5e89-47da-8190-ad3418d4a093"
            }
          }
        ]
      },
      {
        "id": "dfb5be4e-deeb-45a3-a593-8831c73ba739",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "f337a9c1-da4b-42b5-b79a-fe70d63afaec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "69d19921-2be8-4a3c-adaf-8a5032fc0aeb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "48e66ed0-488b-4181-bf50-aac88df5c747",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11736815-f693-4b16-b617-c2ef362477fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f17c3ee6-061d-4bb6-864a-dd8c985964b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e65a17b-cf85-4cb1-b619-16fca689307a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b30d013b-5eeb-45d6-ab14-df08a72dd66d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b9b211-2d33-4adb-a641-a9b81c225037",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a746bc10-6682-4e68-b28f-12137bf21a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24425a93-c174-4ce0-887c-d8b35980b916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b82397-0d6a-4fbb-9bf6-f2c3381ddd0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "72519107-9910-421e-ad35-d8e5828111e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3832c9df-da35-4447-98e7-1abfa3de3feb",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b838e6e0-f8f4-468d-bbb3-5bd7d1be1f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a67e8ac-cc11-48ce-8b0f-0b59446c1877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63bea816-30d1-44b4-8195-c3611bed5f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f308260-ce99-4436-aaa4-997d6bfe4336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "155e43c7-4c42-4455-ab13-8d079f38fcf7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d1a9e9-f4c1-4e47-afdb-c8d83e4d143a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d51b31a2-dfb2-4573-acee-d757c509655e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c64ddc-85a2-4657-a260-55b95cadbd59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e9bea15-784f-42fc-8d16-ff7cbfab4891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3ff5da-e785-4aa3-b296-5fc9121c2cde",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed80db2-d365-4c50-ba51-674e4f87aec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b59675a-e994-4853-b278-4fbc50343029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88a6472-5940-40bc-b3db-135d65266fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d73f5911-34af-4464-b2b7-7fc790171d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4842dce-7fdf-4624-8ee0-689e1b3f7a9b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b906685-c0bc-4e0b-983e-e6651dcf3c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f53e77b9-238a-46d8-b019-6923e2015176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc6b090e-7519-4d62-9de7-550e2394613b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0a6793a-c2de-4c72-8cd0-7a693ace4985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b0266f8-7494-4340-9b06-3d9553297da2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47e6ddb-cf80-4dcc-83ff-3f6cd7e0ed47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff94ad33-3f9c-49ea-839d-fa0977896fdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73cf2714-274e-47ec-9ab2-de361c2e01ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcf6ccf9-7120-4787-a00a-e65818202711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54c745e-786b-4b9e-b7ab-fc8ae8c7c4e9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b96bd7fb-358e-4d5f-8d9a-e0c5cb8954b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84cfec57-1ac8-4cfa-a240-0735f6c67b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ae5485-90f3-4dfb-9648-3a0cd5267877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30475f50-26bb-435c-a9c3-4653a4ee1922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5123e58-031f-4daa-8e5d-aa20ba5620b1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee310d7-281e-4c46-9887-60daba3c3766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aea2f24-3b51-48dc-a475-16e9ee40c610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a3dcee-46ee-4187-9176-15a5a59d2160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "15d53dfb-29ec-47c6-abde-3273060716e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba37daa9-0ac9-4bc9-9152-591c46501ebf",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "764b0dcc-7ba4-4f07-8f58-00f78b036f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a243cb7-2dd2-4216-a982-08ec0b82c771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a8b6fe-d3e1-4be6-8538-8b1b537f0c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf15fc61-587c-433c-af84-59b3449be43c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efbaa4d1-024b-4260-bf8b-088e20bd2fb7",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "116733d0-6355-411f-8c3b-732f4efcf90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ef4215f-c26b-4e8d-a246-8cb3926976e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ef868f-0756-405e-a276-924bc46f10b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3d4efbda-9c26-43d9-84da-825663017ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370a84d4-9cb0-43ec-aca9-31c1fb13649b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be781e6a-7e34-42fb-941a-b3dd02c4a7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2b1fad3-cc65-4f28-9d5a-0eaf547a787f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c93642-f4f6-41e3-9af5-f51266d95742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c5902ba5-659c-4fd9-b770-06ddf73cc758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "874e74b9-7af3-42db-b37a-9c156aa009f1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea9d0ba-124a-4008-ab92-915f28d1cb94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5d31fa2-7a27-4553-9598-d9b07588adb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffdfae2c-8691-4188-8040-0dce695f29d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5aba650f-be63-462e-a793-8ae909f7316f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef78a1a-1d06-446c-af43-3a607338778c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2afc8af-c5e1-49c5-b97d-e82859319e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57902dc0-7ff0-4de4-ae42-2a5f9692d3a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934c794b-ed76-420e-b089-fdc8372b955e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab558126-fb41-4e85-b3f3-b37a189d379b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88ed585-db07-4e79-9624-9dc4f348f7ce",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed697ed5-4a8c-416a-b4ac-ecf4c03939b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1f4b174-ca37-40cc-aa5c-d82ca695cf99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa30e59-0de7-4480-8727-e98d86876c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "97eb2e62-e61b-45fa-9f1b-6c4510a996ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e79b3470-7f98-469c-920c-cbbaf29967d0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d74670-9c16-42f4-b406-dcd05fef136b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d982bcde-6df2-44a1-906c-98021a0b37d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4e56fc-419f-4197-8719-4f8cb3902c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "28b06042-dace-4821-af47-a124a9e3ecb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec01d48-7e2c-4751-ad82-8985bd800dd7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "040386a4-ae2e-4e9d-9e5e-93454b7d6cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b11d0f84-3f07-4d98-aad7-e87ca1f56437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8d2ff7-dad0-49c2-8879-491984998af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3acb5a3a-bc16-4d6e-828c-868785962f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a839c84f-8e07-475d-b82d-74b4dddcbd50",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "592ece59-ebab-4808-9993-cfca4d58a08c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b25e63c-c3d7-4d7b-b438-c193b9804129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccfe98f3-ec87-48ef-a95d-29e9749f37bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "69bb69fb-ee13-4587-b624-d9c6e28e6034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bdbec8a-c94e-4ba3-b8bd-edd4b8547a9a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ddcbc74-32f2-4833-b772-8be74e5f8eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc19a8ea-c400-438c-aa11-c3ebef20620a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f58151-eba5-4245-9da1-26a4e4786e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7de07545-5be7-4e50-984d-0623e98212e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65cc0be5-2d57-40af-9930-bab32cdfc021",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04941e5-99b5-463e-b987-5ade67621f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e6d3285-8fb9-40cb-8474-282a5ac06287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a83976c-0d93-4217-9cba-160f69155f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e9b1285-da72-4cc1-b8fc-0f8a5a1bfe7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb79e40d-1f8f-4873-bf02-52d4cabeacbb",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf108df-347a-403c-a109-db8d35350b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ced5d57-f6e5-4d69-81ed-f41df541832a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe79721-d546-4af8-ab9d-25815880276b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "889127ab-ee3a-4810-92fc-e42a2737b021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7a5885-ffe4-4d84-a0b7-33cdd32d6a27",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac08e9b-f820-4351-aeb1-a439c418831e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92e4df36-5c8c-438d-a4e2-6dc6970c3b36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59430321-5c30-4a6e-a397-3d6bbe500cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "edaffd93-847a-4ee4-a501-0ece07476cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae948a8-f49b-4a64-ac48-75bb19cd13c5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32cc0a80-1377-4f92-ac60-4ec2ee835f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d518e187-9808-42e2-a26b-9b80e7246383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca5f3d79-570f-4b63-a58a-207832e86a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea95d2b4-497c-4789-b295-aed7a9201d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c62895-5230-4eb0-a153-af142b664fcb",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bcb407c-9ec3-4dba-b4b9-c91cc677919b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d0680a0-e588-45b7-a7b1-3419c101d335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc709681-4a25-4af9-98e7-185679cccf39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e30c609-10e2-433c-b222-ab115d377e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d103972-b48a-4782-bb18-ea9c33fa4fdb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "779a4853-677c-40a7-a03c-5b90149bf720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d9e7ce9-2d6c-4c56-aa9c-e57f2179fa2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f146433-1e46-4f66-83cf-d4348ef9cdfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "afc2d599-2055-4389-a2f6-4bb95c34f3fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe1b4d3-c362-471e-8304-5224b6fa5a1c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "606af2a3-5a18-4384-9323-bf21589a0d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6525637a-b607-4359-8206-6d47449fbc83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b904fd00-4864-4411-90f5-892e5cbc51e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f50979d3-a501-4f77-9df3-83b24f2ca25e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06956cbc-4272-482d-bc10-c56677e01f00",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60325864-0132-437f-a323-568522bc09fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0053ccbf-e805-49c9-a317-b4da4a1da111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0232fe-5cb5-4e13-8e20-a536b216817a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3192a52f-489e-4a87-96c2-ddfffed80eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54cc7222-6517-4306-b60b-ab71ad04f2dc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46514bd6-7001-4bfc-91b2-d86cbc903c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40c4bb5d-36a9-40e8-b002-ebfef3e9ad7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46fe1e5b-8814-467b-8b2e-6f23f2694a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdf604e1-0c1a-469c-b40d-f0dd6b3424fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b96af1f-559d-4cca-b99a-2361baa52ec7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea2261d8-86a1-43b8-bd64-9793e859a0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81672ffd-d03d-4619-bb6e-7c6c969e95c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ebfc2b-fcce-4a49-9905-60e2757f882d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2a39fcc-bf27-4e93-8117-53c213c40583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09bec786-c3b5-4170-92c7-a71e100eb132",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b74a530-2594-4543-aed1-e6fb43b94ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba30653-f2be-40ae-adff-82fa6ceae0d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a33367-5cf8-47d4-957a-f60517cff89a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "681d119f-b31f-484e-a851-d25d625c4fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23c4578-a49e-428a-a5d0-1bf2f2a84c84",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b268017-94d3-416b-8efe-e1cff8cd499d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace1113d-0135-41fc-b09a-27a5d94b2185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8d52bb-f7b1-4291-ba75-4a73f5331cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f5de79d-35e6-4453-8faa-5f6c9c8da976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c7bc7e-b5c6-42f3-bb71-a4f9f212ef84",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d0d5c1-c606-4023-a593-222269bb2581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6f29b97-f22b-4cd1-8e54-3da371bb5bef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c9843dd-07d9-4987-827f-b15ee575c9ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bd1cd3d-7f52-4cbc-9492-639eaf254940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f018390-1599-4369-a81d-f4044c2a7c22",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b68efa22-034c-49a1-a38d-f0b312692acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce91767b-b939-4698-86b2-a37b45a4ed0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c186afd2-38d5-45cf-b836-ca3600226a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00d414e9-5b1b-429a-9559-2366f5d3fb9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6745196-550f-40d0-9247-71feb69b281b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9022e331-30b8-4647-bbdc-bd0f552dd943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1185eb03-a342-4669-9f1a-0bde030dd20a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e05c30f-4b7d-43eb-b87e-3a96598ebcff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddae2a6c-20a7-414f-b663-284fadd8e66c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c683be9-2fa8-4c6f-806e-bd8018c6d3a2",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8085802b-6a54-422e-b600-a692047d1651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a8c382e-1943-4148-9f84-a18739a95b1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a2312b-f7f0-4985-85c9-c75c56f651a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9dc271cc-823e-4db6-93a5-c7bc248caa49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4a730b-67f8-4366-aaf1-20d0972bdd3d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09602089-7cd0-4916-a277-0bcbc7606f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2509e04-15aa-4698-95c5-9ca08127af5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "723af692-f5d5-4543-8f85-c37b501d061f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4212f57f-fb4a-4bb6-aeda-3ae4595caa3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a334f062-6aba-4fa8-952c-83892a4662e2",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "503cfd51-7241-4cd1-bd90-d4758b6ad976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30aab491-1edc-40b4-82ac-12bfa9e36d77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a20c6a8-4e37-476a-9474-fbedba2717f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da5c6ead-753a-44a2-bf3b-7ae134a50878"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8a67f55b-18d8-47ce-8aff-55d8adff6bdc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "afa345c8-52eb-4038-b241-e5c5d0abddbe",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cdafa82-529a-4e59-a398-55113fb65a32",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "14b85527-394e-4c33-96f3-2b5dbe08351b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c712c9-2ac4-421c-bc2c-a0e4b8fcac9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "970987ac-78be-4663-833e-a05849d6aa88"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c52a2ae-d85b-4097-80f3-ef1812e9fe6e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "362d6780-9686-4270-895d-efe9091850c8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "428a8a1f-4212-468d-9354-741e293343ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13e514f0-294d-4909-a30f-b5320db110b1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "96563c9c-4909-40bb-bd46-ff420e8f4ade",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b009786c-6d51-4888-991d-00cd25f5bc6a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "458ad9da-2870-40d0-bc88-577840fcd55b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bb398a40-60cf-4e50-8bac-bd4c46bfb33c"
            }
          }
        ]
      },
      {
        "id": "1cf5a802-2f6f-46d2-b380-d95d10543324",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "52ed9724-d173-4c8a-ab4d-9490e8803be9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "75c75d53-479a-45d8-88ab-68f0d4cb3206",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "52fd37ea-77b5-4031-b0f7-ff81a2fc503e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "533a7310-fd08-44d9-888c-65fbcea0580a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d292fd5f-8e4b-4c33-b620-d43541379dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a222a3a-3afd-497f-ad95-579f04cae21b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c318a48-f223-4e1a-a75b-8d20acd6e4ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5750933f-b2b0-4bad-8648-750d694f9fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb5c074-d5fa-4d42-b0b3-c4958420cedf",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a9ae65-f6f9-4f3f-b56a-5ad2e9bb8099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9437c897-9dda-48be-913f-97eb8fdffd05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6127f7a-a15f-4d9e-ba4d-60f0ecdb9486",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53477eaa-f6f2-4ca2-927f-dc1df0110893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f72bd91-e912-4049-b3de-051797621c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ffeffc-6d80-4409-916f-bd8a90a231a4",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0197d110-d7c0-45c8-8346-bee5f3ffe152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccdbeddf-e8b4-4bf1-bfb5-0bf820f1c24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c7e23cb-c24f-45c5-bf20-17ad46988e3b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f99b26-1b3b-4b59-bf2c-9da70163e12b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccdc1c1a-8e9f-4dcc-8abd-a4169f6b7758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1abef2-a048-4d86-bb0f-743ea126aa38",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f703471-bde2-4ed5-9e50-d76fb01bc6e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77f57aea-0c17-4e8c-ba45-2c585e4a73d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f9a90b-437c-4562-896b-e5e777f65905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "214e753e-6296-4a50-9387-3bf2cbef1f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a0f079-321c-439d-8107-7a8173b794e4",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb84b6fc-70d0-47e3-9e2b-0aa2e41219f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd185d72-cd94-40ad-a884-d32e493a5222"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e4b7ae-c981-4908-94be-d45148b1bc82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "936d217d-f9ba-4c3a-8055-344cbbcfb201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5136517b-de1f-436f-bbe6-f44049778127",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44847bcf-cb61-4b2d-80c7-322ad1ba6404",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4cd9ea1-8524-48b5-8083-82a1fedaf236"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "738e89eb-a481-4299-9174-3e95ecf5c4dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11b58432-411b-4f66-bc0c-2f0f1b83e66b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e04aa5-59f2-4af8-ac9f-3a670d1cb2d7",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deafe814-603c-4c90-8de9-93f2afb707c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a562dbde-d7ac-4b17-8c05-88467775e49f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa46dda-d35b-4c8f-94dd-98ed3aa6363a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58462b2f-6f67-451d-bb0d-276b292e21bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961afa82-4de9-4dd6-9916-42ce53bd4b0c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f70c1c6-6dbd-47ee-b583-40f27badd4f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2751c8dd-5eaf-443c-ac54-5c63826cae34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df02e987-be16-4659-8698-bb15e19ee0e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6fc73b4-181c-43f0-b081-672d46740ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a22a87-2c79-4099-9b24-4d8906b31cad",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e35de1-6da0-4c99-9e6c-bdfe993726f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ddfedff-6b41-4707-81e3-025ec64226e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46884bc6-44e9-4274-a39e-235b2da3f5b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c1be174-5b0d-49cc-b5b6-97723051a12e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c31157c6-6d91-42da-a458-d487170c2f8b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146b6626-cdb8-49f9-a32b-268a427b6428",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86bdde32-8995-4555-b996-e4d1fb07a35f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "925e663b-eb49-4cd2-b872-04caf9f7a7a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b7038da-8fac-4b01-b2d8-bfb664c9ce56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af6ee680-a9d7-480d-97b5-d8e0562ab525",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c32feb7b-c633-4225-b238-b5846bf547e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b67360e9-c6a7-4148-9dd3-bb3b3f950f38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e915a915-ca32-464f-89b9-03837295b5f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9fc6ea1-8039-487a-a316-56ba9d8693b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c74bd574-5778-4d4f-810c-d8f8c1efac05",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e266bc3-0334-40ef-9fd1-2c5bd6485625",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56e776ee-4f3f-4153-bf1d-3523b73acace"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6162d540-18cd-4634-b87f-4c7d7b9f69fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "996e292a-0044-4768-bfab-bb25eceb6328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "516edf97-067b-4262-a041-e9ecf6e13340",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4957a219-92b9-402d-8cac-5f4ddf04b4db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40ed3513-3651-4ac1-baf3-ec52a3d7afac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd23fbe8-5982-42dc-a120-b19790711e17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c248b840-20bf-436d-b541-aa9c44be1514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "766c3de7-3edd-468f-94bd-74d2c2263d8f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e402360-d373-42d4-a0de-a9cd88cf0c55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f0daefb-b06f-4900-b36d-ef6a99a62775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8617377-56f0-4bc8-9791-8f0c3d9af08a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "447c6527-305d-4cc9-84dc-61a4fce5b3c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc7c289e-5eed-45fa-9e62-33337ab17fa2",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59df3e49-1f7a-430a-a58e-0e63a5227d69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f15c8167-fec3-4e1a-81ec-9c67026b774f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02473e4-c806-47ad-8a05-ea44a133772f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db0176a1-d9d1-4981-be54-88bbe1271952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50deed61-c754-47f9-9871-ab19e863300b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "306c00b8-dcb8-44a9-824c-e854662f9682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bab0198-34e2-47e8-8dc9-0f6204d216af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bca33be-8d45-4911-94bb-88d0aa79b04e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebe7f0a2-e988-4212-bba5-e9888268a449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "416bf317-6e85-4b91-8c04-4c548d96dc48",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0586cb3-a483-4524-910d-f3cd19e8bd8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fa2143e-6f30-4490-af39-f124c3542f4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d418ea8-c2c9-4929-b5ee-1ac7f419bd16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "298d8e73-811b-46d5-b0a9-d9b646500a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8993fe2-e421-4450-b9f2-d5c45a0a8dd9",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb5b591-7cac-47b5-9791-15f36209e4b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fe3ad3e-dc5e-4147-9a6e-8828b35e3eec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0753b0-4b9e-4693-88eb-23e54401cd40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98e1a195-9fa1-451d-a319-9b0a83365f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a9f614-cba6-494b-8b2d-8282838acf16",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c67dfc7a-a89b-4d8e-bb74-83f0e9ba8f3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f2a939-45ae-42e6-8c2f-c2792efdd3e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "875f4a80-e9f9-44d5-a0e1-7426c04ac47f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e7f136a-9c75-47c4-97ad-467cdf6fd49c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43818b46-bf2d-4e4e-8e52-4b9257ccd7d1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7538cfd7-bad4-45c3-b3c3-cb436a663b20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0f84467-539d-4635-a839-063049d75944"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb362d4-556f-485d-8de0-747572fbe8d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d47db79c-82d3-4215-ab3e-4d3e83e51ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31bdd57b-f9c2-4139-85fe-89e745352695",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5843c6b0-0f5d-48dd-9b2e-35d3f382c1ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "743211bd-942d-4d1c-abe6-ed090b023afa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d46bec-09fb-472b-8f98-3ff16555d77c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33174258-7fda-49d7-a686-d85d5e59abc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9cc288a-e834-46db-8e55-8fc4293e9768",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a05c6d-dc4b-4e83-8e7d-78e1342cdfd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bae037cb-4b82-4401-bffa-ccfb6069c129"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb914cd5-bc43-4f75-a725-46d8c5746c0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d5047a1-dbfb-4f03-ae9c-d339a45ff9b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23518fa5-7507-4cb4-a6de-ec5f7fda115d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d1ace1-591c-4786-919f-a968137d6c29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75023020-62bf-4b19-9e18-9107c65faf1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26913cd-d728-4485-834f-5f21cc7455aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "085b4afd-084c-4a5a-8e77-ce087e2b9966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9952b74a-625e-4f09-92d1-e2457b3a92a3",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9413fce-9276-4707-a676-793bbed6221b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "246aa9d3-8c7b-453e-82f5-ccabb1ee5b80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a7b85d-d949-4c95-8c1f-d834d2445019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7e3ee2c-c08f-4236-b0c2-98516092cacc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36eb9957-940f-4236-a8ec-4bfe446171cb",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca39bd85-53a5-4aaf-9b94-3dc20a00114a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fba9beb-5334-4e32-b060-b5eea360d6a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a563ca2e-edd6-4883-9e14-e2a384d6abb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f8f18f-2fad-4cc1-94db-7a77a53bcd65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a62da69c-0257-4709-869c-a00188ed359e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b68dad-3fa4-4179-8e00-485048c37470",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b231e216-533e-4094-a863-c7c72542cdd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a0809d1-ae9d-49ce-9fb0-fb74c2106ca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "262809fd-09d4-4a90-9782-95509f4d1d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf885b8-5a21-4e39-8c4a-8da8a1ce9263",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa94b399-906c-4e73-a17b-19c344c5df6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "918a65d0-8ba1-4e19-9a16-f9ebf592d89c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a7c533-2002-48ef-871e-04329292b50c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "019f0874-f0ca-40a3-ac73-de5f5fb27272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db94580-4bba-4386-bb97-3e9ed1e6a646",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8c294d-3bb5-444e-b200-7ce21dcadd24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc80b5fa-423b-42c5-bc0b-769e40565c57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "694ece37-d110-4655-aaf9-e768db456bdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c0c754e-5f32-48e2-8b05-fa912890cce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f29d30-b671-4355-a755-6edf5d1f3a26",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596ac7a8-81e5-4522-b31e-4b193a4b1e7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31b253fb-ede2-4f79-ba0f-1303fb09c222"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f345c79b-3802-4afa-9ad1-34eef331837c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9a26d80-2f39-4abf-b33c-89eea93ded44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8d69db-a1f4-426e-994b-499dd9ddc39a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae12405-d701-436c-aad7-9246a49d2947",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8a893f4-08dc-4147-9713-02c7e94e1b34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec36d9a9-48e6-4afb-bbeb-63a0e58ef92e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "590cc6e0-b9a5-45d2-a3cb-26c82ed7a43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe2f126-b60f-4f86-8095-2c57f6a9b337",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c9cb86-8bc4-484e-b613-067c0fcbeb5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c9682e4-a599-4e04-ae9b-3099c7d06f24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1618b22d-eaac-45bc-94da-15d6b0c24344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "875645db-a144-48d8-8e5d-a2aff9c1bdb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eddc6873-751a-4592-89e5-16309e0fb076",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13887451-e14e-4ff3-8fb0-b9749420217a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "887ac370-8411-4274-86f2-db4fe0f63925"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b009852-a1d7-44fe-a330-f75226247147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0787b9c-9dd9-4efe-8447-3778c357fd53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "987b11a0-a2bf-4252-94f9-78c9bc8d829d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bcf662c-7382-4bc8-bc07-92cefc4a9b72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7411906-9b77-48d5-ae70-4a2132ab07d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e5cbac-87b2-4f02-9828-565d2070ffb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e547ff27-3463-4de8-a74d-75da5473d5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb0afc85-5740-4177-9e8b-dc782426e876",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdddc9db-66e5-4d96-8ed9-ff4270388086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a85b7323-9518-4013-864c-c7ee7d59ab67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09684c6e-322d-4800-9a85-6ce8515b4505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9b5124c-a093-4c1e-9485-09da61b31810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9194e54-9e36-40d8-8696-4a8cb522a643",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750f44b2-c653-440c-8798-254e7596f504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44dd1a21-7ba6-43e8-9f41-3d3af6d8a7e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e266c2-b9e1-497b-aa46-c2f19b20283c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "247c8b36-e60c-4d37-8e08-aec91a417ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122f9a2b-6ead-41e5-9ea4-4ea131d78152",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1afc3829-e4dc-48b6-a093-0264d86db85d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02bc3759-d664-493f-ac62-c7c5c26db94c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1bbadf-9f8a-4b67-befa-f218cac1af91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d103ae08-b4c3-41bd-8c1a-058064117861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd83721-4401-4be3-b6c2-f0607ea97f87",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613d54a0-4223-4ed0-9f86-d18ff12ab68a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df637bac-eafb-4903-9bab-a7202cdf1dd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5021317-9a62-475b-8603-398c3fb6ae10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a720a9d-be2b-403f-a8f4-6a216c7d66e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d21cdfb-c63b-4ff7-80c6-9a89064b305f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5082b656-fabc-4628-bb16-d753be36b575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b002559-8ed9-4f28-8e9d-ee427c69f921"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbfbd40b-4bc6-406f-97cd-2af2404e2988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b4c2daf-eb57-49cb-9235-22542cd95005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "104e1e16-3887-416d-abae-bfaaa0bb6a66",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc76262-a83b-4d43-8420-d6be538190d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3f43c8f-015e-4e6e-a3c1-93347b1375e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "192ff2be-6882-4fd3-b94e-dbfd44784960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55df11c1-9982-4b60-a3e5-bcd2096a2023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc616e8-0aeb-4d4d-8353-747f0e2270da",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a209e2bf-755c-4093-ad0f-7f233c4dfc9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b32f9bf2-443d-412a-a076-d93ba97b010e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47580a0f-1a65-4d26-8afa-8ce5dfd5f921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2eb7e95-f1b7-492b-be97-a966873992a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015ba5ba-ecb5-4129-ade8-d89015c42245",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef8d48b-8b10-4876-83bd-0af764cedda1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46e9a320-cd27-4ca2-8915-6e396b00f4e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "876ebddb-5752-46cb-b68e-8c416e0e620b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23e7083f-88bd-473c-9f8a-6b350ef0a224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b02ddfe3-b7d1-471e-9f48-21d3d6dd53e0",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13bbd6e9-5fcf-4eee-9fa7-ca369c5d8d5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d2607ea-16d8-4b02-b7cd-e1cfa03d666c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11c2694-ab17-426d-9b1f-56e05bb2a8f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a085206-88b4-4e70-bfd0-77af317c2b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f641f5-21a8-4ef8-9550-59ba90fc9d40",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376c4eb8-b7a4-4e0b-ab76-affa8d58207f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35e24bc1-3bb3-4bb3-9287-583b8d660a9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "084cc502-2f84-4ba4-9cb2-0129af16193f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e1f0cb4-288a-47ff-bb28-61a745d19b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f9214e-a2d1-4d96-af13-49a45822ee1a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d36f4a-6235-41b8-a8bb-a58396ccbde8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0e32c15-99f6-40a1-8664-b74cfca159fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a197d916-e980-4953-bb87-83a7c1e6c744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b312f15b-768f-4b70-91d1-bcef3d612488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "142d4a1d-25f1-4d4a-a0fe-ad0088957a10",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72bcf7a5-5f6a-4ad0-9725-fe5dc074d21e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5ad8ea1-9829-44ad-844d-02755c9f7b8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d2e5c3-46e5-4185-9fff-61401831ee1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "506df593-4428-4655-9778-bf718809ec73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f46f5e-1a58-4e6d-a190-7d7b453beeb4",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f3f294-9f11-48be-8f82-9bdcda14156e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1c065f9-cb84-4863-aded-b6f6b935c76f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc9aa56-ba23-44fd-84bc-a35c8988c0b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4de9f7a5-c88b-4dd8-b75a-611199b63e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ed1af3-d8c4-4191-89e4-dedf4db2891e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9874786-e86a-4b5d-afee-aa08f00acfa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c1fbdfd-1e29-4ac7-a2e3-70290083de41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e2685f-e862-462a-ac43-fad995cd2ca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9deb59ff-6b02-495b-a10e-6b1978bca719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8080ad74-3376-4b41-a55c-d65a58abcef9",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "678b3d33-7e4f-42e8-ade6-037880e398f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5acbbfb-0d10-4df8-ba0c-a33dc5f9a712"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26b178d-2ea4-427f-8fdf-18c7a27d8c7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2747048-a258-41e3-9613-e6137c250645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d69c1dd4-85a4-4b17-b157-db39a1f51e87",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08fd4535-db65-4f39-a90d-1ba6df1cc919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2948eb0f-b91d-4b20-b674-95b9c10e965a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62d41f0-d17f-4ca3-8aa1-6a3ec83b0730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62528b39-4a24-4def-82fa-836ebd5c9e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b9d3b2-848c-469e-8d19-01333c660048",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22bd1cbf-121f-4bad-86f7-7feb2955e9dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fce5e8dc-b3b4-4dbe-bb10-bf6d06a03a3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b438d23-b77b-4a7a-8762-cf2ebe981b1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34ec8b89-fc13-496d-8c34-394064674aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca4442d-f815-4708-847a-ff6529a5a25f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1035d16b-316a-4478-a8a1-88fa6e7ce16a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0668e37-fce3-405e-b65e-9a06ef34292d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f3226b-c342-4526-bf65-9562a5257246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c19d018-b667-47db-bbd3-92b2b61aa5c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5eda2b8-4c83-44f4-9c97-75d2a1902b9a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401d6ed3-1de3-47cb-8f63-59763f8bf93e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ffeff39-07f8-4aaf-ab27-abd84a8d21db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e0d3dfe-30e6-41dd-b399-4f6cbfb38413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad3f8670-ee5e-41cf-bd91-e2d3828b5df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1faa9905-53db-4963-9de5-4e254b321ea8",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27e2141-c59a-47d5-b301-1438801932d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aa098e1-ffe9-4e0e-868b-c4fc5de34ee7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "370b4b65-b2b4-4863-9b30-099af435581b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ddcc0c1-9d97-4744-9ea2-f4f256e6fb4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f59b46-4a05-4a17-9c9e-24ba451a18bd",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d24b653-2f05-4827-afb0-528dcf0bc4b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b39fed3-eb6f-4c32-a067-3fa9ff7f3d2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49aa3c03-0181-4162-b182-14d6e0ef4588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8923ca4-10f8-4ca1-b039-a0c2ccfae5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c39d4b4-16d6-4992-97cf-3c89b4d5bd1b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95be927-ae8b-4faa-a17f-1b16d6ca6fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8547d90-07c8-4385-bffd-ac9a9d396219"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca01c921-f012-4a6a-ba08-f7bbdffa90fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bcc4df6-9260-4fa3-ab89-31e73e630e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e852ae-afe4-423e-a560-8522fd4d8ab1",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd3cd57-52bf-49ad-b945-dccb870c2a5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97dcb0ac-52ab-4986-bcb2-f99516f4c59e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "655f9cb1-0893-4ef7-b7c2-32f45db00d4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dbdeac9-6bc6-4a03-b7a3-0bd73a41a1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707f1b11-d81c-4222-a1c0-d4f5e6dbfff1",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af95938-46bc-40fb-99ba-dc7190c25c66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cbf9266-6e8b-4f97-9f3f-bbb0afdafe43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b99ec9-30ea-4180-b5f8-5a4a79d9a7e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4041b1f6-6122-4540-ae7e-a027e1971b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b77927-fea9-4eed-a647-1c3570ec36cf",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3dcde38-baee-4d73-baf3-7bcb8b65f3f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5edbafb-dcff-463a-b106-e6460a52c729"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57ce9d1-3141-49e6-9d64-c97e1e2d2731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04020037-b591-4925-98ed-b9e4694d4de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3daf548a-1163-4a84-af25-1ba310c91c30",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a40d72-796f-4770-b83f-cdafe9106ee2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49174acf-ed5d-428c-b718-4b2e0eac240d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc689194-9750-43aa-add1-11e4667bb243",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08e84aad-e122-4069-b221-317caef8a17c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7dd69e4-39ea-47a1-afdf-90facd87818d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "784a161a-03b1-4915-8368-02c0544e8535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5df17ff4-9b16-42e6-aa7e-41438542e066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70213ab3-bdb6-4bd9-89b0-1e57e65864b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bd0950d-3d8e-4500-98bd-b1e2ea96ae20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a81dd8f-4251-4f07-8135-2f3f2207826b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bea427b-666e-4b40-b8c0-40f688867c91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70f38906-d21b-4dac-ae7f-7e40a621cece"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4effc198-3240-42a1-85e4-373dcfad6171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d9060ce-f7fb-452a-8d67-08567ee2f928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd65e44-59ad-4c6d-ae50-65dfda72c791",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0abe3448-8253-44c8-a8dc-4f0ecd7d4bc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "336f61be-f5df-4e97-b21d-22ebabb0aa67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ef76f4-feaa-4e99-bec4-67d1b0d7ceca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d53a4ec4-f6c9-45ab-a5cb-a99cfe7f2830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a575058-ce5e-4bdf-a503-6a0bc6da0f69",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452be828-8500-43fa-b84a-3a54a8abb965",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d998e868-bdd7-41cf-99ea-b984e5ee7814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9537d34e-45c0-4b39-9d76-e9d6ef7217d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd823a9c-8cd1-46cd-aa7f-e2483275e691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57963714-bf36-452b-a297-14c62f9377c5",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d07264d3-4313-41b2-b5e9-19e83f61533a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "362fa860-0038-4a33-a976-9bc611cc67c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35267540-6179-4589-baea-7242c2b555b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a4344c0-4110-42ee-818a-4e5e0aedc5d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f9e201-e666-43b4-8da0-f2e648ccabdf",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4fd6fc1-e905-4690-a101-d94f8bdf7d73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f09a87d-69be-405a-b29b-b1512614f5bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f46fd17a-030e-452d-a1c8-bbd0bc558dc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea2d82bf-c9b1-40e1-a5d7-9cbda1dc599a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b41424-9ae8-40b4-b5da-c146c671661e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127273fe-71bb-4403-85ba-7defefae7a67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4afd9e13-e32a-48d7-876b-b5b1de807c95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d34b1d-74b7-48ba-b216-6f19a1900ee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "194ec06c-4b12-44c5-a49c-894d699e610a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a792bd2c-1e50-4f0a-93f9-2944dacb785d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64fa0bba-5f2c-4051-9f24-a0a6969f5b2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4e1acd5-1d8a-4b83-b7f3-df3f2e9e9c7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1840fc8b-9022-43f8-8587-3367a6149f4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a68ad688-6f22-46f7-b05b-fcc7251c9aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ca7fb0-ed11-42a0-b67f-93008410fae4",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d8b9c0f-b4b4-4071-b192-574735eee062",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3de11933-529a-498b-94fe-b672f21eb911"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ddccc3-13af-476f-b3c4-97cf912cccaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0628088-6c03-43bc-9312-66455dfcdca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "644cc0c7-ef49-4bb5-9072-5db79cda57f0",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e808c534-7476-4fcd-8d4c-c2d373ef119e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01883462-c10b-440e-b063-597f5478b8ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01082619-fd3c-4227-92f2-be671c867880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "917bdab3-e7c8-43fa-bafc-b3c560a4f0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ae58ae-d195-4287-a219-724d36d26d32",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f095f90e-45af-4c61-8ee5-bd64b14773df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2149c1df-6def-4bdf-8b60-8f644bace0d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4393c626-b99f-4ab7-bde8-536ae50f5385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "555df0e4-1ff8-4194-a024-42ede69fb4bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f8b742e-313d-4e52-9452-e1eca88fa0c1",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5415859b-f713-4e1e-8911-68a0fcf39dd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9539cc75-6fd6-43e3-b29c-7e256529872c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da9bc62-16fe-419a-9b0e-0a0ffbec7343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91d4ff6c-e320-4eca-8009-49d3d10e7664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d790c97a-5ce0-47d1-a4e6-3425e347352b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4014e828-c444-48b8-9a88-b2b45edfc68d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c459f14-511e-43c7-8d4f-1c3a3551be0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de36f57-c096-4f88-9e09-f9f7b5a4b4ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2489390d-2885-451d-8792-de5598ba01b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d37b412d-9769-48b4-8a68-d61a09755250",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cbf634c-5470-4fd9-8609-638b28f797d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfdd5700-158f-4bbe-b3e6-b9beee320a8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "917a2bd3-c351-417f-9c59-fa5956cb99d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32bf3e6f-c252-438a-bc50-34db56f39dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3cf4e36-a156-4556-ba0b-8c3b65ac8b60",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a958142f-b498-485f-959d-98cbf174cc28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e063e89f-766a-4aca-8862-e62f37aa6a2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd43d15-4804-4c25-9942-febe7cbb0b6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07fce70f-e8c8-438c-a452-ec6bd7822b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d03b8ba-8593-43ae-a27d-ff3cf01c4eab",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7443d3e7-3998-4e4e-bbad-5c9f1f221aef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52055927-2b2a-44ef-a6d7-fa2f15327c38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf439b0-6a28-4eb1-b84e-e466db1623c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ee8dd82-de15-4977-be6b-70ec38eabd7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e4704f6-159d-4664-9245-2c2d4d3efe0f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663cfc85-b008-4d6f-8739-20313a6e8508",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0f73f67-70b2-4acb-ada5-41da6bb1031f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d06f58-7cb2-4c8c-b0f0-d41037419376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e69ee1d-c23d-4d7a-b643-837f194f9c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22cc8f65-ee6b-426e-b413-f31900ab5b12",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a31810d-c283-4f51-99c3-24d9e813926f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7aeb274-895d-4294-bb64-ad2a122d7c76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c22a2bb-e748-4939-9107-a5b4d0b7901b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75e67776-967c-4505-9522-add69a433102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7119df1b-aad5-4933-b1db-08c9faa4edb6",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18998b93-a6b0-4153-849e-abc813bc441b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3949a021-e146-4f4e-847a-f97573d19060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f21c40-af00-4015-a5be-0429d0640da2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "589c7dd5-3f36-4a9c-8cbf-a6535fc0841b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa14354-399c-419b-b344-71ccf2b3594c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb3c854-c61b-4978-955e-43a059aa23ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b019a68-0ad6-4c50-93e1-42b057628526"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14f8903-a049-41a7-b9f1-f727efb071e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca81686c-0f6f-4119-80d5-e6889c2d7451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a27f8935-3a82-4179-83a5-6ccfb641acc4",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70658a5-cabc-43dd-82d7-9060950f4b79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e352b5a-6b3f-4bc4-944c-40da86cc809e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7171b149-fcc7-4d33-9ff3-32eeb1c532a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81201eba-79ad-43e5-9347-2e2b51cb58c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5bce682-01db-4e19-bd05-5ff26b935d55",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500a03a8-a681-4aaf-94da-db84e58996f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "448b4edb-5d68-4ff1-98b0-bad77c36017d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21703ebe-9ebd-4790-93d1-843f13ed4f05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e9a6804-8045-49e3-a568-8c4c69dd79b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08be4bf-a262-4476-88fa-e2793482adec",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27eacf25-d6b0-44fe-9070-c86015e7a44d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7da5e30-1384-4edc-a7fa-b92c5a926171"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33badb4d-04b5-4112-bc47-7cf545fe3d18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e34d6c0-f563-4184-be84-36f00339425f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e152d0ba-4111-43ad-9942-03e60f8d6ac5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5073805-4eb7-4589-ad12-2079d4b24d2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99733786-6a78-4e64-951d-0d84021bed18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "183f2c2f-b1be-4f62-b6d6-eded12fa767c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f310a8a-a846-4e19-9c2d-9ef5be005f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b23190-53b0-4178-9d4c-794f48ebb202",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6edb1f29-85ec-4cc0-8b36-1d69667d8499",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46e8f2c3-dcf9-4ca2-8422-ad0891250e98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a4f3ce-a1d1-4605-8e59-9ef6f06e84d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2217cac2-43fa-40d3-843d-eb2f4da2e1be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "210ab81a-d5c6-4a13-9eaa-88249147bdd6",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e009920-e8b0-4030-8e35-46b5cdb2f2ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08df6afc-679c-4990-8e0e-f935b130531a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87fe30c1-1d15-43ea-8d93-8abc809014d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e290a3c-336d-446e-a4df-8d040e0849e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e723cc6-bbe8-44b7-927a-b56fce9052ea",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea0ffcd-52ee-49d4-830e-5ca8b94bed11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "819f9691-0182-4802-aebb-1ddbabf92e9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e76e24-d51f-425d-94ce-c0e363f59ec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6578390-6c83-4878-81da-92485916efae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533047fe-a2e0-43f8-ab89-f5bd2bd6f66f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "616ff403-58c0-4258-a4e6-69a4bea77b12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7fcaa83-7699-4e31-b47e-c2c26492f817"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c933bb-c756-438e-8d13-c83965848675",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34abfcf3-e463-47e5-b5d1-8c172185fcbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e90ad0-ba8f-4d4a-b126-7dfc1f4d715d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e721e94-65dd-440c-81e4-892e7d7bd1ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e4a9ea0-1f7e-4f75-8159-d8d11787f6e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf0b8fa-e471-452c-ba30-35629752cbe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78e55066-d4aa-4387-bfc6-e99cce993740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407a1400-796f-4053-a50c-d75862635e09",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f5e2fe-7772-4193-92b4-687fa36fb8c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e524531-70c7-41ed-90b0-ae18b51dea25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b24b295f-c902-4b8e-9a21-749306d07c71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2d3b63d-70fc-4690-b3a8-2c7b6a5793e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef638fd-a2b0-4cb3-93c2-dc13604b9a5d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "759ee331-534b-4413-a999-a3b966296400",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99d90dd4-6006-4917-9181-53b8b78293b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c325ee-6e2d-45ca-9dba-abb62e974238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdaa201a-22f3-4bbb-9853-8b88bc243be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb46af22-938b-40d8-b68a-2b5837b73ecc",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66424d67-56ac-4b50-a60a-9bf29c087bea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c0a70d5-7a5e-4dfb-b5a6-9f2cf2996459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae0f2df-3309-4f28-be68-b6aee9e8a1de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88771e1c-4a5e-45ae-bd35-a6ae617eae41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064144ff-3545-4906-8043-0ccf3c697939",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c7367b-481d-41d5-b0f2-75de9f6c5634",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49d999d7-8fa5-405a-8f96-10d7fa512f3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39eac32f-d3b6-417b-ad51-79ba43445722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b8491ed-e8d7-47db-af8a-2a79213cd15c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9bc9fb-f757-4c8d-bc0a-e630fa83c421",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57663515-f5ca-4a91-b318-9bda46bdcff1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "876e89db-3876-4cf6-aa00-c9b34ac20901"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eda17ca-83d0-490f-a994-902f9e89e81f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31197e45-5e8a-4efc-b894-a82e20a333be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33473f9-b14f-4160-81a2-056d0e7f3d5d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb775a7-c53a-44ca-bda1-538c8a9b662d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba85576b-483d-4372-a69b-0664c7c50c15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d10883c9-b161-4d6c-8468-af452d877ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96385558-9396-48ba-975f-78f569e5a979"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5350be6a-52d5-477d-a437-458e7f95059c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04539158-d511-4746-8b17-2aeb192bacc8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7bc7df3-57bb-4809-a547-1398739be7ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "587f068e-a015-49ac-8545-d963995d04c3"
                    }
                  }
                ]
              },
              {
                "id": "214249bf-2b2c-4413-a1dc-a15968ac8883",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "62843dac-0a5f-44e5-93c5-0852dd37f233",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b07e9f7-f5ca-47f3-8b8b-d212798b313d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ea61fd9e-39d3-48d4-a59b-e77873177994"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1801c5-5fd6-45ee-8e6b-3edb1f6cdf5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d30b5598-b9e1-4ba1-87ae-32d082e94475"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "384c12e9-b69f-4ae5-9a6b-f1d443d1a3e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d97863c-4492-458d-b2d7-e52d8119e7cd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd96a1fa-5d70-4f10-ab7a-87d510df4a65",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa7a92e1-2dbb-4e34-8e51-ccc4eb420295"
                    }
                  }
                ]
              },
              {
                "id": "9433482a-6db9-4eba-bd84-125b16b93119",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "d2f10c55-2982-4e06-be7f-a87474665fc2",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e6c090-37ac-4f76-96b3-0ae4c0791d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d47b2667-1f3f-4a31-94bc-90a0b785b39a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e3b458-d800-4694-b637-de1e2eab8ccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ec41835-c764-4a62-b5d8-0b13fbaa1d1c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fb5bb9d8-432b-4898-b5df-462e48f1ae36",
            "name": "Positive Testing",
            "item": [
              {
                "id": "572fd90b-059b-4167-b416-cb9babd45e31",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d0d375b-f3b5-452d-bb1f-feadd99c20be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7d06b0fb-5751-44f5-87e1-f83113db82ec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8364e0f9-b694-4554-897d-021db14a883d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f47b863-87df-4dc4-9f68-ca76a27b8b25"
                    }
                  }
                ]
              },
              {
                "id": "225bfd2b-a5d3-463d-ba17-a3422a47aacf",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e9053f6-1735-4685-b1ed-5953deba8f76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9baafb1a-b5e9-41e4-9f86-b6134c6bd758"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7fb9de8-c9d6-482a-8e6a-49a8120583ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64edc83b-0b9f-4571-99fa-f52eb0c921e5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "467ec128-5b9a-44b5-8dc7-6c10eea7af79",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d0bf0d57-87a4-4204-91ab-e04c24d79a58"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4a508766-750b-452a-8081-b211b43b4018",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9afe9f19-6d4c-4e6f-9eab-ae50251741c0"
            }
          }
        ]
      },
      {
        "id": "f7bd8728-56fa-4970-842e-ae94efb77e13",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7a0d850f-6ee7-4120-9cdd-6bb807bea0be",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2ae3f917-92bd-4701-9366-4f054d2b3d70",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1b20070b-f492-4f1b-94c4-8af57f8ea015",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "995dcf8f-c918-41e0-bd85-189a0046b9ff",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5d42ce26-5bd3-46f0-b307-9a07fbd7ae05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa51e00-3b6c-4a46-9cdb-1d2d773316b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e75254f-2e54-4372-b941-0c9d09f191f7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5cf84517-7c81-4715-869b-8367798ca136",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea894119-24eb-459e-8156-09f71b45f045"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b720c467-419b-47fe-9062-031219e1972d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58a499f4-19b5-432b-8515-ddc81374468d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3aa594b6-b646-4956-aa28-b9ba5913f5ea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7ab3ecff-e486-40c7-99af-504d3a87df6b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6e56c9a2-620e-4647-b36b-b1485fa411d8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "40e3d7d1-95a9-4bd8-ad2e-3530d83d64b9"
            }
          }
        ]
      },
      {
        "id": "651ce5cc-eba2-44a3-b75d-f10ccb822393",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "de1bcdae-4642-4338-958f-2ac848df5ee6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a5f37aa2-cf0a-46ed-8c04-a50c72a40884",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "69138e62-588e-4be6-ae76-7918e9ef84f9",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a5eff01-4895-4523-8e7d-e72519edb368",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8d57132-3921-4ed1-9b5f-164a2485a09b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4abe9b-257a-4781-8958-3ed28e1589c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "00c0fd80-103d-4892-a61f-82be4978ed01"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dbf9a521-a4cd-48f1-ab37-137ea2939d85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee68b89b-5f12-4a49-979f-37ff2c1b4337"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b21accab-6e9b-4efb-b661-2a56944985b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "154ced9b-ab4a-4ee2-ac9b-e7ecf45de240"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b28549c7-e68c-4a37-bca3-1120d901abb2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "422b1cbd-6707-4049-98a1-7f39b9827fa8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "803ac08b-9426-46b5-bcd1-0b2056bb2320",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "77100f9f-e6f1-445c-8b8c-942055b39b14"
            }
          }
        ]
      },
      {
        "id": "b738c99f-b966-457a-bad9-c75d568382aa",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5c423714-18fd-40c3-aada-39988c1b352d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4ca49229-6ce3-4898-b0bc-906a625f98eb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bb56fb99-96c9-43ce-9349-954b681a2600",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f90de01-b639-401a-afcd-f55011c61879",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d14057d2-d95b-45ba-84d1-f1da80d46204"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8c289c-9922-432d-a6e7-f81295c2a9c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "73aaf12e-8e84-4088-816e-544d54ee7ffc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9fdde2ac-dadb-49d0-ba6f-600a0ffe4056",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36558c90-31e7-4373-acb4-5600928a9f47"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "85ee858a-5398-4146-bcf9-78ed7c173d5b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "749829c8-729a-4fa1-b941-f34664e72789"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0e878e9b-2002-4639-909a-1ca1539e7bba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "28b6b460-2b7f-4ce6-a4ae-deead8dd9d30"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6bec08ff-949c-4c32-802a-09964330ba1b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d7f98a9d-54d1-4092-b163-9647c63a029d"
            }
          }
        ]
      },
      {
        "id": "355bd808-c2be-4674-839b-b2391c719350",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2e6492f6-bc42-4acc-8147-3fc2410ad297",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1bdef16-cefc-4839-9115-7a49d94e7386",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b7fc0d84-2323-4ef1-b878-fd97f100deb9",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a2e4230-ff27-4141-8f58-60df34bc7130",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5c7f9836-496e-4fc2-8da1-b956be731775",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 13.754385964912279,
      "responseMin": 5,
      "responseMax": 229,
      "responseSd": 26.433020751069467,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1702514130478,
      "completed": 1702514143415
    },
    "executions": [
      {
        "id": "dee3ff15-d48e-4e08-89b8-b6ecff98641a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5f998acc-ab2f-40bb-851e-1ee623bc6999",
          "httpRequestId": "1ab7cb64-8832-4ba4-a3f0-a04e5179c789"
        },
        "item": {
          "id": "dee3ff15-d48e-4e08-89b8-b6ecff98641a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "169cc436-32f1-41ef-9022-6d0600485ff9",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 0
        }
      },
      {
        "id": "502e9a40-b324-4ed7-aeb0-4a3099f98b56",
        "cursor": {
          "ref": "a74acf39-9fd8-4d51-bf9d-c17609798fc3",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "241523ff-a84d-4c24-acc8-9559b90e816b"
        },
        "item": {
          "id": "502e9a40-b324-4ed7-aeb0-4a3099f98b56",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "5cab09ea-232f-428f-a0f9-5ca3e11b79f1",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "3c7ddf63-84b4-4059-bc6a-58225007b576",
        "cursor": {
          "ref": "65207c5e-c3c4-48cd-8a6a-4c8764634831",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2236b563-8e10-4f6b-a598-4588001e0ff8"
        },
        "item": {
          "id": "3c7ddf63-84b4-4059-bc6a-58225007b576",
          "name": "did_json"
        },
        "response": {
          "id": "b8737583-437e-434d-81ca-20e78f25d23f",
          "status": "OK",
          "code": 200,
          "responseTime": 224,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d664965-44ad-4993-bd3c-d9caef918277",
        "cursor": {
          "ref": "9530b3ea-ed77-4529-9b06-fb5e91267d79",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c28655d2-e063-4dfd-b736-16301032b41c"
        },
        "item": {
          "id": "6d664965-44ad-4993-bd3c-d9caef918277",
          "name": "did:invalid"
        },
        "response": {
          "id": "58018790-f76b-44b0-ac6b-fce3c790c9f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d664965-44ad-4993-bd3c-d9caef918277",
        "cursor": {
          "ref": "9530b3ea-ed77-4529-9b06-fb5e91267d79",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c28655d2-e063-4dfd-b736-16301032b41c"
        },
        "item": {
          "id": "6d664965-44ad-4993-bd3c-d9caef918277",
          "name": "did:invalid"
        },
        "response": {
          "id": "58018790-f76b-44b0-ac6b-fce3c790c9f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9761dfe-e2ef-4b5e-92d6-685e7dc05e70",
        "cursor": {
          "ref": "419e2ad5-fd5d-4551-b795-1d6ceb8c98a0",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c0a105d2-3f7a-4c01-8441-01d2fcb94ebb"
        },
        "item": {
          "id": "b9761dfe-e2ef-4b5e-92d6-685e7dc05e70",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "36ec0e07-95e2-4a28-9dc9-c0fffdce75cc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 54,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ff3d40-267c-4e9c-be5e-e5a098005f52",
        "cursor": {
          "ref": "ea0d68c7-520a-4692-acb3-e1852629f1c2",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0f5e9157-0a84-44c8-8fa4-04217cbf0ad2"
        },
        "item": {
          "id": "a3ff3d40-267c-4e9c-be5e-e5a098005f52",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "09652ec5-068d-426c-b9be-bdf56e8cf6e5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b041a0-917a-42e2-99fb-9fd80416d874",
        "cursor": {
          "ref": "bba4554e-118c-45fb-bc82-65881f421a08",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4ffc3135-27a2-42f4-b2c4-5d88b0612849"
        },
        "item": {
          "id": "92b041a0-917a-42e2-99fb-9fd80416d874",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e0695b0c-9ea6-4f4b-822e-52ddf3eae4c0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05b89ab-6e3a-4ae0-9773-d86429e38c92",
        "cursor": {
          "ref": "6935285a-40a0-4f38-9730-7a1e7279d66e",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a36674a1-3016-4763-8c18-046748f06203"
        },
        "item": {
          "id": "f05b89ab-6e3a-4ae0-9773-d86429e38c92",
          "name": "identifiers"
        },
        "response": {
          "id": "5942e5a9-56c9-428a-999b-0caee09d4dec",
          "status": "OK",
          "code": 200,
          "responseTime": 164,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5099641a-654f-42d6-a555-d667a5e081b7",
        "cursor": {
          "ref": "a83ebff8-6bff-4441-a9c4-ba0654162e6f",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "685ddbbd-160f-42ce-beea-247c590ba0a4"
        },
        "item": {
          "id": "5099641a-654f-42d6-a555-d667a5e081b7",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d41d7eaf-1f53-43b0-a4ea-e544b08a5046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf7142a-f7a9-4703-923d-12338e67c7ed",
        "cursor": {
          "ref": "82f9665a-4f5d-428e-841d-caa951115af6",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9c22f497-5088-42ec-9fdf-8989dfedb978"
        },
        "item": {
          "id": "3bf7142a-f7a9-4703-923d-12338e67c7ed",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "77d5ee51-5544-4ce4-9496-2c3d26be9ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec535da-c2c3-4e1a-82c1-54fac05b8b76",
        "cursor": {
          "ref": "3ce42863-11f3-4fd1-8fcd-e749e5f9926c",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d10304ea-bf05-4449-ada5-3b2ae64eb2f8"
        },
        "item": {
          "id": "fec535da-c2c3-4e1a-82c1-54fac05b8b76",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "75c02228-8af1-4104-a2ee-8b8edf59ba2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df79cd18-6427-43cc-9a75-ea3b8f3e7db9",
        "cursor": {
          "ref": "12065d65-e131-48ab-8483-df041297bfde",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7ac3b542-cac1-4b44-9968-559014662a2f"
        },
        "item": {
          "id": "df79cd18-6427-43cc-9a75-ea3b8f3e7db9",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "03466437-ad67-4e36-8fae-64f6ae593f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f021b40e-b069-4666-bea1-04b6fa09018f",
        "cursor": {
          "ref": "f09ab5c4-6d21-4ad1-8710-9e4e3265b739",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "cad50894-b26b-42f5-b2e1-484937bc1f23"
        },
        "item": {
          "id": "f021b40e-b069-4666-bea1-04b6fa09018f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "89ea9330-1a38-4856-bafd-d639e432f23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072d84ff-0613-43eb-80ec-7d4d5bcc95d9",
        "cursor": {
          "ref": "7dfd2655-4289-437a-946c-4ccef0f49eb0",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "77f7c97f-e301-4eff-bb8f-1856cd100bfc"
        },
        "item": {
          "id": "072d84ff-0613-43eb-80ec-7d4d5bcc95d9",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5b4c9438-a1d5-4f04-9280-169e0e5f794f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b79327-dd5e-4e04-b733-cd116168d170",
        "cursor": {
          "ref": "77159f9a-e823-4e94-9868-899673fcd99d",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "439cc7c9-9aa0-4ed0-8b2d-8257d8ca1a27"
        },
        "item": {
          "id": "72b79327-dd5e-4e04-b733-cd116168d170",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b8262a3a-6296-4f38-a253-30aac7253a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b2e5a8-30fd-4455-b835-c1d3208c2503",
        "cursor": {
          "ref": "be9f2f65-2123-4839-9183-9e246aabcff5",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "770f3a68-d3cf-4402-9ce3-a3f12e2b6516"
        },
        "item": {
          "id": "25b2e5a8-30fd-4455-b835-c1d3208c2503",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "cb5f1a20-fbee-46f8-a96f-5db81ae55f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c034186-9401-4c04-b75b-06ae89333873",
        "cursor": {
          "ref": "7018aaf4-7eda-4918-8172-537b4ab9a0f5",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "485dfd94-aa0a-457e-af49-23eb291063fa"
        },
        "item": {
          "id": "2c034186-9401-4c04-b75b-06ae89333873",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f87b8177-93ac-4798-9f98-dd625f6db219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d7f224-b5d6-49e1-ab47-82c174f83b17",
        "cursor": {
          "ref": "16b1dddc-aa8e-42a3-98d8-7b81642b19c9",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9815bfb6-87bb-40ce-907e-6cddb829e4c9"
        },
        "item": {
          "id": "46d7f224-b5d6-49e1-ab47-82c174f83b17",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "696a0bb8-db72-44cb-9e77-8e4d349ce18c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98acf57f-4bf6-43c7-990c-d332750f97b7",
        "cursor": {
          "ref": "a78c8464-27db-4da7-8143-5142564fb3ba",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "72b0f07b-210b-4aad-a220-cb6dde4781c8"
        },
        "item": {
          "id": "98acf57f-4bf6-43c7-990c-d332750f97b7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "274d5d1c-ad81-40e9-809c-9f9d73c33f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2ae765-a1ff-44a3-bc6b-cdd0f101162b",
        "cursor": {
          "ref": "e40ec628-856f-4725-bcb5-e242365df668",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "49793514-2635-44eb-ac5d-ca0a5058d91f"
        },
        "item": {
          "id": "7e2ae765-a1ff-44a3-bc6b-cdd0f101162b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0b1baf6b-4855-478c-b761-4fe6a019a78c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976bbd64-9e63-4cf7-923c-95b36154f24c",
        "cursor": {
          "ref": "284ed231-827c-46d0-97fd-5484c266ca99",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "cda8c950-7c27-4529-b538-ffaeab818151"
        },
        "item": {
          "id": "976bbd64-9e63-4cf7-923c-95b36154f24c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "13f35f86-2988-4fd9-8437-11bd096debae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f6c60f-3f22-43bf-a47f-8f5bc5eead7f",
        "cursor": {
          "ref": "2af5b5dc-e4e6-4eb9-84ab-3af2f6ac0b07",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "67fe5e93-c203-48f9-befe-42d9c8c7f340"
        },
        "item": {
          "id": "41f6c60f-3f22-43bf-a47f-8f5bc5eead7f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5f9a6102-15e3-48b1-a381-8e67849729ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de20d7ee-8fec-4178-957c-6eddbf136f85",
        "cursor": {
          "ref": "ed61c361-02ab-41f8-8dd2-4e27fc4ca70c",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "791fbd6d-17d7-470a-91ef-0d70ff4bcde7"
        },
        "item": {
          "id": "de20d7ee-8fec-4178-957c-6eddbf136f85",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "04ceede1-8694-4ffc-9e2b-5713a3013bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc11542-ef6a-45ea-95e1-3fd24a7a7c27",
        "cursor": {
          "ref": "27af9075-79c7-4cba-bff0-905476b91959",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4382574c-8d8d-4bd0-bd66-d90cd423d092"
        },
        "item": {
          "id": "0cc11542-ef6a-45ea-95e1-3fd24a7a7c27",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3a8c616e-5183-40da-b3fb-e017c7c79cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ca9500-9ffd-4d26-933c-97bc22b9a8b6",
        "cursor": {
          "ref": "cd0e3579-9bf5-402a-b3a8-0f25b393bbee",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "593f3bc7-fd94-421b-98ca-0e0d21557e9c"
        },
        "item": {
          "id": "c0ca9500-9ffd-4d26-933c-97bc22b9a8b6",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "21ac7a6d-cc73-424a-a9e6-787b3be14d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd54ce4-def3-4f32-9c90-805b826423b2",
        "cursor": {
          "ref": "4e0058c4-fea7-4b05-a8fc-5906f079acf3",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "237c651d-6814-4548-a37f-5ebe216f59df"
        },
        "item": {
          "id": "7cd54ce4-def3-4f32-9c90-805b826423b2",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2b9db663-e0ea-4f1d-8e51-47f3b2d4fb8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3680e210-6845-4992-a014-f20d769c7903",
        "cursor": {
          "ref": "6bf64e3d-6a99-441b-a7eb-f98294c5a6b5",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "63c9b551-1c2a-4cfe-9895-d811b899065c"
        },
        "item": {
          "id": "3680e210-6845-4992-a014-f20d769c7903",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "429ddce9-8a9f-444d-9f63-9589e8e4fdf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03fb5b84-b638-4722-83d6-b9265ef66812",
        "cursor": {
          "ref": "e7b0c5b6-c936-4396-a1da-b013e359f3d4",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f15875e0-e618-466e-9726-bea744063d48"
        },
        "item": {
          "id": "03fb5b84-b638-4722-83d6-b9265ef66812",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "4545341e-f6cb-4e73-8365-60eed90305a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde6ab19-22d9-4036-9678-88b02ec961bf",
        "cursor": {
          "ref": "c11edf1a-2427-4d7e-93fb-5d53d2e5d289",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f578acf6-77b2-45cc-a5e1-07697af7dd33"
        },
        "item": {
          "id": "fde6ab19-22d9-4036-9678-88b02ec961bf",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "5b4bc2de-5576-43eb-ba86-a68d5ea83a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95144c05-26e6-42cd-aad4-94ac5f0c161d",
        "cursor": {
          "ref": "8c305c11-fa21-43a6-beb8-8e1b411afd59",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ea2a0d39-84d1-4fb5-acea-8661c47b1199"
        },
        "item": {
          "id": "95144c05-26e6-42cd-aad4-94ac5f0c161d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "685d1453-29ef-4cf6-ae23-139d3fdbd7d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e621a0ad-d66c-44b8-88c9-abf58aa73b7a",
        "cursor": {
          "ref": "3c7fc2ec-e345-453b-b6af-0d475a2d0908",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7def27ac-8fbd-4d5b-883d-b82a62679927"
        },
        "item": {
          "id": "e621a0ad-d66c-44b8-88c9-abf58aa73b7a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9e9a2064-ffad-4739-874d-3f647e9fa3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a3c8a4-a8d4-44e1-95b9-844c60e39c48",
        "cursor": {
          "ref": "e0a363b2-cb56-4260-9619-42c33e30bae5",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6a678745-d4bd-4fa1-b5c6-0ae6f9759109"
        },
        "item": {
          "id": "70a3c8a4-a8d4-44e1-95b9-844c60e39c48",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b178aec9-c045-439b-861e-ed2745923179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65025f67-dcab-43ec-b2ad-3ac481e74875",
        "cursor": {
          "ref": "7c99583e-8a55-477a-bb2c-d235e575f245",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3e56035b-3bee-40c3-9d8d-e12bd3116863"
        },
        "item": {
          "id": "65025f67-dcab-43ec-b2ad-3ac481e74875",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5e960a9e-4dde-4803-9dd7-4b66acf68d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3afa05c-a294-4d47-91de-273b5432832f",
        "cursor": {
          "ref": "fa9d226a-c216-43b7-bfc5-fe812f1dbf4d",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "896150a2-9bbc-40ba-a71e-c0fa20bb6920"
        },
        "item": {
          "id": "b3afa05c-a294-4d47-91de-273b5432832f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "eefbc2b1-a870-4f2a-b944-da1c4bd4cbd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa3aa54-cbb4-41e1-96d6-90c90e59b9be",
        "cursor": {
          "ref": "b3863f94-7c4e-4540-a595-33b05c41cede",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "91dc15bb-336e-4433-b579-7c4abb34a6f7"
        },
        "item": {
          "id": "faa3aa54-cbb4-41e1-96d6-90c90e59b9be",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b18ffeee-3d61-469b-a99f-3f88ba5f3139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd07091-8326-4801-9859-e65ad3fa5b8c",
        "cursor": {
          "ref": "8d2a661f-19f9-4942-abd4-b92744beed22",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2edb0edd-815b-4428-9c37-da67ed9beb7c"
        },
        "item": {
          "id": "bfd07091-8326-4801-9859-e65ad3fa5b8c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f86844c7-8ced-4f3e-86be-1352d51545cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fea7237-5f91-4821-b42d-63902071fec7",
        "cursor": {
          "ref": "acc5f111-e7c0-4157-8228-2db6d03ca30a",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "383fceda-06b8-4801-b0f3-c51bba99c6fc"
        },
        "item": {
          "id": "4fea7237-5f91-4821-b42d-63902071fec7",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d7cd1254-24e6-4893-abdb-28fe7d175e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "937999bc-97e6-4820-8911-2edbd5278953",
        "cursor": {
          "ref": "5943f4f2-c740-4b64-9e11-22a524037f72",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b5bdbb94-ce49-4cb6-b1a4-5d10b321e5bf"
        },
        "item": {
          "id": "937999bc-97e6-4820-8911-2edbd5278953",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "653cc9b8-b2d4-432c-bc86-d6ed151e27bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4fa438-c978-47f0-a722-ace2c548696c",
        "cursor": {
          "ref": "c49bbda2-094b-402f-930d-90d49f06c70f",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d4d1c375-9626-4a5c-914d-cdcdd03fdc88"
        },
        "item": {
          "id": "cb4fa438-c978-47f0-a722-ace2c548696c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f14aeb25-5a29-4383-874a-bfa6f7eb6655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716847c6-5ad4-4271-9631-cfa28f9e3583",
        "cursor": {
          "ref": "5b7b1b00-d054-42dd-a50b-0a5a2da8f8e2",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ceae7194-72df-41e2-ab30-69700e9f1082"
        },
        "item": {
          "id": "716847c6-5ad4-4271-9631-cfa28f9e3583",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a3ffad9c-bc17-459c-b576-5b72b20609d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2cd871-72b2-4820-8927-ffeb9813262e",
        "cursor": {
          "ref": "0e723e50-4ebe-4d40-856e-b049d81f718d",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b774d1bf-0b9d-439e-b35e-014c00633e49"
        },
        "item": {
          "id": "ed2cd871-72b2-4820-8927-ffeb9813262e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "33879b3f-44fd-47a6-a726-d0224fd7063c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a00f76-03cf-4fc1-8308-b5f56c9106a4",
        "cursor": {
          "ref": "09ed04ad-b7a2-49f2-bc29-e3c57682ca35",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b4acbbcd-5d24-4c66-8af4-0295760e5a6e"
        },
        "item": {
          "id": "61a00f76-03cf-4fc1-8308-b5f56c9106a4",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "cbbb20cb-8065-4601-b190-00bc906c5358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e696d7-999b-4b4b-b5c0-4376e01696d3",
        "cursor": {
          "ref": "bb6fcc2c-87dd-4be4-9de0-d02d45e9c528",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7dc5998c-cd75-410e-a282-202be7d57b20"
        },
        "item": {
          "id": "30e696d7-999b-4b4b-b5c0-4376e01696d3",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "be3dca12-7652-4514-8b56-2e717ce40bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12654f0b-bb82-455e-8c0d-d4ebad73cc32",
        "cursor": {
          "ref": "bbe7570d-6383-4e87-a505-5d2f75a29908",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b77cc407-43db-4501-b34c-2e7166b6512a"
        },
        "item": {
          "id": "12654f0b-bb82-455e-8c0d-d4ebad73cc32",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "91627f2f-c6dc-47d5-a9ed-3630cbb92807",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 34,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1a6746-8b54-4818-98ab-3ef4e50eb9a3",
        "cursor": {
          "ref": "5232238b-70a4-41f2-8b82-f0b0af0bc969",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "510cdcb0-a8df-4a02-9995-4dcba4ad2598"
        },
        "item": {
          "id": "0a1a6746-8b54-4818-98ab-3ef4e50eb9a3",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c932efe7-31db-43a6-8b0d-89c5e74e6dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae348f9-4e4e-4f60-9988-087b722a42d8",
        "cursor": {
          "ref": "cdabdd6d-950d-4219-93c0-59dea9d8f191",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b7002b31-0f30-4b11-91b1-cd483a58120c"
        },
        "item": {
          "id": "1ae348f9-4e4e-4f60-9988-087b722a42d8",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5df6ebeb-0c65-4398-928b-fe58a1e7d1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd69ab8e-7ab7-4689-ba46-c7bf11bad94e",
        "cursor": {
          "ref": "c2ade514-73da-4b35-aed4-47ce82b83c1b",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "cb8089ed-031a-48e7-80f1-3e1214bbdee0"
        },
        "item": {
          "id": "cd69ab8e-7ab7-4689-ba46-c7bf11bad94e",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "33e20529-1912-4c81-82b4-1d15a7a3ad3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ef97a6-b99c-4c52-8704-f68590472949",
        "cursor": {
          "ref": "0a37d413-63c5-423a-b438-a93a96d2bb68",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1eac62db-588d-4fce-a216-7b85d678ee96"
        },
        "item": {
          "id": "36ef97a6-b99c-4c52-8704-f68590472949",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8162831a-533e-4cc3-8f4c-4d644f0c84bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c3e58a-cdf7-4de7-9cea-ce8ca56132ff",
        "cursor": {
          "ref": "5c6db802-580f-41bb-aa09-7ab601de9764",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "dc52c720-610e-41fb-91bf-7e7467c3e134"
        },
        "item": {
          "id": "44c3e58a-cdf7-4de7-9cea-ce8ca56132ff",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5351ba78-5a4c-4b73-a2c3-63110b3723cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c72241e-0130-4966-8bec-8b99efcb1f3f",
        "cursor": {
          "ref": "00158867-2171-48e2-be9d-f37e9e5ec995",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c326c339-85fa-46d6-9e8e-75e3cfefab76"
        },
        "item": {
          "id": "3c72241e-0130-4966-8bec-8b99efcb1f3f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "79e6ecb4-73bc-4b47-992c-aa145fae06a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f3691f-a55e-419e-9917-57052a5504e7",
        "cursor": {
          "ref": "32ceefd4-1928-411b-ac82-15e2b8e8f802",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "5fcc1466-a22a-4cbc-971d-9720b92b49f8"
        },
        "item": {
          "id": "b7f3691f-a55e-419e-9917-57052a5504e7",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3411f3da-b006-459c-98c6-528db4b069ea",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 23,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336634f5-3ac4-4693-babc-8a71d3fff6f7",
        "cursor": {
          "ref": "289f0067-23cb-4be1-997e-38669a61f510",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f6ab21f3-e01b-451b-92bf-aa802291bb00"
        },
        "item": {
          "id": "336634f5-3ac4-4693-babc-8a71d3fff6f7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b2c6d7cf-9e3b-4439-be2b-3fdaaebdaf4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3426e34e-eb83-458f-a5ff-aeaa9048753d",
        "cursor": {
          "ref": "7f3e6355-38aa-4190-a7f7-62839034ebb5",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e45f759b-ec21-4007-8409-5be6b3a89400"
        },
        "item": {
          "id": "3426e34e-eb83-458f-a5ff-aeaa9048753d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d7626507-e4c3-41d2-b294-b2bec9550559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51c6114-a7b6-4d4b-9260-bb2226894b26",
        "cursor": {
          "ref": "f5ea482c-321b-4e09-a47a-4bb0175b5bcb",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "06627c44-6e3e-49dd-92e9-d504dea756a9"
        },
        "item": {
          "id": "e51c6114-a7b6-4d4b-9260-bb2226894b26",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ddf32b17-3828-4f4d-9dcc-3fd70b387e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df07048-2b5e-4c92-858c-a22d701ac188",
        "cursor": {
          "ref": "45f74560-c49b-417a-9219-f915002e2ddd",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b263583c-c26a-405e-b202-ac5e57a623a8"
        },
        "item": {
          "id": "2df07048-2b5e-4c92-858c-a22d701ac188",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "61a677ba-0054-46c5-a77e-3ce8ef44dd58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5508ac01-7616-4c40-a747-f1a5be421283",
        "cursor": {
          "ref": "6979c9fc-c971-4426-b358-fbb87e720ff8",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4e7e7f0a-652d-47c5-9ec7-66a5579f8723"
        },
        "item": {
          "id": "5508ac01-7616-4c40-a747-f1a5be421283",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "51c7c77b-8c8f-468b-8fa2-34934ee0d0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf2c5732-590d-4928-b761-7f8ebc861e04",
        "cursor": {
          "ref": "b6defca3-ef6f-4029-a0ae-9632f1abbb09",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1b57f50e-5665-4183-82dd-a786434f6963"
        },
        "item": {
          "id": "cf2c5732-590d-4928-b761-7f8ebc861e04",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3bbf4a2e-f874-409b-af33-3244c22f495b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb56dc1-d2a1-4d1b-a34a-c22b3607caee",
        "cursor": {
          "ref": "75677f50-1220-4a46-8718-293ab0f20a49",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "afc6325e-a101-41fd-84b5-b9aa8a7d153d"
        },
        "item": {
          "id": "dbb56dc1-d2a1-4d1b-a34a-c22b3607caee",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "af2e39cc-ff0d-4954-90bc-dc412b5c7d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f420a361-966a-4440-99bd-daf28d994b8e",
        "cursor": {
          "ref": "0d4ddb73-1e0e-41b5-bcf2-938ec8016c47",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6b787f5e-2c26-4d2d-86eb-a151554f12e7"
        },
        "item": {
          "id": "f420a361-966a-4440-99bd-daf28d994b8e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "17ee6187-c9f6-4bf0-930b-c123801d2a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158e9a8a-ed9b-4653-922f-ca86372a2357",
        "cursor": {
          "ref": "4138d1e7-c8fe-4bad-b6b7-ec13d93c30a6",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ce7e9fd9-a65b-45a2-a4fd-ab0b91cc763a"
        },
        "item": {
          "id": "158e9a8a-ed9b-4653-922f-ca86372a2357",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "637cb4b5-7252-486e-b0f1-979f2daf20ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c002ed9b-0442-49c1-90dd-9aa31be351a3",
        "cursor": {
          "ref": "242373f5-c63a-49db-b130-9ea17efc1a4d",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9d3cec49-2da9-4c99-9fac-ee753b319d39"
        },
        "item": {
          "id": "c002ed9b-0442-49c1-90dd-9aa31be351a3",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b0476d61-678e-4d3f-988d-f9f327fa5496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2aca388-de9f-430b-84f1-7be20ae38f95",
        "cursor": {
          "ref": "aeaa97d6-dd0a-40ff-b43f-e2601202cff0",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d283e4a4-a8f4-42e0-8d83-34fe5314632f"
        },
        "item": {
          "id": "a2aca388-de9f-430b-84f1-7be20ae38f95",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "36feab28-f7bc-4f9b-b23b-7cdadeea5f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc859abe-c094-4043-aa9c-26aebd778382",
        "cursor": {
          "ref": "9ef55130-840f-433d-b76a-250e59833066",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6e0051e5-7f40-4c10-a755-f00f5bd009df"
        },
        "item": {
          "id": "bc859abe-c094-4043-aa9c-26aebd778382",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f0647064-8afc-4d7e-8a41-5c44ff762564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72e5f00-d50d-462a-b6ca-ff43761a703d",
        "cursor": {
          "ref": "19f40c9f-bba6-46d1-a49b-97458bf76e78",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1339ba57-b16e-4b10-8d7b-f750eac2467b"
        },
        "item": {
          "id": "e72e5f00-d50d-462a-b6ca-ff43761a703d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ede6b8ff-eed9-4996-a274-3e7212aae4af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7d40a6-0936-4e60-853d-7892f0e356c9",
        "cursor": {
          "ref": "98d31470-bd15-453a-a88f-982f55bde54e",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "805e0632-947f-4146-8279-f044da61252f"
        },
        "item": {
          "id": "8b7d40a6-0936-4e60-853d-7892f0e356c9",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a7dca533-4c08-4a69-8f57-3e5121186e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e49aa7-4cf7-443c-96fa-7fe908a8aa4f",
        "cursor": {
          "ref": "5d9e73e7-de1f-40ab-a31e-0757fa87b1cb",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7594586c-4132-4f4f-ad5f-32fb3003398e"
        },
        "item": {
          "id": "e5e49aa7-4cf7-443c-96fa-7fe908a8aa4f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "fc781ca8-1f52-45d4-b970-f0c978718704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7f8683-6431-4113-acaf-0902812b5657",
        "cursor": {
          "ref": "d0b2f028-d5fb-45ef-a489-ec094668ecbc",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9896baa6-979a-455a-a904-6e582158cf71"
        },
        "item": {
          "id": "6d7f8683-6431-4113-acaf-0902812b5657",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "460ee018-d5db-43f5-a2fe-4c2f749f8705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d198c6d5-3074-4c06-9a11-e1b7ead87fba",
        "cursor": {
          "ref": "7978f19e-e8d8-4bd9-97f1-18fb9e00d83d",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "86e8a82b-d83e-4fd5-a122-28783c2ec021"
        },
        "item": {
          "id": "d198c6d5-3074-4c06-9a11-e1b7ead87fba",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8c88ba54-adf1-41b6-a903-779f06e5b393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1287f66-8263-42af-ab77-116c8429d4ca",
        "cursor": {
          "ref": "c6c73c99-2d8f-492e-a7e1-b4e767b5d949",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "36c3f33c-ab0f-4cc8-996c-150ae68177b9"
        },
        "item": {
          "id": "f1287f66-8263-42af-ab77-116c8429d4ca",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "bddafd13-bd93-45b5-9dad-f3f6aa9134b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0297327-66bc-4b1d-aa74-585649fcfe13",
        "cursor": {
          "ref": "483b7057-11b5-4602-a926-c2e328a56d4b",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c0c830f9-bc1a-4e8e-8781-51f01d4270c9"
        },
        "item": {
          "id": "c0297327-66bc-4b1d-aa74-585649fcfe13",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "732dd720-c90a-44a1-88dd-6aa6e6c78723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7eca132-2d50-4e73-b4c2-f8886e090197",
        "cursor": {
          "ref": "640125f7-9892-402d-aeb8-5901b1cfd2d8",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1eb95ade-5226-4177-8c43-0a351d4e013d"
        },
        "item": {
          "id": "f7eca132-2d50-4e73-b4c2-f8886e090197",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "adda018f-6b54-402a-b944-7369bf24c7a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d1b82d-4968-4ba8-bd79-155a226e35a3",
        "cursor": {
          "ref": "107fa2ab-afd5-43d7-9792-4af347214de7",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9a521c6a-2156-461b-8ebb-e317075d3c46"
        },
        "item": {
          "id": "41d1b82d-4968-4ba8-bd79-155a226e35a3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "32506716-9f28-4f79-a397-8bb5ee0e43a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d9ece3-fa4e-4486-b1f6-b2762e4ac301",
        "cursor": {
          "ref": "ea033446-ee0d-47ba-abf2-9d53ffcfb017",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "379af073-15d3-4974-9028-7b9e8c621901"
        },
        "item": {
          "id": "47d9ece3-fa4e-4486-b1f6-b2762e4ac301",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4ac6f690-8d54-4117-a04a-a11495e37c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bcc3089-a50a-4613-8a94-3d34d7ed2358",
        "cursor": {
          "ref": "c63da19e-a933-4959-9fdf-a73bb2d6b97d",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "74b4c8ae-9ab7-42de-9f7c-1b9c006a618a"
        },
        "item": {
          "id": "5bcc3089-a50a-4613-8a94-3d34d7ed2358",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "faca378d-0f26-467f-8012-5f4eed7ebb47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12dcc4f9-9914-4d3a-8f5f-5e40189f3f8e",
        "cursor": {
          "ref": "3b3d534c-6104-4f6a-9256-5660456492b0",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "16dad6b1-ae02-4789-984b-270132f7afc6"
        },
        "item": {
          "id": "12dcc4f9-9914-4d3a-8f5f-5e40189f3f8e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ef334eba-c428-436c-b66f-30d79687ad0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee684e4-65d9-4034-800f-0a810fdcff48",
        "cursor": {
          "ref": "7ba90ca4-dd5f-4667-8789-b3b809728079",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d543f798-39df-46eb-9a09-950df0e78273"
        },
        "item": {
          "id": "2ee684e4-65d9-4034-800f-0a810fdcff48",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "fee7e477-d9ca-414b-a871-a0348fb7b81a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8480959-e2ba-4aca-8af8-ee46629ce469",
        "cursor": {
          "ref": "b133132b-5585-4719-b302-32de465f818d",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "585f6271-6705-4db7-8a9c-1001bf8d60cc"
        },
        "item": {
          "id": "c8480959-e2ba-4aca-8af8-ee46629ce469",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "93acdf94-e1fb-4d71-9407-16fca93b25a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a659aef-8373-4b69-881d-998c7e35e5ae",
        "cursor": {
          "ref": "dc66b373-800c-4974-9a56-8fb5f278c94e",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "675e2d50-5a85-405e-8fbf-5d8493ebd913"
        },
        "item": {
          "id": "6a659aef-8373-4b69-881d-998c7e35e5ae",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "81b38787-ed96-4f63-b821-22afcf7cc4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6bdc0f1-ed4b-445b-8ceb-2048898c6dae",
        "cursor": {
          "ref": "f0b5fb24-7f43-45d4-848a-2eaf15c81fae",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "951a8c18-5936-4615-836b-76a1d4d9af1d"
        },
        "item": {
          "id": "d6bdc0f1-ed4b-445b-8ceb-2048898c6dae",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "30173d63-3577-4285-ac62-816b77ab5f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f683f61b-393e-4ef2-836b-94ab550e669a",
        "cursor": {
          "ref": "6cd09c6c-c680-4a2d-a9c3-56594c5d5d23",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "bfbcd6bd-dc06-43cc-b364-56cdc8451735"
        },
        "item": {
          "id": "f683f61b-393e-4ef2-836b-94ab550e669a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "65005372-bc97-4303-9006-ce4998e38254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156f6c2f-cbdf-4f21-8bf1-55f810b4bdeb",
        "cursor": {
          "ref": "c4b79770-dd15-47b6-90d5-bf241ec0633e",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f58f8e0a-c7f3-44a9-ba9f-63024abbbebe"
        },
        "item": {
          "id": "156f6c2f-cbdf-4f21-8bf1-55f810b4bdeb",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3728eef1-3a93-44c3-b412-aafe38d5b997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4607fe-54cc-41f7-9f75-6fef242738fc",
        "cursor": {
          "ref": "2a34e1d2-78d7-456a-a24c-10f6bc4cd803",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "aeb10695-574a-4dde-aa78-fd19992e8c4d"
        },
        "item": {
          "id": "2d4607fe-54cc-41f7-9f75-6fef242738fc",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a06bd0ea-b9f7-4f5e-a7e3-8b8a96408478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ff99f4-a268-4693-b156-aef30682de76",
        "cursor": {
          "ref": "1535cb4b-9d49-4efd-a60f-0daccfe583dc",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "11755ebd-a87b-4cec-b707-625c1eb76592"
        },
        "item": {
          "id": "a3ff99f4-a268-4693-b156-aef30682de76",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ef1d3f5a-0e74-4fe5-a0cb-6368d852738c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5279b0e-c81a-473e-aece-b225451b153f",
        "cursor": {
          "ref": "0f2fb17b-15f0-4d12-b059-291833023b2e",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "50db33ef-a98a-419f-8e9e-9b11383dc348"
        },
        "item": {
          "id": "d5279b0e-c81a-473e-aece-b225451b153f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0123a1ff-5052-4642-9d3b-2d3996e3079d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3d9000-30f3-4cd1-a789-227f238f0ffb",
        "cursor": {
          "ref": "78b5355a-94fe-472f-923e-936f1d1a51ea",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f798bdfe-6dce-418b-9f29-5a73a60b5fd2"
        },
        "item": {
          "id": "fe3d9000-30f3-4cd1-a789-227f238f0ffb",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4ac41720-3685-4660-a2c9-cd35e5a7f511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d31909-f5af-4c6d-82fc-82b296347c80",
        "cursor": {
          "ref": "a7087321-5efc-4c17-b5cc-0dbe3437c81d",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "99c92f55-636c-4ff5-b75d-64bc1f85e281"
        },
        "item": {
          "id": "b7d31909-f5af-4c6d-82fc-82b296347c80",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c848f456-1329-4cf2-be76-6687123c6ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604dbbd7-f18a-454c-8f6c-045b147dd48f",
        "cursor": {
          "ref": "caf8265d-19cc-44ce-a177-192295d0a15f",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d87bfefb-8951-497d-8208-5c8ed82e5dfd"
        },
        "item": {
          "id": "604dbbd7-f18a-454c-8f6c-045b147dd48f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "dbcf55f1-c951-4a06-aad1-04e5a6298353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2947231-9a94-4bc4-9d0d-72b4ae68c021",
        "cursor": {
          "ref": "6890ce96-0688-4028-83b8-3f9f5efe3c17",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a0b82865-b272-43e7-9da1-0740f7bf5e9f"
        },
        "item": {
          "id": "c2947231-9a94-4bc4-9d0d-72b4ae68c021",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2a00d62e-fb5b-4b1a-81f6-1551d19a628e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ffe01b6-89b0-4bbe-90c8-a8ad89e28aaa",
        "cursor": {
          "ref": "6426cd2e-dd6e-4317-ad79-d744bee49027",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "180664bf-3958-4236-be1f-f924c337c181"
        },
        "item": {
          "id": "1ffe01b6-89b0-4bbe-90c8-a8ad89e28aaa",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "cd81e952-9a00-43d6-bbb9-bb25f7242a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7f0bd7-3faa-470e-811b-0840eed2474b",
        "cursor": {
          "ref": "4366d32a-f849-4130-b303-b6388cd9c509",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "91ad6792-a08f-48b5-b00b-4d1b0dc0fa88"
        },
        "item": {
          "id": "9d7f0bd7-3faa-470e-811b-0840eed2474b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3fe71a1a-bc1b-4f44-8e71-504f0e688e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b071ab95-78bd-4302-8b27-04e91b605fcc",
        "cursor": {
          "ref": "9159cb0a-6e7a-4a1d-a055-f98fb46571ff",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7b408551-c87b-47f4-a7ca-b411cd302ecd"
        },
        "item": {
          "id": "b071ab95-78bd-4302-8b27-04e91b605fcc",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "52f8311e-a233-47d7-956e-5444e01049eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c31dc8-3708-4a26-a8b8-4e9ec4bde29f",
        "cursor": {
          "ref": "925944bd-6210-46aa-91e8-ea7cef581662",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d0449a86-4e66-4093-be1f-3142ba9014e0"
        },
        "item": {
          "id": "f8c31dc8-3708-4a26-a8b8-4e9ec4bde29f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "74746b8b-19e2-4b4e-8c67-576bb3c82e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6266d05f-b75a-4c54-a5b6-fe8c70681714",
        "cursor": {
          "ref": "f50320d3-8163-4038-8543-57975c933c2f",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "26d15505-0ede-4e8f-899b-8b0b4fd9faa8"
        },
        "item": {
          "id": "6266d05f-b75a-4c54-a5b6-fe8c70681714",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b0ae164b-19af-4f09-9d12-650a8d74a9f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb63c395-e713-42ea-ab59-090528d55956",
        "cursor": {
          "ref": "6f1ad978-4913-4922-95ed-e10d5159034d",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d02525b3-f7a9-45fc-8f5a-1f0eeb423acd"
        },
        "item": {
          "id": "cb63c395-e713-42ea-ab59-090528d55956",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f1407047-c6d2-497a-87ba-e39d95dd24ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "331f03bd-ecb1-4c55-85a0-edb2272fc26b",
        "cursor": {
          "ref": "ea95259f-61a6-40b7-b509-ad5ae368a486",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "edce705b-03fc-4629-8043-0d719bc2a4c2"
        },
        "item": {
          "id": "331f03bd-ecb1-4c55-85a0-edb2272fc26b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0b83b19c-f681-4053-8c44-9517c0e96a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dcb0c3e-78e2-43ca-b798-e3ce8fc87816",
        "cursor": {
          "ref": "a5568c1a-bc73-46ad-ad36-018faf3a4e8a",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e43317d3-b83d-40d0-9a7b-25dc6ee6a68f"
        },
        "item": {
          "id": "7dcb0c3e-78e2-43ca-b798-e3ce8fc87816",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "07e30f67-e7c5-4097-827f-b28321bf53b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e7cbdd-4561-453a-941a-2d93ee0f3c60",
        "cursor": {
          "ref": "e73fdcb7-276a-49fb-a228-344824d55469",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f624fcc4-a7bb-4ac1-8f96-8a4337c016d7"
        },
        "item": {
          "id": "19e7cbdd-4561-453a-941a-2d93ee0f3c60",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9cec6fd2-31a9-4972-815f-48a9af588807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d565260-6707-4b17-ae59-75a5714cd749",
        "cursor": {
          "ref": "94f8fa8b-137c-4d10-b80f-437bf955c513",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a130c39a-3fe4-4c98-aadd-58f787803cd6"
        },
        "item": {
          "id": "1d565260-6707-4b17-ae59-75a5714cd749",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e0b3bcd2-7a46-416e-8572-04d970b7bd36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0b0011-7867-4089-84b3-0e2c87f831a8",
        "cursor": {
          "ref": "f8548c91-3a3d-4a41-91a9-a1c53d08e392",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4085dd1f-aa9a-4e03-8081-438376557202"
        },
        "item": {
          "id": "ea0b0011-7867-4089-84b3-0e2c87f831a8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5c7440aa-1b94-4449-b836-26a864a94b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e49db7-7531-4ffd-a8bb-885baeaf30aa",
        "cursor": {
          "ref": "aa9ad8bf-d330-42d7-b5c2-9de2c814ca3e",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1c0d4456-995f-4e30-b50c-b033e249b61f"
        },
        "item": {
          "id": "40e49db7-7531-4ffd-a8bb-885baeaf30aa",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "26a9409a-b19c-4078-80e3-ccd2683c8c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a383535-2969-49f2-a7a2-f2e7dc4a15dc",
        "cursor": {
          "ref": "8a35e0cf-3cbc-48ec-850d-1231f5995c31",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1a451c5f-a3c5-468a-ab6c-66d2f4278c53"
        },
        "item": {
          "id": "3a383535-2969-49f2-a7a2-f2e7dc4a15dc",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6eb98b8f-843c-4d04-9996-1f12e1980d43",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ca1e84-7b1d-4012-8058-c4123dfd4d16",
        "cursor": {
          "ref": "4d7d144d-6790-467f-9de6-a5307e1dcb99",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e2ea3e64-8db2-4131-91c8-68bc7f1a59bf"
        },
        "item": {
          "id": "b2ca1e84-7b1d-4012-8058-c4123dfd4d16",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "1e59aee4-6ca0-4236-806d-0ec18fcc305c",
          "status": "Created",
          "code": 201,
          "responseTime": 52,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d31c949-ba04-45ec-8098-918ac221414b",
        "cursor": {
          "ref": "9538d59b-1a8c-4873-9f54-a50fe330f9f8",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "29c1d6d9-e849-408f-98f0-63ee64faf7a2"
        },
        "item": {
          "id": "9d31c949-ba04-45ec-8098-918ac221414b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d7330ca4-5269-4215-95c2-2b4d92b25d37",
          "status": "Created",
          "code": 201,
          "responseTime": 188,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad76e87e-a9d6-4b71-9238-18ff54771716",
        "cursor": {
          "ref": "1fb149f6-ebf8-4743-b678-9a293e8371b8",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "56ce8260-fdce-476b-9b20-d668a37590d6"
        },
        "item": {
          "id": "ad76e87e-a9d6-4b71-9238-18ff54771716",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9f0231dc-e95d-4589-8fd3-68877b5df6ee",
          "status": "Created",
          "code": 201,
          "responseTime": 56,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e480cab3-ff32-40a9-a366-b9de290b9dcd",
        "cursor": {
          "ref": "1cca4294-98ce-45b0-be3f-ad9f692a416b",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "054d35c6-57af-4c34-a9dc-8d3af99ca315"
        },
        "item": {
          "id": "e480cab3-ff32-40a9-a366-b9de290b9dcd",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0e45d7bb-18d8-44c0-8181-b23d2a7dc734",
          "status": "Created",
          "code": 201,
          "responseTime": 37,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "725f1218-b460-4745-9f24-4e085ac48aaf",
        "cursor": {
          "ref": "06fa1b3f-43ef-492b-a0a4-3f28f8846fe3",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "14128b76-9596-4b5d-9851-02da395023db"
        },
        "item": {
          "id": "725f1218-b460-4745-9f24-4e085ac48aaf",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9a269374-6ef7-4505-a270-083467c884fd",
          "status": "Created",
          "code": 201,
          "responseTime": 33,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c639a2b2-ae26-4eab-8be2-218e2d95dc2c",
        "cursor": {
          "ref": "905a341c-2c15-44d1-bb41-9a70c74fb35e",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "90ad8481-e244-423c-8d7a-9fade128ee05"
        },
        "item": {
          "id": "c639a2b2-ae26-4eab-8be2-218e2d95dc2c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0d5d88e2-ead5-4398-8267-00739cf00afc",
          "status": "Created",
          "code": 201,
          "responseTime": 37,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "364f6f69-0959-43c1-bb5a-bff30f7cd77c",
        "cursor": {
          "ref": "6de72574-01a3-4492-83b1-e65ede219763",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "91d61f8d-314b-40cb-8e71-01c7da632946"
        },
        "item": {
          "id": "364f6f69-0959-43c1-bb5a-bff30f7cd77c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "93289e6b-696e-466c-aa86-28b2dc20531b",
          "status": "Created",
          "code": 201,
          "responseTime": 34,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66bc9f2e-44a8-44ca-a4c4-a50934e96cf4",
        "cursor": {
          "ref": "a16f6224-dff7-4584-b111-47b8d55b5470",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "65e819fe-06c7-4827-aaf8-49780f38f303"
        },
        "item": {
          "id": "66bc9f2e-44a8-44ca-a4c4-a50934e96cf4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "76513d52-c8ce-44be-9978-dc8fcd8ad2c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9446cb-0ed4-4501-9dad-7d93753adca8",
        "cursor": {
          "ref": "d9dcc210-4791-4f5a-a967-de300f5ce127",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "930d6975-e1f5-493a-b0c3-afb4e6f8ccbb"
        },
        "item": {
          "id": "bf9446cb-0ed4-4501-9dad-7d93753adca8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "98fb4f3e-0096-4dff-bfeb-feb618d0d6f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "799f8e0a-5f38-433e-a44b-656e68f61ec8",
        "cursor": {
          "ref": "a6146d8f-e21c-48f7-844c-e55fb5be2fdb",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1a13a781-f483-405a-abd7-13c976212d1a"
        },
        "item": {
          "id": "799f8e0a-5f38-433e-a44b-656e68f61ec8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6f0be5fe-b55e-4c60-b649-f471aec2e201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6718c9-69b6-459e-ac59-f5161d86f46f",
        "cursor": {
          "ref": "ed15e44d-71c1-4f0b-8165-5ed95d638c8f",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5907eee3-f357-4a2b-b6ca-7f7b7226e19b"
        },
        "item": {
          "id": "1b6718c9-69b6-459e-ac59-f5161d86f46f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "44e1df03-934c-48c0-8249-fa3e96092313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5333051e-3ae2-4ccf-9f51-e97a9a7f8ffc",
        "cursor": {
          "ref": "e8f41538-26ed-4110-b89c-d6e7fbba344b",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "99c9a0ec-b4e0-4389-a2f4-f1353d0e6a7e"
        },
        "item": {
          "id": "5333051e-3ae2-4ccf-9f51-e97a9a7f8ffc",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3b1dfea3-4f43-4b25-8a17-f71e79c2bb41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a611e944-47c1-4e49-a9ad-996b25d1c1a9",
        "cursor": {
          "ref": "b0bdd6d9-65e3-4503-be3d-a7ac2c76044f",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "89b35f5e-4787-499b-b5ea-954d9956ff50"
        },
        "item": {
          "id": "a611e944-47c1-4e49-a9ad-996b25d1c1a9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "25c4e001-d094-4874-81ef-540f24beedc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d7548c-98f6-416f-906b-dbdb2b6c1fd7",
        "cursor": {
          "ref": "1596c4ae-1841-4077-94f4-727f887335c2",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "7670d60a-a703-483b-844a-9bab976414ba"
        },
        "item": {
          "id": "11d7548c-98f6-416f-906b-dbdb2b6c1fd7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "bbf0f423-fc28-4e0c-bf72-13ab0a939b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d02585-3d3d-4279-be21-3d2fd644305f",
        "cursor": {
          "ref": "9068decc-806f-423f-82b4-7d508b3cf3fa",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "dca89fd6-835c-41f9-96f0-45e9efe7d21f"
        },
        "item": {
          "id": "c8d02585-3d3d-4279-be21-3d2fd644305f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f77fd66f-fa74-40d2-b7e2-50aa7c403cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475eded8-052b-4a58-8ace-7b55d2069ff9",
        "cursor": {
          "ref": "50f49cd4-bd74-4475-8965-8f6f9eab9c57",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a0d53d59-4032-4718-b0d4-a9f5a78496a7"
        },
        "item": {
          "id": "475eded8-052b-4a58-8ace-7b55d2069ff9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b2f2d41e-8969-4059-91c9-485c408abbbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9bc98d2-ce19-4cee-aebc-19727b39d2fb",
        "cursor": {
          "ref": "3f2772f8-0bf3-4d04-a183-b89955f4af18",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c8afc5b2-ed97-4957-886c-b09f5c1fbd6d"
        },
        "item": {
          "id": "f9bc98d2-ce19-4cee-aebc-19727b39d2fb",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "725c637d-b99a-40e7-a88c-cbbede4fc9db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f73ee98-8a58-4b4b-8a60-67098a36df95",
        "cursor": {
          "ref": "a5ddf29f-972f-47f9-8eeb-9aa17703281f",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "80773a57-291a-49ef-bc4d-771a356a09fe"
        },
        "item": {
          "id": "1f73ee98-8a58-4b4b-8a60-67098a36df95",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "05a690da-8dfe-47c6-aed9-46e3cfcb68ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58fc607f-179e-4033-b56c-363903c32515",
        "cursor": {
          "ref": "af58e602-ad0a-4121-8a4a-618a304f01c4",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a0a885fd-4c23-4992-991e-0afe91c32501"
        },
        "item": {
          "id": "58fc607f-179e-4033-b56c-363903c32515",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "87f92eee-9954-4092-bde5-87dc89358fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75dcef3c-6197-44b9-a81d-ecdeb6f336c6",
        "cursor": {
          "ref": "83ec993d-172f-4702-bc4e-14fad77e923e",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "be426a9b-a649-4194-8a14-05a81ddfd90c"
        },
        "item": {
          "id": "75dcef3c-6197-44b9-a81d-ecdeb6f336c6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "dc5082e7-66b0-4b28-b85e-ab4a9db1a7d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa718edc-c8ee-442c-8256-a0d266fe570e",
        "cursor": {
          "ref": "66fdf62a-8928-421e-903a-fb55944a8581",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e836c57e-b1d8-4673-acea-b7717c61254a"
        },
        "item": {
          "id": "fa718edc-c8ee-442c-8256-a0d266fe570e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e89c9caa-c1b6-4b71-b537-c81ca4560174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8312334c-454d-44ae-aeb2-a3c5672dd84d",
        "cursor": {
          "ref": "b69d0945-5374-4995-80bd-709378720243",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ec16f7dd-1b46-4ae6-bb24-b227f302852b"
        },
        "item": {
          "id": "8312334c-454d-44ae-aeb2-a3c5672dd84d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "225aced8-b431-44ec-bad0-7301be53953e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "715e2f7d-08e6-42d1-9266-d9c02a32ef28",
        "cursor": {
          "ref": "2c312205-d5cd-4ada-a7fd-8f6069b80c17",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "379da5ea-e991-4f3c-b752-c4eb47e6a819"
        },
        "item": {
          "id": "715e2f7d-08e6-42d1-9266-d9c02a32ef28",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "bab3a140-39b2-46db-ad7c-d7d2df0c9b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20ef1b8-698e-4bd7-8dd5-f1dd0e7124c3",
        "cursor": {
          "ref": "37922443-2bb7-43cf-b7ae-afa0d85fe76a",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1c1f52f4-e9da-4441-bf88-cc3d63568a12"
        },
        "item": {
          "id": "f20ef1b8-698e-4bd7-8dd5-f1dd0e7124c3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a92d06f5-acb5-4b46-9005-bea86589dc3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e114f9ae-0712-44be-b3b2-05059c116743",
        "cursor": {
          "ref": "0340616c-4bc2-4cd1-a669-119ecbd042bc",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "85818d3a-48a1-4fe3-9c14-8d29910630df"
        },
        "item": {
          "id": "e114f9ae-0712-44be-b3b2-05059c116743",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "875413cb-0dae-4d01-9e56-16cc0a0c989f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b61579b8-7907-4bb7-a287-c08a3fd96ca2",
        "cursor": {
          "ref": "5892162f-50a8-4b39-8402-8c7d07b313ac",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ecb3addf-1424-4182-ab19-774a8238f846"
        },
        "item": {
          "id": "b61579b8-7907-4bb7-a287-c08a3fd96ca2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2206686b-4d69-401c-9254-8a984a6e727d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8938d551-05a4-4fb8-a2f1-65cee3a81c54",
        "cursor": {
          "ref": "e8c75331-1ea5-4713-b988-b47edcd54f38",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "04e47cb6-404f-44a7-9d68-9fd6f6e18e98"
        },
        "item": {
          "id": "8938d551-05a4-4fb8-a2f1-65cee3a81c54",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "cd3e3fa1-a054-4f0f-91cf-e200b82b0b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2e87b5-7228-4eee-b806-217f75c598c1",
        "cursor": {
          "ref": "713e679d-4996-4feb-b458-9e44da9f5c2f",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "930a295c-b5ff-41fe-aeb0-e6600e7943bf"
        },
        "item": {
          "id": "3e2e87b5-7228-4eee-b806-217f75c598c1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c168d2f7-9098-4635-b045-404e4f1b6290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86bb606d-214f-4c28-8e94-e75d11ed659b",
        "cursor": {
          "ref": "71d7fd64-755e-407a-80a7-9211d026059f",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ef6704a4-9d1b-4cd9-b874-fc1794f06f95"
        },
        "item": {
          "id": "86bb606d-214f-4c28-8e94-e75d11ed659b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8599c699-9856-4034-9dec-b708be4014d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03db2c1e-e972-463b-bb87-fb3f4f8e36ac",
        "cursor": {
          "ref": "3d3805ad-367c-4c2f-acd4-5490638cb438",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5dbf8d85-5e8a-42cb-b0f0-5d6f7e000051"
        },
        "item": {
          "id": "03db2c1e-e972-463b-bb87-fb3f4f8e36ac",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8f05d45a-5045-43b5-bc24-669e74b06598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6662fede-89e4-478c-9b61-78f687c7bb31",
        "cursor": {
          "ref": "2bb3fe94-f1a1-4ff8-9b47-bf5d6020577f",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "fa483714-69b0-4196-b3f6-a5631c152b44"
        },
        "item": {
          "id": "6662fede-89e4-478c-9b61-78f687c7bb31",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "dcbfde43-b395-4528-b486-048c1ea495af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa4d1b21-9f51-4716-8b32-c952861b6e60",
        "cursor": {
          "ref": "f9fb7f4d-2ae7-462f-91b0-29e96e07e01e",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1e581410-9afc-4169-b4fa-7ac992a37847"
        },
        "item": {
          "id": "fa4d1b21-9f51-4716-8b32-c952861b6e60",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4f532e84-1b60-474b-a814-4a8453dea47a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f48be60-5a46-48f6-afe5-849428980db3",
        "cursor": {
          "ref": "ce197036-b3ed-4fc1-a672-a517ad627a50",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ac2132fc-d7af-476e-8b33-6c536206ab54"
        },
        "item": {
          "id": "6f48be60-5a46-48f6-afe5-849428980db3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5eda20e1-c966-441f-aedd-e9579e0ef166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a59188d-4d7a-48dc-bc89-c0836599a493",
        "cursor": {
          "ref": "60b1cb38-f357-42c8-b6f5-311138683087",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1c3eebb0-b6d3-4eb3-8c8b-ef1864947300"
        },
        "item": {
          "id": "8a59188d-4d7a-48dc-bc89-c0836599a493",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e9f6b0d3-4685-42a9-be88-45c3c1551696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f3e0f01-abfd-4b05-9cd1-3bf091f89aa3",
        "cursor": {
          "ref": "ec390b7b-8c28-4086-808a-5705bebeb923",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "28ad3eeb-9626-414b-833e-bd65ba67ed37"
        },
        "item": {
          "id": "5f3e0f01-abfd-4b05-9cd1-3bf091f89aa3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c9317b60-9ad6-4deb-bf74-2876b62bfe72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f877fb0-55b2-4364-b089-1d1d0c428ff3",
        "cursor": {
          "ref": "927f6985-b08d-4034-8244-184a30625e3b",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "888c44e8-3332-4367-ba35-dc5b0ae0c587"
        },
        "item": {
          "id": "1f877fb0-55b2-4364-b089-1d1d0c428ff3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6ddb13e0-fd3f-48a5-9007-7e258df8f6a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc06004-5999-4c9e-b369-6b8159e22a30",
        "cursor": {
          "ref": "1ac21079-4762-4cc3-88aa-660b71747be2",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6e68ee53-3445-426d-aa75-9a83e5570977"
        },
        "item": {
          "id": "ddc06004-5999-4c9e-b369-6b8159e22a30",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b1dd058b-7e9b-4817-9a6c-d46d31116053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd593978-36de-4b80-8c8b-ffc22c62eb18",
        "cursor": {
          "ref": "18632d0a-13db-4418-92f2-5ae872e2ac5b",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6de29510-a36e-4448-bf01-78ce39f137ab"
        },
        "item": {
          "id": "bd593978-36de-4b80-8c8b-ffc22c62eb18",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0e6c5985-bca3-4b71-b5d0-920f8774cd9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61913fee-e9c9-4c0a-92c7-ec87ea2d6532",
        "cursor": {
          "ref": "2147f765-80fe-423d-9079-6b3506badf1e",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ede6d874-a908-42ae-b31a-7b704cff16ba"
        },
        "item": {
          "id": "61913fee-e9c9-4c0a-92c7-ec87ea2d6532",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d758555e-b46d-4d17-8c56-99e46c51c47a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a051f2-69bd-44d5-aead-29a471d0e102",
        "cursor": {
          "ref": "cb739615-d95b-46bd-b521-ba743d73fc3a",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "543fb923-c3d6-4ad5-a507-83de7efa53c4"
        },
        "item": {
          "id": "39a051f2-69bd-44d5-aead-29a471d0e102",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9187fda9-3638-4681-855f-dafaf3595a5a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e66ed0-488b-4181-bf50-aac88df5c747",
        "cursor": {
          "ref": "532f7bdd-d3bb-45ef-9485-8087355edb87",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "83398fa0-d445-48e4-a709-52286d2300d6"
        },
        "item": {
          "id": "48e66ed0-488b-4181-bf50-aac88df5c747",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6d60f869-afa4-47e0-9bb6-2d942f51ae78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b9b211-2d33-4adb-a641-a9b81c225037",
        "cursor": {
          "ref": "760ada2c-e049-4a51-97e6-82de55a55e50",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "867472a6-9975-48c7-a26d-5b3ffe7c78fb"
        },
        "item": {
          "id": "60b9b211-2d33-4adb-a641-a9b81c225037",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "89feacb6-6aad-49ff-8599-592944dee341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3832c9df-da35-4447-98e7-1abfa3de3feb",
        "cursor": {
          "ref": "4292a0cc-a80d-4fd0-a66e-f59e181b92ef",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "484e1dd3-4684-4ada-9c38-9498a8ec96ea"
        },
        "item": {
          "id": "3832c9df-da35-4447-98e7-1abfa3de3feb",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ddfe6151-cba8-4d86-8db7-3e7ffdee4ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "155e43c7-4c42-4455-ab13-8d079f38fcf7",
        "cursor": {
          "ref": "6efb70ba-631c-4445-8cdc-7f0e49449fb7",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7473f699-604d-46e4-ae0a-0b199c73c171"
        },
        "item": {
          "id": "155e43c7-4c42-4455-ab13-8d079f38fcf7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "887aff98-2fce-4817-b4c0-25e001c18bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3ff5da-e785-4aa3-b296-5fc9121c2cde",
        "cursor": {
          "ref": "e260fb05-f586-4237-9dd0-3d50535d3288",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5f7ccdf5-5313-4704-ad68-21e4561c4f4f"
        },
        "item": {
          "id": "ae3ff5da-e785-4aa3-b296-5fc9121c2cde",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9d8d1ff2-fa96-48e3-b945-427665dfd10c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4842dce-7fdf-4624-8ee0-689e1b3f7a9b",
        "cursor": {
          "ref": "03821fd8-86c5-43e7-a6d4-4aa5fcbf8189",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "cdc4ae19-2046-4b5a-97c7-933a35d5219a"
        },
        "item": {
          "id": "f4842dce-7fdf-4624-8ee0-689e1b3f7a9b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f3e9d65c-ef52-41a4-afc8-0fb4e4bde061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b0266f8-7494-4340-9b06-3d9553297da2",
        "cursor": {
          "ref": "8b244c8b-4dff-48bf-8bb4-a0486cb0c4c1",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "dc933236-e6a0-4d07-9bec-2f05b0fec10b"
        },
        "item": {
          "id": "7b0266f8-7494-4340-9b06-3d9553297da2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c87e8504-bfc2-4978-ba39-1e783f4d80cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54c745e-786b-4b9e-b7ab-fc8ae8c7c4e9",
        "cursor": {
          "ref": "9972219e-6005-416b-8532-e4efc3ca888e",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2efffa60-1007-455c-8771-1a3d34b43a23"
        },
        "item": {
          "id": "c54c745e-786b-4b9e-b7ab-fc8ae8c7c4e9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e61220c2-6b0b-468d-8bc9-47f4d5ab4590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5123e58-031f-4daa-8e5d-aa20ba5620b1",
        "cursor": {
          "ref": "b5661de4-acf8-4b95-84e1-50e0fb5eca29",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7ace5263-28b6-4da9-b565-8c22fb13c092"
        },
        "item": {
          "id": "c5123e58-031f-4daa-8e5d-aa20ba5620b1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "17a30c70-1249-4246-aa1a-9f2f0ca342a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba37daa9-0ac9-4bc9-9152-591c46501ebf",
        "cursor": {
          "ref": "51c1b361-de72-4102-b6c1-a162371b6372",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "3515938d-5495-4715-880f-a6c77481a73e"
        },
        "item": {
          "id": "ba37daa9-0ac9-4bc9-9152-591c46501ebf",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "375bee32-08bd-48c5-b0fe-8d469d7e416c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efbaa4d1-024b-4260-bf8b-088e20bd2fb7",
        "cursor": {
          "ref": "9a757676-903b-478e-924d-62fe9ca56f48",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f8e51b29-2981-4ded-9248-abc5a5023993"
        },
        "item": {
          "id": "efbaa4d1-024b-4260-bf8b-088e20bd2fb7",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6095e568-5ee8-447d-a96c-abab48a22ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370a84d4-9cb0-43ec-aca9-31c1fb13649b",
        "cursor": {
          "ref": "2371725f-d8b9-4415-9aee-2a5418264be9",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8a823ebd-4b92-4f39-843e-41999ac9f453"
        },
        "item": {
          "id": "370a84d4-9cb0-43ec-aca9-31c1fb13649b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "77326cd7-4345-4dfe-9044-d652650707a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "874e74b9-7af3-42db-b37a-9c156aa009f1",
        "cursor": {
          "ref": "a873a702-fa01-4562-8120-414f8067bcff",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "fa6714bc-744f-46a1-a234-55ab35b58693"
        },
        "item": {
          "id": "874e74b9-7af3-42db-b37a-9c156aa009f1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7a4bdb50-c8c5-42dd-be3c-d027a2092681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef78a1a-1d06-446c-af43-3a607338778c",
        "cursor": {
          "ref": "d972bff3-c747-496a-bb1a-fb524ad235a1",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "aeec8501-d992-4da5-9692-7b8a1059db9a"
        },
        "item": {
          "id": "fef78a1a-1d06-446c-af43-3a607338778c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "16f878dd-1563-4512-a9c7-ee7f8f570b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88ed585-db07-4e79-9624-9dc4f348f7ce",
        "cursor": {
          "ref": "c08914cc-1aad-4f3d-ad9e-73bdbec6bf92",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "cdecf3dd-a080-4d8d-920f-b8a39a2028fb"
        },
        "item": {
          "id": "d88ed585-db07-4e79-9624-9dc4f348f7ce",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "677b9df5-8aa4-4dd7-a179-c68de2b1d3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e79b3470-7f98-469c-920c-cbbaf29967d0",
        "cursor": {
          "ref": "32a58886-f69d-42e3-861a-46732bf42371",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "7d86d81a-15d5-42a9-8bf2-e5c89135b8be"
        },
        "item": {
          "id": "e79b3470-7f98-469c-920c-cbbaf29967d0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "617dcdbb-030e-4b92-9943-38277eafa095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec01d48-7e2c-4751-ad82-8985bd800dd7",
        "cursor": {
          "ref": "93cc6600-1d63-420c-b499-487e36263a7c",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "44a86945-0b0a-48fb-b6ba-468e5c8a345e"
        },
        "item": {
          "id": "8ec01d48-7e2c-4751-ad82-8985bd800dd7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b40f89f1-e693-4a05-8677-c08f4f1c1aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a839c84f-8e07-475d-b82d-74b4dddcbd50",
        "cursor": {
          "ref": "7df92930-51c6-4c20-b3c5-a7fb75502420",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e1c4d78d-b460-4942-802a-991c05f5f559"
        },
        "item": {
          "id": "a839c84f-8e07-475d-b82d-74b4dddcbd50",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "261f230f-218d-4a10-8ec1-46ad43b239da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bdbec8a-c94e-4ba3-b8bd-edd4b8547a9a",
        "cursor": {
          "ref": "56a8d269-e2a4-49c9-8761-5b4c0b0604c8",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7c7353de-9370-4e24-bf1f-0a24f50b4d79"
        },
        "item": {
          "id": "5bdbec8a-c94e-4ba3-b8bd-edd4b8547a9a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7cba5eb7-eb72-4704-a051-9d6581a17379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65cc0be5-2d57-40af-9930-bab32cdfc021",
        "cursor": {
          "ref": "f786f08e-c3a1-41af-b6b4-bb73dae1a16e",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "211ecb6d-68a3-4ab0-a765-773466d2c320"
        },
        "item": {
          "id": "65cc0be5-2d57-40af-9930-bab32cdfc021",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e7a6197a-2b7c-4d9c-8397-90608e0cefaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb79e40d-1f8f-4873-bf02-52d4cabeacbb",
        "cursor": {
          "ref": "b42c2501-8a13-486b-9693-2e482c21b7a4",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "6c658627-41e5-486e-8efe-23b47880339c"
        },
        "item": {
          "id": "cb79e40d-1f8f-4873-bf02-52d4cabeacbb",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "29296e27-4de3-4aad-9df0-fa710812d578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7a5885-ffe4-4d84-a0b7-33cdd32d6a27",
        "cursor": {
          "ref": "3f8846fd-b74b-48de-a6f3-a9851441ae56",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7df548a7-3e32-4627-a206-a90f153bcf90"
        },
        "item": {
          "id": "0e7a5885-ffe4-4d84-a0b7-33cdd32d6a27",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "13b36ecd-00fb-4015-9b4b-5086f1464c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae948a8-f49b-4a64-ac48-75bb19cd13c5",
        "cursor": {
          "ref": "93a46203-e130-4c8c-a46e-057492c80640",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c7cadccc-eb78-4246-afd1-fe453e686eb6"
        },
        "item": {
          "id": "2ae948a8-f49b-4a64-ac48-75bb19cd13c5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e0b81527-37b8-4dcf-a3b6-72b56aebbf51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c62895-5230-4eb0-a153-af142b664fcb",
        "cursor": {
          "ref": "346ce1d9-954c-4e07-b9a4-d4be2413c7b2",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e41974c1-8226-4a0a-8ccb-e4f3648523fb"
        },
        "item": {
          "id": "b2c62895-5230-4eb0-a153-af142b664fcb",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "62338d1e-4938-4917-b1a2-76519728e475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d103972-b48a-4782-bb18-ea9c33fa4fdb",
        "cursor": {
          "ref": "34cab948-3269-45fe-b4a6-e6793373c649",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "29e07272-cfef-4016-a044-94a2e453fd6f"
        },
        "item": {
          "id": "3d103972-b48a-4782-bb18-ea9c33fa4fdb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "101c4d62-7b11-4df4-aaed-6f699fe08e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe1b4d3-c362-471e-8304-5224b6fa5a1c",
        "cursor": {
          "ref": "01564b5c-7035-4771-aac2-b35873903abc",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d0868d28-4564-4bac-95b0-da5183326b07"
        },
        "item": {
          "id": "ebe1b4d3-c362-471e-8304-5224b6fa5a1c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2dbd8839-a0fc-41f6-acb7-c75f46b39b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06956cbc-4272-482d-bc10-c56677e01f00",
        "cursor": {
          "ref": "4a70d60a-ae32-4d3a-a9ad-0bfeb0602833",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e8a9d68a-23b4-4ca8-943c-b6346eff017e"
        },
        "item": {
          "id": "06956cbc-4272-482d-bc10-c56677e01f00",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7ef0ba92-2384-4f6d-ad82-8c17405706c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54cc7222-6517-4306-b60b-ab71ad04f2dc",
        "cursor": {
          "ref": "edcc125e-826f-40ac-af51-1f6c88658e31",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b3fdf233-3206-4eae-b0e8-fca69a744733"
        },
        "item": {
          "id": "54cc7222-6517-4306-b60b-ab71ad04f2dc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "527fb527-59ca-4545-a29d-523d100e7f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b96af1f-559d-4cca-b99a-2361baa52ec7",
        "cursor": {
          "ref": "13ee6371-90c6-494e-8c41-3c1c1ee231c0",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "104f0f8b-0089-4345-b8b2-9b1018d0719c"
        },
        "item": {
          "id": "6b96af1f-559d-4cca-b99a-2361baa52ec7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a1d86bbf-7169-48c0-904d-63563ee89d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09bec786-c3b5-4170-92c7-a71e100eb132",
        "cursor": {
          "ref": "6b979af8-476f-4843-9ef7-7386be9208a3",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "9c7b7c10-3484-428e-8ce3-3ce7f75098a1"
        },
        "item": {
          "id": "09bec786-c3b5-4170-92c7-a71e100eb132",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "82301d2a-834e-417a-ab15-0bf769eff817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23c4578-a49e-428a-a5d0-1bf2f2a84c84",
        "cursor": {
          "ref": "d02fa13e-4c68-4d63-82e5-aff953f71aa8",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a7050f46-f830-47c4-be1b-9fd4510fb98e"
        },
        "item": {
          "id": "a23c4578-a49e-428a-a5d0-1bf2f2a84c84",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "037e486f-8663-4261-ab69-d033b1b04287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c7bc7e-b5c6-42f3-bb71-a4f9f212ef84",
        "cursor": {
          "ref": "763d135e-b38b-47dc-a020-e50aeab1929c",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b80a7f1d-6343-4c81-8eb6-c18535e4201e"
        },
        "item": {
          "id": "43c7bc7e-b5c6-42f3-bb71-a4f9f212ef84",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b3a2b618-e019-4dce-8f34-daf88970d25b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f018390-1599-4369-a81d-f4044c2a7c22",
        "cursor": {
          "ref": "b098b367-c2e9-4122-9398-159521b6f953",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "db9001b3-09cb-401e-b793-60c271faa460"
        },
        "item": {
          "id": "8f018390-1599-4369-a81d-f4044c2a7c22",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "10088a13-de28-486d-b0cb-6b2d81790c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6745196-550f-40d0-9247-71feb69b281b",
        "cursor": {
          "ref": "f454d030-cab5-41b9-afa7-a1f737af2811",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ce1b8246-620a-4c68-b955-b5889f8f9ccf"
        },
        "item": {
          "id": "a6745196-550f-40d0-9247-71feb69b281b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "503b9b16-a2b3-4a51-aaae-2abf1da63d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c683be9-2fa8-4c6f-806e-bd8018c6d3a2",
        "cursor": {
          "ref": "b4619587-3c3b-4e18-a4b1-63f5b13284ea",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d9b621a4-4ed5-4419-a2e9-fb18aa2096b2"
        },
        "item": {
          "id": "4c683be9-2fa8-4c6f-806e-bd8018c6d3a2",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "2381a78b-cdd8-422f-a087-788c1f738dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4a730b-67f8-4366-aaf1-20d0972bdd3d",
        "cursor": {
          "ref": "9df59eaa-64ab-4313-b038-d28e2763a5e0",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "22655652-7356-4a7f-b045-8a4cdb7bcf97"
        },
        "item": {
          "id": "0e4a730b-67f8-4366-aaf1-20d0972bdd3d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "a0f2d1f9-58f7-4b08-8e8b-2ea3057fce0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a334f062-6aba-4fa8-952c-83892a4662e2",
        "cursor": {
          "ref": "8e5f959c-dfd0-4556-b446-aedf2ee58c7c",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "308bf620-3b11-49df-80ca-fa80a4f0f76c"
        },
        "item": {
          "id": "a334f062-6aba-4fa8-952c-83892a4662e2",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8343e7ed-0dff-4266-bcae-ea6f2902fad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa345c8-52eb-4038-b241-e5c5d0abddbe",
        "cursor": {
          "ref": "a4198435-742a-4dd6-b41d-fe68dbfbad8c",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7f41f57d-72ec-457f-a60f-6c3a4865e412"
        },
        "item": {
          "id": "afa345c8-52eb-4038-b241-e5c5d0abddbe",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f4229d2d-0a62-4c6c-a2a6-dafe5a1cb874",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52fd37ea-77b5-4031-b0f7-ff81a2fc503e",
        "cursor": {
          "ref": "2a9b7aa4-4410-4e4f-9811-777367ecc9df",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "74b4c298-9a5d-4c7b-9b79-6927c45053cb"
        },
        "item": {
          "id": "52fd37ea-77b5-4031-b0f7-ff81a2fc503e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b372e6a1-1293-40c8-8f8d-5c4981451a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a222a3a-3afd-497f-ad95-579f04cae21b",
        "cursor": {
          "ref": "694826ba-1912-4066-a250-a5ed82567304",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b6cc47ba-c723-4d16-84d1-3a018a0f7f46"
        },
        "item": {
          "id": "7a222a3a-3afd-497f-ad95-579f04cae21b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a8091fd8-e473-4298-ab71-fcc0edac0e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb5c074-d5fa-4d42-b0b3-c4958420cedf",
        "cursor": {
          "ref": "07f8ccfe-eba1-4cee-bfbb-5eb8009343ed",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "50754ac2-918d-4fda-8ac7-f413a6fe8027"
        },
        "item": {
          "id": "8eb5c074-d5fa-4d42-b0b3-c4958420cedf",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a3c11b76-0165-40fb-9c8e-b40a43c0b3df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6127f7a-a15f-4d9e-ba4d-60f0ecdb9486",
        "cursor": {
          "ref": "553feeea-ff46-48b0-9d1e-2c7671a06110",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7832ad12-c457-4086-918a-3ba80d13ffb9"
        },
        "item": {
          "id": "f6127f7a-a15f-4d9e-ba4d-60f0ecdb9486",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "273c2e26-54e5-4401-a7f2-7268508c0464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ffeffc-6d80-4409-916f-bd8a90a231a4",
        "cursor": {
          "ref": "96f5efde-b47c-4764-9dc0-7527716028b3",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "6551ca61-fb18-4667-8ee4-b16df82a4ce1"
        },
        "item": {
          "id": "18ffeffc-6d80-4409-916f-bd8a90a231a4",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f0788541-02c1-4379-ab34-68d835672680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7e23cb-c24f-45c5-bf20-17ad46988e3b",
        "cursor": {
          "ref": "67c72e20-571a-46a4-8a1c-c305c6cd36a1",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e3f91928-6d34-4aeb-ac96-6f7cfe04ad0a"
        },
        "item": {
          "id": "7c7e23cb-c24f-45c5-bf20-17ad46988e3b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "249a5934-2594-4d1e-8e1d-d4574d4b7d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1abef2-a048-4d86-bb0f-743ea126aa38",
        "cursor": {
          "ref": "7eb1336a-c433-4d66-9984-9ab25d4b7ba5",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "74710b8e-844a-4762-b566-6990acbbd6da"
        },
        "item": {
          "id": "ee1abef2-a048-4d86-bb0f-743ea126aa38",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "83260c18-d985-4307-9d5c-163e555f8d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a0f079-321c-439d-8107-7a8173b794e4",
        "cursor": {
          "ref": "19f48a07-8304-4ba2-88ab-98f2ec7181fd",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "be13df6b-5b2f-455d-b1b3-653628f5acd3"
        },
        "item": {
          "id": "e8a0f079-321c-439d-8107-7a8173b794e4",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "31b29dcc-15b1-465d-8af8-b9171af18442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5136517b-de1f-436f-bbe6-f44049778127",
        "cursor": {
          "ref": "9df70490-baf4-4ffb-8ce5-d7d512e4cbdf",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "df74d198-11cf-4bd1-a47b-f7b38fb13a1a"
        },
        "item": {
          "id": "5136517b-de1f-436f-bbe6-f44049778127",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "43bb6f8a-6238-4292-8f83-8b8e92162a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e04aa5-59f2-4af8-ac9f-3a670d1cb2d7",
        "cursor": {
          "ref": "ae209674-23ea-47ed-9c95-4b2112aff6bd",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "dca492a7-cfa1-4b1b-8590-06919a6c6bda"
        },
        "item": {
          "id": "84e04aa5-59f2-4af8-ac9f-3a670d1cb2d7",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7b7d510e-b35a-4b39-9678-9c5e32c6b824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961afa82-4de9-4dd6-9916-42ce53bd4b0c",
        "cursor": {
          "ref": "2039fb71-786a-4821-bb8b-f0987f8ddf75",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "33cfc970-1b04-49f3-b4a4-a18f0c0e8459"
        },
        "item": {
          "id": "961afa82-4de9-4dd6-9916-42ce53bd4b0c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6de20acf-08fa-45e1-b720-a601bbffb074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a22a87-2c79-4099-9b24-4d8906b31cad",
        "cursor": {
          "ref": "0f71b081-feb7-4639-b042-aa377905671b",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c6bbb42d-868e-4fa7-9199-62852f4d1a8c"
        },
        "item": {
          "id": "08a22a87-2c79-4099-9b24-4d8906b31cad",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9fdbf287-4823-49c5-81a7-837f724c0fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c31157c6-6d91-42da-a458-d487170c2f8b",
        "cursor": {
          "ref": "2921751b-b622-4217-b344-bb5f6c83221a",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "43c2a0d2-43d6-4c73-a6fc-bdfa82b3bad4"
        },
        "item": {
          "id": "c31157c6-6d91-42da-a458-d487170c2f8b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "fd6563f5-feb5-467c-91e8-128c2a65217d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6ee680-a9d7-480d-97b5-d8e0562ab525",
        "cursor": {
          "ref": "3c4c6c50-ca93-4b76-8f49-8d4b4c616fee",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a9f47560-e46c-4c34-9843-a0bebed2d24c"
        },
        "item": {
          "id": "af6ee680-a9d7-480d-97b5-d8e0562ab525",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f96e1b6c-2433-4a70-85da-a85e9ecd9350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74bd574-5778-4d4f-810c-d8f8c1efac05",
        "cursor": {
          "ref": "6ec0fd47-c5b5-4261-8105-184da3a1e512",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "2bd993b9-f26e-478f-8be1-d5489be27cc7"
        },
        "item": {
          "id": "c74bd574-5778-4d4f-810c-d8f8c1efac05",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "01287d9f-d2c1-42f9-94fb-ecf1c86d2e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "516edf97-067b-4262-a041-e9ecf6e13340",
        "cursor": {
          "ref": "0db97871-04a4-4778-8599-897329de0d52",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8c06d7e8-72cc-4f42-bf70-ce6c5deb38e2"
        },
        "item": {
          "id": "516edf97-067b-4262-a041-e9ecf6e13340",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "0ae8903b-23e3-411e-8dc5-2b42f44dba67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "766c3de7-3edd-468f-94bd-74d2c2263d8f",
        "cursor": {
          "ref": "b0ae0de9-ed0e-4fc7-a96a-81ed27f15b07",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "82bd06c9-af3d-4a59-bc3c-983c6f09821d"
        },
        "item": {
          "id": "766c3de7-3edd-468f-94bd-74d2c2263d8f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a17c8339-4274-488d-8f0b-cdd802ac883a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc7c289e-5eed-45fa-9e62-33337ab17fa2",
        "cursor": {
          "ref": "99cb2e29-a1aa-454b-b0f4-b411e2223202",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7720f9ef-23a6-4807-b587-0e1511b587e3"
        },
        "item": {
          "id": "bc7c289e-5eed-45fa-9e62-33337ab17fa2",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "117854bc-ae03-4bb7-92a2-c19e32a80b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50deed61-c754-47f9-9871-ab19e863300b",
        "cursor": {
          "ref": "0d9d2a43-f37b-4bfc-b4b4-44723a9e8e7b",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9a5616ff-2ab1-476c-aa3e-6a9edd7e03b1"
        },
        "item": {
          "id": "50deed61-c754-47f9-9871-ab19e863300b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "970c105c-7172-4d70-b0d1-227d0b89dae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "416bf317-6e85-4b91-8c04-4c548d96dc48",
        "cursor": {
          "ref": "bce1ca56-0bb2-4b20-88f5-7365c91ebc4c",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6963b6d0-4533-450d-a8cd-310a74a30e91"
        },
        "item": {
          "id": "416bf317-6e85-4b91-8c04-4c548d96dc48",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7b35e51b-7613-4a8a-97a6-25d8d192ad2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8993fe2-e421-4450-b9f2-d5c45a0a8dd9",
        "cursor": {
          "ref": "6ec348f9-298a-4d02-9e18-1553658f41f6",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "525f161c-4bbf-49c9-b4c8-7036e851df70"
        },
        "item": {
          "id": "f8993fe2-e421-4450-b9f2-d5c45a0a8dd9",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0a506975-8bb7-455f-b331-3a7a414a9d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a9f614-cba6-494b-8b2d-8282838acf16",
        "cursor": {
          "ref": "81ff163f-6515-4419-bebf-94076ef09c3d",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f38478c7-32a0-4ff2-bb9c-db134c670bd2"
        },
        "item": {
          "id": "f2a9f614-cba6-494b-8b2d-8282838acf16",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "aebf7a87-3a69-4b60-9dd8-a2ca6b05edc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43818b46-bf2d-4e4e-8e52-4b9257ccd7d1",
        "cursor": {
          "ref": "8824109b-7c2b-4e2a-8589-57ed090ff18f",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "da379709-2531-4d2d-89d3-2cfa08ddfde1"
        },
        "item": {
          "id": "43818b46-bf2d-4e4e-8e52-4b9257ccd7d1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "81b6e88e-9392-49b9-956f-1a144c08a1af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31bdd57b-f9c2-4139-85fe-89e745352695",
        "cursor": {
          "ref": "6ee2f673-a6b3-4b8f-bfaa-8fc9767f5a29",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "67536861-bd56-4006-8e20-614e3a70c613"
        },
        "item": {
          "id": "31bdd57b-f9c2-4139-85fe-89e745352695",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0878bf01-bd41-42bc-8083-0fd8a8c6ec9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 214,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9cc288a-e834-46db-8e55-8fc4293e9768",
        "cursor": {
          "ref": "38283a95-6367-4b3c-a30d-afc80503ad42",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "3299a087-e900-4c73-a610-79dc325cdfa4"
        },
        "item": {
          "id": "b9cc288a-e834-46db-8e55-8fc4293e9768",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9d8b3c9a-fb51-4c5d-9bcc-25de15af03b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23518fa5-7507-4cb4-a6de-ec5f7fda115d",
        "cursor": {
          "ref": "58bc8c9a-4770-4d52-8c01-b0919abd12de",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9fd43793-cd4d-4ee2-b5b2-8a9c6ceda2b1"
        },
        "item": {
          "id": "23518fa5-7507-4cb4-a6de-ec5f7fda115d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "3693bf8a-a24d-4f96-9633-a548ca9a7308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9952b74a-625e-4f09-92d1-e2457b3a92a3",
        "cursor": {
          "ref": "f70e1d4a-d431-4142-b0fb-7845b689407b",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "4b7744a1-a32a-48b4-81a0-ec58a12c42c3"
        },
        "item": {
          "id": "9952b74a-625e-4f09-92d1-e2457b3a92a3",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e00168ec-32e8-4ae5-9328-116df43a0243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36eb9957-940f-4236-a8ec-4bfe446171cb",
        "cursor": {
          "ref": "5e002203-c727-4246-a683-5a2873c666ff",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ddab25a8-f29f-4a79-ac0e-c44b4e040324"
        },
        "item": {
          "id": "36eb9957-940f-4236-a8ec-4bfe446171cb",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c059b9d0-673f-47d3-9b82-b5faef927944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a62da69c-0257-4709-869c-a00188ed359e",
        "cursor": {
          "ref": "4d0ea3fe-bbcb-4c50-822c-1c51776cd47e",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1ba70f47-7135-4eb8-a313-7f8502719b1d"
        },
        "item": {
          "id": "a62da69c-0257-4709-869c-a00188ed359e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8b92e6f0-d4ff-4174-83f0-a221a7350bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf885b8-5a21-4e39-8c4a-8da8a1ce9263",
        "cursor": {
          "ref": "ac75dcb7-7342-421a-81bf-2819e3ca85e2",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3c6f3855-8950-495a-9a08-872913a72c71"
        },
        "item": {
          "id": "0bf885b8-5a21-4e39-8c4a-8da8a1ce9263",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ce30be5e-e0ca-4c69-948f-eca4b543588e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db94580-4bba-4386-bb97-3e9ed1e6a646",
        "cursor": {
          "ref": "ff062723-7dd0-43b6-861b-599f91a7884c",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a5155d7d-70f5-4dbe-8ab4-db6a344e7796"
        },
        "item": {
          "id": "9db94580-4bba-4386-bb97-3e9ed1e6a646",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "0360a6f5-2da8-48c2-9601-edca2e7b4d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f29d30-b671-4355-a755-6edf5d1f3a26",
        "cursor": {
          "ref": "ea385b1f-659e-4f74-95f1-257f1bcf2323",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "06e5b277-a679-4c3f-ae54-92b7659db833"
        },
        "item": {
          "id": "b0f29d30-b671-4355-a755-6edf5d1f3a26",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8e67fb95-fd95-460a-b6ee-dcf49d9c60af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8d69db-a1f4-426e-994b-499dd9ddc39a",
        "cursor": {
          "ref": "e5306b68-36b5-43b9-9c08-68876e2f013e",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "83082bdd-f097-4b7a-b977-f961ea6fc17b"
        },
        "item": {
          "id": "6b8d69db-a1f4-426e-994b-499dd9ddc39a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d485d23a-380d-4e5d-aa58-cb3373dc7304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe2f126-b60f-4f86-8095-2c57f6a9b337",
        "cursor": {
          "ref": "04a07199-78ea-4ffe-a066-e1fb2018a19f",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "275fd15d-9e2b-490d-afd9-f8bd02643fa4"
        },
        "item": {
          "id": "bfe2f126-b60f-4f86-8095-2c57f6a9b337",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f2834327-31f3-427c-be0d-3c7637ab3260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eddc6873-751a-4592-89e5-16309e0fb076",
        "cursor": {
          "ref": "e4d27a2d-2f48-4a0b-8f46-b8de4a1f7bbe",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f370b166-f9e1-4843-8371-deb7616f3d90"
        },
        "item": {
          "id": "eddc6873-751a-4592-89e5-16309e0fb076",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "49cfa45e-7592-4be9-aa1f-61498d495eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "987b11a0-a2bf-4252-94f9-78c9bc8d829d",
        "cursor": {
          "ref": "342f0142-1043-45c4-9444-182082bb1fee",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e6cb09cf-c718-47b1-b3c4-36f640e74867"
        },
        "item": {
          "id": "987b11a0-a2bf-4252-94f9-78c9bc8d829d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9c03734c-f593-448a-a402-efbb39580cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb0afc85-5740-4177-9e8b-dc782426e876",
        "cursor": {
          "ref": "7d61d2d4-483c-49c4-897f-cb6fe0e8e2a2",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c914d5b9-8b3c-48ba-ab39-d4c2c61bbc12"
        },
        "item": {
          "id": "fb0afc85-5740-4177-9e8b-dc782426e876",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "5252df90-9d72-4f49-8638-cd88b122568d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9194e54-9e36-40d8-8696-4a8cb522a643",
        "cursor": {
          "ref": "95c50d0d-c62a-485c-88bc-3f1ec9b590f1",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0d5cf290-358b-4b3d-b2ff-07988ae83a56"
        },
        "item": {
          "id": "f9194e54-9e36-40d8-8696-4a8cb522a643",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "aaf5ac41-7460-4e31-a3ff-4961f01cf86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122f9a2b-6ead-41e5-9ea4-4ea131d78152",
        "cursor": {
          "ref": "941a73e5-7694-4bb8-9593-c8c9fc9c316b",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b66eb137-3c2e-47b8-876b-add193defec6"
        },
        "item": {
          "id": "122f9a2b-6ead-41e5-9ea4-4ea131d78152",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "197deda1-9320-432f-8fe9-c8fcd7a62269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd83721-4401-4be3-b6c2-f0607ea97f87",
        "cursor": {
          "ref": "b0e70aed-7eb8-4042-9d87-1132b69660a7",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7b4491dc-df06-489b-85d5-2b4b7c4fe92b"
        },
        "item": {
          "id": "edd83721-4401-4be3-b6c2-f0607ea97f87",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4f9904ed-6da4-4120-85a5-327d10d735a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d21cdfb-c63b-4ff7-80c6-9a89064b305f",
        "cursor": {
          "ref": "e2de4d61-e8dd-4a0c-b803-786dfe8b77f5",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c0e3ff53-6276-446a-9298-2d86a454fffc"
        },
        "item": {
          "id": "2d21cdfb-c63b-4ff7-80c6-9a89064b305f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "da09b637-400e-4f2d-8dd5-190340d446e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104e1e16-3887-416d-abae-bfaaa0bb6a66",
        "cursor": {
          "ref": "7571c86c-d017-4716-a7bc-3f04effe55b2",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a0755902-2cae-49c8-9390-7dbb002084de"
        },
        "item": {
          "id": "104e1e16-3887-416d-abae-bfaaa0bb6a66",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a358f61e-7df0-4ad9-8e2e-1df0cbe271d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc616e8-0aeb-4d4d-8353-747f0e2270da",
        "cursor": {
          "ref": "42647c51-10d1-4172-b1c4-c10d5583896e",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "76d12638-ca68-47f9-8fa9-5127ee88f855"
        },
        "item": {
          "id": "2fc616e8-0aeb-4d4d-8353-747f0e2270da",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b86a07bf-607f-4380-a8df-25facbe24c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015ba5ba-ecb5-4129-ade8-d89015c42245",
        "cursor": {
          "ref": "d224c70f-9247-4325-9305-ca9bc3971f53",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ee5d44c3-b4e9-4205-8c01-b9ea9c62bbb0"
        },
        "item": {
          "id": "015ba5ba-ecb5-4129-ade8-d89015c42245",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c1b72487-9efb-4c11-a029-dae74f075c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b02ddfe3-b7d1-471e-9f48-21d3d6dd53e0",
        "cursor": {
          "ref": "f6c153aa-e7c8-4994-9dbf-89037497b65a",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "63ecf291-df23-4826-a18e-cdeb0734eb3e"
        },
        "item": {
          "id": "b02ddfe3-b7d1-471e-9f48-21d3d6dd53e0",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c5634410-2cd6-48b6-8f2d-cbcd394c0db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f641f5-21a8-4ef8-9550-59ba90fc9d40",
        "cursor": {
          "ref": "4118b6ee-27cf-4549-86e0-611772a15dde",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d0d484c5-1f94-4b44-a42f-478f400f2cce"
        },
        "item": {
          "id": "59f641f5-21a8-4ef8-9550-59ba90fc9d40",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "edf3283a-3fb8-4265-afa9-8fb0c1bba797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f9214e-a2d1-4d96-af13-49a45822ee1a",
        "cursor": {
          "ref": "ce3cb270-afba-49f7-b453-ad364aa5025b",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c30c49ba-e236-4f64-803d-f6ceb3041c3f"
        },
        "item": {
          "id": "91f9214e-a2d1-4d96-af13-49a45822ee1a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "fae6469c-c73d-4281-ad07-980f422467bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "142d4a1d-25f1-4d4a-a0fe-ad0088957a10",
        "cursor": {
          "ref": "a5d279d5-c37d-4ab2-b964-5991939cadf9",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "6789e811-b01d-44fc-bdcd-817bd4644698"
        },
        "item": {
          "id": "142d4a1d-25f1-4d4a-a0fe-ad0088957a10",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4e6b1d13-9b73-48bd-905a-068c9c3aa9f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f46f5e-1a58-4e6d-a190-7d7b453beeb4",
        "cursor": {
          "ref": "dad39c3d-2eba-4784-8585-8cb067372024",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "de52830a-8fca-4457-abd9-50188ad25fa4"
        },
        "item": {
          "id": "60f46f5e-1a58-4e6d-a190-7d7b453beeb4",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c51f2efd-40ac-4285-b36b-a4cf38955b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ed1af3-d8c4-4191-89e4-dedf4db2891e",
        "cursor": {
          "ref": "3bdfbc2d-c474-4b83-844a-1a2d3198668e",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "22e2b317-5ac3-455e-bbba-35ac9a411731"
        },
        "item": {
          "id": "90ed1af3-d8c4-4191-89e4-dedf4db2891e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6a8bc3e6-e394-4d5d-95b8-6d626d4cc60d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8080ad74-3376-4b41-a55c-d65a58abcef9",
        "cursor": {
          "ref": "eecc7168-3cbf-4d1a-bdf9-ac9b30ac1a58",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ea20e587-ca8a-4237-b679-538de0117cb6"
        },
        "item": {
          "id": "8080ad74-3376-4b41-a55c-d65a58abcef9",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "47685224-d803-4892-9b77-9a3830f322f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d69c1dd4-85a4-4b17-b157-db39a1f51e87",
        "cursor": {
          "ref": "89abd50a-eb4b-4a95-96e9-c1504ab517c3",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a1858964-0a3a-4cf9-a8a9-eb28435a4f45"
        },
        "item": {
          "id": "d69c1dd4-85a4-4b17-b157-db39a1f51e87",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "abb5916d-2201-468e-8166-a12ca3ee4f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b9d3b2-848c-469e-8d19-01333c660048",
        "cursor": {
          "ref": "9ebfbe0b-bc29-4527-82ff-60c8b114ab77",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ae980ee9-96ef-4b16-9dc1-1cbaac1d915f"
        },
        "item": {
          "id": "b9b9d3b2-848c-469e-8d19-01333c660048",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "396d8c0a-de58-4fb5-8ada-5ef43af609dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca4442d-f815-4708-847a-ff6529a5a25f",
        "cursor": {
          "ref": "96928d07-19a9-4ac9-bae1-9af877d2bab3",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "cc12c521-ad47-41e9-be34-6b6db15a3960"
        },
        "item": {
          "id": "0ca4442d-f815-4708-847a-ff6529a5a25f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "61cf44a6-6a5f-4f2e-b19a-37c8a02fee4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5eda2b8-4c83-44f4-9c97-75d2a1902b9a",
        "cursor": {
          "ref": "e51bc710-3de4-4467-97c5-d5b218601377",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d98f9704-e2c8-47f0-9783-a4dd2c6cb3f8"
        },
        "item": {
          "id": "a5eda2b8-4c83-44f4-9c97-75d2a1902b9a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0cbbb196-5222-404f-89a7-6763dda70320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1faa9905-53db-4963-9de5-4e254b321ea8",
        "cursor": {
          "ref": "6899df8a-50b7-47d1-88d4-e916515b943b",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7b0f6394-6427-469d-8a52-71100070d776"
        },
        "item": {
          "id": "1faa9905-53db-4963-9de5-4e254b321ea8",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "8b1971ea-f366-4f6d-96cc-7f25b0051073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f59b46-4a05-4a17-9c9e-24ba451a18bd",
        "cursor": {
          "ref": "9acc8b51-fc88-4ee4-ac44-20151fbd2c2b",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "dff3fd86-3431-4bff-bacc-448ac6ca1045"
        },
        "item": {
          "id": "03f59b46-4a05-4a17-9c9e-24ba451a18bd",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f99a50b3-ad19-42bf-b66f-f1caa6cb95a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c39d4b4-16d6-4992-97cf-3c89b4d5bd1b",
        "cursor": {
          "ref": "b9fa2dc2-3539-4bad-be1d-896e35b4c32a",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "25623271-b7e3-4ff1-8c47-cd1fe12489ff"
        },
        "item": {
          "id": "6c39d4b4-16d6-4992-97cf-3c89b4d5bd1b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b52f2cf3-30aa-4030-a835-00a9ca9b2a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e852ae-afe4-423e-a560-8522fd4d8ab1",
        "cursor": {
          "ref": "3afe70c3-c68a-4d02-a8d8-fb9bf69fd69b",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "56c8e14a-6c1c-4b74-9911-2ed33ac5f42c"
        },
        "item": {
          "id": "48e852ae-afe4-423e-a560-8522fd4d8ab1",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "27b4efa5-efb1-4c75-9627-67add5b03e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707f1b11-d81c-4222-a1c0-d4f5e6dbfff1",
        "cursor": {
          "ref": "89c80cfe-9f53-4fc6-9a8e-9ef10be6e862",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f1099320-70ae-4065-831a-2da7aa4b9fcd"
        },
        "item": {
          "id": "707f1b11-d81c-4222-a1c0-d4f5e6dbfff1",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f2cc0532-e341-4b66-be54-3a05d51ea051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b77927-fea9-4eed-a647-1c3570ec36cf",
        "cursor": {
          "ref": "e809d488-5d96-440e-95d8-9a638e05b39a",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f01943a3-e423-439a-acc0-43441f0622b2"
        },
        "item": {
          "id": "11b77927-fea9-4eed-a647-1c3570ec36cf",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8e14de63-ef48-4707-9423-c0a2a92ebf13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3daf548a-1163-4a84-af25-1ba310c91c30",
        "cursor": {
          "ref": "d1fe9e31-4a18-4556-a71d-3ca88acb2b4a",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "0dcac39d-3093-48e3-85dd-7b393683135b"
        },
        "item": {
          "id": "3daf548a-1163-4a84-af25-1ba310c91c30",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "322d08ad-12c0-4ebb-ace2-367da0b879bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7dd69e4-39ea-47a1-afdf-90facd87818d",
        "cursor": {
          "ref": "9f2e1689-4e1a-4004-ba56-23588e780569",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "081c46a8-32fb-44e4-98ad-2c3dcd44c0f6"
        },
        "item": {
          "id": "f7dd69e4-39ea-47a1-afdf-90facd87818d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "718402d6-ab22-4f39-abe0-98ae66b5f3ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a81dd8f-4251-4f07-8135-2f3f2207826b",
        "cursor": {
          "ref": "999ac288-0353-4d9a-b880-4ee1eb8dcc1e",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "948f259f-69a3-48ec-8f24-9173ae489bf9"
        },
        "item": {
          "id": "1a81dd8f-4251-4f07-8135-2f3f2207826b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f68c96d4-04e5-4197-9f67-01123125dbec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd65e44-59ad-4c6d-ae50-65dfda72c791",
        "cursor": {
          "ref": "a1d3bc0a-34ea-4582-a58d-03184f154e84",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "18388afe-28d0-4b14-a422-7a34ccf4a004"
        },
        "item": {
          "id": "6dd65e44-59ad-4c6d-ae50-65dfda72c791",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c7cc1738-a146-4b81-8789-ca34944fe9f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a575058-ce5e-4bdf-a503-6a0bc6da0f69",
        "cursor": {
          "ref": "7d3232ee-4a40-4a93-a1ea-74187e7b5068",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b770ddd8-1260-40ac-b2d5-c29ada8935b0"
        },
        "item": {
          "id": "5a575058-ce5e-4bdf-a503-6a0bc6da0f69",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "12915504-7451-454f-b170-fb26ad02d568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57963714-bf36-452b-a297-14c62f9377c5",
        "cursor": {
          "ref": "72878a20-eda7-489d-9d6c-1a11f5ab8572",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "464feb76-7534-4752-811c-73f51ef68e6c"
        },
        "item": {
          "id": "57963714-bf36-452b-a297-14c62f9377c5",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7f8d655b-5290-4ddf-b3b0-7ea931a4b30f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f9e201-e666-43b4-8da0-f2e648ccabdf",
        "cursor": {
          "ref": "0c0f5008-dae7-4c77-974e-4962092d07b4",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8418dec2-c804-458b-bbba-608cf07280bf"
        },
        "item": {
          "id": "96f9e201-e666-43b4-8da0-f2e648ccabdf",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "256c5948-da90-4722-aa43-165af6f726b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b41424-9ae8-40b4-b5da-c146c671661e",
        "cursor": {
          "ref": "73976686-0276-47a5-9435-dce887cd369f",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "346180ab-9436-4f4d-abce-c161f5e7b116"
        },
        "item": {
          "id": "71b41424-9ae8-40b4-b5da-c146c671661e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2cbb2c17-8a8c-4e39-a4fe-13cd241d241d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a792bd2c-1e50-4f0a-93f9-2944dacb785d",
        "cursor": {
          "ref": "ccc7338d-7df2-457f-bbe2-3679eba3eb59",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f6970254-b75e-466f-b682-ee5f27039e85"
        },
        "item": {
          "id": "a792bd2c-1e50-4f0a-93f9-2944dacb785d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b5b02c6f-7a22-47c2-a2b4-9ce85764abf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ca7fb0-ed11-42a0-b67f-93008410fae4",
        "cursor": {
          "ref": "6f30fd3a-c478-4a37-92f7-6b24a8bf18e2",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2e6d851d-5aea-4aa2-bc21-a53ec055ce62"
        },
        "item": {
          "id": "84ca7fb0-ed11-42a0-b67f-93008410fae4",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7e09c1f9-8f9c-4b8f-a463-b1196357a81b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "644cc0c7-ef49-4bb5-9072-5db79cda57f0",
        "cursor": {
          "ref": "53cca46a-b761-4290-87eb-7eed9c435650",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "d5e11e79-36fe-4399-ab59-f78856a50972"
        },
        "item": {
          "id": "644cc0c7-ef49-4bb5-9072-5db79cda57f0",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ec512956-cb1a-4c14-9d35-a769276ed0ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ae58ae-d195-4287-a219-724d36d26d32",
        "cursor": {
          "ref": "b3002c22-7045-42ca-b656-3ad356f25432",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "33f2e15c-4cf2-4920-b641-4d01c1287a01"
        },
        "item": {
          "id": "e7ae58ae-d195-4287-a219-724d36d26d32",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d24dfc60-5f47-499a-a11e-9256a5a1f641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f8b742e-313d-4e52-9452-e1eca88fa0c1",
        "cursor": {
          "ref": "babe60d0-63be-46e4-a42a-2e33f0c8e9df",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "4d0eed21-d52f-4727-8eca-b984b4c07f36"
        },
        "item": {
          "id": "3f8b742e-313d-4e52-9452-e1eca88fa0c1",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "74cbece5-cbaf-4785-b75f-ecbb7b91ab61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d790c97a-5ce0-47d1-a4e6-3425e347352b",
        "cursor": {
          "ref": "5041e53c-fb39-4a16-8c23-b901dfcb7c34",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "0a510482-9284-4d78-9fbf-b66b3ce86264"
        },
        "item": {
          "id": "d790c97a-5ce0-47d1-a4e6-3425e347352b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "234c8c4a-2ef3-41f4-84cc-49eefcc9c628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37b412d-9769-48b4-8a68-d61a09755250",
        "cursor": {
          "ref": "58b6d8e8-a636-4307-8a61-89a2d2d2c3a8",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "60109a58-1ce7-4e42-8aa2-28f837503a40"
        },
        "item": {
          "id": "d37b412d-9769-48b4-8a68-d61a09755250",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0d768abb-ac6b-4f9d-a811-aef5f71d6071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3cf4e36-a156-4556-ba0b-8c3b65ac8b60",
        "cursor": {
          "ref": "14a8ea62-8c1d-4edd-87cb-e58d6d3b15c5",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "d617c839-4989-461e-b92a-c3444af5abe0"
        },
        "item": {
          "id": "c3cf4e36-a156-4556-ba0b-8c3b65ac8b60",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f9225681-946f-4d58-a588-a1fc4ecb4748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d03b8ba-8593-43ae-a27d-ff3cf01c4eab",
        "cursor": {
          "ref": "e522ab99-7254-45e4-8cf6-62650a23345a",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "d9afe584-28c1-4fa5-a7bb-2a1bae5456c1"
        },
        "item": {
          "id": "6d03b8ba-8593-43ae-a27d-ff3cf01c4eab",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "23b1277b-5a47-49de-bebc-cc24fb9c2cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e4704f6-159d-4664-9245-2c2d4d3efe0f",
        "cursor": {
          "ref": "84080ac3-57e4-47bd-ae75-85e68dbe5d28",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "7cc3cb3d-cfee-4a74-9356-08b699e6d11c"
        },
        "item": {
          "id": "5e4704f6-159d-4664-9245-2c2d4d3efe0f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "28e0797d-e96b-4384-97a9-1392218fca86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22cc8f65-ee6b-426e-b413-f31900ab5b12",
        "cursor": {
          "ref": "3198a26c-e773-4b51-9e37-a49c7c8c6be8",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "e9232dd6-b3bc-47f7-bfbe-06569cece495"
        },
        "item": {
          "id": "22cc8f65-ee6b-426e-b413-f31900ab5b12",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4b789408-e714-498c-a74d-6f509a59c3ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7119df1b-aad5-4933-b1db-08c9faa4edb6",
        "cursor": {
          "ref": "eeed41a1-58b3-4cf4-95c5-7cfa28813a3a",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "9e3fc863-3366-461e-9e73-6af54b80bf76"
        },
        "item": {
          "id": "7119df1b-aad5-4933-b1db-08c9faa4edb6",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "25a8c396-ca78-4731-b789-0def1aa25228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa14354-399c-419b-b344-71ccf2b3594c",
        "cursor": {
          "ref": "698289de-ac51-4f64-a311-2306c326f218",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "f777f0bc-ce49-4347-a363-025de6e8f49d"
        },
        "item": {
          "id": "eaa14354-399c-419b-b344-71ccf2b3594c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "fa71b808-249d-4e54-955a-e8ffc5ca8fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a27f8935-3a82-4179-83a5-6ccfb641acc4",
        "cursor": {
          "ref": "575350c0-f940-4812-b4a7-c69a24f93ec2",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "3b7b87fa-eaf5-4ec9-bb6f-2523e391695d"
        },
        "item": {
          "id": "a27f8935-3a82-4179-83a5-6ccfb641acc4",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b27b5f7b-5a93-4192-adf5-8a867682788f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5bce682-01db-4e19-bd05-5ff26b935d55",
        "cursor": {
          "ref": "ea090b23-1356-48d6-bdb0-d9734d17540b",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e596c568-c827-47fb-a17b-68b218a8a3c6"
        },
        "item": {
          "id": "c5bce682-01db-4e19-bd05-5ff26b935d55",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "fa5a2ea2-bbfe-4d32-a451-fbca6a838d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08be4bf-a262-4476-88fa-e2793482adec",
        "cursor": {
          "ref": "d335e1f0-c4c2-4bae-b22a-4c6ef20295b7",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "a18abe5e-bb4d-4d63-af0d-ae2530e83486"
        },
        "item": {
          "id": "e08be4bf-a262-4476-88fa-e2793482adec",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "176bac35-ac9e-4f73-853e-e71b3f126ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e152d0ba-4111-43ad-9942-03e60f8d6ac5",
        "cursor": {
          "ref": "161f50ca-3ea2-4216-a441-11a3a47dfe86",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "398e96b9-f4eb-4d07-87bb-3ce7f33d13bf"
        },
        "item": {
          "id": "e152d0ba-4111-43ad-9942-03e60f8d6ac5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2822bda7-75d8-458c-b27c-30e237f1562f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b23190-53b0-4178-9d4c-794f48ebb202",
        "cursor": {
          "ref": "0b88c542-0812-43d0-9ba4-10504a6128f5",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "aaaa59f1-8d5f-4ebc-8583-96faf18bb046"
        },
        "item": {
          "id": "d5b23190-53b0-4178-9d4c-794f48ebb202",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "60bded62-ab46-412f-a4dc-ea96f550729d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210ab81a-d5c6-4a13-9eaa-88249147bdd6",
        "cursor": {
          "ref": "1190a70b-6f46-4096-97ec-a63fccf22603",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "a44f319b-0767-4a1f-8c2a-ce887bcf6701"
        },
        "item": {
          "id": "210ab81a-d5c6-4a13-9eaa-88249147bdd6",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e8880034-0662-40a6-86eb-769b73f607de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e723cc6-bbe8-44b7-927a-b56fce9052ea",
        "cursor": {
          "ref": "5bd937ea-4431-4682-9b17-be837fa1bd3f",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "305d02b9-208c-42f6-8471-b2b906bc0238"
        },
        "item": {
          "id": "8e723cc6-bbe8-44b7-927a-b56fce9052ea",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f3119a6f-cf62-4eaf-b31d-94bcfc009211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533047fe-a2e0-43f8-ab89-f5bd2bd6f66f",
        "cursor": {
          "ref": "0238b018-f3a0-4fb8-bae4-761295f4dbe2",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "f9fc42dd-c70c-41a6-84b4-cd1bdcf0276e"
        },
        "item": {
          "id": "533047fe-a2e0-43f8-ab89-f5bd2bd6f66f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "88a596f0-bc84-4f00-9b17-95105dc55e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e90ad0-ba8f-4d4a-b126-7dfc1f4d715d",
        "cursor": {
          "ref": "3cc4b0ae-8404-4ae4-a126-c5457be96c2b",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "0b1e4db8-5459-4f30-852a-e6562054d585"
        },
        "item": {
          "id": "62e90ad0-ba8f-4d4a-b126-7dfc1f4d715d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "13b9eaa5-1074-4443-8471-8147bc8f2d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407a1400-796f-4053-a50c-d75862635e09",
        "cursor": {
          "ref": "753b4672-8873-4938-b963-8b84891b2145",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "47b39281-390a-4dd7-871b-b1bcf29d8bc9"
        },
        "item": {
          "id": "407a1400-796f-4053-a50c-d75862635e09",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2ede8fea-ea0e-4999-a618-41fc01c28fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef638fd-a2b0-4cb3-93c2-dc13604b9a5d",
        "cursor": {
          "ref": "8799155e-2b3b-4f0a-ab85-ad147cf32ff8",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "14cf024a-e92e-4a5d-ae5c-6124e2498ded"
        },
        "item": {
          "id": "2ef638fd-a2b0-4cb3-93c2-dc13604b9a5d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e18ec9e6-e809-433c-8cfc-0230ad9c0e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb46af22-938b-40d8-b68a-2b5837b73ecc",
        "cursor": {
          "ref": "c6a6f84c-37f9-482d-b17d-c52ccce7ccfe",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "bca80d2d-ee5c-4289-a5f0-a5c78ee216e3"
        },
        "item": {
          "id": "bb46af22-938b-40d8-b68a-2b5837b73ecc",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "99262cf0-67ce-4c4e-9260-d9a38e10c6ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064144ff-3545-4906-8043-0ccf3c697939",
        "cursor": {
          "ref": "fcc5949e-1ced-4fed-b78b-3a7f6c4834f8",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "eccb59c8-3466-4404-b0a8-003f3f3ae986"
        },
        "item": {
          "id": "064144ff-3545-4906-8043-0ccf3c697939",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7e98d523-009b-49ea-9cd8-fbd1f3c40d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9bc9fb-f757-4c8d-bc0a-e630fa83c421",
        "cursor": {
          "ref": "c47e8fe3-3f24-41b9-9aec-e5d8b487c6ee",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "766037b9-5735-49f2-9c44-cc963a8bd171"
        },
        "item": {
          "id": "9c9bc9fb-f757-4c8d-bc0a-e630fa83c421",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "617f3dd7-eb19-4a25-b984-b03e2d38ceb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33473f9-b14f-4160-81a2-056d0e7f3d5d",
        "cursor": {
          "ref": "7c9b7203-4b7f-419d-82ab-4804635845c7",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "fbaf88be-20d3-4dfc-8ebc-912defc4e5bc"
        },
        "item": {
          "id": "a33473f9-b14f-4160-81a2-056d0e7f3d5d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1e49bbd7-7bc6-4c87-a96c-4fb243509331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62843dac-0a5f-44e5-93c5-0852dd37f233",
        "cursor": {
          "ref": "3e1c35c1-df25-44fa-99d8-804145b17442",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "8c67fbe6-68d8-48b8-b94e-84dc36de7e37"
        },
        "item": {
          "id": "62843dac-0a5f-44e5-93c5-0852dd37f233",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c6bf2e36-f23f-48b6-be8c-a600ed383b6c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f10c55-2982-4e06-be7f-a87474665fc2",
        "cursor": {
          "ref": "c77992b6-484d-4402-be8d-409c040295dc",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "82f9a63d-39a6-4ad9-9984-53d9f2cd1437"
        },
        "item": {
          "id": "d2f10c55-2982-4e06-be7f-a87474665fc2",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "1349a3fc-1f78-4058-9cf0-50c6468b0b17",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "572fd90b-059b-4167-b416-cb9babd45e31",
        "cursor": {
          "ref": "8bb78b0d-2de8-4926-94ab-dca3b9531d57",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "ad30a40c-408b-4456-a736-e1089fd30a29"
        },
        "item": {
          "id": "572fd90b-059b-4167-b416-cb9babd45e31",
          "name": "credentials_verify"
        },
        "response": {
          "id": "eebde014-ae00-4ef2-97aa-d514e3f36ad3",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "225bfd2b-a5d3-463d-ba17-a3422a47aacf",
        "cursor": {
          "ref": "4d53d5f2-ccaf-4a53-b93e-f99f30348e74",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "df5c34eb-c8c9-437d-8c95-f4cecb1ada69"
        },
        "item": {
          "id": "225bfd2b-a5d3-463d-ba17-a3422a47aacf",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "fa088d8f-a32e-4b9d-a71b-ce8bd5dc204a",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b20070b-f492-4f1b-94c4-8af57f8ea015",
        "cursor": {
          "ref": "1a80c69a-a42f-4632-a91a-795816756ce6",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "4e478f36-ff9c-4405-943e-6e6e4b0385a7"
        },
        "item": {
          "id": "1b20070b-f492-4f1b-94c4-8af57f8ea015",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "75a60abc-e836-4ecc-8833-e13b26472e27",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b20070b-f492-4f1b-94c4-8af57f8ea015",
        "cursor": {
          "ref": "1a80c69a-a42f-4632-a91a-795816756ce6",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "4e478f36-ff9c-4405-943e-6e6e4b0385a7"
        },
        "item": {
          "id": "1b20070b-f492-4f1b-94c4-8af57f8ea015",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "75a60abc-e836-4ecc-8833-e13b26472e27",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69138e62-588e-4be6-ae76-7918e9ef84f9",
        "cursor": {
          "ref": "bde52e3f-b019-490c-9b3c-c1b955fbb9af",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "7ffb3d83-2e0f-41ee-9170-36860dd55c8e"
        },
        "item": {
          "id": "69138e62-588e-4be6-ae76-7918e9ef84f9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "bc5e2e47-4c01-4f17-bc63-1b81f116e417",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb56fb99-96c9-43ce-9349-954b681a2600",
        "cursor": {
          "ref": "15b17ced-d3fa-465f-966a-fa7001d55490",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "1ff286bc-cc21-477b-bd5a-013af9e604e8"
        },
        "item": {
          "id": "bb56fb99-96c9-43ce-9349-954b681a2600",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "46c13619-6b19-4632-8f32-ca9d3bfc0aba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}